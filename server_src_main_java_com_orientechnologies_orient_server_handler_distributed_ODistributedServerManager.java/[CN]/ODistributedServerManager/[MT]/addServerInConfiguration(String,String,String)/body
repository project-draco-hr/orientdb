{
  ODocument dbConfiguration=clusterDbConfigurations.get(iDatabaseName);
  if (dbConfiguration == null) {
    dbConfiguration=new ODocument();
    clusterDbConfigurations.put(iDatabaseName,dbConfiguration);
  }
  List<String> servers=dbConfiguration.field("servers");
  if (servers == null) {
    servers=new ArrayList<String>();
    dbConfiguration.field("servers",servers);
  }
  servers.add(iAddress);
  ODocument clusters=dbConfiguration.field("clusters");
  if (clusters == null) {
    clusters=new ODocument().addOwner(dbConfiguration);
    dbConfiguration.field("clusters",clusters);
  }
  ODocument allClusters=clusters.field("*");
  if (allClusters == null) {
    allClusters=new ODocument().addOwner(clusters);
    clusters.field("*",allClusters);
  }
  final ODocument cfgDoc=new ODocument().fromJSON(iServerClusterConfiguration);
  Object fieldValue;
  for (  String fieldName : cfgDoc.fieldNames()) {
    fieldValue=cfgDoc.field(fieldName);
    ODocument clusterConfig=clusters.field(fieldName);
    if (clusterConfig == null)     clusterConfig=(ODocument)fieldValue;
 else {
      if (fieldValue instanceof ODocument)       clusterConfig.merge((ODocument)cfgDoc.field(fieldName),true,true);
 else       clusterConfig.merge((Map<String,Object>)cfgDoc.field(fieldName),true,true);
    }
  }
  OLogManager.instance().warn(this,"Updated server node configuration: %s",dbConfiguration.toJSON(""));
  broadcastClusterConfiguration(iDatabaseName);
  return dbConfiguration;
}
