{
  final long timer=OProfiler.getInstance().startChrono();
  addUser();
  cache.addUser();
  final boolean locked=acquireExclusiveLock();
  try {
    if (open)     return;
    if (!exists())     throw new OStorageException("Can't open the storage " + name + " because it not exists");
    open=true;
    int pos;
    pos=registerDataSegment(new OStorageDataConfiguration(configuration,OStorage.DATA_DEFAULT_NAME));
    dataSegments[pos].open();
    pos=createClusterFromConfig(new OStoragePhysicalClusterConfiguration(configuration,OStorage.CLUSTER_INTERNAL_NAME,clusters.length));
    clusters[pos].open();
    pos=createClusterFromConfig(new OStoragePhysicalClusterConfiguration(configuration,OStorage.CLUSTER_INDEX_NAME,clusters.length));
    clusters[pos].open();
    defaultClusterId=createClusterFromConfig(new OStoragePhysicalClusterConfiguration(configuration,OStorage.CLUSTER_DEFAULT_NAME,clusters.length));
    clusters[defaultClusterId].open();
    configuration.load();
    if (configuration.isEmpty())     throw new OStorageException("Can't open storage because it not exists. Storage path: " + url);
    OStorageDataConfiguration dataConfig;
    for (int i=0; i < configuration.dataSegments.size(); ++i) {
      dataConfig=configuration.dataSegments.get(i);
      pos=registerDataSegment(dataConfig);
      if (pos == -1) {
        dataSegments[i].close();
        dataSegments[i]=new ODataLocal(this,dataConfig,pos);
        dataSegments[i].open();
      }
 else       dataSegments[pos].open();
    }
    OStorageClusterConfiguration clusterConfig;
    for (int i=0; i < configuration.clusters.size(); ++i) {
      clusterConfig=configuration.clusters.get(i);
      pos=createClusterFromConfig(clusterConfig);
      if (pos == -1) {
        clusters[i].close();
        clusters[i]=new OClusterLocal(this,(OStoragePhysicalClusterConfiguration)clusterConfig);
        clusters[i].open();
      }
 else {
        if (clusterConfig.getName().equals(OStorage.CLUSTER_DEFAULT_NAME))         defaultClusterId=pos;
        clusters[pos].open();
      }
    }
    txManager.open();
  }
 catch (  IOException e) {
    open=false;
    dataSegments=new ODataLocal[0];
    clusters=new OCluster[0];
    clusterMap.clear();
    throw new OStorageException("Can't open local storage: " + url + ", with mode="+ mode,e);
  }
 finally {
    releaseExclusiveLock(locked);
    OProfiler.getInstance().stopChrono("OStorageLocal.open",timer);
  }
}
