{
  Object fieldValue;
  iContext.onBeforeFetch(record);
  for (  String fieldName : record.fieldNames()) {
    String fieldPath=!iFieldPathFromRoot.isEmpty() ? iFieldPathFromRoot + "." + fieldName : fieldName;
    final int depthLevel;
    if (iFieldDepthLevel > -1)     depthLevel=iFieldDepthLevel;
 else     depthLevel=getDepthLevel(iFetchPlan,fieldPath);
    if (depthLevel == -2)     continue;
    fieldValue=record.field(fieldName);
    if (fieldValue == null || !(fieldValue instanceof OIdentifiable) && (!(fieldValue instanceof ORecordLazyMultiValue) || !((ORecordLazyMultiValue)fieldValue).rawIterator().hasNext() || !(((ORecordLazyMultiValue)fieldValue).rawIterator().next() instanceof OIdentifiable)) && (!(OMultiValue.getFirstValue(fieldValue) instanceof OIdentifiable || OMultiValue.getFirstValue(OMultiValue.getFirstValue(fieldValue)) instanceof OIdentifiable || OMultiValue.getFirstValue(OMultiValue.getFirstValue(OMultiValue.getFirstValue(fieldValue))) instanceof OIdentifiable))) {
      iContext.onBeforeStandardField(fieldValue,fieldName,iUserObject);
      iListener.processStandardField(record,fieldValue,fieldName,iContext,iUserObject);
      iContext.onAfterStandardField(fieldValue,fieldName,iUserObject);
    }
 else {
      try {
        boolean fetch=!(fieldValue instanceof ODocument) || depthLevel == -1 || iCurrentLevel <= depthLevel || iFetchPlan.containsKey(fieldPath);
        if (!fetch && (((ODocument)fieldValue).isEmbedded() || !((ODocument)fieldValue).getIdentity().isValid()) && iContext.fetchEmbeddedDocuments())         fetch=true;
        if (fetch)         fetch(record,iUserObject,iFetchPlan,fieldValue,fieldName,iCurrentLevel,iLevelFromRoot + 1,iFieldDepthLevel,parsedRecords,depthLevel,fieldPath,iListener,iContext);
      }
 catch (      Exception e) {
        e.printStackTrace();
        OLogManager.instance().error(null,"Fetching error on record %s",e,record.getIdentity());
      }
    }
  }
  iContext.onAfterFetch(record);
}
