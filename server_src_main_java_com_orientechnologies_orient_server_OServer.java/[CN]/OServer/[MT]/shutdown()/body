{
  if (!running)   return;
  running=false;
  shutdownHook.cancel();
  Orient.instance().getProfiler().unregisterHookValue("system.databases");
  for (  OServerLifecycleListener l : lifecycleListeners)   l.onBeforeDeactivate();
  OLogManager.instance().info(this,"OrientDB Server is shutting down...");
  if (!Orient.isRegisterDatabaseByPath())   try {
    Orient.instance().shutdown();
  }
 catch (  Throwable e) {
    OLogManager.instance().error(this,"Error during OrientDB shutdown",e);
  }
  lock.lock();
  try {
    pluginManager.shutdown();
    if (networkProtocols.size() > 0) {
      OLogManager.instance().info(this,"Shutting down protocols");
      networkProtocols.clear();
    }
    if (networkListeners.size() > 0) {
      OLogManager.instance().info(this,"Shutting down listeners:");
      for (      OServerNetworkListener l : networkListeners) {
        OLogManager.instance().info(this,"- %s",l);
        try {
          l.shutdown();
        }
 catch (        Throwable e) {
          OLogManager.instance().error(this,"Error during shutdown of listener %s.",e,l);
        }
      }
    }
  }
  finally {
    lock.unlock();
  }
  for (  OServerLifecycleListener l : lifecycleListeners)   try {
    l.onAfterDeactivate();
  }
 catch (  Exception e) {
    OLogManager.instance().error(this,"Error during deactivation of server lifecycle listener %s",e,l);
  }
  OLogManager.instance().info(this,"OrientDB Server shutdown complete");
  System.out.println();
}
