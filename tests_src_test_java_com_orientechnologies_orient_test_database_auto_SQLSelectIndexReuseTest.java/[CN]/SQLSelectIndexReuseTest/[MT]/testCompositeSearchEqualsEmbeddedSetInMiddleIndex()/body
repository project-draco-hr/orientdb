{
  long oldIndexUsage=profiler.getCounter("Query.indexUsage");
  long oldCompositeIndexUsage=profiler.getCounter("Query.compositeIndexUsage");
  long oldCompositeIndexUsage2=profiler.getCounter("Query.compositeIndexUsage.2");
  long oldCompositeIndexUsage3=profiler.getCounter("Query.compositeIndexUsage.3");
  long oldCompositeIndexUsage33=profiler.getCounter("Query.compositeIndexUsage.3.3");
  if (oldIndexUsage == -1) {
    oldIndexUsage=0;
  }
  if (oldCompositeIndexUsage == -1) {
    oldCompositeIndexUsage=0;
  }
  if (oldCompositeIndexUsage2 == -1) {
    oldCompositeIndexUsage2=0;
  }
  if (oldCompositeIndexUsage3 == -1)   oldCompositeIndexUsage3=0;
  if (oldCompositeIndexUsage33 == -1)   oldCompositeIndexUsage33=0;
  final List<ODocument> result=database.command(new OSQLSynchQuery<ODocument>("select * from sqlSelectIndexReuseTestClass " + "where prop9 = 0 and fEmbeddedSetTwo contains 92 and prop8 > 2")).execute();
  final Set<Integer> embeddedSet=new HashSet<Integer>(3);
  embeddedSet.add(90);
  embeddedSet.add(91);
  embeddedSet.add(92);
  Assert.assertEquals(result.size(),3);
  for (int i=0; i < 3; i++) {
    final ODocument document=new ODocument();
    document.field("prop8",i * 2 + 4);
    document.field("prop9",0);
    document.field("fEmbeddedSet",embeddedSet);
    Assert.assertEquals(containsDocument(result,document),1);
  }
  Assert.assertEquals(profiler.getCounter("Query.indexUsage"),oldIndexUsage + 1);
  Assert.assertEquals(profiler.getCounter("Query.compositeIndexUsage"),oldCompositeIndexUsage + 1);
  Assert.assertEquals(profiler.getCounter("Query.compositeIndexUsage.2"),oldCompositeIndexUsage2);
  Assert.assertEquals(profiler.getCounter("Query.compositeIndexUsage.3"),oldCompositeIndexUsage3 + 1);
  Assert.assertEquals(profiler.getCounter("Query.compositeIndexUsage.3.3"),oldCompositeIndexUsage33 + 1);
}
