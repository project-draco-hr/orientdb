{
  writeAheadLog.close();
  writeAheadLog=createWAL(6,3 * OWALPage.PAGE_SIZE);
  OWALRecord walRecord=new TestRecord(OWALPage.PAGE_SIZE - OWALPage.RECORDS_OFFSET,false);
  writeAheadLog.log(walRecord);
  walRecord=new TestRecord(OWALPage.PAGE_SIZE - OWALPage.RECORDS_OFFSET,false);
  writeAheadLog.log(walRecord);
  walRecord=new TestRecord(2 * (OWALPage.PAGE_SIZE - OWALPage.RECORDS_OFFSET),false);
  writeAheadLog.log(walRecord);
  walRecord=new TestRecord(OWALPage.PAGE_SIZE - OWALPage.RECORDS_OFFSET,false);
  writeAheadLog.log(walRecord);
  walRecord=new TestRecord(OWALPage.PAGE_SIZE - OWALPage.RECORDS_OFFSET,false);
  writeAheadLog.log(walRecord);
  walRecord=new TestRecord(OWALPage.PAGE_SIZE - OWALPage.RECORDS_OFFSET,false);
  writeAheadLog.log(walRecord);
  walRecord=new TestRecord((OWALPage.PAGE_SIZE - OWALPage.RECORDS_OFFSET) / 2,false);
  OLogSequenceNumber lsn=writeAheadLog.log(walRecord);
  writeAheadLog.cutTill(lsn);
  final OLogSequenceNumber startLSN=writeAheadLog.begin();
  Assert.assertEquals(startLSN,lsn);
}
