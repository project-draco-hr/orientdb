{
  int pos=iName.indexOf(OSQLFilterFieldOperator.CHAIN_SEPARATOR);
  if (pos > -1) {
    name=iName.substring(0,pos);
    String part=iName;
    String partUpperCase=part.toUpperCase();
    boolean operatorFound;
    while (pos > -1) {
      part=part.substring(pos + OSQLFilterFieldOperator.CHAIN_SEPARATOR.length());
      partUpperCase=partUpperCase.substring(pos + OSQLFilterFieldOperator.CHAIN_SEPARATOR.length());
      operatorFound=false;
      for (      OSQLFilterFieldOperator op : OSQLFilterFieldOperator.OPERATORS)       if (partUpperCase.startsWith(op.keyword + "(")) {
        final List<String> arguments;
        if (op.minArguments > 0) {
          arguments=OQueryHelper.getParameters(part);
          if (arguments.size() < op.minArguments || arguments.size() > op.maxArguments)           throw new OQueryParsingException(iQueryToParse.text,"Syntax error: field operator '" + op.keyword + "' needs "+ (op.minArguments == op.maxArguments ? op.minArguments : op.minArguments + "-" + op.maxArguments)+ " argument(s) while has been received "+ arguments.size(),iQueryToParse.currentPos + pos);
        }
 else         arguments=null;
        if (operationsChain == null)         operationsChain=new ArrayList<OPair<Integer,List<String>>>();
        operationsChain.add(new OPair<Integer,List<String>>(op.id,arguments));
        pos=partUpperCase.indexOf(OQueryHelper.CLOSED_BRACE) + OSQLFilterFieldOperator.CHAIN_SEPARATOR.length();
        operatorFound=true;
        break;
      }
      if (!operatorFound) {
        pos=partUpperCase.indexOf(OSQLFilterFieldOperator.CHAIN_SEPARATOR,0);
        int posOpenBrace=part.indexOf("(");
        if (posOpenBrace == -1 || posOpenBrace > pos && pos > -1) {
          String chainedFieldName=pos > -1 ? part.substring(0,pos) : part;
          if (operationsChain == null)           operationsChain=new ArrayList<OPair<Integer,List<String>>>();
          final List<String> list=new ArrayList<String>();
          list.add(chainedFieldName);
          operationsChain.add(new OPair<Integer,List<String>>(OSQLFilterFieldOperator.FIELD.id,list));
        }
 else         throw new OQueryParsingException(iQueryToParse.text,"Syntax error: field operator not recognized between the supported ones: " + Arrays.toString(OSQLFilterFieldOperator.OPERATORS),iQueryToParse.currentPos + pos);
      }
      if (pos >= partUpperCase.length())       return;
      pos=partUpperCase.indexOf(OSQLFilterFieldOperator.CHAIN_SEPARATOR,pos);
    }
  }
 else   name=iName;
}
