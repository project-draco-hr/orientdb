{
  checkOpeness();
  stateLock.acquireReadLock();
  try {
    modificationLock.requestModificationLock();
    try {
      dataLock.acquireExclusiveLock();
      try {
        checkOpeness();
        if (transaction.get() == null)         return;
        if (writeAheadLog == null)         throw new OStorageException("WAL mode is not active. Transactions are not supported in given mode");
        if (transaction.get().getClientTx().getId() != clientTx.getId())         throw new OStorageException("Passed in and active transaction are different transactions. Passed in transaction can not be rolled back.");
        makeStorageDirty();
        rollbackStorageTx();
        OTransactionAbstract.updateCacheFromEntries(clientTx,clientTx.getAllRecordEntries(),false);
      }
 catch (      IOException e) {
        throw new OStorageException("Error during transaction rollback.",e);
      }
 finally {
        transaction.set(null);
        dataLock.releaseExclusiveLock();
      }
    }
  finally {
      modificationLock.releaseModificationLock();
    }
  }
  finally {
    stateLock.releaseReadLock();
  }
}
