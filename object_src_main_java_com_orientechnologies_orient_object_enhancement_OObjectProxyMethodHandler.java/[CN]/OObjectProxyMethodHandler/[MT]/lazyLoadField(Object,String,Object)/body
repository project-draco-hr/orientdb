{
  boolean customSerialization=false;
  Field f=getField(fieldName,self.getClass());
  if (OObjectEntitySerializer.isSerializedType(f)) {
    customSerialization=true;
  }
  if (docValue instanceof OIdentifiable) {
    if (OIdentifiable.class.isAssignableFrom(f.getType())) {
      if (ORecordAbstract.class.isAssignableFrom(f.getType())) {
        ORecordAbstract record=((OIdentifiable)docValue).getRecord();
        OObjectEntitySerializer.setFieldValue(f,self,record);
        return record;
      }
 else {
        OObjectEntitySerializer.setFieldValue(f,self,docValue);
        return docValue;
      }
    }
 else {
      docValue=convertDocumentToObject((ODocument)((OIdentifiable)docValue).getRecord());
    }
  }
 else   if (docValue instanceof Collection<?>) {
    docValue=manageCollectionLoad(f,self,docValue,customSerialization);
  }
 else   if (docValue instanceof Map<?,?>) {
    docValue=manageMapLoad(f,self,docValue,customSerialization);
  }
 else   if (docValue.getClass().isArray() && !docValue.getClass().getComponentType().isPrimitive()) {
    docValue=manageArrayLoad(docValue);
  }
 else   if (customSerialization) {
    docValue=OObjectEntitySerializer.deserializeFieldValue(getField(fieldName,self.getClass()).getType(),docValue);
  }
 else {
    if (f.getType().isEnum()) {
      if (docValue instanceof Number)       docValue=((Class<Enum>)f.getType()).getEnumConstants()[((Number)docValue).intValue()];
 else       docValue=Enum.valueOf((Class<Enum>)f.getType(),docValue.toString());
    }
  }
  OObjectEntitySerializer.setFieldValue(f,self,docValue);
  return docValue;
}
