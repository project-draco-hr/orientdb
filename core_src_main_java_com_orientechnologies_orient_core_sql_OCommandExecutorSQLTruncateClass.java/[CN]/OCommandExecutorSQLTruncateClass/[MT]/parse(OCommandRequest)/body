{
  final ODatabaseRecord database=getDatabase();
  database.checkSecurity(ODatabaseSecurityResources.COMMAND,ORole.PERMISSION_READ);
  init(((OCommandRequestText)iRequest).getText());
  StringBuilder word=new StringBuilder();
  int oldPos=0;
  int pos=nextWord(parserText,parserTextUpperCase,oldPos,word,true);
  if (pos == -1 || !word.toString().equals(KEYWORD_TRUNCATE))   throw new OCommandSQLParsingException("Keyword " + KEYWORD_TRUNCATE + " not found. Use "+ getSyntax(),parserText,oldPos);
  oldPos=pos;
  pos=nextWord(parserText,parserTextUpperCase,oldPos,word,true);
  if (pos == -1 || !word.toString().equals(KEYWORD_CLASS))   throw new OCommandSQLParsingException("Keyword " + KEYWORD_CLASS + " not found. Use "+ getSyntax(),parserText,oldPos);
  oldPos=pos;
  pos=nextWord(parserText,parserText,oldPos,word,true);
  if (pos == -1)   throw new OCommandSQLParsingException("Expected class name. Use " + getSyntax(),parserText,oldPos);
  final String className=word.toString();
  schemaClass=database.getMetadata().getSchema().getClass(className);
  if (schemaClass == null)   throw new OCommandSQLParsingException("Class '" + className + "' not found",parserText,oldPos);
  return this;
}
