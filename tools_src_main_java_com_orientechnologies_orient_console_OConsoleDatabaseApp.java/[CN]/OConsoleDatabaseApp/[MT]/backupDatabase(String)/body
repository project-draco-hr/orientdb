{
  checkForDatabase();
  out.println(new StringBuilder("Backuping current database to: ").append(iText).append("..."));
  final List<String> items=OStringSerializerHelper.smartSplit(iText,' ');
  final String fileName=items.size() <= 0 || items.get(1).charAt(0) == '-' ? null : items.get(1);
  int bufferSize=Integer.parseInt(properties.get("backupBufferSize"));
  int compressionLevel=Integer.parseInt(properties.get("backupCompressionLevel"));
  for (int i=1; i < items.size(); ++i) {
    final String item=items.get(i);
    final int sep=item.indexOf('=');
    if (sep == -1) {
      OLogManager.instance().warn(this,"Unrecognized parameter %s, skipped",item);
      continue;
    }
    final String parName=item.substring(1,sep);
    final String parValue=item.substring(sep + 1);
    if (parName.equalsIgnoreCase("bufferSize"))     bufferSize=Integer.parseInt(parValue);
 else     if (parName.equalsIgnoreCase("compressionLevel"))     compressionLevel=Integer.parseInt(parValue);
  }
  final long startTime=System.currentTimeMillis();
  try {
    final FileOutputStream fos=new FileOutputStream(fileName);
    try {
      currentDatabase.backup(fos,null,null,this,compressionLevel,bufferSize);
      message("\nBackup executed in %.2f seconds",((float)(System.currentTimeMillis() - startTime) / 1000));
    }
  finally {
      fos.flush();
      fos.close();
    }
  }
 catch (  ODatabaseExportException e) {
    printError(e);
  }
}
