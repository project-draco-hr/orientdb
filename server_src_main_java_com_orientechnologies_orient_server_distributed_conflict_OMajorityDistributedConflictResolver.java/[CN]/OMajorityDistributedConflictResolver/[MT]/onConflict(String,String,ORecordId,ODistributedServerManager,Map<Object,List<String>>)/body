{
  final Object bestResult=getBestResult(groupedServerValues,null);
  if (bestResult == null)   return null;
  final ODistributedConfiguration dCfg=dManager.getDatabaseConfiguration(databaseName);
  final int writeQuorum=dCfg.getWriteQuorum(clusterName,dManager.getAvailableNodes(databaseName),dManager.getLocalNodeName());
  final int bestResultServerCount=groupedServerValues.get(bestResult).size();
  if (bestResultServerCount >= writeQuorum) {
    OLogManager.instance().info(this,"Majority Conflict Resolver decided the value '%s' is the winner for record %s, because is major than the configured writeQuorum (%d)",bestResult,rid,writeQuorum);
    return bestResult;
  }
  final Object secondBestResult=getBestResult(groupedServerValues,bestResult);
  if (bestResultServerCount > groupedServerValues.get(secondBestResult).size()) {
    OLogManager.instance().info(this,"Majority Conflict Resolver decided the value '%s' is the winner for the record %s because it is the majority even if under the configured writeQuorum (%d)",bestResult,rid,writeQuorum);
    return bestResult;
  }
  OLogManager.instance().info(this,"Majority Conflict Resolver could not find a winner for the record %s: %s",rid,groupedServerValues);
  return null;
}
