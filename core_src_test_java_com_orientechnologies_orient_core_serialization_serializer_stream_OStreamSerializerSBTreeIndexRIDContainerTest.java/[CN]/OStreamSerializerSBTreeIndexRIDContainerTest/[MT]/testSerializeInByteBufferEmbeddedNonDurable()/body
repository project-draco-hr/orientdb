{
  final OIndexRIDContainer indexRIDContainer=new OIndexRIDContainer("test",false);
  indexRIDContainer.setTopThreshold(100);
  for (int i=0; i < 5; i++) {
    indexRIDContainer.add(new ORecordId(1,i));
  }
  Assert.assertTrue(indexRIDContainer.isEmbedded());
  final int len=streamSerializerSBTreeIndexRIDContainer.getObjectSize(indexRIDContainer);
  final int serializationOffset=5;
  final ByteBuffer buffer=ByteBuffer.allocate(len + serializationOffset);
  buffer.position(serializationOffset);
  streamSerializerSBTreeIndexRIDContainer.serializeInByteBufferObject(indexRIDContainer,buffer);
  final int binarySize=buffer.position() - serializationOffset;
  Assert.assertEquals(binarySize,len);
  buffer.position(serializationOffset);
  Assert.assertEquals(streamSerializerSBTreeIndexRIDContainer.getObjectSizeInByteBuffer(buffer),len);
  buffer.position(serializationOffset);
  OIndexRIDContainer newRidContainer=streamSerializerSBTreeIndexRIDContainer.deserializeFromByteBufferObject(buffer);
  Assert.assertEquals(buffer.position() - serializationOffset,len);
  Assert.assertNotSame(newRidContainer,indexRIDContainer);
  Assert.assertTrue(newRidContainer.isEmbedded());
  Assert.assertFalse(newRidContainer.isDurableNonTxMode());
  final Set<OIdentifiable> storedRids=new HashSet<OIdentifiable>(newRidContainer);
  final Set<OIdentifiable> newRids=new HashSet<OIdentifiable>(indexRIDContainer);
  Assert.assertEquals(newRids,storedRids);
}
