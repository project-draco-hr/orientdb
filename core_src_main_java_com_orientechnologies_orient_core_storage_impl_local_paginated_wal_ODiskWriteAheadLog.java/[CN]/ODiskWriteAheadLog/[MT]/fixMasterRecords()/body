{
  if (firstMasterRecord != null) {
    int index=(int)(firstMasterRecord.getSegment() - logSegments.get(0).getOrder());
    if (logSegments.size() <= index || index < 0) {
      firstMasterRecord=null;
    }
 else {
      OLogSegment firstMasterRecordSegment=logSegments.get(index);
      if (firstMasterRecordSegment.filledUpTo() <= firstMasterRecord.getPosition())       firstMasterRecord=null;
    }
  }
  if (secondMasterRecord != null) {
    int index=(int)(secondMasterRecord.getSegment() - logSegments.get(0).getOrder());
    if (logSegments.size() <= index || index < 0) {
      secondMasterRecord=null;
    }
 else {
      OLogSegment secondMasterRecordSegment=logSegments.get(index);
      if (secondMasterRecordSegment.filledUpTo() <= secondMasterRecord.getPosition())       secondMasterRecord=null;
    }
  }
  if (firstMasterRecord != null && secondMasterRecord != null)   return;
  if (firstMasterRecord == null && secondMasterRecord == null) {
    masterRecordLSNHolder.setLength(0);
    masterRecordLSNHolder.getFD().sync();
    lastCheckpoint=null;
  }
 else {
    if (secondMasterRecord == null)     secondMasterRecord=firstMasterRecord;
 else     firstMasterRecord=secondMasterRecord;
    lastCheckpoint=firstMasterRecord;
    writeMasterRecord(0,firstMasterRecord);
    writeMasterRecord(1,secondMasterRecord);
  }
}
