{
  acquireExclusiveLock();
  try {
    BucketSearchResult bucketSearchResult=findBucket(key);
    if (bucketSearchResult.index < 0)     return null;
    OCachePointer keyBucketPointer=diskCache.load(fileId,bucketSearchResult.getLastPathItem());
    keyBucketPointer.acquireExclusiveLock();
    try {
      OSBTreeBucket<K> keyBucket=new OSBTreeBucket<K>(keyBucketPointer.getDataPointer(),keySerializer);
      final ORID removed=keyBucket.getEntry(bucketSearchResult.index).value;
      keyBucket.remove(bucketSearchResult.index);
      diskCache.markDirty(fileId,bucketSearchResult.getLastPathItem());
      return removed;
    }
  finally {
      keyBucketPointer.releaseExclusiveLock();
      diskCache.release(fileId,bucketSearchResult.getLastPathItem());
    }
  }
 catch (  IOException e) {
    throw new OIndexException("Error during removing key " + key + " from sbtree "+ name,e);
  }
 finally {
    releaseExclusiveLock();
  }
}
