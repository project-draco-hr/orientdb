{
  startOperation();
  try {
    final OAtomicOperation atomicOperation=startAtomicOperation();
    acquireExclusiveLock();
    try {
      if (isFileExists(atomicOperation,getFullName())) {
        fileId=openFile(atomicOperation,getFullName());
        deleteFile(atomicOperation,fileId);
      }
      endAtomicOperation(false,null);
    }
 catch (    IOException e) {
      endAtomicOperation(true,e);
      throw e;
    }
catch (    Exception e) {
      endAtomicOperation(true,e);
      throw OException.wrapException(new OHashTableDirectoryException("Error during deletion of hash table",this),e);
    }
 finally {
      releaseExclusiveLock();
    }
  }
  finally {
    completeOperation();
  }
}
