{
  listener.onMessage("\nExporting clusters...");
  writer.beginCollection(1,true,"clusters");
  int exportedClusters=0;
  int totalCluster=database.getClusters();
  for (int clusterId=0; clusterId < totalCluster; ++clusterId) {
    final String clusterName=database.getClusterNameById(clusterId);
    if (clusterName != null)     if (includeClusters != null) {
      if (!includeClusters.contains(clusterName))       continue;
    }
 else     if (excludeClusters != null) {
      if (excludeClusters.contains(clusterName))       continue;
    }
    writer.beginObject(2,true,null);
    writer.writeAttribute(0,false,"name",clusterName != null ? clusterName : "");
    writer.writeAttribute(0,false,"id",clusterId);
    writer.writeAttribute(0,false,"type",clusterName != null ? database.getClusterType(clusterName) : "");
    if (clusterName != null && database.getStorage() instanceof OStorageLocal)     if (database.getClusterType(clusterName).equals("LOGICAL")) {
      OClusterLogical cluster=(OClusterLogical)database.getStorage().getClusterById(clusterId);
      writer.writeAttribute(0,false,"rid",cluster.getRID());
    }
    exportedClusters++;
    writer.endObject(2,false);
  }
  listener.onMessage("OK (" + exportedClusters + " clusters)");
  writer.endCollection(1,true);
}
