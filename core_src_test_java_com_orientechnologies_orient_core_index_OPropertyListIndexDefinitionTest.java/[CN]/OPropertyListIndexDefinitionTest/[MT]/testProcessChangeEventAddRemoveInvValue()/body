{
  final Map<Object,Integer> keysToAdd=new HashMap<Object,Integer>();
  final Map<Object,Integer> keysToRemove=new HashMap<Object,Integer>();
  final OMultiValueChangeEvent<Integer,Integer> multiValueChangeEventOne=new OMultiValueChangeEvent<Integer,Integer>(OMultiValueChangeEvent.OChangeType.ADD,0,42);
  final OMultiValueChangeEvent<Integer,String> multiValueChangeEventTwo=new OMultiValueChangeEvent<Integer,String>(OMultiValueChangeEvent.OChangeType.REMOVE,0,null,"ttv");
  propertyIndex.processChangeEvent(multiValueChangeEventOne,keysToAdd,keysToRemove);
  propertyIndex.processChangeEvent(multiValueChangeEventTwo,keysToAdd,keysToRemove);
  final Map<Object,Integer> addedKeys=new HashMap<Object,Integer>();
  addedKeys.put(42,1);
  final Map<Object,Integer> removedKeys=new HashMap<Object,Integer>();
  Assert.assertEquals(keysToAdd,addedKeys);
  Assert.assertEquals(keysToRemove,removedKeys);
}
