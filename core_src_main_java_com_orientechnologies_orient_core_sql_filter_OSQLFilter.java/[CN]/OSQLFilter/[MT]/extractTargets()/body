{
  jumpWhiteSpaces();
  if (currentPos == -1)   throw new OQueryParsingException("No query target found",text,0);
  if (Character.isDigit(text.charAt(currentPos))) {
    final StringBuilder word=new StringBuilder();
    currentPos=OSQLHelper.nextWord(text,textUpperCase,currentPos,word,true);
    targetRecords=new ArrayList<String>();
    targetRecords.add(word.toString());
  }
 else   if (text.charAt(currentPos) == OStringSerializerHelper.COLLECTION_BEGIN) {
    targetRecords=OStringSerializerHelper.getCollection(text,currentPos);
  }
 else {
    String subjectName;
    String alias;
    String subjectToMatch;
    int newPos;
    final StringBuilder word=new StringBuilder();
    currentPos=OSQLHelper.nextWord(text,textUpperCase,currentPos,word,true);
    while (currentPos > -1 && (targetClasses == null && targetClusters == null)) {
      subjectName=word.toString();
      newPos=OSQLHelper.nextWord(text,textUpperCase,currentPos,word,true);
      if (newPos > -1 && word.toString().equals("AS")) {
        currentPos=newPos;
        newPos=OSQLHelper.nextWord(text,textUpperCase,currentPos,word,true);
        if (newPos == -1)         throw new OQueryParsingException("No alias found. Example: SELECT FROM Customer AS c",text,currentPos);
        currentPos=newPos;
        alias=word.toString();
      }
 else       alias=subjectName;
      subjectToMatch=subjectName;
      if (subjectToMatch.startsWith(OCommandExecutorSQLAbstract.CLUSTER_PREFIX)) {
        if (targetClusters == null)         targetClusters=new HashMap<String,String>();
        targetClusters.put(subjectName.substring(OCommandExecutorSQLAbstract.CLUSTER_PREFIX.length()),alias);
      }
 else {
        if (subjectToMatch.startsWith(OCommandExecutorSQLAbstract.CLASS_PREFIX))         subjectName=subjectName.substring(OCommandExecutorSQLAbstract.CLASS_PREFIX.length());
        if (targetClasses == null)         targetClasses=new HashMap<OClass,String>();
        OClass cls=database.getMetadata().getSchema().getClass(subjectName);
        if (cls == null)         throw new OCommandExecutionException("Class '" + subjectName + "' was not found");
        targetClasses.put(cls,alias);
      }
    }
  }
  return currentPos < text.length();
}
