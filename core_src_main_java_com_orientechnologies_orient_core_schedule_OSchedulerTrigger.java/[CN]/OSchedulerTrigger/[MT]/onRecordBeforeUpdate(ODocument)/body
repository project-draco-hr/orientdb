{
  try {
    final String schedulerName=iDocument.field(OScheduledEvent.PROP_NAME);
    final OScheduledEvent event=database.getMetadata().getScheduler().getEvent(schedulerName);
    if (event != null) {
      final Set<String> dirtyFields=new HashSet<String>(Arrays.asList(iDocument.getDirtyFields()));
      if (dirtyFields.contains(OScheduledEvent.PROP_NAME))       throw new OValidationException("Scheduled event cannot change name");
      if (dirtyFields.contains(OScheduledEvent.PROP_RULE)) {
        database.getMetadata().getScheduler().removeEvent(event.getName());
        database.getMetadata().getScheduler().scheduleEvent(new OScheduledEvent(iDocument));
      }
      iDocument.field(OScheduledEvent.PROP_STATUS,STATUS.STOPPED.name());
      event.fromStream(iDocument);
      return RESULT.RECORD_CHANGED;
    }
  }
 catch (  Exception ex) {
    OLogManager.instance().error(this,"Error on updating scheduled event",ex);
  }
  return RESULT.RECORD_NOT_CHANGED;
}
