{
synchronized (syncObject) {
    final GroupKey groupKey=new GroupKey(fileId,pageIndex >>> 4);
    lockManager.acquireLock(Thread.currentThread(),groupKey,OLockManager.LOCK.SHARED);
    try {
      final WriteGroup writeGroup=writeGroups.get(groupKey);
      if (writeGroup == null)       return cacheFileContent(fileId,pageIndex);
      final int entryIndex=(int)(pageIndex & 15);
      OCachePointer pagePointer=writeGroup.pages[entryIndex];
      if (pagePointer == null)       return cacheFileContent(fileId,pageIndex);
      return pagePointer;
    }
  finally {
      lockManager.releaseLock(Thread.currentThread(),groupKey,OLockManager.LOCK.SHARED);
    }
  }
}
