{
  if (iNodeId < 0)   return;
  int rollbacks=0;
  int tasks=0;
  final ODatabaseDocumentTx database=getDatabaseInstance();
  try {
    final Iterator<ODistributedTxContextImpl> pendingReqIterator=activeTxContexts.values().iterator();
    while (pendingReqIterator.hasNext()) {
      final ODistributedTxContextImpl pReq=pendingReqIterator.next();
      if (pReq != null && pReq.getReqId().getNodeId() == iNodeId) {
        try {
          tasks+=pReq.rollback(database);
          rollbacks++;
        }
 catch (        Throwable t) {
          OLogManager.instance().error(this,"Error on rolling back transaction (req=%s)",pReq.getReqId());
        }
        pReq.destroy();
        pendingReqIterator.remove();
      }
    }
  }
  finally {
    database.close();
  }
  ODistributedServerLog.info(this,localNodeName,null,DIRECTION.NONE,"Distributed transaction: rolled back %d transactions (%d total operations) in database '%s' owned by server '%s'",rollbacks,tasks,databaseName,manager.getNodeNameById(iNodeId));
}
