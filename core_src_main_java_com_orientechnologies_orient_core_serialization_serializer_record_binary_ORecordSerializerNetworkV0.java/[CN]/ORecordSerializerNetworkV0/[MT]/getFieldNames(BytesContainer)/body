{
  final int classNameLen=OVarIntSerializer.readAsInteger(bytes);
  bytes.skip(classNameLen);
  final List<String> result=new ArrayList<String>();
  final OMetadataInternal metadata=(OMetadataInternal)ODatabaseRecordThreadLocal.INSTANCE.get().getMetadata();
  final OImmutableSchema _schema=metadata.getImmutableSchemaSnapshot();
  String fieldName;
  while (true) {
    OGlobalProperty prop=null;
    final int len=OVarIntSerializer.readAsInteger(bytes);
    if (len == 0) {
      break;
    }
 else     if (len > 0) {
      fieldName=stringFromBytes(bytes.bytes,bytes.offset,len).intern();
      result.add(fieldName);
      bytes.skip(len + OIntegerSerializer.INT_SIZE + 1);
    }
 else {
      final int id=(len * -1) - 1;
      prop=_schema.getGlobalPropertyById(id);
      result.add(prop.getName());
      bytes.skip(OIntegerSerializer.INT_SIZE + (prop.getType() != OType.ANY ? 0 : 1));
    }
  }
  return result.toArray(new String[result.size()]);
}
