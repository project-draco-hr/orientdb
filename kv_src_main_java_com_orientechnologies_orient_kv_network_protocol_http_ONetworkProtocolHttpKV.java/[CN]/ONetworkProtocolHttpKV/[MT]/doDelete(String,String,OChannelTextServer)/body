{
  final String parts[]=getDbBucketKey(iURI);
  final String dbName=parts[0];
  final String bucket=parts[1];
  final String key=getKey(iURI);
  try {
    final Map<String,String> bucketMap=getBucket(dbName,bucket);
    final int code;
    final String reason;
    final String content;
    if (!bucketMap.containsKey(key)) {
      code=503;
      reason="Key not found";
      content="The entry with key: " + key + " was not found in the bucket '"+ bucket+ "'";
    }
 else {
      code=200;
      reason="Ok";
      content=bucketMap.remove(key);
    }
    sendTextContent(code,reason,"text/plain",content);
  }
 catch (  SocketTimeoutException e) {
    timeout();
  }
catch (  SocketException e) {
    connectionError();
  }
catch (  Exception e) {
    OLogManager.instance().error(this,"Error on retrieving key '" + key + "' from database '"+ dbName+ "'",e,ONetworkProtocolException.class);
  }
}
