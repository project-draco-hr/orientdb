{
  database.begin();
  final OIndex<?> index=database.getMetadata().getIndexManager().getIndex("idxTxAwareMultiValueGetValuesTest");
  Assert.assertTrue(index instanceof OIndexTxAwareMultiValue);
  final int clusterId=database.getDefaultClusterId();
  index.put(1,new ORecordId(clusterId,0));
  index.put(1,new ORecordId(clusterId,1));
  index.put(2,new ORecordId(clusterId,2));
  database.commit();
  Assert.assertNull(database.getTransaction().getIndexChanges("idxTxAwareMultiValueGetValuesTest"));
  final Collection<?> resultOne=((OIndexTxAwareMultiValue)index).getValues(Arrays.asList(1,2));
  Assert.assertEquals(resultOne.size(),3);
  database.begin();
  index.clear();
  Assert.assertNotNull(database.getTransaction().getIndexChanges("idxTxAwareMultiValueGetValuesTest"));
  final Collection<?> resultTwo=((OIndexTxAwareMultiValue)index).getValues(Arrays.asList(1,2));
  Assert.assertEquals(resultTwo.size(),0);
  database.rollback();
  Assert.assertNull(database.getTransaction().getIndexChanges("idxTxAwareMultiValueGetValuesTest"));
  final Collection<?> resultThree=((OIndexTxAwareMultiValue)index).getValues(Arrays.asList(1,2));
  Assert.assertEquals(resultThree.size(),3);
}
