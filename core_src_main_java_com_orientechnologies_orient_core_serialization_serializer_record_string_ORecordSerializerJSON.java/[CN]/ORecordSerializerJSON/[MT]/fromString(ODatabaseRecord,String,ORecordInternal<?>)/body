{
  if (iSource == null)   throw new OSerializationException("Error on unmarshalling JSON content: content is null");
  iSource=iSource.trim();
  if (!iSource.startsWith("{") || !iSource.endsWith("}"))   throw new OSerializationException("Error on unmarshalling JSON content: content must be between { }");
  if (iRecord != null)   iRecord.reset();
  iSource=iSource.substring(1,iSource.length() - 1).trim();
  final String[] fields=OStringParser.getWords(iSource,":,",true);
  if (fields.length % 2 != 0)   throw new OSerializationException("Error on unmarshalling JSON content: wrong format. Use <field> : <value>");
  Map<String,Character> fieldTypes=null;
  if (fields != null && fields.length > 0) {
    for (int i=0; i < fields.length; i+=2) {
      final String fieldName=OStringSerializerHelper.getStringContent(fields[i]);
      final String fieldValue=fields[i + 1];
      final String fieldValueAsString=OStringSerializerHelper.getStringContent(fieldValue);
      if (fieldName.equals(ATTRIBUTE_FIELD_TYPES) && iRecord instanceof ODocument) {
        final String[] fieldTypesParts=fieldValueAsString.split(",");
        if (fieldTypesParts.length > 0) {
          fieldTypes=new HashMap<String,Character>();
          String[] part;
          for (          String f : fieldTypesParts) {
            part=f.split("=");
            if (part.length == 2)             fieldTypes.put(part[0],part[1].charAt(0));
          }
        }
      }
 else       if (fieldName.equals(ODocumentHelper.ATTRIBUTE_TYPE)) {
        if (iRecord == null || iRecord.getRecordType() != fieldValueAsString.charAt(0)) {
          iRecord=Orient.instance().getRecordFactoryManager().newInstance(iDatabase,(byte)fieldValueAsString.charAt(0));
        }
      }
    }
    try {
      for (int i=0; i < fields.length; i+=2) {
        final String fieldName=OStringSerializerHelper.getStringContent(fields[i]);
        final String fieldValue=fields[i + 1];
        final String fieldValueAsString=OStringSerializerHelper.getStringContent(fieldValue);
        if (fieldName.equals(ODocumentHelper.ATTRIBUTE_RID))         iRecord.setIdentity(new ORecordId(fieldValueAsString));
 else         if (fieldName.equals(ODocumentHelper.ATTRIBUTE_VERSION))         iRecord.setVersion(Integer.parseInt(fieldValue));
 else         if (fieldName.equals(ODocumentHelper.ATTRIBUTE_TYPE)) {
          continue;
        }
 else         if (fieldName.equals(ODocumentHelper.ATTRIBUTE_CLASS) && iRecord instanceof ODocument)         ((ODocument)iRecord).setClassNameIfExists("null".equals(fieldValueAsString) ? null : fieldValueAsString);
 else         if (fieldName.equals(ATTRIBUTE_FIELD_TYPES) && iRecord instanceof ODocument)         continue;
 else         if (fieldName.equals("value") && !(iRecord instanceof ODocument)) {
          if ("null".equals(fieldValue))           iRecord.fromStream(new byte[]{});
 else           if (iRecord instanceof ORecordBytes) {
            iRecord.fromStream(OBase64Utils.decode(fieldValueAsString));
          }
 else           if (iRecord instanceof ORecordStringable) {
            ((ORecordStringable)iRecord).value(fieldValueAsString);
          }
        }
 else {
          if (iRecord instanceof ODocument) {
            final Object v=getValue((ODocument)iRecord,fieldName,fieldValue,fieldValueAsString,null,null,fieldTypes);
            if (v != null)             if (v instanceof Collection<?> && !((Collection<?>)v).isEmpty()) {
              if (v instanceof ORecordLazySet)               ((ORecordLazySet)v).setAutoConvertToRecord(false);
 else               if (v instanceof ORecordLazyList)               ((ORecordLazyList)v).setAutoConvertToRecord(false);
              Object first=((Collection<?>)v).iterator().next();
              if (first != null && first instanceof ORecord<?> && !((ORecord<?>)first).getIdentity().isValid()) {
                ((ODocument)iRecord).field(fieldName,v,v instanceof Set<?> ? OType.EMBEDDEDSET : OType.EMBEDDEDLIST);
                continue;
              }
            }
 else             if (v instanceof Map<?,?> && !((Map<?,?>)v).isEmpty()) {
              Object first=((Map<?,?>)v).values().iterator().next();
              if (first != null && first instanceof ORecord<?> && !((ORecord<?>)first).getIdentity().isValid()) {
                ((ODocument)iRecord).field(fieldName,v,OType.EMBEDDEDMAP);
                continue;
              }
            }
            ((ODocument)iRecord).field(fieldName,v);
          }
        }
      }
    }
 catch (    Exception e) {
      e.printStackTrace();
      throw new OSerializationException("Error on unmarshalling JSON content for record " + iRecord.getIdentity(),e);
    }
  }
  return iRecord;
}
