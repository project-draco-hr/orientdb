{
  ODocument record=(ODocument)iRecord;
  ByteArrayOutputStream stream=null;
  DataOutputStream out=null;
  try {
    stream=new ByteArrayOutputStream();
    out=new DataOutputStream(stream);
    Object value;
    byte[] buffer;
    for (    OProperty p : record.getImmutableSchemaClass().properties()) {
      value=record.field(p.getName());
switch (p.getType()) {
case BINARY:
        if (value == null)         out.writeInt(-1);
 else {
          buffer=(byte[])value;
          out.writeInt(buffer.length);
          out.write(buffer);
        }
      break;
case BOOLEAN:
    out.writeBoolean(value != null);
  if (value != null)   out.writeBoolean((Boolean)value);
break;
case DATE:
case DATETIME:
out.writeLong(value != null ? ((Date)value).getTime() : -1);
break;
case DOUBLE:
out.writeBoolean(value != null);
if (value != null) out.writeDouble((Double)value);
break;
case EMBEDDED:
if (value == null) out.writeInt(-1);
 else {
buffer=((ORecord)value).toStream();
out.writeInt(buffer.length);
out.write(buffer);
}
break;
case EMBEDDEDLIST:
break;
case EMBEDDEDSET:
break;
case FLOAT:
out.writeBoolean(value != null);
if (value != null) out.writeFloat((Float)value);
break;
case INTEGER:
out.writeBoolean(value != null);
if (value != null) out.writeInt((Integer)value);
break;
case LINK:
out.writeBoolean(value != null);
if (value != null) {
if (!(value instanceof ORecord)) throw new ODatabaseException("Invalid property value in '" + p.getName() + "': found "+ value.getClass()+ " while it was expected a ORecord");
final ORID rid=((ORecord)value).getIdentity();
out.writeInt(rid.getClusterId());
out.writeLong(rid.getClusterPosition());
}
break;
case LINKLIST:
break;
case LINKSET:
break;
case LONG:
out.writeBoolean(value != null);
if (value != null) out.writeLong((Long)value);
break;
case SHORT:
out.writeBoolean(value != null);
if (value != null) out.writeShort((Short)value);
break;
case STRING:
out.writeBoolean(value != null);
if (value != null) out.writeUTF((String)value);
break;
}
}
return stream.toByteArray();
}
 catch (Exception e) {
OLogManager.instance().error(this,"Error on marshalling object in binary format: " + iRecord.getIdentity(),e);
}
 finally {
try {
if (stream != null) stream.close();
if (out != null) out.close();
}
 catch (IOException e) {
}
}
return null;
}
