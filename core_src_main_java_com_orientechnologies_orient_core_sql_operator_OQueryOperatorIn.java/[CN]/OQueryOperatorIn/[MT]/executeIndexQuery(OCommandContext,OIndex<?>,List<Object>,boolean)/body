{
  final OIndexDefinition indexDefinition=index.getDefinition();
  final OIndexInternal<?> internalIndex=index.getInternal();
  OIndexCursor cursor;
  if (!internalIndex.canBeUsedInEqualityOperators())   return null;
  if (indexDefinition.getParamCount() == 1) {
    final Object inKeyValue=keyParams.get(0);
    final List<Object> inParams;
    if (inKeyValue instanceof List<?>)     inParams=(List<Object>)inKeyValue;
 else     if (inKeyValue instanceof OSQLFilterItem)     inParams=(List<Object>)((OSQLFilterItem)inKeyValue).getValue(null,null,iContext);
 else     throw new IllegalArgumentException("Key '" + inKeyValue + "' is not valid");
    final List<Object> inKeys=new ArrayList<Object>();
    boolean containsNotCompatibleKey=false;
    for (    final Object keyValue : inParams) {
      final Object key=indexDefinition.createValue(OSQLHelper.getValue(keyValue));
      if (key == null) {
        containsNotCompatibleKey=true;
        break;
      }
      inKeys.add(key);
    }
    if (containsNotCompatibleKey)     return null;
    cursor=index.iterateEntries(inKeys,ascSortOrder);
  }
 else {
    final List<Object> partialKey=new ArrayList<Object>();
    partialKey.addAll(keyParams);
    partialKey.remove(keyParams.size() - 1);
    final Object inKeyValue=keyParams.get(keyParams.size() - 1);
    final List<Object> inParams;
    if (inKeyValue instanceof List<?>)     inParams=(List<Object>)inKeyValue;
 else     if (inKeyValue instanceof OSQLFilterItem)     inParams=(List<Object>)((OSQLFilterItem)inKeyValue).getValue(null,null,iContext);
 else     throw new IllegalArgumentException("Key '" + inKeyValue + "' is not valid");
    final List<Object> inKeys=new ArrayList<Object>();
    final OCompositeIndexDefinition compositeIndexDefinition=(OCompositeIndexDefinition)indexDefinition;
    boolean containsNotCompatibleKey=false;
    for (    final Object keyValue : inParams) {
      List<Object> fullKey=new ArrayList<Object>();
      fullKey.addAll(partialKey);
      fullKey.add(keyValue);
      final Object key=compositeIndexDefinition.createSingleValue(fullKey);
      if (key == null) {
        containsNotCompatibleKey=true;
        break;
      }
      inKeys.add(key);
    }
    if (containsNotCompatibleKey) {
      return null;
    }
    if (inKeys == null)     return null;
    if (indexDefinition.getParamCount() == keyParams.size()) {
      final Object indexResult;
      indexResult=index.iterateEntries(inKeys,ascSortOrder);
      if (indexResult == null || indexResult instanceof OIdentifiable) {
        cursor=new OIndexCursorSingleValue((OIdentifiable)indexResult,inKeys);
      }
 else       if (indexResult instanceof OIndexCursor) {
        cursor=(OIndexCursor)indexResult;
      }
 else {
        cursor=new OIndexCursorCollectionValue(((Collection<OIdentifiable>)indexResult).iterator(),inKeys);
      }
    }
 else     return null;
  }
  updateProfiler(iContext,internalIndex,keyParams,indexDefinition);
  return cursor;
}
