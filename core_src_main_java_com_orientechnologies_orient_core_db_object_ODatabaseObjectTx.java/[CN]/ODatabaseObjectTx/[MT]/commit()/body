{
  final List<OTransactionEntry> entries;
  if (getTransaction().getEntries() != null) {
    entries=new ArrayList<OTransactionEntry>();
    for (    OTransactionEntry entry : getTransaction().getEntries())     entries.add(entry);
  }
 else   entries=null;
  underlying.commit();
  if (entries != null) {
    Object pojo=null;
    for (    OTransactionEntry entry : entries) {
      pojo=records2Objects.get(entry.getRecord());
switch (entry.status) {
case OTransactionEntry.CREATED:
        rid2Records.put(entry.getRecord().getIdentity(),(ODocument)entry.getRecord());
      OObjectSerializerHelper.setObjectID(entry.getRecord().getIdentity(),pojo);
case OTransactionEntry.UPDATED:
    OObjectSerializerHelper.setObjectVersion(entry.getRecord().getVersion(),pojo);
  break;
case OTransactionEntry.DELETED:
OObjectSerializerHelper.setObjectID(null,pojo);
OObjectSerializerHelper.setObjectVersion(null,pojo);
unregisterPojo(pojo,(ODocument)entry.getRecord());
break;
}
}
}
return this;
}
