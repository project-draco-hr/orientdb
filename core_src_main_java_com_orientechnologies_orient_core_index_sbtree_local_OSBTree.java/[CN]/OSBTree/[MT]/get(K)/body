{
  acquireSharedLock();
  try {
    key=keySerializer.prepocess(key,(Object[])keyTypes);
    BucketSearchResult bucketSearchResult=findBucket(key,PartialSearchMode.NONE);
    if (bucketSearchResult.itemIndex < 0)     return null;
    long pageIndex=bucketSearchResult.getLastPathItem();
    OCacheEntry keyBucketCacheEntry=diskCache.load(fileId,pageIndex,false);
    OCachePointer keyBucketPointer=keyBucketCacheEntry.getCachePointer();
    try {
      OSBTreeBucket<K,V> keyBucket=new OSBTreeBucket<K,V>(keyBucketPointer.getDataPointer(),keySerializer,keyTypes,valueSerializer,ODurablePage.TrackMode.NONE);
      OSBTreeBucket.SBTreeEntry<K,V> treeEntry=keyBucket.getEntry(bucketSearchResult.itemIndex);
      return readValue(treeEntry.value);
    }
  finally {
      diskCache.release(keyBucketCacheEntry);
    }
  }
 catch (  IOException e) {
    throw new OSBTreeException("Error during retrieving  of sbtree with name " + name,e);
  }
 finally {
    releaseSharedLock();
  }
}
