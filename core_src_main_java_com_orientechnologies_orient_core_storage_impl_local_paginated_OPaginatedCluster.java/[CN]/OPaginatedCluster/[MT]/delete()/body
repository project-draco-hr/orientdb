{
  externalModificationLock.requestModificationLock();
  try {
    acquireExclusiveLock();
    try {
      final OAtomicOperation atomicOperation=startAtomicOperation();
      deleteFile(atomicOperation,fileId,diskCache);
      clusterPositionMap.delete();
      endAtomicOperation(false);
    }
 catch (    IOException ioe) {
      endAtomicOperation(true);
      throw ioe;
    }
catch (    Exception e) {
      endAtomicOperation(true);
      throw new OStorageException("Error during deletion of cluset " + name,e);
    }
 finally {
      releaseExclusiveLock();
    }
  }
  finally {
    externalModificationLock.releaseModificationLock();
  }
}
