{
  StringBuilder results=new StringBuilder();
  results.append("OrientDB Stress Test v").append(OConstants.VERSION).append("\n").append(getParameters()).append("\n");
  if (totalTime != 0) {
    results.append("\nTotal execution time: ").append(String.format("%.2f",totalTime / 1000f)).append(" seconds.");
  }
  long totalCreatesTime=1;
  long totalReadsTime=1;
  long totalUpdatesTime=1;
  long totalDeletesTime=1;
  for (int j=0; j < operationsExecutorCreatesResults.size(); j++) {
    totalCreatesTime+=operationsExecutorCreatesResults.get(j);
    totalReadsTime+=operationsExecutorReadsResults.get(j);
    totalUpdatesTime+=operationsExecutorUpdatesResults.get(j);
    totalDeletesTime+=operationsExecutorDeletesResults.get(j);
  }
  averageCreatesTime=computeAverage(totalCreatesTime);
  averageReadsTime=computeAverage(totalReadsTime);
  averageUpdatesTime=computeAverage(totalUpdatesTime);
  averageDeletesTime=computeAverage(totalDeletesTime);
  createsPercentile=getPercentile(averageCreatesTime,operationsExecutorCreatesResults);
  readsPercentile=getPercentile(averageReadsTime,operationsExecutorReadsResults);
  updatesPercentile=getPercentile(averageUpdatesTime,operationsExecutorUpdatesResults);
  deletesPercentile=getPercentile(averageDeletesTime,operationsExecutorDeletesResults);
  createsThroughput=(int)((operationsSet.getNumberOfCreates() / (float)averageCreatesTime));
  readsThroughput=(int)((operationsSet.getNumberOfReads() / (float)averageReadsTime));
  updatesThroughput=(int)((operationsSet.getNumberOfUpdates() / (float)averageUpdatesTime));
  deletesThroughput=(int)((operationsSet.getNumberOfDeletes() / (float)averageDeletesTime));
  results.append(String.format(OPERATION_RESULT,operationsSet.getNumberOfCreates(),"Creates",averageCreatesTime,createsPercentile,createsThroughput)).append(String.format(OPERATION_RESULT,operationsSet.getNumberOfReads(),"Reads",averageReadsTime,readsPercentile,readsThroughput)).append(String.format(OPERATION_RESULT,operationsSet.getNumberOfUpdates(),"Updates",averageUpdatesTime,updatesPercentile,updatesThroughput)).append(String.format(OPERATION_RESULT,operationsSet.getNumberOfDeletes(),"Deletes",averageDeletesTime,deletesPercentile,deletesThroughput)).append("\n");
  return results.toString();
}
