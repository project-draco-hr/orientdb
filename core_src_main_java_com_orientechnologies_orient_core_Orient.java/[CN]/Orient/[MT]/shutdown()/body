{
  getLock().lock();
  try {
    if (!active)     return this;
    active=false;
    if (memoryWatchDog != null) {
      memoryWatchDog.interrupt();
      try {
        memoryWatchDog.join();
      }
 catch (      InterruptedException e) {
      }
    }
    if (shutdownHook != null) {
      shutdownHook.cancel();
      shutdownHook=null;
    }
    OLogManager.instance().debug(this,"Orient Engine is shutting down...");
    for (    OOrientListener l : browseListeners()) {
      if (l != null)       l.onShutdown();
    }
    if (engines != null) {
      for (      OEngine engine : engines.values()) {
        engine.shutdown();
      }
      engines.clear();
    }
    if (databaseFactory != null)     databaseFactory.shutdown();
    if (storages != null) {
      final List<OStorage> storagesCopy=new ArrayList<OStorage>(storages.values());
      for (      OStorage stg : storagesCopy) {
        OLogManager.instance().info(this,"Shutting down storage: " + stg.getName() + "...");
        stg.close(true);
      }
    }
    if (OMMapManagerLocator.getInstance() != null)     OMMapManagerLocator.getInstance().shutdown();
    if (threadGroup != null)     threadGroup.interrupt();
    resetListeners();
    timer.cancel();
    if (profiler != null) {
      profiler.shutdown();
      profiler=null;
    }
    OLogManager.instance().info(this,"Orient Engine shutdown complete\n");
  }
  finally {
    getLock().unlock();
  }
  return this;
}
