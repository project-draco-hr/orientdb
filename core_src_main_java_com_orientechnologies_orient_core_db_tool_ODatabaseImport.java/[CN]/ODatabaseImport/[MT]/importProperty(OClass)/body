{
  jsonReader.readNext(OJSONReader.NEXT_OBJ_IN_ARRAY);
  if (jsonReader.lastChar() == ']')   return;
  final String propName=jsonReader.readNext(OJSONReader.FIELD_ASSIGNMENT).checkContent("\"name\"").readString(OJSONReader.COMMA_SEPARATOR);
  String next=jsonReader.readNext(OJSONReader.FIELD_ASSIGNMENT).getValue();
  if (next.equals("\"id\"")) {
    next=jsonReader.readString(OJSONReader.COMMA_SEPARATOR);
    next=jsonReader.readNext(OJSONReader.FIELD_ASSIGNMENT).getValue();
  }
  next=jsonReader.checkContent("\"type\"").readString(OJSONReader.NEXT_IN_OBJECT);
  final OType type=OType.valueOf(next);
  String attrib;
  String value;
  String min=null;
  String max=null;
  String linkedClass=null;
  OType linkedType=null;
  String indexName=null;
  boolean mandatory=false;
  boolean notNull=false;
  while (jsonReader.lastChar() == ',') {
    jsonReader.readNext(OJSONReader.FIELD_ASSIGNMENT);
    attrib=jsonReader.getValue();
    value=jsonReader.readString(OJSONReader.NEXT_IN_OBJECT);
    if (attrib.equals("\"min\""))     min=value;
 else     if (attrib.equals("\"max\""))     max=value;
 else     if (attrib.equals("\"linked-class\""))     linkedClass=value;
 else     if (attrib.equals("\"mandatory\""))     mandatory=Boolean.parseBoolean(value);
 else     if (attrib.equals("\"not-null\""))     notNull=Boolean.parseBoolean(value);
 else     if (attrib.equals("\"linked-type\""))     linkedType=OType.valueOf(value);
 else     if (attrib.equals("\"index\""))     indexName=value;
  }
  OPropertyImpl prop=(OPropertyImpl)iClass.getProperty(propName);
  if (prop == null)   prop=(OPropertyImpl)iClass.createProperty(propName,type);
  prop.setMandatory(mandatory);
  prop.setNotNull(notNull);
  if (min != null)   prop.setMin(min);
  if (max != null)   prop.setMax(max);
  if (linkedClass != null)   linkedClasses.put(prop,linkedClass);
  if (linkedType != null)   prop.setLinkedType(linkedType);
  if (indexName != null)   propertyIndexes.put(prop,indexName);
}
