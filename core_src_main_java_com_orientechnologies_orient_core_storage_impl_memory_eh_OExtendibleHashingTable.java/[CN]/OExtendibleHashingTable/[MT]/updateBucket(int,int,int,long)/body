{
  final long node[]=hashTree[nodeIndex];
  final long position=node[itemIndex + offset];
  if (position >= 0)   node[itemIndex + offset]=newFilePosition;
 else {
    final int childNodeIndex=(int)((position & Long.MAX_VALUE) >>> 8);
    final int childOffset=(int)(position & 0xFF);
    final int childNodeDepth=nodeLocalDepths[childNodeIndex];
    final int interval=1 << childNodeDepth;
    for (int i=0; i < interval; i++) {
      updateBucket(childNodeIndex,i,childOffset,newFilePosition);
    }
  }
}
