{
  final OIndexDefinition indexDefinition=index.getDefinition();
  final OIndexInternal<?> internalIndex=index.getInternal();
  if (!internalIndex.canBeUsedInEqualityOperators())   return false;
  if (indexDefinition.getParamCount() == 1) {
    final Object key;
    if (indexDefinition instanceof OIndexDefinitionMultiValue)     key=((OIndexDefinitionMultiValue)indexDefinition).createSingleValue(keyParams.get(0));
 else     key=indexDefinition.createValue(keyParams);
    if (key == null)     return false;
    final Object indexResult;
    indexResult=index.get(key);
    convertIndexResult(indexResult,resultListener);
  }
 else {
    final OCompositeIndexDefinition compositeIndexDefinition=(OCompositeIndexDefinition)indexDefinition;
    final Object keyOne=compositeIndexDefinition.createSingleValue(keyParams);
    if (keyOne == null)     return false;
    final Object keyTwo=compositeIndexDefinition.createSingleValue(keyParams);
    if (internalIndex.hasRangeQuerySupport()) {
      index.getValuesBetween(keyOne,true,keyTwo,true,ascSortOrder,resultListener);
    }
 else {
      if (indexDefinition.getParamCount() == keyParams.size()) {
        final Object indexResult;
        indexResult=index.get(keyOne);
        convertIndexResult(indexResult,resultListener);
      }
 else       return false;
    }
  }
  updateProfiler(iContext,index,keyParams,indexDefinition);
  return true;
}
