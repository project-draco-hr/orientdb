{
  int currentPos=0;
  final StringBuilder word=new StringBuilder();
  currentPos=OSQLHelper.nextWord(text,textUpperCase,currentPos,word,true);
  if (!word.toString().equals(KEYWORD_SELECT))   return -1;
  int fromPosition=textUpperCase.indexOf(KEYWORD_FROM,currentPos);
  if (fromPosition == -1)   throw new OQueryParsingException("Missed " + KEYWORD_FROM,text,currentPos);
  final String projectionString=textUpperCase.substring(currentPos,fromPosition).trim();
  if (projectionString.length() > 0 && !projectionString.equals("*")) {
    projections=new HashMap<String,Object>();
    final String[] items=text.substring(currentPos,fromPosition).split(",");
    String fieldName;
    int pos;
    for (    String i : items) {
      i=i.trim();
      pos=i.indexOf('.');
      fieldName=pos > -1 ? i.substring(0,pos) : i;
      for (int fieldIndex=2; projections.containsKey(fieldName); ++fieldIndex) {
        fieldName+=fieldIndex;
      }
      projections.put(fieldName,OSQLHelper.parseValue(database,this,i));
    }
  }
  currentPos=fromPosition + KEYWORD_FROM.length() + 1;
  return currentPos;
}
