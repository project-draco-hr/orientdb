{
  if (iServerURL.startsWith(OEngineRemote.PREFIX))   iServerURL=iServerURL.substring(OEngineRemote.PREFIX.length());
  if (iServerURL.endsWith("/"))   iServerURL=iServerURL.substring(0,iServerURL.length() - 1);
  long localTimeout=timeout;
  ORemoteConnectionPool pool=connections.get(iServerURL);
  if (pool == null) {
    int maxPool=OGlobalConfiguration.CLIENT_CHANNEL_MAX_POOL.getValueAsInteger();
    if (iConfiguration != null && iConfiguration.size() > 0) {
      if (iConfiguration.containsKey(PARAM_MAX_POOL))       maxPool=Integer.parseInt(iConfiguration.get(PARAM_MAX_POOL).toString());
      if (iConfiguration.containsKey(PARAM_MAX_POOL))       maxPool=Integer.parseInt(iConfiguration.get(PARAM_MAX_POOL).toString());
    }
    if (clientConfiguration != null) {
      final Object max=clientConfiguration.getValue(OGlobalConfiguration.CLIENT_CHANNEL_MAX_POOL);
      if (max != null)       maxPool=Integer.parseInt(max.toString());
      final Object netLockTimeout=clientConfiguration.getValue(OGlobalConfiguration.NETWORK_LOCK_TIMEOUT);
      if (netLockTimeout != null)       localTimeout=Integer.parseInt(netLockTimeout.toString());
    }
    pool=new ORemoteConnectionPool(maxPool,iListener != null);
    final ORemoteConnectionPool prev=connections.putIfAbsent(iServerURL,pool);
    if (prev != null) {
      pool.getPool().close();
      pool=prev;
    }
  }
  try {
    OChannelBinaryAsynchClient ret=pool.acquire(iServerURL,localTimeout,clientConfiguration,iConfiguration,iListener);
    return ret;
  }
 catch (  RuntimeException e) {
    throw e;
  }
catch (  Exception e) {
    OLogManager.instance().debug(this,"Error on retrieving the connection from pool: " + iServerURL,e);
  }
  return null;
}
