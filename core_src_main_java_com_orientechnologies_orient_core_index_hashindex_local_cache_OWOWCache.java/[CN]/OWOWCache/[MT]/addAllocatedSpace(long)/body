{
  if (diff == 0)   return;
  allocatedSpace.addAndGet(diff);
  final long ts=System.currentTimeMillis();
  final long lastSpaceCheck=lastDiskSpaceCheck.get();
  if (ts - lastSpaceCheck > diskSizeCheckInterval) {
    final File storageDir=new File(storagePath);
    long freeSpace=storageDir.getFreeSpace();
    long effectiveFreeSpace=freeSpace - allocatedSpace.get();
    if (effectiveFreeSpace < freeSpaceLimit) {
      if (writeAheadLog != null) {
        writeAheadLog.flush();
        Future<?> future=commitExecutor.submit(new PeriodicalFuzzyCheckpointTask());
        try {
          future.get();
        }
 catch (        Exception e) {
          OLogManager.instance().error(this,"Error during fuzzy checkpoint execution for storage %s .",e,storageLocal.getName());
        }
        freeSpace=storageDir.getFreeSpace();
        effectiveFreeSpace=freeSpace - allocatedSpace.get();
        if (effectiveFreeSpace < freeSpaceLimit)         callLowSpaceListeners(new LowDiskSpaceInformation(effectiveFreeSpace,freeSpaceLimit));
      }
 else {
        callLowSpaceListeners(new LowDiskSpaceInformation(effectiveFreeSpace,freeSpaceLimit));
      }
    }
    lastDiskSpaceCheck.lazySet(ts);
  }
}
