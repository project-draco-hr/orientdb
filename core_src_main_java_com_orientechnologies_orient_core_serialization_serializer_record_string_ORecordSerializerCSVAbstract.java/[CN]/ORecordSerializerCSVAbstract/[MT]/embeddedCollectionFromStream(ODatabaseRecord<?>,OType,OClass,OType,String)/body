{
  if (iValue.length() == 0)   return null;
  final String value=iValue.startsWith("[") ? iValue.substring(1,iValue.length() - 1) : iValue;
  final Collection<Object> coll=iType == OType.EMBEDDEDLIST ? new ArrayList<Object>() : new HashSet<Object>();
  if (value.length() == 0)   return coll;
  final List<String> items=OStringSerializerHelper.smartSplit(value,OStringSerializerHelper.RECORD_SEPARATOR);
  for (  String item : items) {
    if (iLinkedClass != null) {
      if (item.length() > 2) {
        item=item.substring(1,item.length() - 1);
        coll.add(fromString(iDatabase,item,new ODocument(iDatabase,iLinkedClass.getName())));
      }
    }
 else     if (item.length() > 0 && item.charAt(0) == OStringSerializerHelper.EMBEDDED) {
      coll.add(OStringSerializerHelper.fieldTypeFromStream(iLinkedType,item.substring(1,item.length() - 1)));
    }
 else {
      if (iLinkedType == null)       throw new IllegalArgumentException("Linked type can't be null. Probably the serialized type has not stored the type along with data");
      coll.add(OStringSerializerHelper.fieldTypeFromStream(iLinkedType,item));
    }
  }
  return coll;
}
