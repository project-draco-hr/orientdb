{
  configuration.setValue(OGlobalConfiguration.NETWORK_SOCKET_TIMEOUT,iTimeout);
  channel=new OChannelBinaryClient(networkAddress,networkPort,configuration);
  OChannelBinaryProtocol.checkProtocolVersion(channel);
  OLogManager.instance().warn(this,"Joining the server node %s:%d to the cluster...",networkAddress,networkPort);
  clientTxId=serialClientId.decrementAndGet();
  channel.writeByte(OChannelDistributedProtocol.REQUEST_DISTRIBUTED_CONNECT);
  channel.writeInt(clientTxId);
  channel.flush();
  channel.readStatus();
  for (  OServerNodeDatabaseEntry entry : databases.values()) {
    channel.writeByte(OChannelDistributedProtocol.REQUEST_DISTRIBUTED_DB_OPEN);
    channel.writeInt(clientTxId);
    channel.writeString(entry.databaseName);
    channel.writeString(entry.userName);
    channel.writeString(entry.userPassword);
    channel.flush();
    channel.readStatus();
    entry.sessionId=channel.readInt();
    entry.version=channel.readLong();
  }
  if (status == STATUS.CONNECTING)   OLogManager.instance().info(this,"Server node %s:%d has joined the cluster",networkAddress,networkPort);
 else   OLogManager.instance().info(this,"Server node %s:%d has re-joined the cluster after %d secs",networkAddress,networkPort,(System.currentTimeMillis() - lastHeartBeat) / 1000);
  lastHeartBeat=System.currentTimeMillis();
}
