{
  ODatabaseDocumentTx db=new ODatabaseDocumentTx(url);
  db.open("admin","admin");
  try {
    db.begin();
    ODocument kim=new ODocument("Profile").field("name","Kim").field("surname","Bauer");
    ODocument teri=new ODocument("Profile").field("name","Teri").field("surname","Bauer");
    ODocument jack=new ODocument("Profile").field("name","Jack").field("surname","Bauer");
    ODocument chloe=new ODocument("Profile").field("name","Chloe").field("surname","O'Brien");
    ((HashSet<ODocument>)jack.field("following",new HashSet<ODocument>()).field("following")).add(kim);
    ((HashSet<ODocument>)kim.field("following",new HashSet<ODocument>()).field("following")).add(teri);
    ((HashSet<ODocument>)teri.field("following",new HashSet<ODocument>()).field("following")).add(jack);
    ((HashSet<ODocument>)teri.field("following")).add(kim);
    ((HashSet<ODocument>)chloe.field("following",new HashSet<ODocument>()).field("following")).add(jack);
    ((HashSet<ODocument>)chloe.field("following")).add(teri);
    ((HashSet<ODocument>)chloe.field("following")).add(kim);
    int profileClusterId=db.getClusterIdByName("Profile");
    jack.save();
    Assert.assertEquals(jack.getIdentity().getClusterId(),profileClusterId);
    kim.save();
    Assert.assertEquals(kim.getIdentity().getClusterId(),profileClusterId);
    teri.save();
    Assert.assertEquals(teri.getIdentity().getClusterId(),profileClusterId);
    chloe.save();
    Assert.assertEquals(chloe.getIdentity().getClusterId(),profileClusterId);
    db.commit();
    Assert.assertEquals(jack.getIdentity().getClusterId(),profileClusterId);
    Assert.assertEquals(kim.getIdentity().getClusterId(),profileClusterId);
    Assert.assertEquals(teri.getIdentity().getClusterId(),profileClusterId);
    Assert.assertEquals(chloe.getIdentity().getClusterId(),profileClusterId);
    db.close();
    db.open("admin","admin");
    ODocument loadedChloe=db.load(chloe.getIdentity());
    System.out.println(loadedChloe);
  }
  finally {
    db.close();
  }
}
