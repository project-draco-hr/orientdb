{
  final Map<String,String> events=new HashMap<String,String>();
  className=iConfiguration.field("class");
  if (className == null)   throw new OConfigurationException("'class' field not found in configuration");
  superClassName=iConfiguration.field("superClass");
  final String cfgImplementation=iConfiguration.field("implementation");
  if (cfgImplementation != null)   try {
    implementation=(OImporterListener)Class.forName(cfgImplementation).newInstance();
  }
 catch (  Exception e) {
    OLogManager.instance().error(this,"Error on creating 'implementation' instance, class '" + cfgImplementation + "'");
    throw new OConfigurationException("Cannot create an object of 'implementation' instance, class '" + cfgImplementation + "'",e);
  }
  final Boolean cfgSave=iConfiguration.field("autoSave");
  if (cfgSave != null)   autoSave=cfgSave;
  final ODocument cfgFields=iConfiguration.field("fields");
  for (  String fieldName : cfgFields.fieldNames()) {
    final OImporterConfiguraionField field=new OImporterConfiguraionField();
    fields.put(fieldName,field);
    final ODocument cfgField=cfgFields.field(fieldName);
    final String cfgFieldType=cfgField.field("type");
    if (cfgFieldType == null)     throw new OConfigurationException("field type missed");
    if (!cfgFieldType.equalsIgnoreCase("skip"))     field.type=OType.valueOf(cfgFieldType.toUpperCase());
    if (cfgField.containsField("transform"))     field.transform=cfgField.field("transform");
    if (cfgField.containsField("join")) {
      field.join=cfgField.field("join");
      if (field.join == null)       throw new OConfigurationException("Target join field missed");
    }
    if (cfgField.containsField("format")) {
      field.format=cfgField.field("format");
      if (field.format == null)       throw new OConfigurationException("Format detail missed");
      field.format=OStringSerializerHelper.getStringContent(field.format);
    }
    if (cfgField.containsField("optional"))     field.optional=cfgField.field("optional");
    if (cfgField.containsField("key")) {
      try {
        field.key=KEY_TYPE.valueOf(((String)cfgField.field("key")).toUpperCase());
      }
 catch (      IllegalArgumentException e) {
        throw new OConfigurationException("key type missed. Use 'overwrite' or 'onlyfirst'");
      }
    }
    if (cfgField.containsField("index")) {
      field.index=((String)cfgField.field("index")).toUpperCase();
      if (field.index == null)       throw new OConfigurationException("index type missed. Use the available types, like 'unique' or 'notunique'");
    }
    field.edgeClass=cfgField.field("edgeClass");
    if (cfgField.containsField("onValue"))     field.onValue=cfgField.field("onValue");
  }
  final ODocument cfgEvents=iConfiguration.field("events");
  for (  String eventName : cfgEvents.fieldNames()) {
    events.put(eventName,(String)cfgEvents.field(eventName));
  }
  if (implementation == null)   implementation=new OScriptImporterListener(events);
}
