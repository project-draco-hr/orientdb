{
  final String executorNode=response.getExecutorNodeName();
  final String senderNode=response.getSenderNodeName();
  synchronousResponsesLock.lock();
  try {
    if (!executorNode.equals(dManager.getLocalNodeName()) && !responses.containsKey(executorNode)) {
      ODistributedServerLog.warn(this,senderNode,executorNode,DIRECTION.IN,"received response for request (%s) from unexpected node. Expected are: %s",request,getExpectedNodes());
      Orient.instance().getProfiler().updateCounter("distributed.node.unexpectedNodeResponse","Number of responses from unexpected nodes",+1);
      return false;
    }
    Orient.instance().getProfiler().stopChrono("distributed.node.latency","Latency of distributed messages",sentOn,"distributed.node.latency");
    Orient.instance().getProfiler().stopChrono("distributed.node." + executorNode + ".latency","Latency of distributed messages per node",sentOn,"distributed.node.*.latency");
    boolean completed=false;
    responses.put(executorNode,response);
    receivedResponses++;
    if (waitForLocalNode && executorNode.equals(senderNode))     receivedCurrentNode=true;
    if (ODistributedServerLog.isDebugEnabled())     ODistributedServerLog.debug(this,senderNode,executorNode,DIRECTION.IN,"received response '%s' for request (%s) (receivedCurrentNode=%s receivedResponses=%d expectedSynchronousResponses=%d quorum=%d)",response,request,receivedCurrentNode,receivedResponses,expectedSynchronousResponses,quorum);
    if (response.getPayload() instanceof ODiscardedResponse)     discardedResponses++;
 else     if (groupResponsesByResult) {
      final Object responsePayload=response.getPayload();
      boolean foundBucket=false;
      for (int i=0; i < responseGroups.size(); ++i) {
        final List<ODistributedResponse> responseGroup=responseGroups.get(i);
        if (responseGroup.isEmpty())         foundBucket=true;
 else {
          final Object rgPayload=responseGroup.get(0).getPayload();
          if (rgPayload == null && responsePayload == null)           foundBucket=true;
 else           if (rgPayload != null) {
            if (rgPayload.equals(responsePayload))             foundBucket=true;
 else             if (rgPayload instanceof Collection && responsePayload instanceof Collection) {
              if (OMultiValue.equals((Collection)rgPayload,(Collection)responsePayload))               foundBucket=true;
            }
          }
        }
        if (foundBucket) {
          responseGroup.add(response);
          break;
        }
      }
      if (!foundBucket) {
        final ArrayList<ODistributedResponse> newBucket=new ArrayList<ODistributedResponse>();
        responseGroups.add(newBucket);
        newBucket.add(response);
      }
    }
    completed=getExpectedResponses() == receivedResponses;
    if (completed || isMinimumQuorumReached()) {
      notifyWaiters();
    }
    return completed;
  }
  finally {
    synchronousResponsesLock.unlock();
  }
}
