{
  checkConnection();
  final long time=System.currentTimeMillis();
  OLogManager.instance().info(this,"<-> DB %s: synchronization started. Storing delta of updates...",name);
  try {
    final OChannelBinaryClient network=beginRequest(OChannelDistributedProtocol.REQUEST_DISTRIBUTED_SYNCHRONIZE);
    for (    ODocument node : iDbCfg) {
      final String nodeId=(String)node.field("node");
      try {
        network.writeBytes(node.toStream());
      }
  finally {
        endRequest(network);
      }
      beginResponse(network);
      try {
        int ops=0;
        final ORecordOperation opLog=new ORecordOperation();
        while (network.readByte() == 1) {
          opLog.fromStream(network.readBytes());
          ops++;
          OLogManager.instance().info(this,"<< DB %s: (%d) received record %s",name,ops,opLog.record);
          replicator.getOperationLog(nodeId,getName()).appendLog(opLog.serial,opLog.type,(ORecordId)opLog.record.getIdentity());
        }
        if (OLogManager.instance().isInfoEnabled())         OLogManager.instance().info(this,"<-> DB %s: synchronization completed. Received %d operations from remote node (%dms)",getName(),ops,(System.currentTimeMillis() - time));
      }
  finally {
        endResponse(network);
      }
    }
  }
 catch (  OException e) {
    throw e;
  }
catch (  Exception e) {
    handleException("<-> DB " + getName() + ": error on synchronization",e);
  }
}
