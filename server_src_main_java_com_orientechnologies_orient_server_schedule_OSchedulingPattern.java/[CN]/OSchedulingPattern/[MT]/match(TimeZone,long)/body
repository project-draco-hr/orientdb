{
  GregorianCalendar gc=new GregorianCalendar();
  gc.setTimeInMillis(millis);
  gc.setTimeZone(timezone);
  int minute=gc.get(Calendar.MINUTE);
  int hour=gc.get(Calendar.HOUR_OF_DAY);
  int dayOfMonth=gc.get(Calendar.DAY_OF_MONTH);
  int month=gc.get(Calendar.MONTH) + 1;
  int dayOfWeek=gc.get(Calendar.DAY_OF_WEEK) - 1;
  int year=gc.get(Calendar.YEAR);
  for (int i=0; i < matcherSize; i++) {
    OValueMatcher minuteMatcher=(OValueMatcher)minuteMatchers.get(i);
    OValueMatcher hourMatcher=(OValueMatcher)hourMatchers.get(i);
    OValueMatcher dayOfMonthMatcher=(OValueMatcher)dayOfMonthMatchers.get(i);
    OValueMatcher monthMatcher=(OValueMatcher)monthMatchers.get(i);
    OValueMatcher dayOfWeekMatcher=(OValueMatcher)dayOfWeekMatchers.get(i);
    boolean eval=minuteMatcher.match(minute) && hourMatcher.match(hour) && ((dayOfMonthMatcher instanceof ODayOfMonthValueMatcher) ? ((ODayOfMonthValueMatcher)dayOfMonthMatcher).match(dayOfMonth,month,gc.isLeapYear(year)) : dayOfMonthMatcher.match(dayOfMonth))&& monthMatcher.match(month)&& dayOfWeekMatcher.match(dayOfWeek);
    if (eval) {
      return true;
    }
  }
  return false;
}
