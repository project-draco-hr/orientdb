{
  if (((active0&=old0) | (active1&=old1) | (active2&=old2)| (active3&=old3)) == 0L)   return jjStartNfa_0(0,old0,old1,old2,old3);
  try {
    curChar=input_stream.readChar();
  }
 catch (  java.io.IOException e) {
    jjStopStringLiteralDfa_0(1,0L,active1,active2,active3);
    return 2;
  }
switch (curChar) {
case 46:
    if ((active2 & 0x100000000000L) != 0L)     return jjStopAtPos(2,172);
  break;
case 61:
if ((active2 & 0x20000000000L) != 0L) return jjStopAtPos(2,169);
 else if ((active2 & 0x40000000000L) != 0L) return jjStopAtPos(2,170);
break;
case 62:
return jjMoveStringLiteralDfa3_0(active1,0L,active2,0x80000000000L,active3,0L);
case 108:
return jjMoveStringLiteralDfa3_0(active1,0x800000000000000L,active2,0L,active3,0L);
case 117:
return jjMoveStringLiteralDfa3_0(active1,0x400000000000000L,active2,0L,active3,0x100L);
default :
break;
}
return jjStartNfa_0(1,0L,active1,active2,active3);
}
