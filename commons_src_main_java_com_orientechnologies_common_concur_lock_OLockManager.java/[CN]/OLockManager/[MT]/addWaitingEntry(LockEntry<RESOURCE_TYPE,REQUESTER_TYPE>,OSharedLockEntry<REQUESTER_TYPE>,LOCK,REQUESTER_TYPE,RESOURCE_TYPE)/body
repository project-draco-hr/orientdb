{
  assert(Thread.holdsLock(this));
  LockEntry<RESOURCE_TYPE,REQUESTER_TYPE> newEntry=new LockEntry<RESOURCE_TYPE,REQUESTER_TYPE>(iLockType,iRequester,iResource,LOCK_STATUS.WAITING);
  LockEntry<RESOURCE_TYPE,REQUESTER_TYPE> vLastWaiter=iCurrentLock;
  while (vLastWaiter.nextWaiter != null)   vLastWaiter=vLastWaiter.nextWaiter;
  vLastWaiter.nextWaiter=newEntry;
  if (iCurrentSharedLock != null) {
    newEntry.countSharedLocks+=iCurrentSharedLock.countSharedLocks;
    iCurrentSharedLock.countSharedLocks=1;
    removeSharedLockEntry(iCurrentLock,iCurrentSharedLock.requester);
  }
  return newEntry;
}
