{
  super(iStorage,iConfig);
  PROFILER_DATA_RECYCLED_COMPLETE="storage." + storage.getName() + ".data.recycled.complete";
  PROFILER_DATA_RECYCLED_PARTIAL="storage." + storage.getName() + ".data.recycled.partial";
  PROFILER_DATA_RECYCLED_NOTFOUND="storage." + storage.getName() + ".data.recycled.notFound";
  PROFILER_DATA_HOLE_CREATE="storage." + storage.getName() + ".data.createHole";
  PROFILER_DATA_HOLE_UPDATE="storage." + storage.getName() + ".data.updateHole";
  availableHolesBySize=new TreeMap<ODataHoleInfo,ODataHoleInfo>();
  availableHolesByPosition=new TreeMap<ODataHoleInfo,ODataHoleInfo>(new Comparator<ODataHoleInfo>(){
    public int compare(    final ODataHoleInfo o1,    final ODataHoleInfo o2){
      if (o1.dataOffset == o2.dataOffset)       return 0;
      if (o1.dataOffset > o2.dataOffset)       return 1;
      return -1;
    }
  }
);
}
