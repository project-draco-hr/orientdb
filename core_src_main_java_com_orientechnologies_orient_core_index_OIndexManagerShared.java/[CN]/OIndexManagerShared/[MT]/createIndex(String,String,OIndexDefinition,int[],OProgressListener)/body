{
  if (getDatabase().getTransaction().isActive())   throw new IllegalStateException("Cannot create a new index inside a transaction");
  final Character c=OSchemaShared.checkNameIfValid(iName);
  if (c != null)   throw new IllegalArgumentException("Invalid index name '" + iName + "'. Character '"+ c+ "' is invalid");
  acquireExclusiveLock();
  try {
    final OIndexInternal<?> index=OIndexes.createIndex(getDatabase(),iType);
    final String clusterName=indexDefinition != null && indexDefinition.getClassName() != null ? defaultClusterName : manualClusterName;
    if (iProgressListener == null)     iProgressListener=new OIndexRebuildOutputListener(index);
    Set<String> clustersToIndex=new HashSet<String>();
    ODatabase database=getDatabase();
    if (clusterIdsToIndex != null) {
      for (      int clusterId : clusterIdsToIndex) {
        final String clusterNameToIndex=database.getClusterNameById(clusterId);
        if (clusterNameToIndex == null)         throw new OIndexException("Cluster with id " + clusterId + " does not exist.");
        clustersToIndex.add(clusterNameToIndex);
      }
    }
    index.create(iName,indexDefinition,clusterName,clustersToIndex,true,iProgressListener);
    addIndexInternal(index);
    setDirty();
    save();
    return index;
  }
  finally {
    releaseExclusiveLock();
  }
}
