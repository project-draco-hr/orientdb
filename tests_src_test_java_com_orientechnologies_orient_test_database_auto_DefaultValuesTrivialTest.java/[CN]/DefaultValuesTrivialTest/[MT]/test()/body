{
  final ODatabaseDocumentTx database=new ODatabaseDocumentTx("memory:defaultValues");
  try {
    database.create();
    OSchema schema=database.getMetadata().getSchema();
    OClass classPerson=schema.createClass("Person");
    classPerson.createProperty("name",OType.STRING);
    classPerson.createProperty("join_date",OType.DATETIME).setDefaultValue("sysdate()");
    classPerson.createProperty("active",OType.BOOLEAN).setDefaultValue("true");
    Date dtStart=getDatabaseSysdate(database);
    ODocument[] docs=new ODocument[DOCUMENT_COUNT];
    for (int i=0; i < DOCUMENT_COUNT; ++i) {
      ODocument doc=new ODocument("Person");
      doc.field("name","autoGeneratedName #" + i);
      doc.save();
      docs[i]=doc;
    }
    Date dtAfter=getDatabaseSysdate(database);
    for (int i=0; i < DOCUMENT_COUNT; ++i) {
      final ODocument doc=docs[i];
      try {
        Date dt=doc.field("join_date",OType.DATETIME);
        boolean isInRange=(!dt.before(dtStart)) && (!dt.after(dtAfter));
        Assert.assertTrue(isInRange);
        boolean active=doc.field("active",OType.BOOLEAN);
        Assert.assertTrue(active);
      }
 catch (      Exception ex) {
        ex.printStackTrace();
        Assert.assertTrue(false);
      }
    }
  }
  finally {
    database.drop();
  }
}
