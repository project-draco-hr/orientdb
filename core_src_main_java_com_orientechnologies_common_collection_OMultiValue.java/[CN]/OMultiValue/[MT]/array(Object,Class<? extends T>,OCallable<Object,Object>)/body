{
  if (iValue == null)   return null;
  final T[] result;
  if (isMultiValue(iValue)) {
    result=(T[])Array.newInstance(iClass,getSize(iValue));
    int i=0;
    for (Iterator<T> it=(Iterator<T>)getMultiValueIterator(iValue,false); it.hasNext(); ++i)     result[i]=(T)convert(it.next(),iCallback);
  }
 else   if (isIterable(iValue)) {
    final List<T> temp=new ArrayList<T>();
    for (Iterator<T> it=(Iterator<T>)getMultiValueIterator(iValue,false); it.hasNext(); )     temp.add((T)convert(it.next(),iCallback));
    if (iClass.equals(Object.class))     result=(T[])temp.toArray();
 else     result=temp.toArray((T[])Array.newInstance(iClass,getSize(iValue)));
  }
 else {
    result=(T[])Array.newInstance(iClass,1);
    result[0]=(T)(T)convert(iValue,iCallback);
  }
  return result;
}
