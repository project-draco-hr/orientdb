{
  if (!enabled)   return;
  OLogManager.instance().info(this,"Starting distributed server '%s'...",getLocalNodeName());
  remoteClusterNodes.clear();
  synchronizers.clear();
  try {
    hazelcastInstance=Hazelcast.newHazelcastInstance(new FileSystemXmlConfig(hazelcastConfigFile));
    nodeId=hazelcastInstance.getCluster().getLocalMember().getUuid();
    timeOffset=System.currentTimeMillis() - hazelcastInstance.getCluster().getClusterTime();
    OServer.registerServerInstance(getLocalNodeName(),serverInstance);
    messageService=new OHazelcastDistributedMessageService(this);
    initDistributedDatabases();
  }
 catch (  FileNotFoundException e) {
    throw new OConfigurationException("Error on creating Hazelcast instance",e);
  }
  final IMap<String,Object> configurationMap=getConfigurationMap();
  configurationMap.addEntryListener(this,true);
  setStatus(STATUS.ALIGNING);
  configurationMap.putIfAbsent("runId",hazelcastInstance.getCluster().getClusterTime());
  runId=(Long)getConfigurationMap().get("runId");
  registerAndAlignNodes();
  super.startup();
}
