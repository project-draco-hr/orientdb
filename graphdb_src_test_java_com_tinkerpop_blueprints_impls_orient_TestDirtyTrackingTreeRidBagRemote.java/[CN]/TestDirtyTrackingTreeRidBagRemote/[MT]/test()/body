{
  final int max=OGlobalConfiguration.RID_BAG_EMBEDDED_TO_SBTREEBONSAI_THRESHOLD.getValueAsInteger() * 2;
  OrientGraph graph=new OrientGraph("remote:localhost:3064/" + TestDirtyTrackingTreeRidBagRemote.class.getSimpleName(),"root","root");
  graph.getRawGraph().declareIntent(new OIntentMassiveInsert());
  graph.createEdgeType("Edge");
  OIdentifiable oneVertex=null;
  Map<Object,Vertex> vertices=new HashMap<Object,Vertex>();
  for (int i=0; i < max; i++) {
    Vertex v=graph.addVertex("class:V");
    v.setProperty("key","foo" + i);
    graph.commit();
    vertices.put(v.getProperty("key"),v);
    if (i == max / 2 + 1)     oneVertex=((OrientVertex)v).getIdentity();
  }
  graph.commit();
  for (int i=0; i < max; i++) {
    String codeUCD1="foo" + i;
    Vertex med1=(Vertex)vertices.get(codeUCD1);
    for (int j=0; j < max; j++) {
      String key="foo" + j;
      Vertex med2=(Vertex)vertices.get(key);
      OrientEdge eInteraction=graph.addEdge(null,med1,med2,"Edge");
      assertNotNull(graph.getRawGraph().getTransaction().getRecordEntry(((OrientVertex)med2).getIdentity()));
    }
    graph.commit();
  }
  graph.getRawGraph().getLocalCache().clear();
  OrientVertex vertex=graph.getVertex(oneVertex);
  assertEquals(new GremlinPipeline<Vertex,Long>().start(vertex).in("Edge").count(),max);
}
