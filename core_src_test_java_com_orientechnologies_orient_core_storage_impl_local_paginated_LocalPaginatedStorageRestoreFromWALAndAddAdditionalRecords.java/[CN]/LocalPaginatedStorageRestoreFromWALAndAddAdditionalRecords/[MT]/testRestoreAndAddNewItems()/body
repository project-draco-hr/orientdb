{
  List<Future<Void>> futures=new ArrayList<Future<Void>>();
  baseDocumentTx.declareIntent(new OIntentMassiveInsert());
  Random random=new Random();
  long[] seeds=new long[5];
  for (int i=0; i < 5; i++) {
    seeds[i]=random.nextLong();
    System.out.println("Seed [" + i + "] = "+ seeds[i]);
  }
  for (  long seed : seeds)   futures.add(executorService.submit(new DataPropagationTask(seed)));
  for (  Future<Void> future : futures)   future.get();
  futures.clear();
  Thread.sleep(1500);
  copyDataFromTestWithoutClose();
  OStorage storage=baseDocumentTx.getStorage();
  baseDocumentTx.close();
  storage.close();
  testDocumentTx=new ODatabaseDocumentTx("plocal:" + buildDir.getAbsolutePath() + "/testLocalPaginatedStorageRestoreFromWALAndAddAdditionalRecords");
  testDocumentTx.open("admin","admin");
  testDocumentTx.close();
  long dataAddSeed=random.nextLong();
  System.out.println("Data add seed = " + dataAddSeed);
  for (int i=0; i < 1; i++)   futures.add(executorService.submit(new DataPropagationTask(dataAddSeed)));
  for (  Future<Void> future : futures)   future.get();
  ODatabaseCompare databaseCompare=new ODatabaseCompare(testDocumentTx.getURL(),baseDocumentTx.getURL(),"admin","admin",new OCommandOutputListener(){
    @Override public void onMessage(    String text){
      System.out.println(text);
    }
  }
);
  Assert.assertTrue(databaseCompare.compare());
}
