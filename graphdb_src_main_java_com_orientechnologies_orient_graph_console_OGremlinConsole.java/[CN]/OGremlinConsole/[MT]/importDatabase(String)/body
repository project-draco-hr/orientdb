{
  checkForDatabase();
  final List<String> items=OStringSerializerHelper.smartSplit(text,' ');
  final String fileName=items.size() <= 0 || (items.get(1)).charAt(0) == '-' ? null : items.get(1);
  final String optionsAsString=fileName != null ? text.substring((items.get(0)).length() + (items.get(1)).length() + 1).trim() : text;
  final Map<String,List<String>> options=parseOptions(optionsAsString);
  final String format=options.containsKey("-format") ? options.get("-format").get(0) : null;
  if ((format != null && format.equalsIgnoreCase("graphml")) || (fileName != null && (fileName.endsWith(".graphml") || fileName.endsWith(".xml")))) {
    message("\nImporting GRAPHML database from " + fileName + " with options ("+ optionsAsString+ ")...");
    try {
      final OrientGraph g=new OrientGraph(currentDatabase);
      g.setUseLog(false);
      g.setWarnOnForceClosingTx(false);
      final long totalEdges=g.countEdges();
      final long totalVertices=g.countVertices();
      final File file=new File(fileName);
      if (!file.exists())       throw new ODatabaseImportException("Input file '" + fileName + "' not exists");
      InputStream is=new FileInputStream(file);
      if (fileName.endsWith(".zip"))       is=new ZipInputStream(is);
 else       if (fileName.endsWith(".gz"))       is=new GZIPInputStream(is);
      try {
        new OGraphMLReader(g).setOptions(options).setOutput(new OCommandOutputListener(){
          @Override public void onMessage(          final String iText){
            System.out.print("\r" + iText);
          }
        }
).inputGraph(is);
        g.commit();
        currentDatabase.commit();
        message("\nDone: imported %d vertices and %d edges",g.countVertices() - totalVertices,g.countEdges() - totalEdges);
      }
  finally {
        is.close();
      }
    }
 catch (    ODatabaseImportException e) {
      printError(e);
    }
  }
 else   if ((format != null && format.equalsIgnoreCase("graphson")) || (fileName != null && (fileName.endsWith(".graphson")))) {
    message("\nImporting GRAPHSON database from " + fileName + " with options ("+ optionsAsString+ ")...");
    try {
      final OrientGraph g=new OrientGraph(currentDatabase);
      g.setUseLog(false);
      g.setWarnOnForceClosingTx(false);
      final long totalEdges=g.countEdges();
      final long totalVertices=g.countVertices();
      final File file=new File(fileName);
      if (!file.exists())       throw new ODatabaseImportException("Input file '" + fileName + "' not exists");
      InputStream is=new FileInputStream(file);
      if (fileName.endsWith(".zip")) {
        is=new ZipInputStream(is);
      }
 else       if (fileName.endsWith(".gz")) {
        is=new GZIPInputStream(is);
      }
      try {
        new OGraphSONReader(g).setOutput(new OCommandOutputListener(){
          @Override public void onMessage(          final String iText){
            System.out.print("\r" + iText);
          }
        }
).inputGraph(is,10000);
        g.commit();
        currentDatabase.commit();
        message("\nDone: imported %d vertices and %d edges",g.countVertices() - totalVertices,g.countEdges() - totalEdges);
      }
  finally {
        is.close();
      }
    }
 catch (    ODatabaseImportException e) {
      printError(e);
    }
  }
 else   if (format == null)   super.importDatabase(text);
 else   throw new IllegalArgumentException("Format '" + format + "' is not supported");
}
