{
  if (iValue.length() == 0)   return null;
  String value=iValue.substring(1,iValue.length() - 1);
  @SuppressWarnings("rawtypes") Map map;
  if (iLinkedType == OType.LINK || iLinkedType == OType.EMBEDDED)   map=new ORecordLazyMap(iSourceDocument,ODocument.RECORD_TYPE);
 else   map=new OTrackedMap<Object>(iSourceDocument);
  if (value.length() == 0)   return map;
  final List<String> items=OStringSerializerHelper.smartSplit(value,OStringSerializerHelper.RECORD_SEPARATOR,true,false);
  if (map instanceof ORecordElement)   ((ORecordElement)map).setInternalStatus(STATUS.UNMARSHALLING);
  for (  String item : items) {
    if (item != null && !item.isEmpty()) {
      final List<String> entries=OStringSerializerHelper.smartSplit(item,OStringSerializerHelper.ENTRY_SEPARATOR,true,false);
      if (!entries.isEmpty()) {
        final Object mapValueObject;
        if (entries.size() > 1) {
          String mapValue=entries.get(1);
          final OType linkedType;
          if (iLinkedType == null)           if (!mapValue.isEmpty()) {
            linkedType=getType(mapValue);
            if ((iName == null || iSourceDocument.fieldType(iName) == null || iSourceDocument.fieldType(iName) != OType.EMBEDDEDMAP) && isConvertToLinkedMap(map,linkedType)) {
              map=new ORecordLazyMap(iSourceDocument,ODocument.RECORD_TYPE);
              ((ORecordElement)map).setInternalStatus(STATUS.UNMARSHALLING);
            }
 else             if (map instanceof ORecordLazyMap && linkedType != OType.LINK) {
              map=new OTrackedMap<Object>(iSourceDocument,map,null);
            }
          }
 else           linkedType=OType.EMBEDDED;
 else           linkedType=iLinkedType;
          if (linkedType == OType.EMBEDDED && mapValue.length() >= 2)           mapValue=mapValue.substring(1,mapValue.length() - 1);
          mapValueObject=fieldTypeFromStream(iSourceDocument,linkedType,mapValue);
          if (mapValueObject != null && mapValueObject instanceof ODocument)           ODocumentInternal.addOwner((ODocument)mapValueObject,iSourceDocument);
        }
 else         mapValueObject=null;
        final Object key=fieldTypeFromStream(iSourceDocument,OType.STRING,entries.get(0));
        try {
          map.put(key,mapValueObject);
        }
 catch (        ClassCastException e) {
          throw new OSerializationException("Cannot load map because the type was not the expected: key=" + key + "(type "+ key.getClass().toString()+ "), value="+ mapValueObject+ "(type "+ key.getClass()+ ")",e);
        }
      }
    }
  }
  if (map instanceof ORecordElement)   ((ORecordElement)map).setInternalStatus(STATUS.LOADED);
  return map;
}
