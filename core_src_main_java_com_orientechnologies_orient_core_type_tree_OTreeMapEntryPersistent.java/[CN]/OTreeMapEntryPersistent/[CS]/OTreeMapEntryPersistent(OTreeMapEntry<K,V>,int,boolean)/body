{
  super(iParent,iPosition,iLeft);
  pTree=(OTreeMapPersistent<K,V>)tree;
  parentRid=new ORecordId();
  leftRid=new ORecordId();
  rightRid=new ORecordId();
  record=new ORecordBytes();
  pageSize=pTree.getPageSize();
  serializedKeys=new byte[pageSize][];
  serializedValues=new byte[pageSize][];
  if (iLeft) {
    System.arraycopy(((OTreeMapEntryPersistent<K,V>)iParent).serializedKeys,0,serializedKeys,0,iPosition);
    System.arraycopy(((OTreeMapEntryPersistent<K,V>)iParent).serializedValues,0,serializedValues,0,iPosition);
  }
 else {
    System.arraycopy(((OTreeMapEntryPersistent<K,V>)iParent).serializedKeys,iPosition,serializedKeys,0,size);
    System.arraycopy(((OTreeMapEntryPersistent<K,V>)iParent).serializedValues,iPosition,serializedValues,0,size);
  }
  markDirty();
}
