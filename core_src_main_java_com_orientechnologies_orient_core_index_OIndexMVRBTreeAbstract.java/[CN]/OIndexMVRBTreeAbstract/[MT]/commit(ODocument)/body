{
  if (iDocument == null)   return;
  acquireExclusiveLock();
  try {
    map.setRunningTransaction(true);
    final Boolean clearAll=(Boolean)iDocument.field("clear");
    if (clearAll != null && clearAll)     clear();
    final Collection<ODocument> entries=iDocument.field("entries");
    for (    final ODocument entry : entries) {
      final String serializedKey=OStringSerializerHelper.decode((String)entry.field("k"));
      final Object key;
      if (serializedKey.startsWith("["))       key=new OCompositeKey((List<? extends Comparable<?>>)ORecordSerializerStringAbstract.fieldTypeFromStream(iDocument,OType.EMBEDDEDLIST,OStringSerializerHelper.decode(serializedKey)));
 else       key=ORecordSerializerStringAbstract.getTypeValue(serializedKey);
      final List<ODocument> operations=(List<ODocument>)entry.field("ops");
      if (operations != null) {
        for (        final ODocument op : operations) {
          final int operation=(Integer)op.rawField("o");
          final OIdentifiable value=op.field("v",OType.LINK);
          if (operation == OPERATION.PUT.ordinal())           put(key,value);
 else           if (operation == OPERATION.REMOVE.ordinal()) {
            if (key.equals("*"))             remove(value);
 else             if (value == null)             remove(key);
 else             remove(key,value);
          }
        }
      }
    }
  }
  finally {
    releaseExclusiveLock();
    map.setRunningTransaction(false);
  }
}
