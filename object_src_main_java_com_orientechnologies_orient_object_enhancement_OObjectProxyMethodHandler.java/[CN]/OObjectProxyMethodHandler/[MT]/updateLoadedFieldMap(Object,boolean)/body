{
  final Set<String> fields=new HashSet<String>(loadedFields.keySet());
  for (  String fieldName : fields) {
    try {
      if (iReload) {
        final Field f=OObjectEntitySerializer.getField(fieldName,proxiedObject.getClass());
        OObjectEntitySerializer.setFieldValue(f,proxiedObject,null);
      }
 else {
        final Object value=getValue(proxiedObject,fieldName,false,null);
        if (value instanceof OObjectLazyMultivalueElement) {
          if (((OObjectLazyMultivalueElement<?>)value).getUnderlying() != doc.field(fieldName))           loadedFields.remove(fieldName);
        }
 else {
          loadedFields.put(fieldName,doc.getRecordVersion().copy());
        }
      }
    }
 catch (    IllegalArgumentException e) {
      throw new OSerializationException("Error updating object after save of class " + proxiedObject.getClass(),e);
    }
catch (    IllegalAccessException e) {
      throw new OSerializationException("Error updating object after save of class " + proxiedObject.getClass(),e);
    }
catch (    NoSuchMethodException e) {
      throw new OSerializationException("Error updating object after save of class " + proxiedObject.getClass(),e);
    }
catch (    InvocationTargetException e) {
      throw new OSerializationException("Error updating object after save of class " + proxiedObject.getClass(),e);
    }
  }
  if (iReload)   loadedFields.clear();
}
