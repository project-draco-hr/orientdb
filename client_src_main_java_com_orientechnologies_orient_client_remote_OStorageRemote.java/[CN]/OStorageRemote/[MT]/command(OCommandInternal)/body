{
  checkConnection();
  if (!(iCommand instanceof OSerializableStream))   throw new OQueryExecutionException("Can't serialize the command to being executed to the server side.");
  OSerializableStream command=(OSerializableStream)iCommand;
  Object result=null;
  do {
    boolean locked=acquireExclusiveLock();
    OStorageRemoteThreadLocal.INSTANCE.set(Boolean.TRUE);
    try {
      network.writeByte(OChannelBinaryProtocol.COMMAND);
      network.writeBytes(OStreamSerializerAnyStreamable.INSTANCE.toStream(command));
      network.flush();
      readStatus();
      result=OStreamSerializerAnyRuntime.INSTANCE.fromStream(network.readBytes());
      break;
    }
 catch (    Exception e) {
      if (handleException("Error on executing command: " + command,e))       break;
    }
 finally {
      OStorageRemoteThreadLocal.INSTANCE.set(Boolean.FALSE);
      releaseExclusiveLock(locked);
    }
  }
 while (true);
  return result;
}
