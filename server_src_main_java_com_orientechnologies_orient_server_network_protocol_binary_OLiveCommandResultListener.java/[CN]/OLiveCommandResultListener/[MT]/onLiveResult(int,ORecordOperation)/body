{
  boolean sendFail=true;
  do {
    List<OClientConnection> connections=session.getConnections();
    if (connections.size() == 0) {
      try {
        ODatabaseDocumentInternal db=ODatabaseRecordThreadLocal.INSTANCE.get();
        OLogManager.instance().warn(this,"Unsubscribing live query for connection " + connection);
        OLiveQueryHook.unsubscribe(iToken,db);
      }
 catch (      Exception e) {
        OLogManager.instance().warn(this,"Unsubscribing live query for connection " + connection,e);
      }
      break;
    }
    OClientConnection curConnection=connections.get(0);
    ONetworkProtocolBinary protocol=(ONetworkProtocolBinary)curConnection.getProtocol();
    OChannelBinary channel=protocol.getChannel();
    try {
      channel.acquireWriteLock();
      try {
        ByteArrayOutputStream content=new ByteArrayOutputStream();
        DataOutputStream out=new DataOutputStream(content);
        out.writeByte('r');
        out.writeByte(iOp.type);
        out.writeInt(iToken);
        out.writeByte(ORecordInternal.getRecordType(iOp.getRecord()));
        writeVersion(out,iOp.getRecord().getVersion());
        writeRID(out,(ORecordId)iOp.getRecord().getIdentity());
        writeBytes(out,protocol.getRecordBytes(connection,iOp.getRecord()));
        channel.writeByte(OChannelBinaryProtocol.PUSH_DATA);
        channel.writeInt(Integer.MIN_VALUE);
        channel.writeByte(OChannelBinaryProtocol.REQUEST_PUSH_LIVE_QUERY);
        channel.writeBytes(content.toByteArray());
        channel.flush();
      }
  finally {
        channel.releaseWriteLock();
      }
      sendFail=false;
    }
 catch (    IOException e) {
      session.removeConnection(curConnection);
      connections=session.getConnections();
      if (connections.isEmpty()) {
        OLiveQueryHook.unsubscribe(iToken,connection.getDatabase());
        break;
      }
    }
catch (    Exception e) {
      OLogManager.instance().warn(this,"Cannot push cluster configuration to the client %s",e,protocol.getRemoteAddress());
      protocol.getServer().getClientConnectionManager().disconnect(protocol.getServer(),connection);
      OLiveQueryHook.unsubscribe(iToken,connection.getDatabase());
      break;
    }
  }
 while (sendFail);
}
