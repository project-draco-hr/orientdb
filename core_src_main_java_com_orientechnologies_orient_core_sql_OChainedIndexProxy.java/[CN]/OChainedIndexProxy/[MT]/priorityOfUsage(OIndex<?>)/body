{
  if (index == null)   return -1;
  final OClass.INDEX_TYPE indexType=OClass.INDEX_TYPE.valueOf(index.getType());
  final boolean isComposite=isComposite(index);
  final boolean supportNullValues=supportNullValues(index);
  int priority=1;
  if (isComposite) {
    if (!supportNullValues)     return -1;
  }
 else {
    priority+=10;
  }
switch (indexType) {
case UNIQUE_HASH_INDEX:
case NOTUNIQUE_HASH_INDEX:
    if (isComposite)     return -1;
 else     priority+=10;
  break;
case UNIQUE:
case NOTUNIQUE:
priority+=5;
break;
case PROXY:
case FULLTEXT:
case DICTIONARY:
case FULLTEXT_HASH_INDEX:
case DICTIONARY_HASH_INDEX:
case SPATIAL:
return -1;
}
return priority;
}
