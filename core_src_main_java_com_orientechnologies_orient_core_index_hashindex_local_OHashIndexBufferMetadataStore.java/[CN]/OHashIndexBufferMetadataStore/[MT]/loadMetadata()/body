{
  final int len=file.readInt(0);
  final OHashIndexFileLevelMetadata[] metadatas=new OHashIndexFileLevelMetadata[64];
  final int bufferSize=file.readInt(OIntegerSerializer.INT_SIZE);
  final byte[] buffer=new byte[bufferSize];
  file.read(2 * OIntegerSerializer.INT_SIZE,buffer,buffer.length);
  int offset=0;
  for (int i=0; i < len; i++) {
    final String name=OStringSerializer.INSTANCE.deserializeNative(buffer,offset);
    offset+=OStringSerializer.INSTANCE.getObjectSize(name);
    final String fileType=OStringSerializer.INSTANCE.deserializeNative(buffer,offset);
    offset+=OStringSerializer.INSTANCE.getObjectSize(fileType);
    final String fileMaxSize=OStringSerializer.INSTANCE.deserializeNative(buffer,offset);
    offset+=OStringSerializer.INSTANCE.getObjectSize(fileMaxSize);
    final String fileIncrementSize=OStringSerializer.INSTANCE.deserializeNative(buffer,offset);
    offset+=OStringSerializer.INSTANCE.getObjectSize(fileIncrementSize);
    final int id=OIntegerSerializer.INSTANCE.deserializeNative(buffer,offset);
    offset+=OIntegerSerializer.INT_SIZE;
    final int infoFilesLength=OIntegerSerializer.INSTANCE.deserializeNative(buffer,offset);
    offset+=OIntegerSerializer.INT_SIZE;
    final OStorageFileConfiguration[] infoFiles=new OStorageFileConfiguration[infoFilesLength];
    for (int n=0; n < infoFiles.length; n++) {
      final String incrementSize=OStringSerializer.INSTANCE.deserializeNative(buffer,offset);
      offset+=OStringSerializer.INSTANCE.getObjectSize(incrementSize);
      String path=OStringSerializer.INSTANCE.deserializeNative(buffer,offset);
      offset+=OStringSerializer.INSTANCE.getObjectSize(path);
      if (path.isEmpty())       path=null;
      String maxSize=OStringSerializer.INSTANCE.deserializeNative(buffer,offset);
      offset+=OStringSerializer.INSTANCE.getObjectSize(maxSize);
      if (maxSize.isEmpty())       maxSize=null;
      final OStorageFileConfiguration storageFileConfiguration=new OStorageFileConfiguration();
      storageFileConfiguration.incrementSize=incrementSize;
      storageFileConfiguration.path=path;
      storageFileConfiguration.type=fileType;
      storageFileConfiguration.maxSize=maxSize;
      infoFiles[n]=storageFileConfiguration;
    }
    final long bucketsCount=OLongSerializer.INSTANCE.deserializeNative(buffer,offset);
    offset+=OLongSerializer.LONG_SIZE;
    final long tombstone=OLongSerializer.INSTANCE.deserializeNative(buffer,offset);
    offset+=OLongSerializer.LONG_SIZE;
    final OStorageSegmentConfiguration fileConfiguration=new OStorageSegmentConfiguration(storage.getConfiguration(),name,id);
    fileConfiguration.fileType=fileType;
    fileConfiguration.infoFiles=infoFiles;
    fileConfiguration.fileMaxSize=fileMaxSize;
    fileConfiguration.fileIncrementSize=fileIncrementSize;
    final OHashIndexFileLevelMetadata metadata=new OHashIndexFileLevelMetadata(fileConfiguration,bucketsCount,tombstone);
    metadatas[i]=metadata;
  }
  return metadatas;
}
