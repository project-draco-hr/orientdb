{
  final OMVRBTreeEntry<Object,V> firstEntry;
  if (fromInclusive)   firstEntry=map.getHigherEntry(rangeFrom);
 else   firstEntry=map.getCeilingEntry(rangeFrom,OMVRBTree.PartialSearchMode.HIGHEST_BOUNDARY);
  if (firstEntry == null)   return;
  final int firstEntryIndex=map.getPageIndex();
  final OMVRBTreeEntry<Object,V> lastEntry;
  if (toInclusive)   lastEntry=map.getCeilingEntry(rangeTo,OMVRBTree.PartialSearchMode.HIGHEST_BOUNDARY);
 else   lastEntry=map.getLowerEntry(rangeTo);
  final int lastEntryIndex;
  if (lastEntry != null)   lastEntryIndex=map.getPageIndex();
 else   lastEntryIndex=-1;
  OMVRBTreeEntry<Object,V> entry=lastEntry;
  map.setPageIndex(lastEntryIndex);
  while (entry != null && !(entry.equals(firstEntry) && map.getPageIndex() == firstEntryIndex)) {
    final V value=entry.getValue();
    boolean cont=addToResult(transformer,valuesResultListener,value);
    if (!cont)     return;
    entry=OMVRBTree.previous(entry);
  }
}
