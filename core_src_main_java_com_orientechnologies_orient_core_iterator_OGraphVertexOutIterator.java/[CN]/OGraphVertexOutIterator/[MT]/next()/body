{
  final OGraphVertex result=current;
  if (current != null) {
    if (current.hasOutEdges()) {
      stack.push(current.clone());
      current=current.getOutEdgeVertex(0,current);
      currentDeepLevel++;
      if (currentDeepLevel > maxDeepLevel)       maxDeepLevel=currentDeepLevel;
    }
 else {
      int prevPosition;
      OGraphVertex previous;
      while (!stack.isEmpty()) {
        previous=stack.peek();
        prevPosition=previous.findOutVertex(current);
        currentDeepLevel--;
        if (prevPosition == -1)         throw new ConcurrentModificationException("Vertex " + previous + " has been removed while iterating");
        if (prevPosition < previous.getOutEdgeCount() - 1) {
          current=previous.getOutEdgeVertex(prevPosition + 1,current);
          break;
        }
        current=previous;
        stack.pop();
      }
    }
  }
  count++;
  return result;
}
