{
  database=OObjectDatabasePool.global().acquire(url,"admin","admin");
  try {
    JavaComplexTestClass testEnum1=database.newInstance(JavaComplexTestClass.class);
    testEnum1.setName("Silvester");
    JavaComplexTestClass testEnum2=database.newInstance(JavaComplexTestClass.class);
    testEnum1.setName("Silvester");
    testEnum1.setEnumField(EnumTest.ENUM1);
    testEnum1.getEnumList().add(EnumTest.ENUM1);
    testEnum1.getEnumList().add(EnumTest.ENUM2);
    testEnum1.getEnumSet().add(EnumTest.ENUM1);
    testEnum1.getEnumSet().add(EnumTest.ENUM3);
    testEnum1.getEnumMap().put("1",EnumTest.ENUM2);
    testEnum1.getEnumMap().put("2",EnumTest.ENUM3);
    testEnum2.setEnumField(EnumTest.ENUM2);
    testEnum2.getEnumList().add(EnumTest.ENUM2);
    testEnum2.getEnumList().add(EnumTest.ENUM3);
    testEnum2.getEnumSet().add(EnumTest.ENUM1);
    testEnum2.getEnumSet().add(EnumTest.ENUM2);
    database.save(testEnum1);
    database.save(testEnum2);
    ORID enum1Rid=database.getIdentity(testEnum1);
    ORID enum2Rid=database.getIdentity(testEnum2);
    OSQLSynchQuery<JavaComplexTestClass> enumFieldQuery=new OSQLSynchQuery<JavaComplexTestClass>("select from JavaComplexTestClass where enumField = :enumField");
    Map<String,Object> enum1Config=new HashMap<String,Object>();
    Map<String,Object> enum2Config=new HashMap<String,Object>();
    enum1Config.put("enumField",EnumTest.ENUM1);
    enum2Config.put("enumField",EnumTest.ENUM2);
    List<JavaComplexTestClass> result=database.query(enumFieldQuery,enum1Config);
    Assert.assertEquals(result.size(),1);
    Assert.assertEquals(database.getIdentity(result.get(0)).getIdentity(),enum1Rid);
    result=database.query(enumFieldQuery,enum2Config);
    Assert.assertEquals(result.size(),1);
    Assert.assertEquals(database.getIdentity(result.get(0)).getIdentity(),enum2Rid);
    database.close();
    database=OObjectDatabasePool.global().acquire(url,"admin","admin");
    result=database.query(enumFieldQuery,enum1Config);
    Assert.assertEquals(result.size(),1);
    Assert.assertEquals(database.getIdentity(result.get(0)).getIdentity(),enum1Rid);
    result=database.query(enumFieldQuery,enum2Config);
    Assert.assertEquals(result.size(),1);
    Assert.assertEquals(database.getIdentity(result.get(0)).getIdentity(),enum2Rid);
  }
  finally {
    database.close();
  }
}
