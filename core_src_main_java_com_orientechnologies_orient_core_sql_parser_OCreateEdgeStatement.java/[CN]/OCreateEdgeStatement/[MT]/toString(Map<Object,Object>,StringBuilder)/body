{
  builder.append("CREATE EDGE");
  if (targetClass != null) {
    builder.append(" ");
    targetClass.toString(params,builder);
    if (targetClusterName != null) {
      builder.append(" CLUSTER ");
      targetClusterName.toString(params,builder);
    }
  }
  builder.append(" FROM ");
  if (leftRid != null) {
    leftRid.toString(params,builder);
  }
 else   if (leftRids != null) {
    builder.append("[");
    boolean first=true;
    for (    ORid rid : leftRids) {
      if (!first) {
        builder.append(", ");
      }
      rid.toString(params,builder);
      first=false;
    }
    builder.append("]");
  }
 else   if (leftStatement != null) {
    builder.append("(");
    leftStatement.toString(params,builder);
    builder.append(")");
  }
 else   if (leftParam != null) {
    leftParam.toString(params,builder);
  }
 else   if (leftIdentifier != null) {
    leftIdentifier.toString(params,builder);
  }
  builder.append(" TO ");
  if (rightRid != null) {
    rightRid.toString(params,builder);
  }
 else   if (rightRids != null) {
    builder.append("[");
    boolean first=true;
    for (    ORid rid : rightRids) {
      if (!first) {
        builder.append(", ");
      }
      rid.toString(params,builder);
      first=false;
    }
    builder.append("]");
  }
 else   if (rightStatement != null) {
    builder.append("(");
    rightStatement.toString(params,builder);
    builder.append(")");
  }
 else   if (rightParam != null) {
    rightParam.toString(params,builder);
  }
 else   if (rightIdentifier != null) {
    rightIdentifier.toString(params,builder);
  }
  if (body != null) {
    builder.append(" ");
    body.toString(params,builder);
  }
  if (retry != null) {
    builder.append(" RETRY ");
    builder.append(retry);
  }
  if (wait != null) {
    builder.append(" WAIT ");
    builder.append(wait);
  }
}
