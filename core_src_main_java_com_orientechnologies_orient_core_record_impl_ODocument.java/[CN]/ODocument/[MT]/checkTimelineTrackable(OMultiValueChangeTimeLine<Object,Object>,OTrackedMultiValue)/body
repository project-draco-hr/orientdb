{
  List<OMultiValueChangeEvent<Object,Object>> events=timeLine.getMultiValueChangeEvents();
  for (  OMultiValueChangeEvent<Object,Object> event : events) {
    Object value=event.getValue();
    if (event.getChangeType() == OMultiValueChangeEvent.OChangeType.ADD && !(value instanceof OTrackedMultiValue)) {
      if (value instanceof Collection) {
        Collection<Object> newCollection=value instanceof List ? new OTrackedList<Object>(this) : new OTrackedSet<Object>(this);
        fillTrackedCollection(newCollection,(Collection<Object>)value);
        origin.replace(event,newCollection);
      }
 else       if (value instanceof Map) {
        Map<Object,Object> newMap=new OTrackedMap<Object>(this);
        fillTrackedMap(newMap,(Map<Object,Object>)value);
        origin.replace(event,newMap);
      }
    }
 else     if (event.getChangeType() == OMultiValueChangeEvent.OChangeType.NESTED) {
      OMultiValueChangeTimeLine nestedTimeline=((ONestedMultiValueChangeEvent)event).getTimeLine();
      if (nestedTimeline != null)       checkTimelineTrackable(nestedTimeline,(OTrackedMultiValue)value);
    }
  }
}
