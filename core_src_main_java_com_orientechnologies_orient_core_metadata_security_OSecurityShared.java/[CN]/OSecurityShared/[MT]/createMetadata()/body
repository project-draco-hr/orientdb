{
  final ODatabaseDocument database=getDatabase();
  OClass identityClass=database.getMetadata().getSchema().getClass(IDENTITY_CLASSNAME);
  if (identityClass == null)   identityClass=database.getMetadata().getSchema().createAbstractClass(IDENTITY_CLASSNAME);
  OClass roleClass=createOrUpdateORoleClass(database,identityClass);
  createOrUpdateOUserClass(database,identityClass,roleClass);
  ORole adminRole=getRole(ORole.ADMIN,false);
  if (adminRole == null) {
    adminRole=createRole(ORole.ADMIN,ORole.ALLOW_MODES.ALLOW_ALL_BUT);
    adminRole.addRule(ORule.ResourceGeneric.BYPASS_RESTRICTED,null,ORole.PERMISSION_ALL).save();
  }
  OUser adminUser=getUser(OUser.ADMIN,false);
  if (adminUser == null)   adminUser=createUser(OUser.ADMIN,OUser.ADMIN,adminRole);
  createOrUpdateORestrictedClass(database);
  return adminUser;
}
