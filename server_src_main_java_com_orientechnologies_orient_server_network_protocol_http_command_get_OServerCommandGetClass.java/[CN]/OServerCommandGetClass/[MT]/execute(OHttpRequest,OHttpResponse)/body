{
  String[] urlParts=checkSyntax(iRequest.url,3,"Syntax error: class/<database>/<class-name>");
  iRequest.data.commandInfo="Returns the information of a class in the schema";
  iRequest.data.commandDetail=urlParts[2];
  ODatabaseDocumentTx db=null;
  try {
    db=getProfiledDatabaseInstance(iRequest);
    if (db.getMetadata().getSchema().existsClass(urlParts[2])) {
      final OClass cls=db.getMetadata().getSchema().getClass(urlParts[2]);
      final StringWriter buffer=new StringWriter();
      final OJSONWriter json=new OJSONWriter(buffer,OHttpResponse.JSON_FORMAT);
      OServerCommandGetDatabase.exportClass(db,json,cls);
      iResponse.send(OHttpUtils.STATUS_OK_CODE,"OK",OHttpUtils.CONTENT_JSON,buffer.toString(),null);
    }
 else     iResponse.send(OHttpUtils.STATUS_NOTFOUND_CODE,null,null,null,null);
  }
  finally {
    if (db != null)     db.close();
  }
  return false;
}
