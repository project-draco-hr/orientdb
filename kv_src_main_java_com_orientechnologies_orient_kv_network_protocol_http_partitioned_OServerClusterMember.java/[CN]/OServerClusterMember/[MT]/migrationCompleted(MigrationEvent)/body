{
  OLogManager.instance().debug(this,"OrientDB KV Server migration completed for partition %d from %s to %s",iEvent.getPartitionId(),iEvent.getOldOwner(),iEvent.getNewOwner());
  final int partitionId=iEvent.getPartitionId();
  if (!iEvent.getNewOwner().equals(Hazelcast.getCluster().getLocalMember()))   return;
  String parts[];
  Map<String,String> bucketMap;
  for (  Instance instance : Hazelcast.getInstances()) {
    if (instance.getInstanceType() == InstanceType.MAP) {
      IMap<String,String> map=(IMap<String,String>)instance;
      PartitionService partitionService=Hazelcast.getPartitionService();
      Set<String> localKeys=map.localKeySet();
      for (      String localKey : localKeys) {
        if (partitionService.getPartition(localKey).getPartitionId() == partitionId) {
          try {
            parts=OKVServerCommandAbstract.getDbBucketKey(localKey,3);
            ODatabaseBinary db=OSharedBinaryDatabaseDistributed.acquireDatabase(parts[0]);
            bucketMap=OKVDictionaryBucketManager.getDictionaryBucket(db,parts[1],false);
synchronized (bucketMap) {
              bucketMap.put(localKey,map.get(localKey));
            }
            OLogManager.instance().debug(this,"Caught failure of node '%s'. Save entry with key '%s' on local node",iEvent.getOldOwner().getInetSocketAddress(),localKey);
          }
 catch (          Exception e) {
            throw new OKVDistributedException("Error on saving record: " + localKey,e);
          }
        }
      }
    }
  }
}
