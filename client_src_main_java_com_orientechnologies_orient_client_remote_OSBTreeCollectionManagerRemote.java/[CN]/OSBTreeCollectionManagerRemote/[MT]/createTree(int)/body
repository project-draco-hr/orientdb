{
  if (remoteCreationAllowed) {
    final OStorageRemote storage=(OStorageRemote)ODatabaseRecordThreadLocal.INSTANCE.get().getStorage().getUnderlying();
    return storage.networkOperation(new OStorageRemoteOperation<OSBTreeBonsaiRemote<OIdentifiable,Integer>>(){
      @Override public OSBTreeBonsaiRemote<OIdentifiable,Integer> execute(      final OChannelBinaryAsynchClient client,      OStorageRemoteSession session) throws IOException {
        try {
          storage.beginRequest(client,OChannelBinaryProtocol.REQUEST_CREATE_SBTREE_BONSAI,session);
          client.writeInt(clusterId);
        }
  finally {
          storage.endRequest(client);
        }
        OBonsaiCollectionPointer pointer;
        try {
          storage.beginResponse(client,session);
          pointer=networkSerializer.readCollectionPointer(client);
        }
  finally {
          storage.endResponse(client);
        }
        OBinarySerializer<OIdentifiable> keySerializer=OLinkSerializer.INSTANCE;
        OBinarySerializer<Integer> valueSerializer=OIntegerSerializer.INSTANCE;
        return new OSBTreeBonsaiRemote<OIdentifiable,Integer>(pointer,keySerializer,valueSerializer);
      }
    }
,"Cannot create sb-tree bonsai");
  }
 else {
    throw new UnsupportedOperationException("Creation of SB-Tree from remote storage is not allowed");
  }
}
