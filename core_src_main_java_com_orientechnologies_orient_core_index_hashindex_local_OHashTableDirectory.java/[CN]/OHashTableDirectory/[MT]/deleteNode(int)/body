{
  final OAtomicOperation atomicOperation=startAtomicOperation();
  acquireExclusiveLock();
  try {
    OCacheEntry firstEntry=loadPage(atomicOperation,fileId,firstEntryIndex,true,diskCache);
    firstEntry.acquireExclusiveLock();
    try {
      ODirectoryFirstPage firstPage=new ODirectoryFirstPage(firstEntry,getChangesTree(atomicOperation,firstEntry),firstEntry);
      if (nodeIndex < ODirectoryFirstPage.NODES_PER_PAGE) {
        firstPage.setPointer(nodeIndex,0,firstPage.getTombstone());
        firstPage.setTombstone(nodeIndex);
      }
 else {
        final int pageIndex=nodeIndex / ODirectoryPage.NODES_PER_PAGE;
        final int localNodeIndex=nodeIndex % ODirectoryPage.NODES_PER_PAGE;
        final OCacheEntry cacheEntry=loadPage(atomicOperation,fileId,pageIndex,true,diskCache);
        cacheEntry.acquireExclusiveLock();
        try {
          ODirectoryPage page=new ODirectoryPage(cacheEntry,getChangesTree(atomicOperation,cacheEntry),cacheEntry);
          page.setPointer(localNodeIndex,0,firstPage.getTombstone());
          firstPage.setTombstone(nodeIndex);
        }
  finally {
          cacheEntry.releaseExclusiveLock();
          releasePage(atomicOperation,cacheEntry,diskCache);
        }
      }
    }
  finally {
      firstEntry.releaseExclusiveLock();
      releasePage(atomicOperation,firstEntry,diskCache);
    }
    endAtomicOperation(false);
  }
 catch (  IOException e) {
    endAtomicOperation(true);
    throw e;
  }
catch (  Throwable e) {
    endAtomicOperation(true);
    throw new OStorageException(null,e);
  }
 finally {
    releaseExclusiveLock();
  }
}
