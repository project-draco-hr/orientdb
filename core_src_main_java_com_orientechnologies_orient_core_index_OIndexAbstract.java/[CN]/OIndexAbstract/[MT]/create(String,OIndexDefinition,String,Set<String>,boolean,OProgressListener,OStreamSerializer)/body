{
  acquireExclusiveLock();
  try {
    this.name=name;
    configuration.set(new ODocument().setTrackingChanges(false));
    this.indexDefinition=indexDefinition;
    if (clustersToIndex != null)     this.clustersToIndex=new HashSet<String>(clustersToIndex);
 else     this.clustersToIndex=new HashSet<String>();
    markStorageDirty();
    try {
      indexEngine.deleteWithoutLoad(name);
      removeValuesContainer();
    }
 catch (    Exception e) {
      OLogManager.instance().error(this,"Error during deletion of index %s .",name);
    }
    indexEngine.create(this.name,indexDefinition,clusterIndexName,valueSerializer,isAutomatic());
    if (rebuild)     rebuild(progressListener);
    updateConfiguration();
  }
 catch (  Exception e) {
    OLogManager.instance().error(this,"Exception during index %s creation.",e,name);
    try {
      indexEngine.delete();
    }
 catch (    Exception ex) {
      OLogManager.instance().error(this,"Exception during index %s deletion.",ex,name);
    }
    if (e instanceof OIndexException)     throw (OIndexException)e;
    throw new OIndexException("Cannot create the index '" + name + "'",e);
  }
 finally {
    releaseExclusiveLock();
  }
  return this;
}
