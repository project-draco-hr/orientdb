{
  if (treeCache.size() <= CACHE_MAX_SIZE)   return;
  Iterator<OBonsaiBucketPointer> iterator=treeCache.keySet().iterator();
  while (treeCache.size() > CACHE_MAX_SIZE - eviction_threshold && iterator.hasNext()) {
    final OBonsaiBucketPointer rootPointer=iterator.next();
    final Object treeLock=treesSubsetLock(rootPointer);
synchronized (treeLock) {
      SBTreeBonsaiContainer container=treeCache.get(rootPointer);
      if (container != null && container.usagesCounter == 0)       treeCache.remove(rootPointer);
    }
  }
}
