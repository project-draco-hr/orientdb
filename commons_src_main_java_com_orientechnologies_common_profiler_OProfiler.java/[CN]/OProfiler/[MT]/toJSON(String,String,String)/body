{
  final StringBuilder buffer=new StringBuilder();
  Map<String,Object> hookValuesSnapshots=null;
  if (iQuery.equalsIgnoreCase("reset")) {
    if (iPar1 == null) {
      stopRecording();
      startRecording();
      return "Profiler restarted";
    }
 else {
      if (iPar1.equals("realtime")) {
        realTime.clear(iPar2);
        return "Profiler realtime reset";
      }
    }
  }
  if (iQuery.equals("realtime"))   hookValuesSnapshots=archiveHooks();
  buffer.append("{ \"" + iQuery + "\":");
  acquireSharedLock();
  try {
    if (iQuery.equals("realtime")) {
      realTime.setHookValues(hookValuesSnapshots);
      realTime.toJSON(buffer,iPar1);
    }
 else     if (iQuery.equals("last")) {
      if (lastSnapshot != null)       lastSnapshot.toJSON(buffer,iPar1);
    }
 else {
      if (iPar1 == null || iPar2 == null)       throw new IllegalArgumentException("Invalid range format. Use: <from> <to>, where * means any");
      final long from=iPar1.equals("*") ? 0 : Long.parseLong(iPar1);
      final long to=iPar2.equals("*") ? Long.MAX_VALUE : Long.parseLong(iPar2);
      boolean firstItem=true;
      buffer.append("[");
      if (iQuery.equals("archive")) {
        for (int i=0; i < snapshots.size(); ++i) {
          final OProfilerData a=snapshots.get(i);
          if (a.isInRange(from,to)) {
            if (firstItem)             firstItem=false;
 else             buffer.append(',');
            a.toJSON(buffer,null);
          }
        }
      }
 else       if (iQuery.equals("summary")) {
        for (int i=0; i < summaries.size(); ++i) {
          final OProfilerData a=summaries.get(i);
          if (a.isInRange(from,to)) {
            if (firstItem)             firstItem=false;
 else             buffer.append(',');
            a.toJSON(buffer,iPar1);
          }
        }
      }
 else       throw new IllegalArgumentException("Invalid archive query: use realtime|last|archive|summary");
      buffer.append("]");
    }
    buffer.append("}");
  }
  finally {
    releaseSharedLock();
  }
  return buffer.toString();
}
