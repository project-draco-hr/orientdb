{
  builder.append("DELETE EDGE");
  if (className != null) {
    builder.append(" ");
    className.toString(params,builder);
    if (targetClusterName != null) {
      builder.append(" CLUSTER ");
      targetClusterName.toString(params,builder);
    }
  }
  if (rid != null) {
    builder.append(" ");
    rid.toString(params,builder);
  }
  if (rids != null) {
    builder.append(" [");
    boolean first=true;
    for (    ORid rid : rids) {
      if (!first) {
        builder.append(", ");
      }
      rid.toString(params,builder);
      first=false;
    }
    builder.append("]");
  }
  if (leftRid != null || leftRids != null || leftStatement != null || leftParam != null || leftIdentifier != null) {
    builder.append(" FROM ");
    if (leftRid != null) {
      leftRid.toString(params,builder);
    }
 else     if (leftRids != null) {
      builder.append("[");
      boolean first=true;
      for (      ORid rid : leftRids) {
        if (!first) {
          builder.append(", ");
        }
        rid.toString(params,builder);
        first=false;
      }
      builder.append("]");
    }
 else     if (leftStatement != null) {
      builder.append("(");
      leftStatement.toString(params,builder);
      builder.append(")");
    }
 else     if (leftParam != null) {
      leftParam.toString(params,builder);
    }
 else     if (leftIdentifier != null) {
      leftIdentifier.toString(params,builder);
    }
  }
  if (rightRid != null || rightRids != null || rightStatement != null || rightParam != null || rightIdentifier != null) {
    builder.append(" TO ");
    if (rightRid != null) {
      rightRid.toString(params,builder);
    }
 else     if (rightRids != null) {
      builder.append("[");
      boolean first=true;
      for (      ORid rid : rightRids) {
        if (!first) {
          builder.append(", ");
        }
        rid.toString(params,builder);
        first=false;
      }
      builder.append("]");
    }
 else     if (rightStatement != null) {
      builder.append("(");
      rightStatement.toString(params,builder);
      builder.append(")");
    }
 else     if (rightParam != null) {
      rightParam.toString(params,builder);
    }
 else     if (rightIdentifier != null) {
      rightIdentifier.toString(params,builder);
    }
  }
  if (whereClause != null) {
    builder.append(" WHERE ");
    whereClause.toString(params,builder);
  }
  if (limit != null) {
    limit.toString(params,builder);
  }
  if (batch != null) {
    batch.toString(params,builder);
  }
}
