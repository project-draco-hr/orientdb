{
  final String[] urlParts=checkSyntax(iRequest.url,3,"Syntax error: command/<database>/<language>/<command-text>[/limit][/<fetchPlan>]");
  final String language=urlParts.length > 2 ? urlParts[2].trim() : "sql";
  String text=urlParts.length > 3 ? urlParts[3].trim() : iRequest.content;
  final int limit=urlParts.length > 4 ? Integer.parseInt(urlParts[4].trim()) : -1;
  String fetchPlan=urlParts.length > 5 ? urlParts[5] : null;
  final String accept=iRequest.getHeader("accept");
  if (iRequest.content != null)   text=iRequest.content;
  if (text == null)   throw new IllegalArgumentException("text cannot be null");
  iRequest.data.commandInfo="Command";
  iRequest.data.commandDetail=text;
  ODatabaseDocumentTx db=null;
  Object response;
  try {
    db=getProfiledDatabaseInstance(iRequest);
    final OCommandRequestText cmd=(OCommandRequestText)OCommandManager.instance().getRequester(language);
    cmd.setText(text);
    cmd.setLimit(limit);
    cmd.setFetchPlan(fetchPlan);
    final OCommandExecutor executor=OCommandManager.instance().getExecutor(cmd);
    executor.setContext(cmd.getContext());
    executor.setProgressListener(cmd.getProgressListener());
    executor.parse(cmd);
    if (!executor.isIdempotent() && iRequest.httpMethod.equals("GET"))     throw new OCommandExecutionException("Cannot execute non idempotent command using HTTP GET");
    response=db.command(cmd).execute();
    fetchPlan=executor.getFetchPlan();
    String format=null;
    if (iRequest.parameters.get("format") != null)     format=iRequest.parameters.get("format");
    if (fetchPlan != null)     if (format != null)     format+=",fetchPlan:" + fetchPlan;
 else     format="fetchPlan:" + fetchPlan;
    iResponse.writeResult(response,format,accept);
  }
  finally {
    if (db != null)     db.close();
  }
  return false;
}
