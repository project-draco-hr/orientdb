{
  checkIfActive();
  localCache.shutdown();
  if (isClosed()) {
    status=STATUS.CLOSED;
    return;
  }
  try {
    commit(true);
  }
 catch (  Exception e) {
    OLogManager.instance().error(this,"Exception during commit of active transaction",e);
  }
  if (status != STATUS.OPEN)   return;
  callOnCloseListeners();
  if (currentIntent != null) {
    currentIntent.end(this);
    currentIntent=null;
  }
  status=STATUS.CLOSED;
  localCache.clear();
  if (!keepStorageOpen && storage != null)   storage.close();
  ODatabaseRecordThreadLocal.INSTANCE.remove();
  final Thread current=Thread.currentThread();
  final Thread o=owner.get();
  if (o == null) {
    throw new IllegalStateException("Database is going to be closed but was not opened");
  }
  if (o != current || !owner.compareAndSet(current,null)) {
    throw new IllegalStateException("Database was opened in other thread `" + o.getName() + "' thread but closed in `"+ current.getName()+ "' thread");
  }
}
