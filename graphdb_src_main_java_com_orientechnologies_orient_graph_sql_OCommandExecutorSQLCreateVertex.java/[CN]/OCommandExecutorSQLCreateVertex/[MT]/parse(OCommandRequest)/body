{
  final OCommandRequestText textRequest=(OCommandRequestText)iRequest;
  String queryText=textRequest.getText();
  String originalQuery=queryText;
  try {
    queryText=preParse(queryText,iRequest);
    textRequest.setText(queryText);
    final ODatabaseDocument database=getDatabase();
    init((OCommandRequestText)iRequest);
    String className=null;
    parserRequiredKeyword("CREATE");
    parserRequiredKeyword("VERTEX");
    String temp=parseOptionalWord(true);
    while (temp != null) {
      if (temp.equals("CLUSTER")) {
        clusterName=parserRequiredWord(false);
      }
 else       if (temp.equals(KEYWORD_SET)) {
        fields=new ArrayList<OPair<String,Object>>();
        parseSetFields(clazz,fields);
      }
 else       if (temp.equals(KEYWORD_CONTENT)) {
        parseContent();
      }
 else       if (className == null && temp.length() > 0) {
        className=temp;
        if (className == null)         className=OrientVertexType.CLASS_NAME;
        clazz=((OMetadataInternal)database.getMetadata()).getImmutableSchemaSnapshot().getClass(className);
        if (clazz == null)         throw new OCommandSQLParsingException("Class '" + className + "' was not found");
      }
      temp=parserOptionalWord(true);
      if (parserIsEnded())       break;
    }
    if (className == null) {
      className=OrientVertexType.CLASS_NAME;
      clazz=((OMetadataInternal)database.getMetadata()).getImmutableSchemaSnapshot().getClass(className);
      if (clazz == null)       throw new OCommandSQLParsingException("Class '" + className + "' was not found");
    }
  }
  finally {
    textRequest.setText(originalQuery);
  }
  return this;
}
