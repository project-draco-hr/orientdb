{
  if (dataProvider == null)   return 1;
  int totalDisconnected=0;
  final ORID rid=dataProvider.getIdentity();
  if ((!dataProvider.isEntryDirty() || iForceDirty) && !pTree.isNodeEntryPoint(this)) {
    totalDisconnected=1;
    pTree.removeNodeFromMemory(this);
    clear();
  }
  if (parent != null) {
    if (parent.left == this) {
      parent.left=null;
    }
 else     if (parent.right == this) {
      parent.right=null;
    }
 else     OLogManager.instance().warn(this,"Node " + rid + " has the parent ("+ parent+ ") unlinked to itself. It links to "+ parent);
    totalDisconnected+=parent.disconnect(iForceDirty,iLevel + 1);
    parent=null;
  }
  if (left != null) {
    if (left.parent == this)     left.parent=null;
 else     OLogManager.instance().warn(this,"Node " + rid + " has the left ("+ left+ ") unlinked to itself. It links to "+ left.parent);
    totalDisconnected+=left.disconnect(iForceDirty,iLevel + 1);
    left=null;
  }
  if (right != null) {
    if (right.parent == this)     right.parent=null;
 else     OLogManager.instance().warn(this,"Node " + rid + " has the right ("+ right+ ") unlinked to itself. It links to "+ right.parent);
    totalDisconnected+=right.disconnect(iForceDirty,iLevel + 1);
    right=null;
  }
  return totalDisconnected;
}
