{
  ODatabaseDocument db=new ODatabaseDocumentTx("memory:" + ODocumentValidationTest.class.getSimpleName());
  db.create();
  try {
    ODocument doc=new ODocument();
    OIdentifiable id=db.save(doc).getIdentity();
    OClass clazz=db.getMetadata().getSchema().createClass("Validation");
    clazz.createProperty("int",OType.INTEGER).setMax("11");
    clazz.createProperty("long",OType.LONG).setMax("11");
    clazz.createProperty("float",OType.FLOAT).setMax("11");
    clazz.createProperty("binary",OType.BINARY).setMax("11");
    clazz.createProperty("byte",OType.BYTE).setMax("11");
    clazz.createProperty("decimal",OType.DECIMAL).setMax("11");
    clazz.createProperty("double",OType.DOUBLE).setMax("11");
    clazz.createProperty("short",OType.SHORT).setMax("11");
    clazz.createProperty("string",OType.STRING).setMax("11");
    ODocument d=new ODocument(clazz);
    d.field("int",10);
    d.field("long",10);
    d.field("float",10);
    d.field("binary",new byte[]{1,2,3,4,5,6,7,8,9,10});
    d.field("byte",10);
    d.field("decimal",10);
    d.field("double",10);
    d.field("short",10);
    d.field("string","yeah");
    d.field("link",id);
    checkField(d,"int",20);
    checkField(d,"long",20);
    checkField(d,"float",20);
    checkField(d,"binary",new byte[]{1,2,3,4,5,6,7,8,9,10,11,12,13});
    checkField(d,"double",20);
    checkField(d,"string","0123456789101112");
  }
  finally {
    db.drop();
  }
}
