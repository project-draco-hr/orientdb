{
  checkForLoading();
  checkForFields();
  int separatorPos=0;
  final int fieldNameLength=iFieldName.length();
  Object value=null;
  ODocument current=this;
  do {
    char separator=' ';
    for (; separatorPos < fieldNameLength; ++separatorPos) {
      separator=iFieldName.charAt(separatorPos);
      if (separator == '.' || separator == '[')       break;
    }
    final String fieldName;
    if (separatorPos < fieldNameLength)     fieldName=iFieldName.substring(0,separatorPos);
 else     fieldName=iFieldName;
    if (separator == '.') {
      value=current._fieldValues.get(fieldName);
      if (value == null || !(value instanceof ODocument))       return null;
      current=(ODocument)value;
      if (current.getInternalStatus() == STATUS.NOT_LOADED)       current.reload();
    }
 else     if (separator == '[') {
      if (value == null)       value=current._fieldValues.get(fieldName);
      final int end=iFieldName.indexOf(']',separatorPos);
      if (end == -1)       throw new IllegalArgumentException("Missed closed ']'");
      final String index=OStringSerializerHelper.getStringContent(iFieldName.substring(separatorPos + 1,end));
      separatorPos=end + 1;
      if (value == null)       return null;
 else       if (value instanceof ODocument)       value=((ODocument)value).field(index);
 else       if (value instanceof Map<?,?>)       value=((Map<?,?>)value).get(index);
 else       if (value instanceof List<?>)       value=((List<?>)value).get(Integer.parseInt(index));
 else       if (value.getClass().isArray())       value=Array.get(value,Integer.parseInt(index));
    }
 else     value=current._fieldValues.get(fieldName);
  }
 while (separatorPos < fieldNameLength);
  return (RET)value;
}
