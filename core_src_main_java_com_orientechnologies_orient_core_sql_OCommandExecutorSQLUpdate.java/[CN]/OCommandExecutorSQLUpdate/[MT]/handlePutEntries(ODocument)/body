{
  boolean updated=false;
  if (!putEntries.isEmpty()) {
    for (    Entry<String,OPair<String,Object>> entry : putEntries.entrySet()) {
      Object fieldValue=record.field(entry.getKey());
      if (fieldValue == null) {
        if (record.getSchemaClass() != null) {
          final OProperty property=record.getSchemaClass().getProperty(entry.getKey());
          if (property != null && (property.getType() != null && (!property.getType().equals(OType.EMBEDDEDMAP) && !property.getType().equals(OType.LINKMAP)))) {
            throw new OCommandExecutionException("field " + entry.getKey() + " is not defined as a map");
          }
        }
        fieldValue=new HashMap<String,Object>();
        record.field(entry.getKey(),fieldValue);
      }
      if (fieldValue instanceof Map<?,?>) {
        Map<String,Object> map=(Map<String,Object>)fieldValue;
        OPair<String,Object> pair=entry.getValue();
        Object value=extractValue(record,pair);
        map.put(pair.getKey(),value);
        updated=true;
      }
    }
  }
  return updated;
}
