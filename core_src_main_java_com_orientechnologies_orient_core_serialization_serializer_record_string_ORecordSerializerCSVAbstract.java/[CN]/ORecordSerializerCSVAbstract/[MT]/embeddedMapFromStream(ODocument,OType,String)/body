{
  if (iValue.length() == 0)   return null;
  String value=iValue.substring(1,iValue.length() - 1);
  @SuppressWarnings("rawtypes") Map map;
  if (iLinkedType == OType.LINK || iLinkedType == OType.EMBEDDED)   map=new ORecordLazyMap(iSourceDocument,ODocument.RECORD_TYPE);
 else   map=new OTrackedMap<Object>(iSourceDocument);
  if (value.length() == 0)   return map;
  final List<String> items=OStringSerializerHelper.smartSplit(value,OStringSerializerHelper.RECORD_SEPARATOR);
  if (map instanceof ORecordElement)   ((ORecordElement)map).setInternalStatus(STATUS.UNMARSHALLING);
  for (  String item : items) {
    if (item != null && item.length() > 0) {
      final List<String> entry=OStringSerializerHelper.smartSplit(item,OStringSerializerHelper.ENTRY_SEPARATOR);
      if (entry.size() > 0) {
        String mapValue=entry.get(1);
        final OType linkedType;
        if (iLinkedType == null)         if (mapValue.length() > 0) {
          linkedType=getType(mapValue);
          if (linkedType == OType.LINK && !(map instanceof ORecordLazyMap)) {
            map=new ORecordLazyMap(iSourceDocument,ODocument.RECORD_TYPE);
            ((ORecordElement)map).setInternalStatus(STATUS.UNMARSHALLING);
          }
        }
 else         linkedType=OType.EMBEDDED;
 else         linkedType=iLinkedType;
        if (linkedType == OType.EMBEDDED)         mapValue=mapValue.substring(1,mapValue.length() - 1);
        final Object mapValueObject=fieldTypeFromStream(iSourceDocument,linkedType,mapValue);
        if (mapValueObject != null && mapValueObject instanceof ODocument)         ((ODocument)mapValueObject).addOwner(iSourceDocument);
        map.put(fieldTypeFromStream(iSourceDocument,OType.STRING,entry.get(0)),mapValueObject);
      }
    }
  }
  if (map instanceof ORecordElement)   ((ORecordElement)map).setInternalStatus(STATUS.LOADED);
  return map;
}
