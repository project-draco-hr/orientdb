{
  ListNode tail=tailReference.get();
  if (tail == null || !lruEntry.equals(tail.entry)) {
    final ListNode newNode=new ListNode(lruEntry);
    final ListNode oldNode=lruEntry.listNode.getAndSet(newNode);
    if (oldNode != null) {
      oldNode.entry=null;
      trash.add(oldNode);
    }
 else {
      if (!freshEntry) {
        return;
      }
    }
    do {
      tail=tailReference.get();
      newNode.prev=tail;
    }
 while (!tailReference.compareAndSet(tail,newNode));
    if (tail != null)     tail.next=newNode;
 else {
      boolean casResult=headReference.compareAndSet(null,newNode);
      assert casResult;
    }
  }
}
