{
  final IQueue queue=manager.getHazelcastInstance().getQueue(iQueueName);
  if (queue == null)   throw new IllegalArgumentException("Queue '" + iQueueName + "' not found");
  final ODocument doc=new ODocument();
  doc.field("name",queue.getName());
  doc.field("partitionKey",queue.getPartitionKey());
  doc.field("serviceName",queue.getServiceName());
  doc.field("size",queue.size());
  final LocalQueueStats stats=queue.getLocalQueueStats();
  doc.field("minAge",stats.getMinAge());
  doc.field("maxAge",stats.getMaxAge());
  doc.field("avgAge",stats.getAvgAge());
  doc.field("backupItemCount",stats.getBackupItemCount());
  doc.field("emptyPollOperationCount",stats.getEmptyPollOperationCount());
  doc.field("offerOperationCount",stats.getOfferOperationCount());
  doc.field("eventOperationCount",stats.getEventOperationCount());
  doc.field("otherOperationsCount",stats.getOtherOperationsCount());
  doc.field("pollOperationCount",stats.getPollOperationCount());
  doc.field("emptyPollOperationCount",stats.getEmptyPollOperationCount());
  doc.field("ownedItemCount",stats.getOwnedItemCount());
  doc.field("rejectedOfferOperationCount",stats.getRejectedOfferOperationCount());
  List<Object> nextMessages=new ArrayList<Object>(STATS_MAX_MESSAGES);
  for (Iterator<Object> it=queue.iterator(); it.hasNext(); ) {
    Object next=it.next();
    if (next != null)     nextMessages.add(next.toString());
    if (nextMessages.size() >= STATS_MAX_MESSAGES)     break;
  }
  doc.field("nextMessages",nextMessages);
  return doc;
}
