{
  LinkedList<ODocument> path=new LinkedList<ODocument>();
  ORecord next=txEntry.getRecord();
  ODirtyManager manager=ORecordInternal.getDirtyManager(next);
  do {
    if (next instanceof ODocument) {
      ORecord nextToInspect=null;
      List<OIdentifiable> toSave=manager.getPointed(next);
      if (toSave == null) {
        toSave=ORecordInternal.getDirtyManager(next).getPointed(next);
      }
      if (toSave != null) {
        for (        OIdentifiable oIdentifiable : toSave) {
          if (oIdentifiable.getIdentity().isNew()) {
            if (oIdentifiable instanceof ORecord) {
              nextToInspect=(ORecord)oIdentifiable;
              break;
            }
 else {
              nextToInspect=tx.getRecord(oIdentifiable.getIdentity());
              if (nextToInspect.getIdentity().isNew())               break;
 else               nextToInspect=null;
            }
          }
        }
      }
      if (nextToInspect != null) {
        if (path.contains(nextToInspect)) {
          ORecordOperation toCommit=tx.getRecordEntry(nextToInspect.getIdentity());
          commitEmptyEntry(tx,toCommit);
        }
 else {
          path.push((ODocument)next);
          next=nextToInspect;
        }
      }
 else {
        ORecordOperation toCommit=tx.getRecordEntry(next.getIdentity());
        commitEntry(tx,toCommit,null);
        next=path.pollFirst();
      }
    }
 else {
      ORecordOperation toCommit=tx.getRecordEntry(next.getIdentity());
      commitEntry(tx,toCommit,null);
      next=path.pollFirst();
    }
  }
 while (next != null);
}
