{
  OAbstractReplicatedTask<? extends Object> taskToPropagate=iTask;
  Object localResult=null;
  try {
    localResult=enqueueLocalExecution(iTask);
  }
 catch (  Exception e) {
    taskToPropagate=new ONoOperationTask(iTask);
    throw e;
  }
 finally {
    final Set<String> targetNodes=getOnlineRemoteNodeIdsBut(taskToPropagate.getNodeSource(),taskToPropagate.getNodeDestination());
    if (!targetNodes.isEmpty()) {
      taskToPropagate.setNodeSource(getLocalNodeId());
      final Map<String,Object> remoteResults=propagate(targetNodes,taskToPropagate);
      for (      Entry<String,Object> entry : remoteResults.entrySet()) {
        final String remoteNode=entry.getKey();
        final Object remoteResult=entry.getValue();
        if ((localResult == null && remoteResult != null) || (localResult != null && remoteResult == null) || (localResult != null && !localResult.equals(remoteResult))) {
          taskToPropagate.handleConflict(remoteNode,localResult,remoteResult);
        }
      }
    }
  }
  return localResult;
}
