{
  acquireSchemaReadLock();
  try {
    OClass cls=classes.get(className.toLowerCase());
    if (cls != null)     return cls;
  }
  finally {
    releaseSchemaReadLock();
  }
  OClass cls;
  int[] clusterIds=null;
  int retry=0;
  while (true)   try {
    acquireSchemaWriteLock();
    try {
      cls=classes.get(className.toLowerCase());
      if (cls != null)       return cls;
      cls=doCreateClass(className,superClass,clusterIds,retry);
      if (superClass != null && !cls.isSubClassOf(superClass))       throw new IllegalArgumentException("Class '" + className + "' is not an instance of "+ superClass.getShortName());
      addClusterClassMap(cls);
    }
  finally {
      releaseSchemaWriteLock();
    }
    break;
  }
 catch (  ClusterIdsAreEmptyException e) {
    clusterIds=createClusters(className);
    retry++;
  }
  return cls;
}
