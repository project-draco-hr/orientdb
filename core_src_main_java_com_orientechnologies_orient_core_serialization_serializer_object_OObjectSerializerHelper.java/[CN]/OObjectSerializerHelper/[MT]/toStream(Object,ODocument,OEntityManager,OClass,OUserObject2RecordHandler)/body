{
  long timer=OProfiler.getInstance().startChrono();
  if (OSerializationThreadLocal.INSTANCE.get().containsKey(iRecord))   return iRecord;
  OSerializationThreadLocal.INSTANCE.get().put(iRecord,(ORecordId)iRecord.getIdentity());
  OProperty schemaProperty;
  Class<?> c=iPojo.getClass();
  final List<Field> properties=getClassFields(c);
  String fieldName;
  Object fieldValue;
  invokeCallback(iPojo,iRecord,OBeforeSerialization.class);
  for (  Field p : properties) {
    fieldName=p.getName();
    fieldValue=getFieldValue(iPojo,fieldName);
    schemaProperty=schemaClass != null ? schemaClass.getProperty(fieldName) : null;
    fieldValue=typeToStream(fieldValue,schemaProperty != null ? schemaProperty.getType() : null,iEntityManager,iObj2RecHandler);
    iRecord.field(fieldName,fieldValue);
  }
  invokeCallback(iPojo,iRecord,OAfterSerialization.class);
  OSerializationThreadLocal.INSTANCE.get().remove(iRecord);
  OProfiler.getInstance().stopChrono("Object.toStream",timer);
  return iRecord;
}
