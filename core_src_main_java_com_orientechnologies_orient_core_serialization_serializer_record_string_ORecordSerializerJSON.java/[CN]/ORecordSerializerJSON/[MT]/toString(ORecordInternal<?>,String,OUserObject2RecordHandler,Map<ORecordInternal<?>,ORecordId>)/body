{
  try {
    final StringWriter buffer=new StringWriter();
    final OJSONWriter json=new OJSONWriter(buffer);
    boolean includeVer;
    boolean includeId;
    boolean includeClazz;
    int identLevel;
    if (iFormat == null) {
      includeVer=true;
      includeId=true;
      includeClazz=true;
      identLevel=0;
    }
 else {
      includeVer=false;
      includeId=false;
      includeClazz=false;
      identLevel=0;
      String[] format=iFormat.split(",");
      for (      String f : format)       if (f.equals("id"))       includeId=true;
 else       if (f.equals("ver"))       includeVer=true;
 else       if (f.equals("class"))       includeClazz=true;
 else       if (f.startsWith("ident"))       identLevel=Integer.parseInt(f.substring(f.indexOf(":") + 1));
    }
    json.beginObject(identLevel);
    if (includeId)     json.writeAttribute(identLevel + 1,true,ATTRIBUTE_ID,iRecord.getIdentity());
    if (includeVer)     json.writeAttribute(identLevel + 1,true,ATTRIBUTE_VERSION,iRecord.getVersion());
    if (includeClazz && iRecord instanceof ORecordSchemaAware<?>)     json.writeAttribute(identLevel + 1,true,ATTRIBUTE_CLASS,((ORecordSchemaAware<?>)iRecord).getClassName());
    if (iRecord instanceof ORecordSchemaAware<?>) {
      final ORecordSchemaAware<?> record=(ORecordSchemaAware<?>)iRecord;
      for (      String fieldName : record.fieldNames()) {
        json.writeAttribute(identLevel + 1,true,fieldName,encode(record.field(fieldName)));
      }
    }
 else     if (iRecord instanceof ORecordStringable) {
      final ORecordStringable record=(ORecordStringable)iRecord;
      json.writeAttribute(identLevel + 1,true,"value",record.value());
    }
 else     throw new OSerializationException("Error on marshalling record of type '" + iRecord.getClass() + "' to JSON. The record type can't be exported to JSON");
    json.endObject(identLevel);
    return buffer.toString();
  }
 catch (  IOException e) {
    throw new OSerializationException("Error on marshalling of record to JSON",e);
  }
}
