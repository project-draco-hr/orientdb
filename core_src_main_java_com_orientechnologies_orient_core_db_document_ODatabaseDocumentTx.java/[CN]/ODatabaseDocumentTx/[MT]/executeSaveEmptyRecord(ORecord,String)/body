{
  boolean isNew=record.getIdentity().isNew();
  ORecordId rid=(ORecordId)record.getIdentity();
  ORecordInternal.onBeforeIdentityChanged(record);
  if (isNew && rid.clusterId < 0 && storage.isAssigningClusterIds())   rid.clusterId=clusterName != null ? getClusterIdByName(clusterName) : getDefaultClusterId();
  if (rid.clusterId > -1 && clusterName == null)   clusterName=getClusterNameById(rid.clusterId);
  if (storage.isAssigningClusterIds())   checkRecordClass(record,clusterName,rid,isNew);
  checkSecurity(ORule.ResourceGeneric.CLUSTER,isNew ? ORole.PERMISSION_CREATE : ORole.PERMISSION_UPDATE,clusterName);
  byte[] content=getSerializer().writeClassOnly(record);
  final OStorageOperationResult<OPhysicalPosition> ppos=storage.createRecord(rid,content,record.getVersion(),recordType,OPERATION_MODE.SYNCHRONOUS.ordinal(),null);
  ORecordInternal.setVersion(record,ppos.getResult().recordVersion);
  ((ORecordId)record.getIdentity()).copyFrom(rid);
  ORecordInternal.onAfterIdentityChanged(record);
  return (RET)record;
}
