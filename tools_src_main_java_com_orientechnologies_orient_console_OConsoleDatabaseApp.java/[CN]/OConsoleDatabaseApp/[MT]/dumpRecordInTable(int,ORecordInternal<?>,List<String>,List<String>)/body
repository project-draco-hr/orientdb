{
  for (  String fieldName : iRecordColumns) {
    boolean foundCol=false;
    for (    String colName : iColumns) {
      if (fieldName.equals(colName)) {
        foundCol=true;
        break;
      }
    }
    if (!foundCol)     iColumns.add(fieldName);
  }
  if (iIndex == 0) {
    out.printf("\n");
    printHeaderLine(iColumns);
    out.print("  #| REC ID |");
    int col=0;
    for (    String colName : iColumns) {
      if (col++ > 0)       out.printf("|");
      out.printf("%-20s",colName.toUpperCase());
    }
    out.printf("\n");
    printHeaderLine(iColumns);
  }
  StringBuilder format=new StringBuilder("%3d|%8s");
  List<Object> vargs=new ArrayList<Object>();
  vargs.add(iIndex);
  vargs.add(iRecord.getIdentity());
  try {
    Object value=null;
    if (iRecord instanceof ODocument)     ((ODocument)iRecord).setLazyLoad(false);
    for (    String colName : iColumns) {
      format.append("|%-20s");
      if (iRecord instanceof ORecordSchemaAwareAbstract<?>)       value=((ORecordSchemaAwareAbstract<?>)iRecord).field(colName);
      if (value instanceof Collection<?>)       value="[" + ((Collection<?>)value).size() + "]";
 else       if (value instanceof ORecord<?>)       value=((ORecord<?>)value).getIdentity().toString();
      if (value instanceof byte[])       value="byte[" + ((byte[])value).length + "]";
      vargs.add(value);
    }
    out.println(String.format(format.toString(),vargs.toArray()));
  }
 catch (  Throwable t) {
    out.printf("%3d|%8s|%s\n",iIndex,iRecord.getIdentity(),"Error on loading record dued to: " + t);
  }
}
