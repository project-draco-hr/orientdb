{
  OLinearHashingTable<OClusterPosition,OPhysicalPosition> linearHashingTable=new OLinearHashingTable<OClusterPosition,OPhysicalPosition>();
  for (int i=0; i < KEYS_COUNT; i++) {
    final OPhysicalPosition position=new OPhysicalPosition(new OClusterPositionLong(i));
    Assert.assertTrue(linearHashingTable.put(position),"i " + i);
    Assert.assertTrue(linearHashingTable.contains(position.clusterPosition),"i " + i);
  }
  for (int i=0; i < KEYS_COUNT; i++) {
    final OClusterPosition position=new OClusterPositionLong(i);
    Assert.assertTrue(linearHashingTable.contains(position),i + " key is absent");
  }
  for (int i=KEYS_COUNT; i < 2 * KEYS_COUNT; i++) {
    final OClusterPosition position=new OClusterPositionLong(i);
    Assert.assertFalse(linearHashingTable.contains(position));
  }
}
