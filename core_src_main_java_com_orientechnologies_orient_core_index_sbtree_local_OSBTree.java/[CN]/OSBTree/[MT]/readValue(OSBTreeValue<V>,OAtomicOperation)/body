{
  if (!sbTreeValue.isLink())   return sbTreeValue.getValue();
  OCacheEntry cacheEntry=loadPage(atomicOperation,fileId,sbTreeValue.getLink(),false,diskCache);
  OSBTreeValuePage valuePage=new OSBTreeValuePage(cacheEntry,getChangesTree(atomicOperation,cacheEntry),false);
  int totalSize=valuePage.getSize();
  int currentSize=0;
  byte[] value=new byte[totalSize];
  while (currentSize < totalSize) {
    currentSize=valuePage.readBinaryContent(value,currentSize);
    long nextPage=valuePage.getNextPage();
    if (nextPage >= 0) {
      releasePage(atomicOperation,cacheEntry,diskCache);
      cacheEntry=loadPage(atomicOperation,fileId,nextPage,false,diskCache);
      valuePage=new OSBTreeValuePage(cacheEntry,getChangesTree(atomicOperation,cacheEntry),false);
    }
  }
  releasePage(atomicOperation,cacheEntry,diskCache);
  return valueSerializer.deserializeNativeObject(value,0);
}
