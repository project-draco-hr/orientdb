{
  if (txEntry.status != OTransactionEntry.DELETED && !txEntry.getRecord().isDirty())   return;
  final ORecordId rid=(ORecordId)txEntry.getRecord().getIdentity();
  final OCluster cluster=txEntry.clusterName != null ? storage.getClusterByName(txEntry.clusterName) : storage.getClusterById(rid.clusterId);
  if (!(cluster instanceof OClusterLocal))   return;
  if (txEntry.getRecord() instanceof OTxListener)   ((OTxListener)txEntry.getRecord()).onEvent(txEntry,OTxListener.EVENT.BEFORE_COMMIT);
switch (txEntry.status) {
case OTransactionEntry.LOADED:
    break;
case OTransactionEntry.CREATED:
  final byte[] stream=txEntry.getRecord().toStream();
if (rid.isNew()) {
  rid.clusterPosition=createRecord(iRequesterId,iTxId,cluster,stream,txEntry.getRecord().getRecordType());
  rid.clusterId=cluster.getId();
}
 else {
  txEntry.getRecord().setVersion(updateRecord(iRequesterId,iTxId,cluster,rid.clusterPosition,stream,txEntry.getRecord().getVersion(),txEntry.getRecord().getRecordType()));
}
break;
case OTransactionEntry.UPDATED:
txEntry.getRecord().setVersion(updateRecord(iRequesterId,iTxId,cluster,rid.clusterPosition,txEntry.getRecord().toStream(),txEntry.getRecord().getVersion(),txEntry.getRecord().getRecordType()));
break;
case OTransactionEntry.DELETED:
deleteRecord(iRequesterId,iTxId,cluster,rid.clusterPosition,txEntry.getRecord().getVersion());
break;
}
txEntry.getRecord().unsetDirty();
if (txEntry.getRecord() instanceof OTxListener) ((OTxListener)txEntry.getRecord()).onEvent(txEntry,OTxListener.EVENT.AFTER_COMMIT);
}
