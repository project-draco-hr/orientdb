{
  final OIndex<?> beforeTheLastIndex=indexChain.get(indexChain.size() - 2);
  Set<Comparable> currentKeys=prepareKeys(beforeTheLastIndex,result);
  for (int j=indexChain.size() - 2; j > 0; j--) {
    final OIndex<?> currentIndex=indexChain.get(j);
    final OIndex<?> nextIndex=indexChain.get(j - 1);
    final Set<Comparable> newKeys;
    if (isComposite(currentIndex)) {
      newKeys=new TreeSet<Comparable>();
      for (      Comparable currentKey : currentKeys) {
        final List<OIdentifiable> currentResult=getFromCompositeIndex(currentKey,currentIndex);
        newKeys.addAll(prepareKeys(nextIndex,currentResult));
      }
    }
 else {
      final OIndexCursor cursor=currentIndex.iterateEntries(currentKeys,true);
      final List<OIdentifiable> keys=cursorToList(cursor);
      newKeys=prepareKeys(nextIndex,keys);
    }
    updateStatistic(currentIndex);
    currentKeys=newKeys;
  }
  return applyMainIndex(currentKeys);
}
