{
  graph.addVertex("class:Person","num",10000,"name","FirstName");
  graph.commit();
  assertThat(graph.countVertices("Person")).isEqualTo(1);
  Iterable<Vertex> vertices=graph.getVertices("Person.num",10000);
  assertThat(vertices).hasSize(1);
  final Vertex inserted=vertices.iterator().next();
  assertThat(inserted.getProperty("name")).isEqualTo("FirstName");
  assertThat(inserted.getProperty("num")).isEqualTo(10000);
  process(" {source: { content: { value: 'num,name\n10000,FirstNameUpdated' } }, " + "extractor : { csv: {} }," + " transformers: ["+ "{merge: {  joinFieldName:'num', lookup:'Person.num'}}, "+ "{vertex: { class:'Person', skipDuplicates: false}}"+ "],"+ "loader: { orientdb: { dbURL: 'memory:ETLBaseTest', dbType:'graph', tx: true} } }");
  graph=new OrientGraph("memory:ETLBaseTest");
  assertThat(graph.countVertices("Person")).isEqualTo(1);
  vertices=graph.getVertices("Person.num",10000);
  assertThat(vertices).hasSize(1);
  final Vertex updated=vertices.iterator().next();
  ORecord load=graph.getRawGraph().load((ORID)updated.getId());
  assertThat(updated.getProperty("name")).isEqualTo("FirstNameUpdated");
  assertThat(updated.getProperty("num")).isEqualTo(10000);
}
