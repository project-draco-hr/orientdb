{
  serverInstance=iServer;
  cluster=iCluster;
synchronized (this) {
    if (index != null)     return;
    final OServerUserConfiguration replicatorUser=serverInstance.getUser(ODistributedAbstractPlugin.REPLICATOR_USER);
    final ODatabaseDocumentInternal threadDb=ODatabaseRecordThreadLocal.INSTANCE.getIfDefined();
    if (threadDb != null && !threadDb.isClosed() && threadDb.getStorage().getName().equals(iDatabaseName))     database=threadDb;
 else     database=serverInstance.openDatabase("document",iDatabaseName,replicatorUser.name,replicatorUser.password);
    if (database.getMetadata() != null) {
      OClass cls=database.getMetadata().getSchema().getClass(DISTRIBUTED_CONFLICT_CLASS);
      final OProperty p;
      if (cls == null) {
        cls=database.getMetadata().getSchema().createClass(DISTRIBUTED_CONFLICT_CLASS);
        index=cls.createProperty(FIELD_RECORD,OType.LINK).createIndex(INDEX_TYPE.UNIQUE);
      }
 else {
        p=cls.getProperty(FIELD_RECORD);
        if (p == null)         index=cls.createProperty(FIELD_RECORD,OType.LINK).createIndex(INDEX_TYPE.UNIQUE);
 else {
          index=p.getIndex();
        }
      }
    }
  }
}
