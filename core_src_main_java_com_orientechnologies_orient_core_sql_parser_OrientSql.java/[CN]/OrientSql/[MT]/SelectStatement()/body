{
  OSelectStatement jjtn000=new OSelectStatement(JJTSELECTSTATEMENT);
  boolean jjtc000=true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
  try {
    jj_consume_token(SELECT);
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case NULL:
case THIS:
case RECORD_ATTRIBUTE:
case INTEGER_LITERAL:
case FLOATING_POINT_LITERAL:
case CHARACTER_LITERAL:
case STRING_LITERAL:
case HOOK:
case STAR:
case IDENTIFIER:
      Projection();
    break;
default :
  jj_la1[1]=jj_gen;
;
}
jj_consume_token(FROM);
FromClause();
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case WHERE:
jj_consume_token(WHERE);
WhereClause();
break;
default :
jj_la1[2]=jj_gen;
;
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case ORDER:
OrderBy();
break;
default :
jj_la1[3]=jj_gen;
;
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case LIMIT:
Limit();
break;
default :
jj_la1[4]=jj_gen;
;
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case RANGE:
Range();
break;
default :
jj_la1[5]=jj_gen;
;
}
}
 catch (Throwable jjte000) {
if (jjtc000) {
jjtree.clearNodeScope(jjtn000);
jjtc000=false;
}
 else {
jjtree.popNode();
}
if (jjte000 instanceof RuntimeException) {
{
if (true) throw (RuntimeException)jjte000;
}
}
if (jjte000 instanceof ParseException) {
{
if (true) throw (ParseException)jjte000;
}
}
{
if (true) throw (Error)jjte000;
}
}
 finally {
if (jjtc000) {
jjtree.closeNodeScope(jjtn000,true);
jjtn000.jjtSetLastToken(getToken(0));
}
}
}
