{
  if (valueToSet == null) {
    Object oldValue=doc.field(fieldName);
    if (OObjectEntitySerializer.isCascadeDeleteField(self.getClass(),fieldName) && oldValue instanceof OIdentifiable)     orphans.add(((OIdentifiable)oldValue).getIdentity());
    doc.field(fieldName,valueToSet,OObjectEntitySerializer.getTypeByClass(self.getClass(),fieldName));
  }
 else   if (!valueToSet.getClass().isAnonymousClass()) {
    if (valueToSet instanceof Proxy) {
      ODocument docToSet=OObjectEntitySerializer.getDocument((Proxy)valueToSet);
      if (OObjectEntitySerializer.isEmbeddedField(self.getClass(),fieldName))       docToSet.addOwner(doc);
      Object oldValue=doc.field(fieldName);
      if (OObjectEntitySerializer.isCascadeDeleteField(self.getClass(),fieldName) && oldValue instanceof OIdentifiable)       orphans.add(((OIdentifiable)oldValue).getIdentity());
      doc.field(fieldName,docToSet,OObjectEntitySerializer.getTypeByClass(self.getClass(),fieldName));
    }
 else     if (valueToSet instanceof OIdentifiable) {
      if (valueToSet instanceof ODocument && OObjectEntitySerializer.isEmbeddedField(self.getClass(),fieldName))       ((ODocument)valueToSet).addOwner(doc);
      Object oldValue=doc.field(fieldName);
      if (OObjectEntitySerializer.isCascadeDeleteField(self.getClass(),fieldName) && oldValue instanceof OIdentifiable)       orphans.add(((OIdentifiable)oldValue).getIdentity());
      doc.field(fieldName,valueToSet);
    }
 else     if (((valueToSet instanceof Collection<?> || valueToSet instanceof Map<?,?>)) || valueToSet.getClass().isArray()) {
      Class<?> genericMultiValueType=OReflectionHelper.getGenericMultivalueType(OObjectEntitySerializer.getField(fieldName,self.getClass()));
      if (genericMultiValueType != null && !OReflectionHelper.isJavaType(genericMultiValueType)) {
        if (!(valueToSet instanceof OLazyObjectMultivalueElement)) {
          if (valueToSet instanceof Collection<?>) {
            boolean customSerialization=false;
            Field f=OObjectEntitySerializer.getField(fieldName,self.getClass());
            if (OObjectEntitySerializer.isSerializedType(f)) {
              customSerialization=true;
            }
            valueToSet=manageCollectionSave(self,f,(Collection<?>)valueToSet,customSerialization);
          }
 else           if (valueToSet instanceof Map<?,?>) {
            boolean customSerialization=false;
            Field f=OObjectEntitySerializer.getField(fieldName,self.getClass());
            if (OObjectEntitySerializer.isSerializedType(f)) {
              customSerialization=true;
            }
            valueToSet=manageMapSave(self,f,(Map<?,?>)valueToSet,customSerialization);
          }
 else           if (valueToSet.getClass().isArray()) {
            valueToSet=manageArraySave(fieldName,(Object[])valueToSet);
          }
        }
      }
 else {
        if (OObjectEntitySerializer.isToSerialize(valueToSet.getClass())) {
          doc.field(fieldName,OObjectEntitySerializer.serializeFieldValue(OObjectEntitySerializer.getField(fieldName,self.getClass()).getType(),valueToSet));
        }
 else {
          if (valueToSet.getClass().isArray()) {
            OClass schemaClass=doc.getSchemaClass();
            OProperty schemaProperty=null;
            if (schemaClass != null)             schemaProperty=schemaClass.getProperty(fieldName);
            doc.field(fieldName,OObjectEntitySerializer.typeToStream(valueToSet,schemaProperty != null ? schemaProperty.getType() : null,getDatabase(),doc));
          }
 else           doc.field(fieldName,valueToSet,OObjectEntitySerializer.getTypeByClass(self.getClass(),fieldName));
        }
      }
    }
 else     if (valueToSet.getClass().isEnum()) {
      doc.field(fieldName,((Enum)valueToSet).name());
    }
 else {
      if (OObjectEntitySerializer.isToSerialize(valueToSet.getClass())) {
        doc.field(fieldName,OObjectEntitySerializer.serializeFieldValue(OObjectEntitySerializer.getField(fieldName,self.getClass()).getType(),valueToSet));
      }
 else       if (getDatabase().getEntityManager().getEntityClass(valueToSet.getClass().getSimpleName()) != null && !valueToSet.getClass().isEnum()) {
        valueToSet=OObjectEntitySerializer.serializeObject(valueToSet,getDatabase());
        ODocument docToSet=OObjectEntitySerializer.getDocument((Proxy)valueToSet);
        if (OObjectEntitySerializer.isEmbeddedField(self.getClass(),fieldName))         docToSet.addOwner(doc);
        doc.field(fieldName,docToSet);
      }
 else {
        doc.field(fieldName,valueToSet,OObjectEntitySerializer.getTypeByClass(self.getClass(),fieldName));
      }
    }
    loadedFields.put(fieldName,doc.getVersion());
    setDirty();
  }
 else {
    OLogManager.instance().warn(this,"Setting property '%s' in proxied class '%s' with an anonymous class '%s'. The document won't have this property.",fieldName,self.getClass().getName(),valueToSet.getClass().getName());
  }
  return valueToSet;
}
