{
  if (cls.isAbstract())   throw new IllegalArgumentException("Cannot create a new instance of abstract class");
  final ODatabaseDocument db=ODatabaseRecordThreadLocal.INSTANCE.get();
  final int[] clusterIds=cls.getClusterIds();
  final List<String> clusterNames=new ArrayList<String>(clusterIds.length);
  for (  int c : clusterIds)   clusterNames.add(db.getClusterNameById(c).toLowerCase());
  final ODistributedConfiguration cfg=manager.getDatabaseConfiguration(databaseName);
  final List<String> bestClusters=cfg.getOwnedClustersByServer(clusterNames,nodeName);
  if (bestClusters.isEmpty()) {
    final StringBuilder buffer=new StringBuilder();
    for (    String c : clusterNames) {
      if (buffer.length() > 0)       buffer.append(" ");
      buffer.append(" ");
      buffer.append(c);
      buffer.append(":");
      buffer.append(cfg.getServers(c,null));
    }
    OLogManager.instance().warn(this,"Cannot find best cluster for class '%s'. Configured servers for clusters %s are %s",cls.getName(),clusterNames,buffer.toString());
    throw new ODatabaseException("Cannot find best cluster for class '" + cls.getName() + "' on server '"+ nodeName+ "'. ClusterStrategy="+ getName());
  }
  final List<Integer> newBestClusters=new ArrayList<Integer>();
  for (  String c : bestClusters)   newBestClusters.add(db.getClusterIdByName(c));
  bestClusterIds=newBestClusters;
  lastVersion=cfg.getVersion();
}
