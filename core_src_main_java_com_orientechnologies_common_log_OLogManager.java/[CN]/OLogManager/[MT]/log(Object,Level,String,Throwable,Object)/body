{
  if (iMessage != null) {
    try {
      final ODatabaseDocumentInternal db=ODatabaseRecordThreadLocal.INSTANCE != null ? ODatabaseRecordThreadLocal.INSTANCE.getIfDefined() : null;
      if (db != null && db.getStorage() != null && db.getStorage() instanceof OAbstractPaginatedStorage) {
        final String dbName=db.getStorage().getName();
        if (dbName != null)         iMessage="{db=" + dbName + "} "+ iMessage;
      }
    }
 catch (    Throwable e) {
    }
    final String requesterName;
    if (iRequester != null) {
      requesterName=iRequester.getClass().getName();
    }
 else {
      requesterName=DEFAULT_LOG;
    }
    Logger log=loggersCache.get(requesterName);
    if (log == null) {
      log=Logger.getLogger(requesterName);
      if (log != null) {
        Logger oldLogger=loggersCache.putIfAbsent(requesterName,log);
        if (oldLogger != null)         log=oldLogger;
      }
    }
    if (log == null) {
      try {
        System.err.println(String.format(iMessage,iAdditionalArgs));
      }
 catch (      Exception e) {
        OLogManager.instance().warn(this,"Error on formatting message",e);
      }
    }
 else     if (log.isLoggable(iLevel)) {
      try {
        final String msg=String.format(iMessage,iAdditionalArgs);
        if (iException != null)         log.log(iLevel,msg,iException);
 else         log.log(iLevel,msg);
      }
 catch (      Exception e) {
        System.err.print(String.format("Error on formatting message '%s'. Exception: %s",iMessage,e.toString()));
      }
    }
  }
}
