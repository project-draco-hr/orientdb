{
  ODatabaseDocumentTx database=ODatabaseDocumentPool.global().acquire(getDatabaseURL(serverInstance.get(0)),"admin","admin");
  try {
    new ODocument("Customer").fields("name","Jay","surname","Miner").save();
    new ODocument("Customer").fields("name","Luke","surname","Skywalker").save();
    new ODocument("Provider").fields("name","Yoda","surname","Nothing").save();
    List<ODocument> result=database.query(new OSQLSynchQuery<OIdentifiable>("select count(*) from Person"));
    beginInstances=result.get(0).field("count");
  }
  finally {
    database.close();
  }
  System.out.println("Creating Writers and Readers threads...");
  final ExecutorService executor=Executors.newCachedThreadPool();
  int i=0;
  List<Callable<Void>> workers=new ArrayList<Callable<Void>>();
  for (  ServerRun server : serverInstance) {
    for (int j=0; j < writerCount; j++) {
      Writer writer=new Writer(i++,getDatabaseURL(server));
      workers.add(writer);
    }
    Reader reader=new Reader(getDatabaseURL(server));
    workers.add(reader);
  }
  List<Future<Void>> futures=executor.invokeAll(workers);
  System.out.println("Threads started, waiting for the end");
  executor.shutdown();
  Assert.assertTrue(executor.awaitTermination(10,TimeUnit.MINUTES));
  for (  Future<Void> future : futures) {
    future.get();
  }
  System.out.println("All threads have finished, shutting down server instances");
  for (  ServerRun server : serverInstance) {
    printStats(getDatabaseURL(server));
  }
}
