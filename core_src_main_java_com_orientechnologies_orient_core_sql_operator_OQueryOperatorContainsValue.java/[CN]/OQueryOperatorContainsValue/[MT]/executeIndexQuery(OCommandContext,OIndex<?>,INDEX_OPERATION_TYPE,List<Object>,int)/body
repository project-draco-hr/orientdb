{
  final OIndexDefinition indexDefinition=index.getDefinition();
  final OIndexInternal<?> internalIndex=index.getInternal();
  if (!internalIndex.canBeUsedInEqualityOperators())   return null;
  final Object result;
  if (indexDefinition.getParamCount() == 1) {
    if (!((indexDefinition instanceof OPropertyMapIndexDefinition) && ((OPropertyMapIndexDefinition)indexDefinition).getIndexBy() == OPropertyMapIndexDefinition.INDEX_BY.VALUE))     return null;
    final Object key=((OIndexDefinitionMultiValue)indexDefinition).createSingleValue(keyParams.get(0));
    if (key == null)     return null;
    final Object indexResult=index.get(key);
    if (indexResult instanceof Collection)     result=(Collection<OIdentifiable>)indexResult;
 else     if (indexResult == null)     result=Collections.emptyList();
 else     result=Collections.singletonList((OIdentifiable)indexResult);
  }
 else {
    final OCompositeIndexDefinition compositeIndexDefinition=(OCompositeIndexDefinition)indexDefinition;
    if (!((compositeIndexDefinition.getMultiValueDefinition() instanceof OPropertyMapIndexDefinition) && ((OPropertyMapIndexDefinition)compositeIndexDefinition.getMultiValueDefinition()).getIndexBy() == OPropertyMapIndexDefinition.INDEX_BY.VALUE))     return null;
    final Object keyOne=compositeIndexDefinition.createSingleValue(keyParams);
    if (keyOne == null)     return null;
    final Object keyTwo=compositeIndexDefinition.createSingleValue(keyParams);
    if (fetchLimit > -1)     result=index.getValuesBetween(keyOne,true,keyTwo,true,fetchLimit);
 else     result=index.getValuesBetween(keyOne,true,keyTwo,true);
  }
  updateProfiler(iContext,index,keyParams,indexDefinition);
  return result;
}
