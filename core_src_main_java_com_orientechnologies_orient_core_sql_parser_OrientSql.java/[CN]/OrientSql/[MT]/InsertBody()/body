{
  OInsertBody jjtn000=new OInsertBody(JJTINSERTBODY);
  boolean jjtc000=true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
  try {
    if (jj_2_14(2)) {
      jj_consume_token(LPAREN);
      Identifier();
      label_10:       while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case COMMA:
          ;
        break;
default :
      jj_la1[52]=jj_gen;
    break label_10;
}
jj_consume_token(COMMA);
Identifier();
}
jj_consume_token(RPAREN);
jj_consume_token(VALUES);
jj_consume_token(LPAREN);
Expression();
label_11: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case COMMA:
  ;
break;
default :
jj_la1[53]=jj_gen;
break label_11;
}
jj_consume_token(COMMA);
Expression();
}
jj_consume_token(RPAREN);
}
 else if (jj_2_15(3)) {
jj_consume_token(SET);
Identifier();
jj_consume_token(EQ);
Expression();
label_12: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case COMMA:
;
break;
default :
jj_la1[54]=jj_gen;
break label_12;
}
jj_consume_token(COMMA);
Identifier();
jj_consume_token(EQ);
Expression();
}
}
 else {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case SELECT:
case FROM:
case LPAREN:
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case FROM:
jj_consume_token(FROM);
break;
default :
jj_la1[55]=jj_gen;
;
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case SELECT:
SelectStatement();
break;
default :
jj_la1[56]=jj_gen;
if (jj_2_13(2)) {
jj_consume_token(LPAREN);
SelectStatement();
jj_consume_token(RPAREN);
}
 else {
jj_consume_token(-1);
throw new ParseException();
}
}
break;
case CONTENT:
jj_consume_token(CONTENT);
Json();
break;
default :
jj_la1[57]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case RETURN:
jj_consume_token(RETURN);
Projection();
break;
default :
jj_la1[58]=jj_gen;
;
}
}
 catch (Throwable jjte000) {
if (jjtc000) {
jjtree.clearNodeScope(jjtn000);
jjtc000=false;
}
 else {
jjtree.popNode();
}
if (jjte000 instanceof RuntimeException) {
{
if (true) throw (RuntimeException)jjte000;
}
}
if (jjte000 instanceof ParseException) {
{
if (true) throw (ParseException)jjte000;
}
}
{
if (true) throw (Error)jjte000;
}
}
 finally {
if (jjtc000) {
jjtree.closeNodeScope(jjtn000,true);
jjtn000.jjtSetLastToken(getToken(0));
}
}
}
