{
  final OWALChangesTree tree=new OWALChangesTree();
  tree.setDebug(true);
  final byte[] data=new byte[30];
  final long ts=System.currentTimeMillis();
  System.out.println("TestInsertRandomDM seed : " + ts);
  final Random rnd=new Random(ts);
  for (int i=0; i < 100; i++) {
    final int start=rnd.nextInt(data.length) - 3;
    final int length=rnd.nextInt(3) + 4;
    int cend=start + length;
    if (cend > data.length)     cend=data.length;
    int cstart=start;
    if (cstart < 0)     cstart=0;
    byte[] value=new byte[cend - cstart];
    rnd.nextBytes(value);
    System.arraycopy(value,0,data,cstart,cend - cstart);
    tree.add(value,cstart);
  }
  OByteBufferPool bufferPool=new OByteBufferPool(30);
  ByteBuffer buffer=bufferPool.acquireDirect(true);
  tree.applyChanges(buffer);
  Assert.assertEquals(getByteArray(buffer,0,30),data);
}
