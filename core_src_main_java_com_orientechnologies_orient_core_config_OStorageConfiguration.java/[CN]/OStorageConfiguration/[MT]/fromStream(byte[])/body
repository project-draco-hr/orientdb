{
  String[] values=new String(iStream).split("\\|");
  int index=0;
  version=Integer.parseInt(read(values[index++]));
  name=read(values[index++]);
  schemaRecordId=read(values[index++]);
  securityRecordId=read(values[index++]);
  dictionaryRecordId=read(values[index++]);
  localeLanguage=read(values[index++]);
  localeCountry=read(values[index++]);
  dateFormat=read(values[index++]);
  dateTimeFormat=read(values[index++]);
  int size=Integer.parseInt(read(values[index++]));
  String clusterType;
  clusters=new ArrayList<OStorageClusterConfiguration>(size);
  OStoragePhysicalClusterConfiguration phyCluster;
  OStorageLogicalClusterConfiguration logCluster;
  for (int i=0; i < size; ++i) {
    clusterType=read(values[index++]);
    if (clusterType.equals("p")) {
      phyCluster=new OStoragePhysicalClusterConfiguration(i);
      index=phySegmentFromStream(values,index,phyCluster);
      phyCluster.holeFile=new OStorageClusterHoleConfiguration(phyCluster,read(values[index++]),read(values[index++]),read(values[index++]));
      clusters.add(phyCluster);
    }
 else {
      logCluster=new OStorageLogicalClusterConfiguration(read(values[index++]),i,Integer.parseInt(read(values[index++])),new ORecordId(values[index++]));
      clusters.add(logCluster);
    }
  }
  size=Integer.parseInt(read(values[index++]));
  dataSegments=new ArrayList<OStorageDataConfiguration>(size);
  OStorageDataConfiguration data;
  for (int i=0; i < size; ++i) {
    data=new OStorageDataConfiguration();
    index=phySegmentFromStream(values,index,data);
    data.holeFile=new OStorageDataHoleConfiguration(data,read(values[index++]),read(values[index++]),read(values[index++]));
    dataSegments.add(data);
  }
  txSegment=new OStorageTxConfiguration(read(values[index++]),read(values[index++]),read(values[index++]),read(values[index++]),read(values[index++]));
  size=Integer.parseInt(read(values[index++]));
  properties=new ArrayList<OStorageEntryConfiguration>(size);
  for (int i=0; i < size; ++i) {
    properties.add(new OStorageEntryConfiguration(read(values[index++]),read(values[index++])));
  }
  return this;
}
