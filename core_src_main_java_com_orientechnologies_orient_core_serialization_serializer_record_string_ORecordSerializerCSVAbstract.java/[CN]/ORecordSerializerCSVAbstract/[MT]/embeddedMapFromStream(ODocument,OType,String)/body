{
  if (iValue.length() == 0)   return null;
  String value=iValue.substring(1,iValue.length() - 1);
  @SuppressWarnings("rawtypes") final Map map=new OLazyRecordMap(iSourceDocument,ODocument.RECORD_TYPE);
  if (value.length() == 0)   return map;
  final List<String> items=OStringSerializerHelper.smartSplit(value,OStringSerializerHelper.RECORD_SEPARATOR);
  List<String> entry;
  String mapValue;
  Object mapValueObject;
  for (  String item : items) {
    if (item != null && item.length() > 0) {
      entry=OStringSerializerHelper.smartSplit(item,OStringSerializerHelper.ENTRY_SEPARATOR);
      if (entry.size() > 0) {
        mapValue=entry.get(1);
        if (iLinkedType == null) {
          if (mapValue.length() > 0) {
            if (mapValue.charAt(0) == OStringSerializerHelper.EMBEDDED) {
              iLinkedType=OType.EMBEDDED;
              mapValue=mapValue.substring(1,mapValue.length() - 1);
            }
 else             if (Character.isDigit(mapValue.charAt(0)) || mapValue.charAt(0) == '+' || mapValue.charAt(0) == '-') {
              iLinkedType=getNumber(mapValue);
            }
 else             if (mapValue.charAt(0) == '\'' || mapValue.charAt(0) == '"')             iLinkedType=OType.STRING;
          }
 else           iLinkedType=OType.EMBEDDED;
        }
        mapValueObject=OStringSerializerHelper.fieldTypeFromStream(iLinkedType,mapValue);
        if (mapValueObject != null && mapValueObject instanceof ODocument)         ((ODocument)mapValueObject).setOwner(iSourceDocument);
        map.put((String)OStringSerializerHelper.fieldTypeFromStream(OType.STRING,entry.get(0)),mapValueObject);
      }
    }
  }
  return map;
}
