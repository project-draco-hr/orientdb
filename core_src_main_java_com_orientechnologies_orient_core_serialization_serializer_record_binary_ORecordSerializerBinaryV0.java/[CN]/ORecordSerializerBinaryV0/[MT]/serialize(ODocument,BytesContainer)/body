{
  if (document.getClassName() != null)   writeString(bytes,document.getClassName());
 else   writeEmptyString(bytes);
  int[] pos=new int[document.fields()];
  int i=0;
  Entry<String,?> values[]=new Entry[document.fields()];
  for (  Entry<String,Object> entry : document) {
    writeString(bytes,entry.getKey());
    pos[i]=bytes.alloc(OIntegerSerializer.INT_SIZE + 1);
    values[i]=entry;
    i++;
  }
  writeEmptyString(bytes);
  for (i=0; i < values.length; i++) {
    int pointer=0;
    Object value=values[i].getValue();
    if (value != null) {
      OType type=getFieldType(document,values[i].getKey(),value);
      if (type == null)       continue;
      pointer=writeSingleValue(bytes,value,type,getLinkedType(document,values[i].getKey()));
      OIntegerSerializer.INSTANCE.serialize(pointer,bytes.bytes,pos[i]);
      writeOType(bytes,(pos[i] + OIntegerSerializer.INT_SIZE),type);
    }
  }
}
