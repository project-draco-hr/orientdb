{
  final OCommandRequestText textRequest=(OCommandRequestText)iRequest;
  String queryText=textRequest.getText();
  String originalQuery=queryText;
  try {
    queryText=preParse(queryText,iRequest);
    textRequest.setText(queryText);
    final ODatabaseDocument database=getDatabase();
    init((OCommandRequestText)iRequest);
    StringBuilder word=new StringBuilder();
    int oldPos=0;
    int pos=nextWord(parserText,parserTextUpperCase,oldPos,word,true);
    if (pos == -1 || !word.toString().equals(KEYWORD_ALTER))     throw new OCommandSQLParsingException("Keyword " + KEYWORD_ALTER + " not found",parserText,oldPos);
    oldPos=pos;
    pos=nextWord(parserText,parserTextUpperCase,oldPos,word,true);
    if (pos == -1 || !word.toString().equals(KEYWORD_CLASS))     throw new OCommandSQLParsingException("Keyword " + KEYWORD_CLASS + " not found",parserText,oldPos);
    oldPos=pos;
    pos=nextWord(parserText,parserTextUpperCase,oldPos,word,false);
    if (pos == -1)     throw new OCommandSQLParsingException("Expected <class>",parserText,oldPos);
    className=word.toString();
    if (className.startsWith("`") && className.endsWith("`") && className.length() > 1) {
      className=className.substring(1,className.length() - 1);
    }
    oldPos=pos;
    pos=nextWord(parserText,parserTextUpperCase,oldPos,word,true);
    if (pos == -1)     throw new OCommandSQLParsingException("Missed the class's attribute to change",parserText,oldPos);
    final String attributeAsString=word.toString();
    try {
      attribute=OClass.ATTRIBUTES.valueOf(attributeAsString.toUpperCase(Locale.ENGLISH));
    }
 catch (    IllegalArgumentException e) {
      throw new OCommandSQLParsingException("Unknown class's attribute '" + attributeAsString + "'. Supported attributes are: "+ Arrays.toString(OClass.ATTRIBUTES.values()),parserText,oldPos);
    }
    value=parserText.substring(pos + 1).trim();
    if (value.startsWith("`") && value.endsWith("`") && value.length() > 1) {
      value=value.substring(1,value.length() - 1);
    }
    if (parserTextUpperCase.endsWith("UNSAFE")) {
      unsafe=true;
      value=value.substring(0,value.length() - "UNSAFE".length());
      for (int i=value.length() - 1; value.charAt(i) == ' ' || value.charAt(i) == '\t'; i--)       value=value.substring(0,value.length() - 1);
    }
    if (value.length() == 0)     throw new OCommandSQLParsingException("Missed the property's value to change for attribute '" + attribute + "'",parserText,oldPos);
    if (value.equalsIgnoreCase("null"))     value=null;
  }
  finally {
    textRequest.setText(originalQuery);
  }
  return this;
}
