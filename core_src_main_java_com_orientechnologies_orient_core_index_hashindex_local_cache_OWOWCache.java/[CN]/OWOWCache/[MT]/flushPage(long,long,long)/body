{
  if (writeAheadLog != null) {
    OLogSequenceNumber lsn=OLocalPage.getLogSequenceNumberFromPage(directMemory,dataPointer);
    OLogSequenceNumber flushedLSN=writeAheadLog.getFlushedLSN();
    if (flushedLSN == null || flushedLSN.compareTo(lsn) < 0)     writeAheadLog.flush();
  }
  final byte[] content=directMemory.get(dataPointer,pageSize);
  OLongSerializer.INSTANCE.serializeNative(MAGIC_NUMBER,content,0);
  final int crc32=calculatePageCrc(content);
  OIntegerSerializer.INSTANCE.serializeNative(crc32,content,OLongSerializer.LONG_SIZE);
  final OFileClassic fileClassic=files.get(fileId);
  final long startPosition=pageIndex * pageSize;
  final long endPosition=startPosition + pageSize;
  if (fileClassic.getFilledUpTo() < endPosition)   fileClassic.allocateSpace((int)(endPosition - fileClassic.getFilledUpTo()));
  fileClassic.write(pageIndex * pageSize,content);
  if (syncOnPageFlush)   fileClassic.synch();
}
