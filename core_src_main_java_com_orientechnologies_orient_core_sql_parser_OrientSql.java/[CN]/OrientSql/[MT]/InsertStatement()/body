{
  OInsertStatement jjtn000=new OInsertStatement(JJTINSERTSTATEMENT);
  boolean jjtc000=true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
  try {
    jj_consume_token(INSERT);
    jj_consume_token(INTO);
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case TO:
case VALUES:
case SET:
case ADD:
case PUT:
case MERGE:
case CONTENT:
case REMOVE:
case ORDER:
case GROUP:
case OFFSET:
case RECORD:
case LUCENE:
case IN:
case KEY:
case IDENTIFIER:
      jjtn000.targetClass=Identifier();
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case CLUSTER:
      jj_consume_token(CLUSTER);
    jjtn000.targetClusterName=Identifier();
  break;
default :
jj_la1[89]=jj_gen;
;
}
break;
case CLUSTER_IDENTIFIER:
jjtn000.targetCluster=Cluster();
break;
case INDEX_IDENTIFIER:
case INDEXVALUES_IDENTIFIER:
case INDEXVALUESASC_IDENTIFIER:
case INDEXVALUESDESC_IDENTIFIER:
jjtn000.targetIndex=IndexIdentifier();
break;
default :
jj_la1[90]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case RETURN:
jj_consume_token(RETURN);
jjtn000.returnStatement=Projection();
break;
default :
jj_la1[91]=jj_gen;
;
}
jjtn000.insertBody=InsertBody();
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case UNSAFE:
jj_consume_token(UNSAFE);
jjtn000.unsafe=true;
break;
default :
jj_la1[92]=jj_gen;
;
}
jjtree.closeNodeScope(jjtn000,true);
jjtc000=false;
jjtn000.jjtSetLastToken(getToken(0));
{
if (true) return jjtn000;
}
}
 catch (Throwable jjte000) {
if (jjtc000) {
jjtree.clearNodeScope(jjtn000);
jjtc000=false;
}
 else {
jjtree.popNode();
}
if (jjte000 instanceof RuntimeException) {
{
if (true) throw (RuntimeException)jjte000;
}
}
if (jjte000 instanceof ParseException) {
{
if (true) throw (ParseException)jjte000;
}
}
{
if (true) throw (Error)jjte000;
}
}
 finally {
if (jjtc000) {
jjtree.closeNodeScope(jjtn000,true);
jjtn000.jjtSetLastToken(getToken(0));
}
}
throw new Error("Missing return statement in function");
}
