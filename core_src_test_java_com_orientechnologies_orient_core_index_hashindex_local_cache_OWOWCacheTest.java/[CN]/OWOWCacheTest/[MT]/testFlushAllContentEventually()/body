{
  closeCacheAndDeleteFile();
  wowCache=new OWOWCache(true,pageSize,10000,writeAheadLog,10,100,storageLocal,false);
  Random random=new Random();
  long[] pagePointers=new long[200];
  long fileId=wowCache.openFile(fileName);
  for (int i=0; i < pagePointers.length; i++) {
    byte[] data=new byte[8];
    random.nextBytes(data);
    pagePointers[i]=directMemory.allocate(new byte[pageSize]);
    directMemory.set(pagePointers[i] + systemOffset,data,0,data.length);
    wowCache.put(fileId,i,pagePointers[i]);
  }
  for (int i=0; i < pagePointers.length; i++) {
    long dataPointer=pagePointers[i];
    byte[] dataOne=directMemory.get(dataPointer + systemOffset,8);
    byte[] dataTwo=directMemory.get(wowCache.get(fileId,i) + systemOffset,8);
    Assert.assertEquals(dataTwo,dataOne);
  }
  Thread.sleep(200 * 10 + 1000);
  for (int i=0; i < pagePointers.length; i++) {
    byte[] dataContent=directMemory.get(pagePointers[i] + systemOffset,8);
    assertFile(i,dataContent,new OLogSequenceNumber(0,0));
  }
  for (  long pagePointer : pagePointers) {
    directMemory.free(pagePointer);
  }
}
