{
  acquireExclusiveLock();
  try {
    final OAtomicOperation atomicOperation=startAtomicOperation();
    diskCache.loadPinnedPage(hashStateEntry);
    hashStateEntry.acquireExclusiveLock();
    try {
      OHashIndexFileLevelMetadataPage page=new OHashIndexFileLevelMetadataPage(hashStateEntry,getChangesTree(atomicOperation,hashStateEntry),false);
      for (int i=0; i < HASH_CODE_SIZE; i++) {
        if (!page.isRemoved(i)) {
          diskCache.truncateFile(page.getFileId(i));
          page.setBucketsCount(i,0);
          page.setTombstoneIndex(i,-1);
        }
      }
      hashStateEntry.markDirty();
    }
  finally {
      hashStateEntry.releaseExclusiveLock();
      diskCache.release(hashStateEntry);
    }
    if (nullKeyIsSupported)     diskCache.truncateFile(nullBucketFileId);
    initHashTreeState();
    endAtomicOperation(false);
  }
 catch (  IOException e) {
    rollback();
    throw new OIndexException("Error during hash table clear",e);
  }
catch (  Throwable e) {
    rollback();
    throw new OSBTreeException(null,e);
  }
 finally {
    releaseExclusiveLock();
  }
}
