{
  acquireExclusiveLock();
  try {
    this.storage=storageLocal;
    this.diskCache=storage.getDiskCache();
    this.name=name;
    this.keySerializer=keySerializer;
    this.valueSerializer=valueSerializer;
    fileId=diskCache.openFile(name + dataFileExtension);
    initDurableComponent(storageLocal);
    initSysBucket();
    OCacheEntry rootCacheEntry;
    if (rootBucketPointer.isValid()) {
      this.rootBucketPointer=rootBucketPointer;
      rootCacheEntry=diskCache.load(fileId,this.rootBucketPointer.getPageIndex(),false);
    }
 else {
      final AllocationResult allocationResult=allocateBucket();
      rootCacheEntry=allocationResult.getCacheEntry();
      this.rootBucketPointer=allocationResult.getPointer();
    }
    OCachePointer rootPointer=rootCacheEntry.getCachePointer();
    rootPointer.acquireExclusiveLock();
    try {
      super.startDurableOperation(null);
      OSBTreeBonsaiBucket<K,V> rootBucket=new OSBTreeBonsaiBucket<K,V>(rootPointer.getDataPointer(),this.rootBucketPointer.getPageOffset(),true,keySerializer,valueSerializer,getTrackMode());
      rootBucket.setKeySerializerId(keySerializer.getId());
      rootBucket.setValueSerializerId(valueSerializer.getId());
      rootBucket.setTreeSize(0);
      super.logPageChanges(rootBucket,fileId,this.rootBucketPointer.getPageIndex(),true);
      rootCacheEntry.markDirty();
    }
  finally {
      rootPointer.releaseExclusiveLock();
      diskCache.release(rootCacheEntry);
    }
    super.endDurableOperation(null,false);
  }
 catch (  IOException e) {
    try {
      super.endDurableOperation(null,true);
    }
 catch (    IOException e1) {
      OLogManager.instance().error(this,"Error during sbtree data rollback",e1);
    }
    throw new OSBTreeException("Error creation of sbtree with name" + name,e);
  }
 finally {
    releaseExclusiveLock();
  }
}
