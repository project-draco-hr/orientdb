{
  groupBucketOverflowInfoByChainLength=new HashMap[16];
  groupBucketOverflowInfoByIndex.clear();
  maxChainIndex=-1;
  for (long i=0; i < pageSize; i++) {
    int chainLength=0;
    for (int cg=0; cg < g; cg++) {
      final Integer mainBucketOverflowInfo=mainBucketOverflowInfoByIndex.get(cg * pageSize + i);
      if (mainBucketOverflowInfo != null)       chainLength+=mainBucketOverflowInfo;
    }
    if (chainLength > 0) {
      if (chainLength > groupBucketOverflowInfoByChainLength.length) {
        final Map<Long,Integer>[] newGroupBucketOverflow=new HashMap[groupBucketOverflowInfoByChainLength.length << 1];
        System.arraycopy(groupBucketOverflowInfoByChainLength,0,newGroupBucketOverflow,0,groupBucketOverflowInfoByChainLength.length);
        groupBucketOverflowInfoByChainLength=newGroupBucketOverflow;
      }
      Map<Long,Integer> infoMap=groupBucketOverflowInfoByChainLength[chainLength];
      if (infoMap == null) {
        infoMap=new HashMap<Long,Integer>(1024);
        groupBucketOverflowInfoByChainLength[chainLength]=infoMap;
      }
      infoMap.put(i,chainLength);
      groupBucketOverflowInfoByIndex.put(i,chainLength);
      if (chainLength > maxChainIndex)       maxChainIndex=chainLength;
    }
  }
}
