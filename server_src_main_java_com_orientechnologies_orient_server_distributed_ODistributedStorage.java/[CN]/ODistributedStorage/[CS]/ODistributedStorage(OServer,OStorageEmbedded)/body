{
  this.serverInstance=iServer;
  this.dManager=iServer.getDistributedManager();
  this.wrapped=wrapped;
  ODistributedServerLog.info(this,dManager != null ? dManager.getLocalNodeName() : "?",null,ODistributedServerLog.DIRECTION.NONE,"Installing distributed storage on database '%s'",wrapped.getName());
  purgeDeletedRecordsTask=new TimerTask(){
    @Override public void run(){
      final long now=System.currentTimeMillis();
      for (Iterator<Map.Entry<ORecordId,OPair<Long,ORecordVersion>>> it=deletedRecords.entrySet().iterator(); it.hasNext(); ) {
        final Map.Entry<ORecordId,OPair<Long,ORecordVersion>> entry=it.next();
        try {
          final ORecordId rid=entry.getKey();
          final long time=entry.getValue().getKey();
          final ORecordVersion version=entry.getValue().getValue();
          if (now - time > (OGlobalConfiguration.DISTRIBUTED_ASYNCH_RESPONSES_TIMEOUT.getValueAsLong() * 2)) {
            final OStorageOperationResult<Boolean> result=wrapped.deleteRecord(rid,version,0,null);
            if (result == null || !result.getResult())             OLogManager.instance().error(this,"Error on deleting record %s v.%s",rid,version);
          }
        }
  finally {
          it.remove();
        }
      }
    }
  }
;
  Orient.instance().getTimer().schedule(purgeDeletedRecordsTask,OGlobalConfiguration.DISTRIBUTED_PURGE_RESPONSES_TIMER_DELAY.getValueAsLong(),OGlobalConfiguration.DISTRIBUTED_PURGE_RESPONSES_TIMER_DELAY.getValueAsLong());
  asynchronousOperationsQueue=new ArrayBlockingQueue<OAsynchDistributedOperation>(10000);
  asynchWorker=new Thread(){
    @Override public void run(){
      while (running) {
        try {
          final OAsynchDistributedOperation operation=asynchronousOperationsQueue.take();
          dManager.sendRequest(operation.getDatabaseName(),operation.getClusterNames(),operation.getNodes(),operation.getTask(),EXECUTION_MODE.NO_RESPONSE);
        }
 catch (        InterruptedException e) {
          Thread.interrupted();
        }
catch (        Throwable e) {
          ODistributedServerLog.error(this,dManager != null ? dManager.getLocalNodeName() : "?",null,ODistributedServerLog.DIRECTION.OUT,"Error on executing asynch operation",e);
        }
      }
    }
  }
;
  asynchWorker.start();
}
