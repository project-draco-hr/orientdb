{
  acquireSharedLock();
  try {
    OCacheEntry rootCacheEntry=diskCache.load(fileId,rootBucketPointer.getPageIndex(),false);
    OAtomicOperation atomicOperation=storage.getAtomicOperationsManager().getCurrentOperation();
    try {
      OSBTreeBonsaiBucket rootBucket=new OSBTreeBonsaiBucket<K,V>(rootCacheEntry,rootBucketPointer.getPageOffset(),keySerializer,valueSerializer,getChangesTree(atomicOperation,rootCacheEntry));
      return rootBucket.getTreeSize();
    }
  finally {
      diskCache.release(rootCacheEntry);
    }
  }
 catch (  IOException e) {
    throw new OSBTreeException("Error during retrieving of size of index " + name);
  }
 finally {
    releaseSharedLock();
  }
}
