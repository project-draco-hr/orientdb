{
  if (iRecords == null)   return;
  if (accept == null || (accept.contains(OHttpUtils.CONTENT_JSON))) {
    if (iFormat == null)     iFormat=JSON_FORMAT;
 else     iFormat=JSON_FORMAT + "," + iFormat;
    final StringWriter buffer=new StringWriter();
    final OJSONWriter json=new OJSONWriter(buffer,iFormat);
    json.beginObject();
    final String format=iFetchPlan != null ? iFormat + ",fetchPlan:" + iFetchPlan : iFormat;
    json.beginCollection(-1,true,"result");
    formatMultiValue(iRecords,buffer,format);
    json.endCollection(-1,true);
    json.endObject();
    send(OHttpUtils.STATUS_OK_CODE,"OK",OHttpUtils.CONTENT_JSON,buffer.toString(),null);
  }
 else   if (accept.contains("text/csv")) {
    sendStream(OHttpUtils.STATUS_OK_CODE,"OK",OHttpUtils.CONTENT_JSON,"data.csv",new OCallable<Void,OChunkedResponse>(){
      @Override public Void call(      final OChunkedResponse iArgument){
        final LinkedHashSet<String> colNames=new LinkedHashSet<String>();
        final List<ODocument> records=new ArrayList<ODocument>();
        while (iRecords.hasNext()) {
          final OIdentifiable r=iRecords.next();
          if (r != null) {
            final ORecord<?> rec=r.getRecord();
            if (rec != null) {
              if (rec instanceof ODocument) {
                final ODocument doc=(ODocument)rec;
                records.add(doc);
                for (                String fieldName : doc.fieldNames())                 colNames.add(fieldName);
              }
            }
          }
        }
        final List<String> orderedColumns=new ArrayList<String>(colNames);
        try {
          for (int col=0; col < orderedColumns.size(); ++col) {
            if (col > 0)             iArgument.write(',');
            iArgument.write(orderedColumns.get(col).getBytes());
          }
          iArgument.write(OHttpUtils.EOL);
          for (          ODocument doc : records) {
            for (int col=0; col < orderedColumns.size(); ++col) {
              if (col > 0)               iArgument.write(',');
              Object value=doc.field(orderedColumns.get(col));
              if (value != null) {
                if (!(value instanceof Number))                 value="\"" + value + "\"";
                iArgument.write(value.toString().getBytes());
              }
            }
            iArgument.write(OHttpUtils.EOL);
          }
          iArgument.flush();
        }
 catch (        IOException e) {
          e.printStackTrace();
        }
        return null;
      }
    }
);
  }
}
