{
  if (ODistributedThreadLocal.INSTANCE.get() != null)   return wrapped.command(iCommand);
  final ODistributedConfiguration dConfig=dManager.getConfiguration(getName());
  if (!dConfig.isReplicationActive(null))   return wrapped.command(iCommand);
  final OCommandExecutor executor=OCommandManager.instance().getExecutor(iCommand);
  executor.setProgressListener(iCommand.getProgressListener());
  executor.parse(iCommand);
  boolean distribute=false;
  final OCommandExecutor exec=executor instanceof OCommandExecutorSQLDelegate ? ((OCommandExecutorSQLDelegate)executor).getDelegate() : executor;
  if (ODistributedThreadLocal.INSTANCE.get() == null)   if (exec instanceof OCommandDistributedConditionalReplicateRequest)   distribute=((OCommandDistributedConditionalReplicateRequest)exec).isReplicated();
 else   if (exec instanceof OCommandDistributedReplicateRequest)   distribute=true;
  if (!distribute)   return wrapped.executeCommand(iCommand,executor);
  try {
    dManager.sendRequest();
    final ODistributedRequest request=dManager.getMessageService().createRequest();
    request.setPayload(new OSQLCommandTask(serverInstance,serverInstance.getDistributedManager(),wrapped.getName(),iCommand.getText()));
    final Object result=dManager.getMessageService().send(request).getPayload();
    if (result instanceof Throwable)     throw new ODistributedException("Error on execution distributed COMMAND",(Throwable)result);
    return result;
  }
 catch (  Exception e) {
    handleDistributedException("Cannot route COMMAND operation to the distributed node",e);
    return null;
  }
}
