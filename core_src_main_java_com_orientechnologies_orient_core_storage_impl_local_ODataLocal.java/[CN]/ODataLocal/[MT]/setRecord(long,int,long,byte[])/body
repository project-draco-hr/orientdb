{
  acquireExclusiveLock();
  try {
    long[] pos=getRelativePosition(iPosition);
    final OFile file=files[(int)pos[0]];
    final int recordSize=file.readInt(pos[1]);
    if (iContent.length == recordSize) {
      file.write(pos[1] + RECORD_FIX_SIZE,iContent);
      OProfiler.getInstance().updateCounter("ODataLocal.setRecord:tot.reused.space",+1);
      return iPosition;
    }
 else     if (recordSize - iContent.length > RECORD_FIX_SIZE) {
      writeRecord(pos,iClusterSegment,iClusterPosition,iContent);
      createHole(iPosition + RECORD_FIX_SIZE + iContent.length,recordSize - iContent.length - RECORD_FIX_SIZE);
      OProfiler.getInstance().updateCounter("ODataLocal.setRecord:part.reused.space",+1);
    }
 else {
      createHole(iPosition,recordSize);
      pos=getFreeSpace(iContent.length + RECORD_FIX_SIZE);
      writeRecord(pos,iClusterSegment,iClusterPosition,iContent);
      OProfiler.getInstance().updateCounter("ODataLocal.setRecord:new.space",+1);
    }
    return getAbsolutePosition(pos);
  }
  finally {
    releaseExclusiveLock();
  }
}
