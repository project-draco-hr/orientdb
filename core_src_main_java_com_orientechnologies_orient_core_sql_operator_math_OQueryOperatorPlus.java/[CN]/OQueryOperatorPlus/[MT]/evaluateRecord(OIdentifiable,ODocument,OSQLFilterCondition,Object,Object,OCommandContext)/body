{
  if (iRight == null)   return iLeft;
  if (iLeft == null)   return iRight;
  if (iLeft instanceof Date)   iLeft=((Date)iLeft).getTime();
  if (iRight instanceof Date)   iRight=((Date)iRight).getTime();
  if (iLeft instanceof String)   return (String)iLeft + iRight.toString();
 else   if (iRight instanceof String)   return iLeft.toString() + (String)iRight;
 else   if (iLeft instanceof Number && iRight instanceof Number) {
    final Number l=(Number)iLeft;
    final Number r=(Number)iRight;
    Class maxPrecisionClass=OQueryOperatorMultiply.getMaxPrecisionClass(l,r);
    if (Integer.class.equals(maxPrecisionClass))     return OQueryOperatorMultiply.tryDownscaleToInt(l.longValue() + r.longValue());
 else     if (Long.class.equals(maxPrecisionClass))     return l.longValue() + r.longValue();
 else     if (Short.class.equals(maxPrecisionClass))     return l.shortValue() + r.shortValue();
 else     if (Float.class.equals(maxPrecisionClass))     return l.floatValue() + r.floatValue();
 else     if (Double.class.equals(maxPrecisionClass))     return l.doubleValue() + r.doubleValue();
 else     if (BigDecimal.class.equals(maxPrecisionClass)) {
      return (OQueryOperatorMultiply.toBigDecimal(l)).add(OQueryOperatorMultiply.toBigDecimal(r));
    }
  }
  return null;
}
