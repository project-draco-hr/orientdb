{
  String firstClass=compiledFilter.getClasses().size() > 0 ? compiledFilter.getClasses().keySet().iterator().next() : null;
  final int[] clusterIds;
  if (firstClass != null) {
    OClass cls=database.getMetadata().getSchema().getClass(firstClass.toLowerCase());
    if (cls == null)     throw new OCommandExecutionException("Class " + firstClass + " was not found");
    database.checkSecurity(ODatabaseSecurityResources.CLASS,ORole.PERMISSION_READ,cls.getName());
    if (record instanceof ORecordSchemaAware<?>)     ((ORecordSchemaAware<?>)record).setClassName(cls.getName());
    clusterIds=cls.getClusterIds();
    for (    int clusterId : clusterIds)     database.checkSecurity(ODatabaseSecurityResources.CLUSTER,ORole.PERMISSION_READ,database.getClusterNameById(clusterId),clusterId);
  }
 else {
    String firstCluster=compiledFilter.getClusters().size() > 0 ? compiledFilter.getClusters().keySet().iterator().next() : null;
    if (firstCluster == null || firstCluster.length() == 0)     throw new OCommandExecutionException("No cluster or schema class selected in query");
    if (Character.isDigit(firstCluster.charAt(0)))     clusterIds=OStringSerializerHelper.splitIntArray(firstCluster);
 else     clusterIds=new int[]{database.getClusterIdByName(firstCluster.toLowerCase())};
    database.checkSecurity(ODatabaseSecurityResources.CLUSTER,ORole.PERMISSION_READ,firstCluster.toLowerCase(),clusterIds[0]);
  }
  ((OStorageLocal)database.getStorage()).browse(database.getId(),clusterIds,this,record,false);
  return null;
}
