{
  long oldIndexUsage=profiler.getCounter("Query.indexUsage");
  long oldCompositeIndexUsage=profiler.getCounter("Query.compositeIndexUsage");
  long oldCompositeIndexUsage2=profiler.getCounter("Query.compositeIndexUsage.2");
  if (oldIndexUsage == -1) {
    oldIndexUsage=0;
  }
  final List<ODocument> result=database.command(new OSQLSynchQuery<ODocument>("select * from sqlSelectIndexReuseTestClass where fLinkMap containskey 'key12'")).execute();
  Assert.assertEquals(result.size(),10);
  final Map<String,ORID> linkMap=new HashMap<String,ORID>();
  final int clusterId=database.getMetadata().getSchema().getClass("sqlSelectIndexReuseTestClass").getClusterIds()[0];
  linkMap.put("key11",new ORecordId(clusterId,1));
  linkMap.put("key12",new ORecordId(clusterId,1));
  linkMap.put("key13",new ORecordId(clusterId,1));
  linkMap.put("key14",new ORecordId(clusterId,1));
  for (  final ODocument doc : result) {
    final Map<String,OIdentifiable> resultLinkMap=(Map<String,OIdentifiable>)doc.field("fLinkMap");
    for (    Map.Entry<String,OIdentifiable> mapEntry : resultLinkMap.entrySet()) {
      final ORID link=(linkMap.get(mapEntry.getKey())).getIdentity();
      Assert.assertEquals(mapEntry.getValue(),link);
    }
  }
  Assert.assertEquals(profiler.getCounter("Query.indexUsage"),oldIndexUsage + 1);
  Assert.assertEquals(profiler.getCounter("Query.compositeIndexUsage"),oldCompositeIndexUsage);
  Assert.assertEquals(profiler.getCounter("Query.compositeIndexUsage.2"),oldCompositeIndexUsage2);
}
