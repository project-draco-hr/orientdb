{
  final int maxCoherentResponses=bestResponsesGroup.size();
  if (maxCoherentResponses < quorum)   return false;
  for (  List<ODistributedResponse> responseGroup : responseGroups) {
    if (responseGroup != bestResponsesGroup && responseGroup.size() == maxCoherentResponses) {
      final List<String> a=new ArrayList<String>();
      Object aResponse=null;
      for (      ODistributedResponse r : bestResponsesGroup) {
        a.add(r.getExecutorNodeName());
        aResponse=r.getPayload();
      }
      final List<String> b=new ArrayList<String>();
      Object bResponse=null;
      for (      ODistributedResponse r : responseGroup) {
        b.add(r.getExecutorNodeName());
        bResponse=r.getPayload();
      }
      final StringBuilder details=new StringBuilder();
      details.append(" A=").append(aResponse);
      details.append(", B=").append(bResponse);
      ODistributedServerLog.error(this,dManager.getLocalNodeName(),null,DIRECTION.NONE,"detected possible split brain network where 2 groups of servers A%s and B%s have different contents. Cannot decide who is the winner even if the quorum (%d) has been reached. Request (%s) responses:%s",a,b,quorum,request,details);
      return true;
    }
  }
  return false;
}
