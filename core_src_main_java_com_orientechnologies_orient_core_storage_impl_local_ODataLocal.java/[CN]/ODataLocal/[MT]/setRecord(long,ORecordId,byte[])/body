{
  acquireExclusiveLock();
  try {
    long[] pos=getRelativePosition(iPosition);
    final OFile file=files[(int)pos[0]];
    final int recordSize=file.readInt(pos[1]);
    final int contentLength=iContent != null ? iContent.length : 0;
    if (contentLength == recordSize) {
      file.write(pos[1] + RECORD_FIX_SIZE,iContent);
      Orient.instance().getProfiler().updateCounter(PROFILER_UPDATE_REUSED_ALL,+1);
      return iPosition;
    }
 else     if (recordSize - contentLength > RECORD_FIX_SIZE + 50) {
      writeRecord(pos,iRid.clusterId,iRid.clusterPosition,iContent);
      createHole(iPosition + RECORD_FIX_SIZE + contentLength,recordSize - contentLength - RECORD_FIX_SIZE);
      Orient.instance().getProfiler().updateCounter(PROFILER_UPDATE_REUSED_PARTIAL,+1);
    }
 else {
      createHole(iPosition,recordSize);
      pos=getFreeSpace(contentLength + RECORD_FIX_SIZE);
      writeRecord(pos,iRid.clusterId,iRid.clusterPosition,iContent);
      Orient.instance().getProfiler().updateCounter(PROFILER_UPDATE_NOT_REUSED,+1);
    }
    return getAbsolutePosition(pos);
  }
  finally {
    releaseExclusiveLock();
  }
}
