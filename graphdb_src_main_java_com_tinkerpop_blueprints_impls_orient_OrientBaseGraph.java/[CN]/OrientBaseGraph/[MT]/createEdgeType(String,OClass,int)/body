{
  makeActive();
  OrientEdgeType.checkType(iSuperClass);
  return executeOutsideTx(new OCallable<OrientEdgeType,OrientBaseGraph>(){
    @Override public OrientEdgeType call(    final OrientBaseGraph g){
      return new OrientEdgeType(g,getRawGraph().getMetadata().getSchema().createClass(iClassName,clusters,iSuperClass));
    }
  }
,"create edge type '",iClassName,"' as subclass of '",iSuperClass.getName(),"' (clusters=" + clusters + ")");
}
