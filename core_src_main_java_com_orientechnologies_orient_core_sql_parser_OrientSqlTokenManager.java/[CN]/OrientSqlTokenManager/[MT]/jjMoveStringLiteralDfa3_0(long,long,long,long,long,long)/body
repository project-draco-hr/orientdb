{
  if (((active0&=old0) | (active1&=old1) | (active2&=old2)) == 0L)   return jjStartNfa_0(1,old0,old1,old2);
  try {
    curChar=input_stream.readChar();
  }
 catch (  java.io.IOException e) {
    jjStopStringLiteralDfa_0(2,active0,active1,active2);
    return 3;
  }
switch (curChar) {
case 61:
    if ((active2 & 0x2L) != 0L)     return jjStopAtPos(3,129);
  break;
case 101:
if ((active1 & 0x20000L) != 0L) return jjStartNfaWithStates_0(3,81,51);
break;
case 105:
return jjMoveStringLiteralDfa4_0(active0,0x2000000000000000L,active1,0L,active2,0L);
case 115:
return jjMoveStringLiteralDfa4_0(active0,0L,active1,0x40000L,active2,0x20000L);
case 116:
return jjMoveStringLiteralDfa4_0(active0,0L,active1,0L,active2,0x10000L);
default :
break;
}
return jjStartNfa_0(2,active0,active1,active2);
}
