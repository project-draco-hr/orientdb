{
  if (iSource == null)   throw new OSerializationException("Error on unmarshalling JSON content: content is null");
  iSource=iSource.trim();
  if (!iSource.startsWith("{") || !iSource.endsWith("}"))   throw new OSerializationException("Error on unmarshalling JSON content: content must be between { }");
  if (iRecord != null)   iRecord.clear();
  iSource=iSource.substring(1,iSource.length() - 1).trim();
  boolean noMap=false;
  if (iOptions != null) {
    final String[] format=iOptions.split(",");
    for (    String f : format)     if (f.equals("noMap"))     noMap=true;
  }
  final List<String> fields=OStringSerializerHelper.smartSplit(iSource,PARAMETER_SEPARATOR,0,-1,true,true,false,' ','\n','\r','\t');
  if (fields.size() % 2 != 0)   throw new OSerializationException("Error on unmarshalling JSON content: wrong format. Use <field> : <value>");
  Map<String,Character> fieldTypes=null;
  if (fields != null && fields.size() > 0) {
    for (int i=0; i < fields.size(); i+=2) {
      final String fieldName=OStringSerializerHelper.getStringContent(fields.get(i));
      final String fieldValue=fields.get(i + 1);
      final String fieldValueAsString=OStringSerializerHelper.getStringContent(fieldValue);
      if (fieldName.equals(ATTRIBUTE_FIELD_TYPES) && iRecord instanceof ODocument) {
        final String[] fieldTypesParts=fieldValueAsString.split(",");
        if (fieldTypesParts.length > 0) {
          fieldTypes=new HashMap<String,Character>();
          String[] part;
          for (          String f : fieldTypesParts) {
            part=f.split("=");
            if (part.length == 2)             fieldTypes.put(part[0],part[1].charAt(0));
          }
        }
      }
 else       if (fieldName.equals(ODocumentHelper.ATTRIBUTE_TYPE)) {
        if (iRecord == null || iRecord.getRecordType() != fieldValueAsString.charAt(0)) {
          iRecord=Orient.instance().getRecordFactoryManager().newInstance((byte)fieldValueAsString.charAt(0));
        }
      }
 else       if (needReload && fieldName.equals(ODocumentHelper.ATTRIBUTE_RID) && iRecord instanceof ODocument) {
        if (fieldValue != null && fieldValue.length() > 0) {
          ORecordInternal<?> localRecord=ODatabaseRecordThreadLocal.INSTANCE.get().load(new ORecordId(fieldValueAsString));
          if (localRecord != null)           iRecord=localRecord;
        }
      }
    }
    try {
      int recordVersion=0;
      long timestamp=0L;
      long macAddress=0L;
      for (int i=0; i < fields.size(); i+=2) {
        final String fieldName=OStringSerializerHelper.getStringContent(fields.get(i));
        final String fieldValue=fields.get(i + 1);
        final String fieldValueAsString=OStringSerializerHelper.getStringContent(fieldValue);
        if (fieldName.equals(ODocumentHelper.ATTRIBUTE_RID))         iRecord.setIdentity(new ORecordId(fieldValueAsString));
 else         if (fieldName.equals(ODocumentHelper.ATTRIBUTE_VERSION))         if (OGlobalConfiguration.DB_USE_DISTRIBUTED_VERSION.getValueAsBoolean())         recordVersion=Integer.parseInt(fieldValue);
 else         iRecord.getRecordVersion().setCounter(Integer.parseInt(fieldValue));
 else         if (fieldName.equals(ODocumentHelper.ATTRIBUTE_VERSION_TIMESTAMP)) {
          if (OGlobalConfiguration.DB_USE_DISTRIBUTED_VERSION.getValueAsBoolean())           timestamp=Long.parseLong(fieldValue);
        }
 else         if (fieldName.equals(ODocumentHelper.ATTRIBUTE_VERSION_MACADDRESS)) {
          if (OGlobalConfiguration.DB_USE_DISTRIBUTED_VERSION.getValueAsBoolean())           macAddress=Long.parseLong(fieldValue);
        }
 else         if (fieldName.equals(ODocumentHelper.ATTRIBUTE_TYPE)) {
          continue;
        }
 else         if (fieldName.equals(ODocumentHelper.ATTRIBUTE_CLASS) && iRecord instanceof ODocument)         ((ODocument)iRecord).setClassNameIfExists("null".equals(fieldValueAsString) ? null : fieldValueAsString);
 else         if (fieldName.equals(ATTRIBUTE_FIELD_TYPES) && iRecord instanceof ODocument)         continue;
 else         if (fieldName.equals("value") && !(iRecord instanceof ODocument)) {
          if ("null".equals(fieldValue))           iRecord.fromStream(new byte[]{});
 else           if (iRecord instanceof ORecordBytes) {
            iRecord.fromStream(OBase64Utils.decode(fieldValueAsString));
          }
 else           if (iRecord instanceof ORecordStringable) {
            ((ORecordStringable)iRecord).value(fieldValueAsString);
          }
        }
 else {
          if (iRecord instanceof ODocument) {
            final ODocument doc=((ODocument)iRecord);
            OType type=null;
            final OClass cls=doc.getSchemaClass();
            if (cls != null) {
              final OProperty prop=cls.getProperty(fieldName);
              if (prop != null)               type=prop.getType();
            }
            final Object v=getValue(doc,fieldName,fieldValue,fieldValueAsString,type,null,fieldTypes,noMap,iOptions);
            if (v != null)             if (v instanceof Collection<?> && !((Collection<?>)v).isEmpty()) {
              if (v instanceof ORecordLazyMultiValue)               ((ORecordLazyMultiValue)v).setAutoConvertToRecord(false);
              if (type == null) {
                Object first=((Collection<?>)v).iterator().next();
                if (first != null && first instanceof ORecord<?> && !((ORecord<?>)first).getIdentity().isValid())                 type=v instanceof Set<?> ? OType.EMBEDDEDSET : OType.EMBEDDEDLIST;
              }
              if (type != null) {
                doc.field(fieldName,v,type);
                continue;
              }
            }
 else             if (v instanceof Map<?,?> && !((Map<?,?>)v).isEmpty()) {
              Object first=((Map<?,?>)v).values().iterator().next();
              if (first != null && first instanceof ORecord<?> && !((ORecord<?>)first).getIdentity().isValid()) {
                doc.field(fieldName,v,OType.EMBEDDEDMAP);
                continue;
              }
            }
            if (type == null && fieldTypes != null && fieldTypes.containsKey(fieldName))             type=ORecordSerializerStringAbstract.getType(fieldValue,fieldTypes.get(fieldName));
            if (type != null)             doc.field(fieldName,v,type);
 else             doc.field(fieldName,v);
          }
        }
      }
      if (timestamp != 0 && OGlobalConfiguration.DB_USE_DISTRIBUTED_VERSION.getValueAsBoolean()) {
        ((ODistributedVersion)iRecord.getRecordVersion()).update(recordVersion,timestamp,macAddress);
      }
    }
 catch (    Exception e) {
      e.printStackTrace();
      throw new OSerializationException("Error on unmarshalling JSON content for record " + iRecord.getIdentity(),e);
    }
  }
  return iRecord;
}
