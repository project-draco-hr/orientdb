{
  final Set<Integer> txToRecover=new HashSet<Integer>();
  final Set<Integer> txToNotRecover=new HashSet<Integer>();
  for (long offset=0; eof(offset); offset=nextEntry(offset)) {
    final byte status=file.readByte(offset);
    final int txId=file.readInt(offset + OFFSET_TX_ID);
switch (status) {
case STATUS_FREE:
      txToNotRecover.add(txId);
    break;
case STATUS_COMMITTING:
  txToRecover.add(txId);
break;
}
}
if (txToNotRecover.size() > 0) txToRecover.removeAll(txToNotRecover);
return txToRecover;
}
