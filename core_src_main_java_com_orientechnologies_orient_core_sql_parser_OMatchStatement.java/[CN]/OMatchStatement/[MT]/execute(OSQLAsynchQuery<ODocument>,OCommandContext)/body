{
  Map<Object,Object> iArgs=context.getInputParameters();
  try {
    Map<String,Long> estimatedRootEntries=estimateRootEntries(aliasClasses,aliasFilters,context);
    if (estimatedRootEntries.values().contains(0l)) {
      return new OBasicResultSet();
    }
    List<EdgeTraversal> sortedEdges=sortEdges(estimatedRootEntries,pattern);
    MatchExecutionPlan executionPlan=new MatchExecutionPlan();
    executionPlan.sortedEdges=sortedEdges;
    calculateMatch(pattern,estimatedRootEntries,new MatchContext(),aliasClasses,aliasFilters,context,request,executionPlan);
    return getResult(request);
  }
  finally {
    if (request.getResultListener() != null) {
      request.getResultListener().end();
    }
  }
}
