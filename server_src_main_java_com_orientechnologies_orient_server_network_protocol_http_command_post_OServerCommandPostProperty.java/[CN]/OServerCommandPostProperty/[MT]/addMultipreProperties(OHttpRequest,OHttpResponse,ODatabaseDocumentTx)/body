{
  String[] urlParts=checkSyntax(iRequest.url,3,"Syntax error: property/<database>/<class-name>");
  iRequest.data.commandInfo="Create property";
  iRequest.data.commandDetail=urlParts[2];
  if (db.getMetadata().getSchema().getClass(urlParts[2]) == null)   throw new IllegalArgumentException("Invalid class '" + urlParts[2] + "'");
  final OClass cls=db.getMetadata().getSchema().getClass(urlParts[2]);
  final ODocument propertiesDoc=new ODocument().fromJSON(iRequest.content);
  for (  String propertyName : propertiesDoc.fieldNames()) {
    final Map<String,String> doc=(Map<String,String>)propertiesDoc.field(propertyName);
    final OType propertyType=OType.valueOf(doc.get(PROPERTY_TYPE_JSON_FIELD));
switch (propertyType) {
case LINKLIST:
case LINKMAP:
case LINKSET:
{
        final String linkType=doc.get(LINKED_TYPE_JSON_FIELD);
        final String linkClass=doc.get(LINKED_CLASS_JSON_FIELD);
        if (linkType != null) {
          final OProperty prop=cls.createProperty(propertyName,propertyType,OType.valueOf(linkType));
        }
 else         if (linkClass != null) {
          final OProperty prop=cls.createProperty(propertyName,propertyType,db.getMetadata().getSchema().getClass(linkClass));
        }
 else {
          throw new IllegalArgumentException("property named " + propertyName + " is declared as "+ propertyType+ " but linked type is not declared");
        }
      }
    break;
case LINK:
{
    final String linkClass=doc.get(LINKED_CLASS_JSON_FIELD);
    if (linkClass != null) {
      final OProperty prop=cls.createProperty(propertyName,propertyType,db.getMetadata().getSchema().getClass(linkClass));
    }
 else {
      throw new IllegalArgumentException("property named " + propertyName + " is declared as "+ propertyType+ " but linked Class is not declared");
    }
  }
break;
default :
final OProperty prop=cls.createProperty(propertyName,propertyType);
break;
}
}
iResponse.sendTextContent(OHttpUtils.STATUS_CREATED_CODE,OHttpUtils.STATUS_CREATED_DESCRIPTION,OHttpUtils.CONTENT_TEXT_PLAIN,cls.properties().size(),null);
return false;
}
