{
  this.files=new HashMap<Long,OFileClassic>();
  this.syncOnPageFlush=syncOnPageFlush;
  this.pageSize=pageSize;
  this.groupTTL=groupTTL;
  this.writeAheadLog=writeAheadLog;
  this.cacheMaxSize=cacheMaxSize;
  this.storageLocal=storageLocal;
  this.pageFlushLockManger=new OLockManager<PageKey,Thread>(true,OGlobalConfiguration.DISK_WRITE_CACHE_FLUSH_LOCK_TIMEOUT.getValueAsInteger());
  if (checkMinSize && this.cacheMaxSize < MIN_CACHE_SIZE)   this.cacheMaxSize=MIN_CACHE_SIZE;
  if (pageFlushInterval > 0)   commitExecutor.scheduleWithFixedDelay(new PeriodicFlushTask(),pageFlushInterval,pageFlushInterval,TimeUnit.MILLISECONDS);
}
