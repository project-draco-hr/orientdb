{
  final ORecordId rid=(ORecordId)txEntry.getRecord().getIdentity();
  final OCluster cluster=getClusterById(rid.clusterId);
  rid.clusterId=cluster.getId();
  if (txEntry.getRecord() instanceof OTxListener)   ((OTxListener)txEntry.getRecord()).onEvent(txEntry,OTxListener.EVENT.BEFORE_COMMIT);
switch (txEntry.type) {
case ORecordOperation.LOADED:
    break;
case ORecordOperation.CREATED:
  if (rid.isNew()) {
    final byte[] stream=txEntry.getRecord().toStream();
    if (stream == null) {
      OLogManager.instance().warn(this,"Null serialization on committing new record %s in transaction",rid);
      break;
    }
    if (rid.isNew()) {
      final ORecordId oldRID=rid.copy();
      final OPhysicalPosition ppos=createRecord(txEntry.dataSegmentId,rid,stream,OVersionFactory.instance().createVersion(),txEntry.getRecord().getRecordType(),0,null).getResult();
      txEntry.getRecord().getRecordVersion().copyFrom(ppos.recordVersion);
      iTx.updateIdentityAfterCommit(oldRID,rid);
    }
 else {
      txEntry.getRecord().getRecordVersion().copyFrom(updateRecord(rid,stream,txEntry.getRecord().getRecordVersion(),txEntry.getRecord().getRecordType(),0,null).getResult());
    }
  }
break;
case ORecordOperation.UPDATED:
final byte[] stream=txEntry.getRecord().toStream();
if (stream == null) {
OLogManager.instance().warn(this,"Null serialization on committing updated record %s in transaction",rid);
break;
}
txEntry.getRecord().getRecordVersion().copyFrom(updateRecord(rid,stream,txEntry.getRecord().getRecordVersion(),txEntry.getRecord().getRecordType(),0,null).getResult());
break;
case ORecordOperation.DELETED:
deleteRecord(rid,txEntry.getRecord().getRecordVersion(),0,null);
break;
}
txEntry.getRecord().unsetDirty();
if (txEntry.getRecord() instanceof OTxListener) ((OTxListener)txEntry.getRecord()).onEvent(txEntry,OTxListener.EVENT.AFTER_COMMIT);
}
