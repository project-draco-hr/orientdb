{
  acquireExclusiveLock();
  try {
    long localSize=size;
    long position=0;
    while (localSize > 0) {
      OClusterLocalLHPEBucket bucket=loadMainBucket(position);
      while (true) {
        for (int n=0; n < bucket.getSize(); n++) {
          final OPhysicalPosition ppos=bucket.getPhysicalPosition(n);
          if (storage.checkForRecordValidity(ppos)) {
            storage.getDataSegmentById(ppos.dataSegmentId).deleteRecord(ppos.dataSegmentPos);
            localSize--;
          }
        }
        if (bucket.getOverflowBucket() < 0)         break;
        bucket=loadOverflowBucket(bucket.getOverflowBucket());
      }
      position++;
    }
    fileSegment.truncate();
    overflowSegment.truncate();
    overflowStatistic.truncate();
    initState();
    fileSegment.allocateSpace((int)(mainBucketsSize * OClusterLocalLHPEBucket.BUCKET_SIZE_IN_BYTES));
  }
  finally {
    releaseExclusiveLock();
  }
}
