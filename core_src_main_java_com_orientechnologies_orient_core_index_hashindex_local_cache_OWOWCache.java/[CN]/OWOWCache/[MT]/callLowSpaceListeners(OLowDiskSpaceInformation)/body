{
  lowSpaceEventsPublisher.submit(new Callable<Void>(){
    @Override public Void call() throws Exception {
      for (      WeakReference<OLowDiskSpaceListener> lowDiskSpaceListenerWeakReference : listeners) {
        final OLowDiskSpaceListener listener=lowDiskSpaceListenerWeakReference.get();
        if (listener != null)         try {
          listener.lowDiskSpace(information);
        }
 catch (        Exception e) {
          OLogManager.instance().error(this,"Error during notification of low disk space for storage " + storageLocal.getName(),e);
        }
      }
      return null;
    }
  }
);
}
