{
  OLogManager.instance().warn(this,"Schedule Timer Started");
  long millis=System.currentTimeMillis();
  long nextMinute=((millis / 60000) + 1) * 60000;
  while (true) {
    long sleepTime=(nextMinute - System.currentTimeMillis());
    if (sleepTime > 0) {
      try {
        safeSleep(sleepTime);
      }
 catch (      InterruptedException e) {
        OLogManager.instance().error(this,"exit timer thread " + e.getMessage());
        break;
      }
    }
    millis=System.currentTimeMillis();
    try {
      if (!isInterrupted() && db != null)       handler.executeSchedule(millis);
    }
 catch (    Throwable t) {
      OLogManager.instance().error(this,"error on execute schedule " + t.getMessage());
      if (db != null)       db.close();
      db=null;
    }
    nextMinute=((millis / 60000) + 1) * 60000;
    if (db == null)     db=handler.getDatabase();
  }
  if (db != null)   db.close();
  OLogManager.instance().warn(this,"Schedule Timer Ended");
}
