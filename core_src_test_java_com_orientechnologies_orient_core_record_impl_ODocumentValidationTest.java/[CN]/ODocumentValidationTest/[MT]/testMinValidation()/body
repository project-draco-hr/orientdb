{
  ODatabaseDocument db=new ODatabaseDocumentTx("memory:" + ODocumentValidationTest.class.getSimpleName());
  db.create();
  try {
    ODocument doc=new ODocument();
    OIdentifiable id=db.save(doc).getIdentity();
    OClass clazz=db.getMetadata().getSchema().createClass("Validation");
    clazz.createProperty("int",OType.INTEGER).setMin("11");
    clazz.createProperty("long",OType.LONG).setMin("11");
    clazz.createProperty("float",OType.FLOAT).setMin("11");
    clazz.createProperty("binary",OType.BINARY).setMin("11");
    clazz.createProperty("byte",OType.BYTE).setMin("11");
    clazz.createProperty("decimal",OType.DECIMAL).setMin("11");
    clazz.createProperty("double",OType.DOUBLE).setMin("11");
    clazz.createProperty("short",OType.SHORT).setMin("11");
    clazz.createProperty("string",OType.STRING).setMin("11");
    ODocument d=new ODocument(clazz);
    d.field("int",12);
    d.field("long",12);
    d.field("float",12);
    d.field("binary",new byte[]{1,2,3,4,5,6,7,8,9,10,11,12});
    d.field("byte",12);
    d.field("decimal",12);
    d.field("double",12);
    d.field("short",12);
    d.field("string","yeahyeahyeah");
    d.field("link",id);
    d.validate();
    checkField(d,"int",10);
    checkField(d,"long",10);
    checkField(d,"float",10);
    checkField(d,"binary",new byte[]{1,2,3,4,5,6,7,8});
    checkField(d,"double",10);
    checkField(d,"string","01234");
  }
  finally {
    db.drop();
  }
}
