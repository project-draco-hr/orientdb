{
  final List<OIdentifiable> rows=new ArrayList<OIdentifiable>();
  final List<ODocument> members=distribCfg.field("members");
  final StringBuilder buffer=new StringBuilder();
  buffer.append("\nREPLICATION LATENCY AVERAGE (in milliseconds)");
  final OTableFormatter table=new OTableFormatter(new OTableFormatter.OTableOutput(){
    @Override public void onMessage(    final String text,    final Object... args){
      buffer.append(String.format(text,args));
    }
  }
);
  table.setColumnHidden("#");
  if (members != null) {
    final List<String> orderedServers=new ArrayList<String>(members.size());
    for (    ODocument fromMember : members) {
      if (fromMember != null) {
        String serverName=fromMember.field("name");
        orderedServers.add(serverName);
        table.setColumnAlignment(serverName + (manager.getLocalNodeName().equals(serverName) ? "*" : ""),OTableFormatter.ALIGNMENT.RIGHT);
      }
    }
    Collections.sort(orderedServers);
    for (    String fromServer : orderedServers) {
      ODocument fromMember=null;
      for (      ODocument m : members) {
        if (fromServer.equals(m.field("name"))) {
          fromMember=m;
          break;
        }
      }
      if (fromMember == null)       continue;
      final ODocument row=new ODocument();
      rows.add(row);
      row.field("Servers",fromServer + (manager.getLocalNodeName().equals(fromServer) ? "*" : ""));
      final ODocument latencies=fromMember.field("latencies");
      if (latencies == null)       continue;
      for (      String toServer : orderedServers) {
        String value="";
        if (toServer != null && !toServer.equals(fromServer)) {
          final ODocument latency=latencies.field(toServer);
          if (latency != null) {
            value=String.format("%.2f",((Float)latency.field("average") / 1000000f));
          }
        }
        row.field(toServer + (manager.getLocalNodeName().equals(toServer) ? "*" : ""),value);
      }
    }
  }
  table.writeRecords(rows,-1);
  buffer.append("\n");
  return buffer.toString();
}
