{
  long timer=System.currentTimeMillis();
  for (int i=0; i < MAX; ++i) {
  }
  final long fixed=System.currentTimeMillis() - timer;
  OMVRBTreeMemory<Integer,Object> orientTreeMap=new OMVRBTreeMemory<Integer,Object>(232000,0.75f);
  for (int i=0; i < MAX; ++i) {
    orientTreeMap.put(i,DUMMY);
  }
  System.out.println("OrientDB Tree Map insertion: " + (System.currentTimeMillis() - timer - fixed));
  timer=System.currentTimeMillis();
  for (int i=0; i < MAX; ++i) {
    if (orientTreeMap.get(i) != DUMMY) {
      System.out.println("Error in map content");
    }
  }
  System.out.println("OrientDB Tree Map read: " + (System.currentTimeMillis() - timer - fixed));
  orientTreeMap.clear();
  orientTreeMap=null;
  timer=System.currentTimeMillis();
  TreeMap<Integer,Object> javaTreeMap=new TreeMap<Integer,Object>();
  for (int i=0; i < MAX; ++i) {
    javaTreeMap.put(i,DUMMY);
  }
  System.out.println("Java Tree Map insertion: " + (System.currentTimeMillis() - timer - fixed));
  timer=System.currentTimeMillis();
  for (int i=0; i < MAX; ++i) {
    if (javaTreeMap.get(i) != DUMMY) {
      System.out.println("Error in map content");
    }
  }
  System.out.println("Java Tree Map read: " + (System.currentTimeMillis() - timer - fixed));
  timer=System.currentTimeMillis();
  javaTreeMap.clear();
  javaTreeMap=null;
}
