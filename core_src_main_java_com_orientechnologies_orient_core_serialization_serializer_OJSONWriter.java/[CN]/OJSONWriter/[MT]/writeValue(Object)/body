{
  StringBuilder buffer=new StringBuilder();
  if (iValue == null)   buffer.append("\"null\"");
 else   if (iValue instanceof ORecordId) {
    ORecordId rid=(ORecordId)iValue;
    buffer.append("\"");
    buffer.append(rid.toString());
    buffer.append('\"');
  }
 else   if (iValue instanceof ORecord<?>) {
    ORecord<?> linked=(ORecord<?>)iValue;
    if (linked.getIdentity().isValid()) {
      buffer.append("\"#");
      if (linked instanceof ODocument && ((ODocument)linked).getClassName() != null) {
        buffer.append(((ODocument)linked).getClassName());
        buffer.append('@');
      }
      buffer.append(linked.getIdentity().toString());
      buffer.append('\"');
    }
 else {
      buffer.append(linked.toJSON("rid,version,class,indent:6"));
    }
  }
 else   if (iValue.getClass().isArray()) {
    if (iValue instanceof byte[]) {
      buffer.append('\"');
      byte[] source=(byte[])iValue;
      buffer.append(OBase64Utils.encodeBytes(source));
      buffer.append('\"');
    }
 else {
      buffer.append('[');
      for (int i=0; i < Array.getLength(iValue); ++i) {
        if (i > 0)         buffer.append(", ");
        buffer.append(writeValue(Array.get(iValue,i)));
      }
      buffer.append(']');
    }
  }
 else   if (iValue instanceof Collection<?>) {
    Collection<Object> coll=(Collection<Object>)iValue;
    buffer.append('[');
    int i=0;
    for (Iterator<Object> it=coll.iterator(); it.hasNext(); ++i) {
      if (i > 0)       buffer.append(", ");
      buffer.append(writeValue(it.next()));
    }
    buffer.append(']');
  }
 else   if (iValue instanceof Map<?,?>) {
    Map<Object,Object> map=(Map<Object,Object>)iValue;
    buffer.append('{');
    int i=0;
    Entry<Object,Object> entry;
    for (Iterator<Entry<Object,Object>> it=map.entrySet().iterator(); it.hasNext(); ++i) {
      entry=it.next();
      if (i > 0)       buffer.append(", ");
      buffer.append(writeValue(entry.getKey()));
      buffer.append(": ");
      buffer.append(writeValue(entry.getValue()));
    }
    buffer.append('}');
  }
 else   if (iValue instanceof String || iValue instanceof Date) {
    String v=iValue.toString();
    if (v.startsWith("\""))     buffer.append(v);
 else {
      buffer.append('"');
      buffer.append(v);
      buffer.append('"');
    }
  }
 else   buffer.append(iValue.toString());
  return buffer.toString();
}
