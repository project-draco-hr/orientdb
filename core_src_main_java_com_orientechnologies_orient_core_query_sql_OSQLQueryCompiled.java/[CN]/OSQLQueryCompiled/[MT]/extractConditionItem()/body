{
  Object result=null;
  String[] words=nextValue(true);
  if (words == null)   return null;
  if (words[0].startsWith(OQueryHelper.OPEN_BRACE)) {
    currentPos=currentPos - words[0].length() + 1;
    OQueryItemCondition subCondition=new OQueryItemCondition(extractConditionItem(),extractConditionOperator(),extractConditionItem());
    currentPos++;
    return subCondition;
  }
 else   if (words[0].startsWith(OQueryHelper.OPEN_COLLECTION)) {
    currentPos=currentPos - words[0].length() + 1;
    List<Object> coll=new ArrayList<Object>();
    String[] item;
    Object v;
    do {
      item=nextValue(true);
      v=getValue(item);
      coll.add(v);
      item=nextValue(true);
    }
 while (item != null && item[0].equals(OQueryHelper.COLLECTION_SEPARATOR));
    currentPos++;
    return coll;
  }
 else   if (words[0].startsWith(KEYWORD_COLUMN)) {
    String[] parameters=OQueryHelper.getParameters(words[0]);
    if (parameters.length != 1)     throw new OQueryParsingException("Missed column number",text,currentPos);
    result=new OQueryItemColumn(Integer.parseInt(parameters[0]));
  }
 else   result=getValue(words);
  return result;
}
