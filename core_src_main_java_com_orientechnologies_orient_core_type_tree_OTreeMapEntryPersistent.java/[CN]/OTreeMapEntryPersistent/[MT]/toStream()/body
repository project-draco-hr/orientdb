{
  final Integer identityRecord=System.identityHashCode(record);
  final Set<Integer> marshalledRecords=OSerializationThreadLocal.INSTANCE.get();
  if (marshalledRecords.contains(identityRecord)) {
    return new byte[]{};
  }
 else   marshalledRecords.add(identityRecord);
  final long timer=OProfiler.getInstance().startChrono();
  OMemoryOutputStream stream=pTree.entryRecordBuffer;
  try {
    stream.add((short)pageSize);
    stream.add(parentRid.toStream());
    stream.add(leftRid.toStream());
    stream.add(rightRid.toStream());
    stream.add(color);
    stream.add((short)size);
    serializeNewKeys();
    serializeNewValues();
    for (int i=0; i < size; ++i)     stream.add(serializedKeys[i]);
    for (int i=0; i < size; ++i)     stream.add(serializedValues[i]);
    stream.flush();
    record.fromStream(stream.getByteArray());
    return record.toStream();
  }
  finally {
    stream.close();
    marshalledRecords.remove(identityRecord);
    OProfiler.getInstance().stopChrono("OTreeMapEntryP.toStream",timer);
  }
}
