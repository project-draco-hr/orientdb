{
  if (o instanceof Proxy) {
    OObjectProxyMethodHandler handler=(OObjectProxyMethodHandler)((ProxyObject)o).getHandler();
    try {
      if (returnNonProxiedInstance) {
        o=getNonProxiedInstance(o);
      }
      handler.detachAll(o,returnNonProxiedInstance);
    }
 catch (    IllegalArgumentException e) {
      throw new OSerializationException("Error detaching object of class " + o.getClass(),e);
    }
catch (    IllegalAccessException e) {
      throw new OSerializationException("Error detaching object of class " + o.getClass(),e);
    }
catch (    NoSuchMethodException e) {
      throw new OSerializationException("Error detaching object of class " + o.getClass(),e);
    }
catch (    InvocationTargetException e) {
      throw new OSerializationException("Error detaching object of class " + o.getClass(),e);
    }
    return o;
  }
 else   if (!returnNonProxiedInstance)   return serializeObject(o,db);
  return o;
}
