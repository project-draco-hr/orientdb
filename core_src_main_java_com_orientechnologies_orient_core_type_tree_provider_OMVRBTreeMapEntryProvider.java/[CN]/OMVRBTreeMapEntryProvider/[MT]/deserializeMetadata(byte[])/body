{
  int offset=0;
  int currentVersion=OIntegerSerializer.INSTANCE.deserializeLiteral(inBuffer,offset);
  offset+=OIntegerSerializer.INT_SIZE;
  if (currentVersion != CURRENT_VERSION)   throw new OSerializationException("MVRBTree node is stored using " + currentVersion + " version of serialization format but current version is "+ CURRENT_VERSION+ ".");
  pageSize=OIntegerSerializer.INSTANCE.deserializeLiteral(inBuffer,offset);
  offset+=OIntegerSerializer.INT_SIZE;
  parentRid=OLinkSerializer.INSTANCE.deserialize(inBuffer,offset);
  offset+=OLinkSerializer.INSTANCE.getObjectSize(parentRid);
  leftRid=OLinkSerializer.INSTANCE.deserialize(inBuffer,offset);
  offset+=OLinkSerializer.INSTANCE.getObjectSize(leftRid);
  rightRid=OLinkSerializer.INSTANCE.deserialize(inBuffer,offset);
  offset+=OLinkSerializer.INSTANCE.getObjectSize(rightRid);
  color=OBooleanSerializer.INSTANCE.deserializeLiteral(inBuffer,offset);
  offset+=OBooleanSerializer.BOOLEAN_SIZE;
  size=OIntegerSerializer.INSTANCE.deserializeLiteral(inBuffer,offset);
  offset+=OIntegerSerializer.INT_SIZE;
  if (size > pageSize)   throw new OConfigurationException("Loaded index with page size set to " + pageSize + " while the loaded was built with: "+ size);
  return offset;
}
