{
  final ODatabaseRecordInternal database=new ODatabaseDocumentTx((ODatabaseRecordTx)getDatabase());
  String className=getTarget().getClassName().getValue();
  if (className == null) {
    return null;
  }
  OClass cls=database.getMetadata().getSchema().getClass(className);
  if (cls == null) {
    return null;
  }
  database.checkSecurity(ODatabaseSecurityResources.CLASS,ORole.PERMISSION_READ,cls.getName().toLowerCase());
  OStorage.LOCKING_STRATEGY locking=iContext != null && iContext.getVariable("$locking") != null ? (OStorage.LOCKING_STRATEGY)iContext.getVariable("$locking") : OStorage.LOCKING_STRATEGY.DEFAULT;
  boolean ascendingOrder=true;
  if (ascendingOrder)   return new ORecordIteratorClass<ORecord>(database,database,cls.getName(),true,useCache,false,locking);
 else   return new ORecordIteratorClassDescendentOrder<ORecord>(database,database,cls.getName(),true,useCache,false,locking);
}
