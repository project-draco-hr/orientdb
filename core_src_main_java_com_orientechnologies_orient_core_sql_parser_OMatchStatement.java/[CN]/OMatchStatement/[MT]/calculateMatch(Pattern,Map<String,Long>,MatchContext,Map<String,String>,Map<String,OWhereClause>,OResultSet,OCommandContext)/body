{
  long threshold=5;
  List<MatchContext> activeContexts=new LinkedList<MatchContext>();
  MatchContext rootContext=new MatchContext();
  String smallestAlias=null;
  Long smallestAmount=Long.MAX_VALUE;
  boolean rootFound=false;
  for (  Map.Entry<String,Long> entryPoint : estimatedRootEntries.entrySet()) {
    if (entryPoint.getValue() < threshold) {
      String nextAlias=entryPoint.getKey();
      Iterable<OIdentifiable> matches=query(aliasClasses.get(nextAlias),aliasFilters.get(nextAlias));
      if (!matches.iterator().hasNext()) {
        return;
      }
      rootContext.candidates.put(nextAlias,matches);
      long thisAmount;
      if (matches instanceof Collection) {
        thisAmount=(long)((Collection)matches).size();
      }
 else {
        thisAmount=estimatedRootEntries.get(nextAlias);
      }
      if (thisAmount <= smallestAmount) {
        smallestAlias=nextAlias;
        smallestAmount=thisAmount;
      }
      rootFound=true;
    }
  }
  if (!rootFound) {
    String nextAlias=getNextAlias(estimatedRootEntries,matchContext);
    Iterable<OIdentifiable> matches=query(aliasClasses.get(nextAlias),aliasFilters.get(nextAlias));
    if (!matches.iterator().hasNext()) {
      return;
    }
    smallestAlias=nextAlias;
    rootContext.candidates.put(nextAlias,matches);
  }
  Iterable<OIdentifiable> allCandidates=rootContext.candidates.get(smallestAlias);
  for (  OIdentifiable id : allCandidates) {
    MatchContext childContext=rootContext.copy(smallestAlias,id);
    activeContexts.add(childContext);
  }
  while (!activeContexts.isEmpty()) {
    processContext(pattern,estimatedRootEntries,activeContexts.remove(0),aliasClasses,aliasFilters,result,iCommandContext);
  }
}
