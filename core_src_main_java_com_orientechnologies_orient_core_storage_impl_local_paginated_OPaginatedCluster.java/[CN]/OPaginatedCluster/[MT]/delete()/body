{
  externalModificationLock.requestModificationLock();
  try {
    final OAtomicOperation atomicOperation=startAtomicOperation();
    acquireExclusiveLock();
    try {
      deleteFile(atomicOperation,fileId);
      clusterPositionMap.delete();
      endAtomicOperation(false);
    }
 catch (    IOException ioe) {
      endAtomicOperation(true);
      throw ioe;
    }
catch (    Exception e) {
      endAtomicOperation(true);
      throw new OStorageException("Error during deletion of cluset " + getName(),e);
    }
 finally {
      releaseExclusiveLock();
    }
  }
  finally {
    externalModificationLock.releaseModificationLock();
  }
}
