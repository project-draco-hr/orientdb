{
  if (iObject instanceof OrientEdge)   return (OrientEdge)iObject;
  final OIdentifiable rec=(OIdentifiable)iObject;
  final ORecord record=rec.getRecord();
  if (record == null) {
    OLogManager.instance().warn(this,"Record (%s) is null",rec);
    return null;
  }
  if (!(record instanceof ODocument)) {
    OLogManager.instance().warn(this,"Found a record (%s) that is not an edge. Record: %s",rec,record);
    return null;
  }
  final ODocument value=rec.getRecord();
  if (value == null || ODocumentInternal.getImmutableSchemaClass(value) == null)   return null;
  final OrientEdge edge;
  if (ODocumentInternal.getImmutableSchemaClass(value).isSubClassOf(OrientVertexType.CLASS_NAME)) {
    if (connection.getKey() == Direction.OUT)     edge=new OrientEdge(this.sourceVertex.getGraph(),this.sourceVertex.getIdentity(),rec.getIdentity(),connection.getValue());
 else     edge=new OrientEdge(this.sourceVertex.getGraph(),rec.getIdentity(),this.sourceVertex.getIdentity(),connection.getValue());
  }
 else   if (ODocumentInternal.getImmutableSchemaClass(value).isSubClassOf(OrientEdgeType.CLASS_NAME)) {
    edge=new OrientEdge(this.sourceVertex.getGraph(),rec.getIdentity());
  }
 else   throw new IllegalStateException("Invalid content found while iterating edges, value '" + value + "' is not an edge");
  if (this.sourceVertex.settings.useVertexFieldsForEdgeLabels || edge.isLabeled(labels))   return edge;
  return null;
}
