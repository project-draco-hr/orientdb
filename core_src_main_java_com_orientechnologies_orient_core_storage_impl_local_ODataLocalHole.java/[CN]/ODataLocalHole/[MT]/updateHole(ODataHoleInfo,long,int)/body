{
  final long timer=Orient.instance().getProfiler().startChrono();
  final boolean offsetChanged=iNewDataOffset != iHole.dataOffset;
  final boolean sizeChanged=iNewRecordSize != iHole.size;
  if (maxHoleSize < iNewRecordSize)   maxHoleSize=iNewRecordSize;
  if (offsetChanged)   availableHolesByPosition.remove(iHole);
  if (sizeChanged)   availableHolesBySize.remove(iHole);
  if (offsetChanged)   iHole.dataOffset=iNewDataOffset;
  if (sizeChanged)   iHole.size=iNewRecordSize;
  if (offsetChanged)   availableHolesByPosition.put(iHole,iHole);
  if (sizeChanged)   availableHolesBySize.put(iHole,iHole);
  final long holePosition=iHole.holeOffset * RECORD_SIZE;
  if (offsetChanged)   file.writeLong(holePosition,iNewDataOffset);
  if (sizeChanged)   file.writeInt(holePosition + OBinaryProtocol.SIZE_LONG,iNewRecordSize);
  Orient.instance().getProfiler().stopChrono(PROFILER_DATA_HOLE_UPDATE,"Time to update a hole in data segment",timer);
}
