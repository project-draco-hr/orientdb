{
  builder.append("ALTER CLASS ");
  name.toString(params,builder);
  builder.append(" " + property.name() + " ");
switch (property) {
case NAME:
case SHORTNAME:
case ADDCLUSTER:
case REMOVECLUSTER:
case DESCRIPTION:
case ENCRYPTION:
    if (numberValue != null) {
      numberValue.toString(params,builder);
    }
 else     if (identifierValue != null) {
      identifierValue.toString(params,builder);
    }
 else {
      builder.append("null");
    }
  break;
case CLUSTERSELECTION:
if (identifierValue != null) {
  identifierValue.toString(params,builder);
}
 else if (customString != null) {
  builder.append(customString);
}
 else {
  builder.append("null");
}
break;
case SUPERCLASS:
if (Boolean.TRUE.equals(add)) {
builder.append("+");
}
 else if (Boolean.TRUE.equals(remove)) {
builder.append("-");
}
if (identifierValue == null) {
builder.append("null");
}
 else {
identifierValue.toString(params,builder);
}
break;
case SUPERCLASSES:
if (identifierListValue == null) {
builder.append("null");
}
 else {
boolean first=true;
for (OIdentifier ident : identifierListValue) {
if (!first) {
builder.append(", ");
}
ident.toString(params,builder);
first=false;
}
}
break;
case OVERSIZE:
numberValue.toString(params,builder);
break;
case STRICTMODE:
case ABSTRACT:
builder.append(booleanValue.booleanValue());
break;
case CUSTOM:
customKey.toString(params,builder);
builder.append("=");
if (customValue == null) {
builder.append("null");
}
 else {
customValue.toString(params,builder);
}
break;
}
if (unsafe) {
builder.append(" UNSAFE");
}
}
