{
  super();
  context=iContext;
  text=iText;
  textUpperCase=iText.toUpperCase();
  try {
    if (extractTargets()) {
      if (parserOptionalKeyword(OCommandExecutorSQLAbstract.KEYWORD_WHERE,OCommandExecutorSQLAbstract.KEYWORD_LIMIT,OCommandExecutorSQLSelect.KEYWORD_ORDER,OCommandExecutorSQLSelect.KEYWORD_SKIP)) {
        if (parserGetLastWord().equals(OCommandExecutorSQLAbstract.KEYWORD_WHERE)) {
          final int lastPos=parserGetCurrentPosition();
          final String lastText=text;
          final String lastTextUpperCase=textUpperCase;
          text(text.substring(lastPos));
          text=lastText;
          textUpperCase=lastTextUpperCase;
          parserMoveCurrentPosition(lastPos);
        }
 else         parserGoBack();
      }
    }
  }
 catch (  OQueryParsingException e) {
    if (e.getText() == null)     throw new OQueryParsingException("Error on parsing query",text,parserGetCurrentPosition(),e);
    throw e;
  }
catch (  Throwable t) {
    throw new OQueryParsingException("Error on parsing query",text,parserGetCurrentPosition(),t);
  }
}
