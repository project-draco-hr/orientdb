{
  int displacement=primaryIndex.getChainDisplacement(bucketNumber);
  OLinearHashingBucket<K,V> bucket=file.get(bucketNumber);
  final ArrayList<Entry<K,V>> result=new ArrayList<Entry<K,V>>();
  addHigherEntriesFromBucket(keyToCompare,bucket,result);
  while (displacement < 253) {
    int pageToUse=findNextPageInChain(bucketNumber,level,displacement);
    int realPosInSecondaryIndex=pageIndicator.getRealPosInSecondaryIndex(pageToUse);
    displacement=secondaryIndex.getChainDisplacement(realPosInSecondaryIndex);
    bucket=file.get(pageToUse);
    addHigherEntriesFromBucket(keyToCompare,bucket,result);
  }
  Entry<K,V>[] entries=new Entry[result.size()];
  entries=result.toArray(entries);
  Arrays.sort(entries);
  return entries;
}
