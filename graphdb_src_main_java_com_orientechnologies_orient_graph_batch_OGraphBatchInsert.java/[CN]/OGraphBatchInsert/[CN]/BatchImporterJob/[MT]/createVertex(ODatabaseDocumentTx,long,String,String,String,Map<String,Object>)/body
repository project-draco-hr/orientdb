{
  final List<Object> outIds=out.get(i);
  final List<Object> inIds=in.get(i);
  final ODocument doc=new ODocument(vClass);
  if (outIds == null && inIds == null) {
    db.save(doc,clusterName).delete();
  }
 else {
    doc.field(idPropertyName,i);
    if (outIds != null) {
      final ORidBag outBag=new ORidBag();
      for (      Object l : outIds) {
        ORecordId rid;
        if (l instanceof ORecordId) {
          rid=(ORecordId)l;
        }
 else {
          rid=new ORecordId(getClusterId((Long)l),getClusterPosition((Long)l));
        }
        outBag.add(rid);
      }
      doc.field(outField,outBag);
    }
    if (inIds != null) {
      final ORidBag inBag=new ORidBag();
      for (      Object l : inIds) {
        ORecordId rid;
        if (l instanceof ORecordId) {
          rid=(ORecordId)l;
        }
 else {
          rid=new ORecordId(getClusterId((Long)l),getClusterPosition((Long)l));
        }
        inBag.add(rid);
      }
      doc.field(inField,inBag);
    }
    doc.fromMap(properties);
    db.save(doc,clusterName);
  }
  nextVerticesToCreate[mod]+=parallel;
}
