{
  OTreeMapEntry<K,V> parentNode=null;
  try {
    if (root == null) {
      root=createEntry(key,value);
      size=1;
      modCount++;
      if (listener != null)       listener.signalTreeChanged(this);
      return null;
    }
    parentNode=getEntry(key,true);
    if (pageItemFound)     return parentNode.setValue(value);
    if (parentNode == null)     parentNode=root;
    if (parentNode.getFreeSpace() > 0) {
      parentNode.insert(pageIndex,key,value);
    }
 else {
      final OTreeMapEntry<K,V> newEntry=createEntry(parentNode);
      if (pageIndex < parentNode.getPageSplitItems())       parentNode.insert(pageIndex,key,value);
 else       newEntry.insert(pageIndex - parentNode.getPageSplitItems(),key,value);
      OTreeMapEntry<K,V> prevNode=parentNode.getRight();
      if (prevNode != null)       newEntry.setRight(prevNode);
      parentNode.setRight(newEntry);
      fixAfterInsertion(newEntry);
      checkTreeStructure(parentNode);
      modCount++;
    }
    checkTreeStructure(parentNode);
    size++;
    if (listener != null)     listener.signalTreeChanged(this);
  }
  finally {
    checkTreeStructure(parentNode);
  }
  return null;
}
