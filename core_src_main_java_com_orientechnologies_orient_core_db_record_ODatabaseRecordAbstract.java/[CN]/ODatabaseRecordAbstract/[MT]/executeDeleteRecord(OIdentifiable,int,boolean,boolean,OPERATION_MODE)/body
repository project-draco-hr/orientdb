{
  checkOpeness();
  final ORecordId rid=(ORecordId)iRecord.getIdentity();
  if (rid == null)   throw new ODatabaseException("Cannot delete record because it has no identity. Probably was created from scratch or contains projections of fields rather than a full record");
  if (!rid.isValid())   return;
  checkSecurity(ODatabaseSecurityResources.CLUSTER,ORole.PERMISSION_DELETE,getClusterNameById(rid.clusterId));
  setCurrentDatabaseinThreadLocal();
  try {
    ORecord<?> rec=iRecord.getRecord();
    if (iCallTriggers)     callbackHooks(TYPE.BEFORE_DELETE,rec);
    final int realVersion=mvcc ? iVersion : -1;
    OStorageOperationResult<Boolean> operationResult=null;
    try {
      operationResult=underlying.delete(rid,realVersion,iRequired,(byte)iMode.ordinal());
    }
 catch (    Throwable t) {
      if (iCallTriggers)       callbackHooks(TYPE.DELETE_FAILED,rec);
    }
    if (iCallTriggers) {
      if (operationResult == null || !operationResult.isMoved()) {
        callbackHooks(TYPE.AFTER_DELETE,rec);
      }
 else {
        callbackHooks(TYPE.DELETE_REPLICATED,rec);
      }
    }
    if (operationResult == null || !operationResult.isMoved()) {
      getLevel1Cache().deleteRecord(rid);
    }
  }
 catch (  OException e) {
    throw e;
  }
catch (  Throwable t) {
    throw new ODatabaseException("Error on deleting record in cluster #" + iRecord.getIdentity().getClusterId(),t);
  }
}
