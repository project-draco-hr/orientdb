{
  checkOpeness();
  if (!(iRecord instanceof ODocument))   return (RET)super.save(iRecord,iMode,iForceCreate,iRecordCreatedCallback,iRecordUpdatedCallback);
  ODocument doc=(ODocument)iRecord;
  doc.validate();
  ODocumentInternal.convertAllMultiValuesToTrackedVersions(doc);
  try {
    if (iForceCreate || doc.getIdentity().isNew()) {
      if (doc.getClassName() != null)       checkSecurity(ODatabaseSecurityResources.CLASS,ORole.PERMISSION_CREATE,doc.getClassName());
      final OClass schemaClass=doc.getImmutableSchemaClass();
      if (schemaClass != null && doc.getIdentity().getClusterId() < 0) {
        final String clusterName=getClusterNameById(doc.getImmutableSchemaClass().getClusterForNewInstance());
        return (RET)super.save(doc,clusterName,iMode,iForceCreate,iRecordCreatedCallback,iRecordUpdatedCallback);
      }
    }
 else {
      if (doc.getClassName() != null)       checkSecurity(ODatabaseSecurityResources.CLASS,ORole.PERMISSION_UPDATE,doc.getClassName());
    }
    doc=super.save(doc,iMode,iForceCreate,iRecordCreatedCallback,iRecordUpdatedCallback);
  }
 catch (  OException e) {
    throw e;
  }
catch (  Exception e) {
    throw new ODatabaseException("Error on saving record " + iRecord.getIdentity() + " of class  '"+ (doc.getClassName() != null ? doc.getClassName() : "?")+ "'",e);
  }
  return (RET)doc;
}
