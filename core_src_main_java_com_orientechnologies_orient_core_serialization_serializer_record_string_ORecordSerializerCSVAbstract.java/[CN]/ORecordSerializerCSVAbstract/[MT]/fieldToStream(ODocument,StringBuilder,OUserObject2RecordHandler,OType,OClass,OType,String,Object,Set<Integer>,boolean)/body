{
  if (iValue == null)   return;
  final long timer=OProfiler.getInstance().startChrono();
switch (iType) {
case LINK:
{
      if (!iRecord.getIdentity().isValid() && iRecord instanceof ODocument && ((ODocument)iRecord).isEmbedded()) {
        fieldToStream(iRecord,iOutput,iObjHandler,OType.EMBEDDED,iLinkedClass,iLinkedType,iName,iValue,iMarshalledRecords,iSaveOnlyDirty);
      }
 else {
        final Object link=linkToStream(iOutput,iRecord,iValue);
        if (link != null)         iRecord.field(iName,link);
        OProfiler.getInstance().stopChrono("serializer.rec.str.link2string",timer);
      }
      break;
    }
case LINKLIST:
{
    iOutput.append(OStringSerializerHelper.COLLECTION_BEGIN);
    if (iValue instanceof ORecordLazyList && ((ORecordLazyList)iValue).getStreamedContent() != null) {
      iOutput.append(((ORecordLazyList)iValue).getStreamedContent());
      OProfiler.getInstance().updateCounter("serializer.rec.str.linkList2string.cached",+1);
    }
 else {
      final ORecordLazyList coll;
      final Iterator<OIdentifiable> it;
      if (!(iValue instanceof ORecordLazyList)) {
        coll=new ORecordLazyList(iRecord);
        coll.addAll((Collection<? extends OIdentifiable>)iValue);
        ((Collection<? extends OIdentifiable>)iValue).clear();
        iRecord.field(iName,coll);
        it=coll.rawIterator();
      }
 else {
        coll=(ORecordLazyList)iValue;
        if (coll.getStreamedContent() != null) {
          iOutput.append(coll.getStreamedContent());
          OProfiler.getInstance().updateCounter("serializer.rec.str.linkList2string.cached",+1);
          it=coll.newItemsIterator();
        }
 else         it=coll.rawIterator();
      }
      if (it != null && it.hasNext()) {
        final StringBuilder buffer=new StringBuilder();
        for (int items=0; it.hasNext(); items++) {
          if (items > 0)           buffer.append(OStringSerializerHelper.RECORD_SEPARATOR);
          final OIdentifiable item=it.next();
          final OIdentifiable newRid=linkToStream(buffer,iRecord,item);
          if (newRid != null)           ((OLazyIterator<OIdentifiable>)it).update(newRid);
        }
        coll.convertRecords2Links();
        iOutput.append(buffer);
        coll.setStreamedContent(buffer);
      }
    }
    iOutput.append(OStringSerializerHelper.COLLECTION_END);
    OProfiler.getInstance().stopChrono("serializer.rec.str.linkList2string",timer);
    break;
  }
case LINKSET:
{
  final OMVRBTreeRIDSet coll;
  if (!(iValue instanceof OMVRBTreeRIDSet)) {
    coll=new OMVRBTreeRIDSet(iRecord,(Collection<OIdentifiable>)iValue);
    ((Collection<? extends OIdentifiable>)iValue).clear();
    iRecord.field(iName,coll);
  }
 else   coll=(OMVRBTreeRIDSet)iValue;
  linkSetToStream(iOutput,iRecord,coll);
  OProfiler.getInstance().stopChrono("serializer.rec.str.linkSet2string",timer);
  break;
}
case LINKMAP:
{
iOutput.append(OStringSerializerHelper.MAP_BEGIN);
Map<Object,Object> map=(Map<Object,Object>)iValue;
if (map instanceof OLazyObjectMapInterface<?>) ((OLazyObjectMapInterface<?>)map).setConvertToRecord(false);
boolean invalidMap=false;
try {
  int items=0;
  for (  Map.Entry<Object,Object> entry : map.entrySet()) {
    if (items++ > 0)     iOutput.append(OStringSerializerHelper.RECORD_SEPARATOR);
    fieldTypeToString(iOutput,OType.STRING,entry.getKey());
    iOutput.append(OStringSerializerHelper.ENTRY_SEPARATOR);
    final Object link=linkToStream(iOutput,iRecord,entry.getValue());
    if (link != null && !invalidMap)     invalidMap=true;
  }
}
  finally {
  if (map instanceof OLazyObjectMapInterface<?>) {
    ((OLazyObjectMapInterface<?>)map).setConvertToRecord(true);
  }
}
if (invalidMap) {
  final ORecordLazyMap newMap=new ORecordLazyMap(iRecord,ODocument.RECORD_TYPE);
  for (  Map.Entry<Object,Object> entry : map.entrySet()) {
    newMap.put(entry.getKey(),(OIdentifiable)entry.getValue());
  }
  map.clear();
  iRecord.field(iName,newMap);
}
iOutput.append(OStringSerializerHelper.MAP_END);
OProfiler.getInstance().stopChrono("serializer.rec.str.linkMap2string",timer);
break;
}
case EMBEDDED:
if (iValue instanceof ODocument) {
iOutput.append(OStringSerializerHelper.EMBEDDED_BEGIN);
toString((ODocument)iValue,iOutput,null,iObjHandler,iMarshalledRecords,false);
iOutput.append(OStringSerializerHelper.EMBEDDED_END);
}
 else if (iValue != null) iOutput.append(iValue.toString());
OProfiler.getInstance().stopChrono("serializer.rec.str.embed2string",timer);
break;
case EMBEDDEDLIST:
embeddedCollectionToStream(null,iObjHandler,iOutput,iLinkedClass,iLinkedType,iValue,iMarshalledRecords,iSaveOnlyDirty);
OProfiler.getInstance().stopChrono("serializer.rec.str.embedList2string",timer);
break;
case EMBEDDEDSET:
embeddedCollectionToStream(null,iObjHandler,iOutput,iLinkedClass,iLinkedType,iValue,iMarshalledRecords,iSaveOnlyDirty);
OProfiler.getInstance().stopChrono("serializer.rec.str.embedSet2string",timer);
break;
case EMBEDDEDMAP:
{
embeddedMapToStream(null,iObjHandler,iOutput,iLinkedClass,iLinkedType,iValue,iMarshalledRecords,iSaveOnlyDirty);
OProfiler.getInstance().stopChrono("serializer.rec.str.embedMap2string",timer);
break;
}
default :
fieldTypeToString(iOutput,iType,iValue);
}
}
