{
  long oldIndexUsage=profiler.getCounter("db.demo.query.indexUsed");
  long oldcompositeIndexUsed=profiler.getCounter("db.demo.query.compositeIndexUsed");
  long oldcompositeIndexUsed2=profiler.getCounter("db.demo.query.compositeIndexUsed.2");
  long oldcompositeIndexUsed21=profiler.getCounter("db.demo.query.compositeIndexUsed.2.1");
  if (oldIndexUsage == -1) {
    oldIndexUsage=0;
  }
  if (oldcompositeIndexUsed == -1) {
    oldcompositeIndexUsed=0;
  }
  if (oldcompositeIndexUsed2 == -1) {
    oldcompositeIndexUsed2=0;
  }
  if (oldcompositeIndexUsed21 == -1) {
    oldcompositeIndexUsed21=0;
  }
  final List<ODocument> result=database.command(new OSQLSynchQuery<ODocument>("select * from sqlSelectHashIndexReuseTestClass where fEmbeddedMapTwo containsValue 22")).execute();
  final Map<String,Integer> embeddedMap=new HashMap<String,Integer>();
  embeddedMap.put("key21",21);
  embeddedMap.put("key22",22);
  embeddedMap.put("key23",23);
  embeddedMap.put("key24",21);
  Assert.assertEquals(result.size(),10);
  for (int i=0; i < 10; i++) {
    final ODocument document=new ODocument();
    document.field("prop8",i);
    document.field("fEmbeddedMapTwo",embeddedMap);
    Assert.assertEquals(containsDocument(result,document),1);
  }
  long indexUsed=profiler.getCounter("db.demo.query.indexUsed");
  long compositeIndexUsed=profiler.getCounter("db.demo.query.compositeIndexUsed");
  long compositeIndexUsed2=profiler.getCounter("db.demo.query.compositeIndexUsed.2");
  long compositeIndexUsed21=profiler.getCounter("db.demo.query.compositeIndexUsed.2.1");
  if (indexUsed < 0)   indexUsed=0;
  if (compositeIndexUsed < 0)   compositeIndexUsed=0;
  if (compositeIndexUsed2 < 0)   compositeIndexUsed2=0;
  if (compositeIndexUsed21 < 0)   compositeIndexUsed21=0;
  Assert.assertEquals(indexUsed,oldIndexUsage);
  Assert.assertEquals(compositeIndexUsed,oldcompositeIndexUsed);
  Assert.assertEquals(compositeIndexUsed2,oldcompositeIndexUsed2);
  Assert.assertEquals(compositeIndexUsed21,oldcompositeIndexUsed21);
}
