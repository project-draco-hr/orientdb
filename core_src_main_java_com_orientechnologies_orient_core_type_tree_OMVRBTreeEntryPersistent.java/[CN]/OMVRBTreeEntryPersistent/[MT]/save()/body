{
  if (!record.isDirty())   return this;
  final boolean isNew=record.getIdentity().isNew();
  saveRecord();
  if (isNew) {
    final ORecordId rid=(ORecordId)record.getIdentity();
    if (left != null) {
      left.parentRid=rid;
      left.markDirty();
    }
    if (right != null) {
      right.parentRid=rid;
      right.markDirty();
    }
    if (parent != null) {
      parentRid=parent.record.getIdentity();
      if (parent.left == this)       parent.leftRid=rid;
 else       if (parent.right == this)       parent.rightRid=rid;
      parent.markDirty();
    }
  }
  if (parent != null)   if (!parent.record.getIdentity().equals(parentRid))   OLogManager.instance().error(this,"[save]: Tree node %s has parentRid '%s' different by the rid of the assigned parent node: %s",record.getIdentity(),parentRid,parent.record.getIdentity());
  checkEntryStructure();
  if (pTree.searchNodeInCache(record.getIdentity()) != this) {
    pTree.addNodeInCache(this);
  }
  return this;
}
