{
  StringBuilder result=new StringBuilder();
  if (identifierList != null) {
    result.append("(");
    boolean first=true;
    for (    OIdentifier item : identifierList) {
      if (!first) {
        result.append(", ");
      }
      result.append(item.toString());
      first=false;
    }
    result.append(") VALUES ");
    if (valueExpressions != null) {
      boolean firstList=true;
      for (      List<OExpression> itemList : valueExpressions) {
        if (firstList) {
          result.append("(");
        }
 else {
          result.append("),(");
        }
        first=true;
        for (        OExpression item : itemList) {
          if (!first) {
            result.append(", ");
          }
          result.append(item.toString());
          first=false;
        }
        firstList=false;
      }
    }
    result.append(")");
  }
  if (setExpressions != null) {
    result.append("SET ");
    boolean first=true;
    for (    OInsertSetExpression item : setExpressions) {
      if (!first) {
        result.append(", ");
      }
      result.append(item.toString());
      first=false;
    }
  }
  if (selectStatement != null) {
    result.append("FROM ");
    if (selectInParentheses) {
      result.append("( ");
    }
    result.append(selectStatement.toString());
    if (selectInParentheses) {
      result.append(")");
    }
  }
  if (content != null) {
    result.append("CONTENT ");
    result.append(content.toString());
  }
  if (returnProjection != null) {
    result.append(" RETURN ");
    result.append(returnProjection.toString());
  }
  return result.toString();
}
