{
  long[] level=new long[OLocalHashTable.MAX_LEVEL_SIZE];
  for (int i=0; i < level.length; i++)   level[i]=i;
  int index=directory.addNewNode((byte)2,(byte)3,(byte)4,level);
  Assert.assertEquals(index,0);
  for (int i=0; i < level.length; i++)   level[i]=i + 100;
  index=directory.addNewNode((byte)2,(byte)3,(byte)4,level);
  Assert.assertEquals(index,1);
  for (int i=0; i < level.length; i++)   level[i]=i + 200;
  index=directory.addNewNode((byte)2,(byte)3,(byte)4,level);
  Assert.assertEquals(index,2);
  for (int i=0; i < level.length; i++)   level[i]=i + 300;
  index=directory.addNewNode((byte)2,(byte)3,(byte)4,level);
  Assert.assertEquals(index,3);
  for (int i=0; i < level.length; i++)   level[i]=i + 400;
  index=directory.addNewNode((byte)2,(byte)3,(byte)4,level);
  Assert.assertEquals(index,4);
  directory.deleteNode(1);
  directory.deleteNode(3);
  for (int i=0; i < level.length; i++)   level[i]=i + 500;
  index=directory.addNewNode((byte)5,(byte)6,(byte)7,level);
  Assert.assertEquals(index,3);
  for (int i=0; i < level.length; i++)   level[i]=i + 600;
  index=directory.addNewNode((byte)8,(byte)9,(byte)10,level);
  Assert.assertEquals(index,1);
  for (int i=0; i < level.length; i++)   level[i]=i + 700;
  index=directory.addNewNode((byte)11,(byte)12,(byte)13,level);
  Assert.assertEquals(index,5);
  for (int i=0; i < level.length; i++)   Assert.assertEquals(directory.getNodePointer(3,i),i + 500);
  Assert.assertEquals(directory.getMaxLeftChildDepth(3),5);
  Assert.assertEquals(directory.getMaxRightChildDepth(3),6);
  Assert.assertEquals(directory.getNodeLocalDepth(3),7);
  for (int i=0; i < level.length; i++)   Assert.assertEquals(directory.getNodePointer(1,i),i + 600);
  Assert.assertEquals(directory.getMaxLeftChildDepth(1),8);
  Assert.assertEquals(directory.getMaxRightChildDepth(1),9);
  Assert.assertEquals(directory.getNodeLocalDepth(1),10);
  for (int i=0; i < level.length; i++)   Assert.assertEquals(directory.getNodePointer(5,i),i + 700);
  Assert.assertEquals(directory.getMaxLeftChildDepth(5),11);
  Assert.assertEquals(directory.getMaxRightChildDepth(5),12);
  Assert.assertEquals(directory.getNodeLocalDepth(5),13);
}
