{
  for (  OClusterLocalLHPEBucket mainBucket : mainBucketsToStore) {
    final long filledUpTo=fileSegment.getFilledUpTo();
    final long endPos=mainBucket.getFilePosition() + OClusterLocalLHPEBucket.BUCKET_SIZE_IN_BYTES;
    if (endPos > filledUpTo)     allocateSpace((int)(endPos - filledUpTo));
    mainBucket.serialize();
    final long filePos=mainBucket.getFilePosition();
    fileSegment.writeContinuously(filePos,mainBucket.getBuffer());
  }
  mainBucketsToStore.clear();
  for (  OClusterLocalLHPEBucket overflowBucket : overflowBucketsToStore) {
    overflowBucket.serialize();
    overflowSegment.updateBucket(overflowBucket);
  }
  overflowBucketsToStore.clear();
}
