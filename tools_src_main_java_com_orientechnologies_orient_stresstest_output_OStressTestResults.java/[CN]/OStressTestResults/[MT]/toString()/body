{
  results.append("OrientDB Stress Test v").append(OConstants.VERSION).append("\n").append(getParameters()).append("\n");
  if (totalTime != 0) {
    results.append("\nTotal execution time: ").append(String.format("%.2f",totalTime / 1000f)).append(" seconds.");
  }
  long totalCreatesTime=1;
  long totalReadsTime=1;
  long totalUpdatesTime=1;
  long totalDeletesTime=1;
  for (  OOperationsExecutorResults result : operationsExecutorResultses) {
    totalCreatesTime+=result.getCreatesTime();
    totalReadsTime+=result.getReadsTime();
    totalUpdatesTime+=result.getUpdatesTime();
    totalDeletesTime+=result.getDeletesTime();
  }
  final double averageCreatesTime=(totalCreatesTime / (double)(threadsNumber * iterationsNumber)) / 1000;
  final double averageReadsTime=(totalReadsTime / (double)(threadsNumber * iterationsNumber)) / 1000;
  final double averageUpdatesTime=(totalUpdatesTime / (double)(threadsNumber * iterationsNumber)) / 1000;
  final double averageDeletesTime=(totalDeletesTime / (double)(threadsNumber * iterationsNumber)) / 1000;
  final long createsPerSecond=(int)((operationsSet.getNumberOfCreates() / (float)averageCreatesTime));
  final long readsPerSecond=(int)((operationsSet.getNumberOfReads() / (float)averageReadsTime));
  final long updatesPerSecond=(int)((operationsSet.getNumberOfUpdates() / (float)averageUpdatesTime));
  final long deletesPerSecond=(int)((operationsSet.getNumberOfDeletes() / (float)averageDeletesTime));
  results.append(String.format("\nAverage time for %,d Creates: %.2f secs (%,d/s).",operationsSet.getNumberOfCreates(),averageCreatesTime,createsPerSecond)).append(String.format("\nAverage time for %,d Reads: %.2f secs (%,d/s).",operationsSet.getNumberOfReads(),averageReadsTime,readsPerSecond)).append(String.format("\nAverage time for %,d Updates: %.2f secs (%,d/s).",operationsSet.getNumberOfUpdates(),averageUpdatesTime,updatesPerSecond)).append(String.format("\nAverage time for %,d Deletes: %.2f secs (%,d/s).",operationsSet.getNumberOfDeletes(),averageDeletesTime,deletesPerSecond)).append("\n");
  return results.toString();
}
