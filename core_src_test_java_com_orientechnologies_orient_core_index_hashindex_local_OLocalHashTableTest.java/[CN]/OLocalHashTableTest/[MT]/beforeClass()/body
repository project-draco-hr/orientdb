{
  OGlobalConfiguration.DISK_CACHE_SIZE.setValue(24 * 1024);
  String buildDirectory=System.getProperty("buildDirectory");
  if (buildDirectory == null)   buildDirectory=".";
  databaseDocumentTx=new ODatabaseDocumentTx("plocal:" + buildDirectory + "/localHashTableTest");
  if (databaseDocumentTx.exists()) {
    databaseDocumentTx.open("admin","admin");
    databaseDocumentTx.drop();
  }
  databaseDocumentTx.create();
  OMurmurHash3HashFunction<Integer> murmurHash3HashFunction=new OMurmurHash3HashFunction<Integer>();
  murmurHash3HashFunction.setValueSerializer(OIntegerSerializer.INSTANCE);
  localHashTable=new OLocalHashTable<Integer,String>(".imc",".tsc",".obf",".nbh",murmurHash3HashFunction);
  localHashTable.create("localHashTableTest",OIntegerSerializer.INSTANCE,OBinarySerializerFactory.getInstance().<String>getObjectSerializer(OType.STRING),null,(OStorageLocalAbstract)databaseDocumentTx.getStorage(),true);
}
