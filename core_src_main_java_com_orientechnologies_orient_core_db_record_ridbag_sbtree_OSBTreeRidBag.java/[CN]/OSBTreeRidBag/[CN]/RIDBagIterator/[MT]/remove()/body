{
  if (currentRemoved)   throw new IllegalStateException("Current element has already been removed");
  if (currentValue == null)   throw new IllegalStateException("Next method was not called for given iterator");
  if (removeFromNewEntries(currentValue)) {
    if (size >= 0)     size--;
  }
 else {
    Change counter=changedValues.get(currentValue);
    if (counter != null) {
      counter.decrement();
      if (size >= 0)       if (counter.isUndefined())       size=-1;
 else       size--;
    }
 else {
      if (nextChange != null) {
        changedValues.put(currentValue,new DiffChange(-1));
        changedValuesIterator=changedValues.tailMap(nextChange.getKey(),false).entrySet().iterator();
      }
 else {
        changedValues.put(currentValue,new DiffChange(-1));
      }
      size=-1;
    }
  }
  if (updateOwner)   fireCollectionChangedEvent(new OMultiValueChangeEvent<OIdentifiable,OIdentifiable>(OMultiValueChangeEvent.OChangeType.REMOVE,currentValue,null,currentValue,false));
  currentRemoved=true;
}
