{
switch (pos) {
case 0:
    if ((active2 & 0x2000L) != 0L) {
      jjmatchedKind=207;
      return 137;
    }
  if ((active0 & 0x80L) != 0L || (active2 & 0x80400000000000L) != 0L)   return 2;
if ((active2 & 0x4000000L) != 0L) return 43;
if ((active2 & 0x4000L) != 0L) {
jjmatchedKind=207;
return 597;
}
if ((active2 & 0x1000000L) != 0L) return 863;
if ((active3 & 0x8000000L) != 0L) {
jjmatchedKind=207;
return 41;
}
if ((active2 & 0x2000000L) != 0L) return 41;
if ((active2 & 0x20140000000000L) != 0L) return 20;
if ((active3 & 0x10000000L) != 0L) {
jjmatchedKind=207;
return 700;
}
if ((active2 & 0x8000000000800000L) != 0L || (active3 & 0x1L) != 0L) return 5;
return -1;
case 1:
if ((active0 & 0x80L) != 0L) return 0;
if ((active2 & 0x2000L) != 0L) {
if (jjmatchedPos != 1) {
jjmatchedKind=207;
jjmatchedPos=1;
}
return 138;
}
if ((active2 & 0x4000L) != 0L || (active3 & 0x18000000L) != 0L) {
if (jjmatchedPos != 1) {
jjmatchedKind=207;
jjmatchedPos=1;
}
return 41;
}
return -1;
case 2:
if ((active3 & 0x8000000L) != 0L) {
if (jjmatchedPos < 1) {
jjmatchedKind=207;
jjmatchedPos=1;
}
return -1;
}
if ((active2 & 0x4000L) != 0L || (active3 & 0x10000000L) != 0L) {
jjmatchedKind=207;
jjmatchedPos=2;
return 41;
}
if ((active2 & 0x2000L) != 0L) {
jjmatchedKind=207;
jjmatchedPos=2;
return 153;
}
return -1;
case 3:
if ((active3 & 0x8000000L) != 0L) {
if (jjmatchedPos < 1) {
jjmatchedKind=207;
jjmatchedPos=1;
}
return -1;
}
if ((active2 & 0x2000L) != 0L) return 41;
if ((active2 & 0x4000L) != 0L || (active3 & 0x10000000L) != 0L) {
jjmatchedKind=207;
jjmatchedPos=3;
return 41;
}
return -1;
case 4:
if ((active3 & 0x8000000L) != 0L) {
if (jjmatchedPos < 1) {
jjmatchedKind=207;
jjmatchedPos=1;
}
return -1;
}
if ((active2 & 0x4000L) != 0L) return 41;
if ((active3 & 0x10000000L) != 0L) {
jjmatchedKind=207;
jjmatchedPos=4;
return 41;
}
return -1;
case 5:
if ((active3 & 0x10000000L) != 0L) {
if (jjmatchedPos < 4) {
jjmatchedKind=207;
jjmatchedPos=4;
}
return -1;
}
if ((active3 & 0x8000000L) != 0L) {
if (jjmatchedPos < 1) {
jjmatchedKind=207;
jjmatchedPos=1;
}
return -1;
}
return -1;
case 6:
if ((active3 & 0x10000000L) != 0L) {
if (jjmatchedPos < 4) {
jjmatchedKind=207;
jjmatchedPos=4;
}
return -1;
}
if ((active3 & 0x8000000L) != 0L) {
if (jjmatchedPos < 1) {
jjmatchedKind=207;
jjmatchedPos=1;
}
return -1;
}
return -1;
case 7:
if ((active3 & 0x10000000L) != 0L) {
if (jjmatchedPos < 4) {
jjmatchedKind=207;
jjmatchedPos=4;
}
return -1;
}
if ((active3 & 0x8000000L) != 0L) {
if (jjmatchedPos < 1) {
jjmatchedKind=207;
jjmatchedPos=1;
}
return -1;
}
return -1;
case 8:
if ((active3 & 0x10000000L) != 0L) {
if (jjmatchedPos < 4) {
jjmatchedKind=207;
jjmatchedPos=4;
}
return -1;
}
if ((active3 & 0x8000000L) != 0L) {
if (jjmatchedPos < 1) {
jjmatchedKind=207;
jjmatchedPos=1;
}
return -1;
}
return -1;
case 9:
if ((active3 & 0x10000000L) != 0L) {
if (jjmatchedPos < 4) {
jjmatchedKind=207;
jjmatchedPos=4;
}
return -1;
}
if ((active3 & 0x8000000L) != 0L) {
if (jjmatchedPos < 1) {
jjmatchedKind=207;
jjmatchedPos=1;
}
return -1;
}
return -1;
case 10:
if ((active3 & 0x10000000L) != 0L) {
if (jjmatchedPos < 4) {
jjmatchedKind=207;
jjmatchedPos=4;
}
return -1;
}
if ((active3 & 0x8000000L) != 0L) {
if (jjmatchedPos < 1) {
jjmatchedKind=207;
jjmatchedPos=1;
}
return -1;
}
return -1;
case 11:
if ((active3 & 0x8000000L) != 0L) {
if (jjmatchedPos < 1) {
jjmatchedKind=207;
jjmatchedPos=1;
}
return -1;
}
return -1;
case 12:
if ((active3 & 0x8000000L) != 0L) {
if (jjmatchedPos < 1) {
jjmatchedKind=207;
jjmatchedPos=1;
}
return -1;
}
return -1;
case 13:
if ((active3 & 0x8000000L) != 0L) {
if (jjmatchedPos < 1) {
jjmatchedKind=207;
jjmatchedPos=1;
}
return -1;
}
return -1;
case 14:
if ((active3 & 0x8000000L) != 0L) {
if (jjmatchedPos < 1) {
jjmatchedKind=207;
jjmatchedPos=1;
}
return -1;
}
return -1;
default :
return -1;
}
}
