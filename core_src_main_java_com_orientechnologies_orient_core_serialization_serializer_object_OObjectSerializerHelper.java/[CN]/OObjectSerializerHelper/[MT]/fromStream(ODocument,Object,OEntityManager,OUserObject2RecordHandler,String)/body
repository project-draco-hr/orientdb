{
  final long timer=OProfiler.getInstance().startChrono();
  final Class<?> c=iPojo.getClass();
  List<Field> properties=classes.get(c.getName());
  if (properties == null)   properties=registerClass(c);
  String fieldName;
  Object fieldValue;
  if (iRecord.getStatus() == STATUS.NOT_LOADED)   iRecord.load();
  for (  Field p : properties) {
    fieldName=p.getName();
    fieldValue=iRecord.field(fieldName);
    if (fieldValue == null || !(fieldValue instanceof ODocument) || !(fieldValue instanceof Collection<?>) || ((Collection<?>)fieldValue).size() == 0 || !(((Collection<?>)fieldValue).iterator().next() instanceof ODocument))     setFieldValue(iPojo,fieldName,fieldValue);
  }
  final Map<String,Integer> fetchPlan=OFetchHelper.buildFetchPlan(iFetchPlan);
  OFetchHelper.fetch(iRecord,fetchPlan,null,0,-1,new OFetchListener(){
    /** 
 * Doesn't matter size.
 */
    public int size(){
      return 0;
    }
    public boolean fetchLinked(    final ODocument iRoot,    final String iFieldName,    final Object iLinked){
      Field p;
      try {
        p=c.getField(iFieldName);
      }
 catch (      Exception e) {
        e.printStackTrace();
        return false;
      }
      Object fieldValue=null;
      Class<?> fieldClass;
      if (iLinked instanceof ODocument) {
        fieldClass=iEntityManager.getEntityClass(p.getType().getSimpleName());
        if (fieldClass != null) {
          fieldValue=iObj2RecHandler.getUserObjectByRecord((ODocument)iLinked,iFetchPlan);
        }
      }
 else       if (p.getType().isAssignableFrom(List.class)) {
        Collection<ODocument> list=(Collection<ODocument>)iLinked;
        final List<Object> targetList=new OLazyList<Object>((ODatabaseObjectTx)iRecord.getDatabase().getDatabaseOwner());
        fieldValue=targetList;
        if (list != null && list.size() > 0) {
          targetList.addAll(list);
        }
      }
 else       if (p.getType().isAssignableFrom(Set.class)) {
        final Collection<ODocument> set=(Collection<ODocument>)iLinked;
        final Set<Object> target=new OLazySet<Object>((ODatabaseObjectTx)iRecord.getDatabase().getDatabaseOwner(),set);
        fieldValue=target;
      }
      setFieldValue(iPojo,iFieldName,fieldValue);
      return false;
    }
  }
);
  OProfiler.getInstance().stopChrono("Object.fromStream",timer);
  return iPojo;
}
