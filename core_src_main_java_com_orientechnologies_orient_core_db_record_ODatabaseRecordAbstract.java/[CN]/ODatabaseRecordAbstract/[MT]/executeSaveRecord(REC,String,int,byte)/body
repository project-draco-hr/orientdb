{
  checkOpeness();
  if (!iRecord.isDirty())   return;
  final ORecordId rid=(ORecordId)iRecord.getIdentity();
  if (rid == null)   throw new ODatabaseException("Can't create record because it has no identity. Probably is not a regular record or contains projections of fields rather than a full record");
  try {
    final byte[] stream=iRecord.toStream();
    boolean isNew=rid.isNew();
    final int clusterId;
    if (isNew)     clusterId=iClusterName != null ? getClusterIdByName(iClusterName) : getDefaultClusterId();
 else     clusterId=rid.clusterId;
    if (stream.length > 0) {
      if (isNew) {
        checkSecurity(ODatabaseSecurityResources.CLUSTER,ORole.PERMISSION_CREATE,iClusterName,clusterId);
        callbackHooks(TYPE.BEFORE_CREATE,iRecord);
      }
 else {
        checkSecurity(ODatabaseSecurityResources.CLUSTER,ORole.PERMISSION_UPDATE,iClusterName,clusterId);
        callbackHooks(TYPE.BEFORE_UPDATE,iRecord);
      }
      if (!iRecord.isDirty()) {
        if (underlying.isUseCache())         getCache().pushRecord(iRecord.getIdentity().toString(),new ORawBuffer(iRecord.toStream(),iRecord.getVersion(),iRecordType));
        return;
      }
    }
    final int realVersion=iVersion == -1 ? -1 : iRecord.getVersion();
    long result=underlying.save(clusterId,rid.getClusterPosition(),stream,realVersion,iRecord.getRecordType());
    if (stream.length > 0)     iRecord.unsetDirty();
    if (isNew) {
      iRecord.fill(iRecord.getDatabase(),clusterId,result,0);
      iRecord.setStatus(STATUS.LOADED);
      if (stream.length > 0)       callbackHooks(TYPE.AFTER_CREATE,iRecord);
    }
 else {
      iRecord.fill(iRecord.getDatabase(),clusterId,rid.getClusterPosition(),(int)result);
      iRecord.setStatus(STATUS.LOADED);
      if (stream.length > 0)       callbackHooks(TYPE.AFTER_UPDATE,iRecord);
    }
  }
 catch (  ODatabaseException e) {
    throw e;
  }
catch (  Throwable t) {
    throw new ODatabaseException("Error on saving record in cluster #" + iRecord.getIdentity().getClusterId(),t);
  }
}
