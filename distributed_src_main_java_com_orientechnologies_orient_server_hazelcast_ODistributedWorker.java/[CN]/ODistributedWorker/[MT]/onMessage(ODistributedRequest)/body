{
  OScenarioThreadLocal.INSTANCE.set(OScenarioThreadLocal.RUN_MODE.RUNNING_DISTRIBUTED);
  try {
    final OAbstractRemoteTask task=iRequest.getTask();
    if (ODistributedServerLog.isDebugEnabled())     ODistributedServerLog.debug(this,manager.getLocalNodeName(),iRequest.getSenderNodeName(),DIRECTION.OUT,"received request: %s",iRequest);
    final Serializable responsePayload;
    OSecurityUser origin=null;
    try {
      if (task.isRequiredOpenDatabase())       initDatabaseInstance();
      database.activateOnCurrentThread();
      task.setNodeSource(iRequest.getSenderNodeName());
      if (database != null) {
        origin=database.getUser();
        try {
          if (lastUser == null || !(lastUser.getIdentity()).equals(iRequest.getUserRID()))           lastUser=database.getMetadata().getSecurity().getUser(iRequest.getUserRID());
          database.setUser(lastUser);
        }
 catch (        Throwable ex) {
          OLogManager.instance().error(this,"failed to convert to OUser " + ex.getMessage());
        }
      }
      responsePayload=manager.executeOnLocalNode(iRequest,database);
    }
  finally {
      if (database != null) {
        database.activateOnCurrentThread();
        database.rollback();
        database.getLocalCache().clear();
        database.setUser(origin);
      }
    }
    sendResponseBack(iRequest,task,responsePayload);
  }
  finally {
    OScenarioThreadLocal.INSTANCE.set(OScenarioThreadLocal.RUN_MODE.DEFAULT);
  }
}
