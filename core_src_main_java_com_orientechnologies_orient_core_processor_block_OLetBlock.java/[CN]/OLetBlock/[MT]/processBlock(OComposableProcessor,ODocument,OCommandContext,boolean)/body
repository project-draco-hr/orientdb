{
  final Boolean copy=getFieldOfClass(iConfig,"copy",Boolean.class);
  Object values=getField(iConfig,"values");
  if (values != null) {
    if (values instanceof ODocument) {
      final ODocument doc=((ODocument)values);
      for (      String fieldName : doc.fieldNames())       assignVariable(iContext,resolveInContext(fieldName,iContext).toString(),resolveInContext(doc.field(fieldName),iContext));
    }
 else     if (values instanceof Map<?,?>) {
      for (      Entry<Object,Object> entry : ((Map<Object,Object>)values).entrySet()) {
        assignVariable(iContext,resolveInContext(entry.getKey(),iContext).toString(),getValue(resolveInContext(entry.getValue(),iContext),copy));
      }
    }
 else     throw new OProcessException("Field 'values' in not a multi-value (collection, array, map). Found type '" + values.getClass() + "'");
  }
 else {
    final String name=getRequiredFieldOfClass(iConfig,"name",String.class);
    Object value=getRequiredField(iConfig,"value");
    if (value instanceof String)     value=resolveInContext(value,iContext);
    assignVariable(iContext,name,getValue(value,copy));
  }
  return null;
}
