{
  final Map<Object,Integer> keysToAdd=new HashMap<Object,Integer>();
  final Map<Object,Integer> keysToRemove=new HashMap<Object,Integer>();
  final OMultiValueChangeEvent<OIdentifiable,OIdentifiable> multiValueChangeEventOne=new OMultiValueChangeEvent<OIdentifiable,OIdentifiable>(OMultiValueChangeEvent.OChangeType.REMOVE,new ORecordId("#1:12"),null,new ORecordId("#1:12"));
  final OMultiValueChangeEvent<OIdentifiable,OIdentifiable> multiValueChangeEventTwo=new OMultiValueChangeEvent<OIdentifiable,OIdentifiable>(OMultiValueChangeEvent.OChangeType.REMOVE,new ORecordId("#1:12"),null,new ORecordId("#1:12"));
  propertyIndex.processChangeEvent(multiValueChangeEventOne,keysToAdd,keysToRemove);
  propertyIndex.processChangeEvent(multiValueChangeEventTwo,keysToAdd,keysToRemove);
  final Map<Object,Integer> addedKeys=new HashMap<Object,Integer>();
  final Map<Object,Integer> removedKeys=new HashMap<Object,Integer>();
  removedKeys.put(new ORecordId("#1:12"),2);
  Assert.assertEquals(keysToAdd,addedKeys);
  Assert.assertEquals(keysToRemove,removedKeys);
}
