{
  while (target.hasNext()) {
    record=target.next();
    index++;
    final ORecord<?> rec=record.getRecord();
    if (rec instanceof ODocument) {
      ODocument doc=(ODocument)rec;
      if (!doc.getIdentity().isPersistent() && doc.fields() == 1) {
        Object fieldvalue=doc.field(doc.fieldNames()[0]);
        if (fieldvalue instanceof Collection<?>) {
          final OTraverseRecordSetProcess subProcess=new OTraverseRecordSetProcess(command,((Collection<OIdentifiable>)fieldvalue).iterator());
          final OIdentifiable subValue=subProcess.process();
          if (subValue != null)           return subValue;
        }
 else         if (fieldvalue instanceof ODocument) {
          final OTraverseRecordProcess subProcess=new OTraverseRecordProcess(command,(ODocument)rec);
          final OIdentifiable subValue=subProcess.process();
          if (subValue != null)           return subValue;
        }
      }
 else {
        final OTraverseRecordProcess subProcess=new OTraverseRecordProcess(command,(ODocument)rec);
        final OIdentifiable subValue=subProcess.process();
        if (subValue != null)         return subValue;
      }
    }
  }
  return drop();
}
