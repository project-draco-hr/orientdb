{
  listener.onMessage("\nStarted migration of links (-migrateLinks=true). Links are going to be updated according to new RIDs:");
  long totalDocuments=0;
  Collection<String> clusterNames=database.getClusterNames();
  for (  String clusterName : clusterNames) {
    if (OMetadataDefault.CLUSTER_INDEX_NAME.equals(clusterName) || OMetadataDefault.CLUSTER_INTERNAL_NAME.equals(clusterName) || OMetadataDefault.CLUSTER_MANUAL_INDEX_NAME.equals(clusterName))     continue;
    long documents=0;
    listener.onMessage("\n- Cluster " + clusterName + "...");
    final int clusterId=database.getClusterIdByName(clusterName);
    final long clusterRecords=database.countClusterElements(clusterId);
    OStorage storage=database.getStorage();
    OPhysicalPosition[] positions=storage.ceilingPhysicalPositions(clusterId,new OPhysicalPosition(0));
    while (positions.length > 0) {
      for (      OPhysicalPosition position : positions) {
        ORecord record=database.load(new ORecordId(clusterId,position.clusterPosition));
        if (record instanceof ODocument) {
          ODocument document=(ODocument)record;
          rewriteLinksInDocument(document);
          documents++;
          totalDocuments++;
          if (documents % 10000 == 0)           listener.onMessage("\n  - " + String.format("%,d",documents) + "/"+ String.format("%,d",clusterRecords)+ " "+ String.format("%.2f",(float)((float)documents * 100 / (float)clusterRecords))+ " documents processed...");
        }
      }
      positions=storage.higherPhysicalPositions(clusterId,positions[positions.length - 1]);
    }
    listener.onMessage(" Processed: " + String.format("%,d",documents));
  }
  listener.onMessage("\nTotal links updated: " + totalDocuments);
}
