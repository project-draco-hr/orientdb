{
  setDataCommandInfo("Transaction commit");
  if (!isConnectionAlive())   return;
  final OTransactionOptimisticProxy tx=new OTransactionOptimisticProxy((ODatabaseRecordTx)connection.database.getUnderlying(),channel,connection.data.protocolVersion);
  try {
    connection.database.begin(tx);
    try {
      connection.database.commit();
      beginResponse();
      try {
        sendOk(clientTxId);
        channel.writeInt(tx.getCreatedRecords().size());
        for (        Entry<ORecordId,ORecordInternal<?>> entry : tx.getCreatedRecords().entrySet()) {
          channel.writeRID(entry.getKey());
          channel.writeRID(entry.getValue().getIdentity());
          if (entry.getValue().getRecordVersion().getCounter() > 0)           tx.getUpdatedRecords().put((ORecordId)entry.getValue().getIdentity(),entry.getValue());
        }
        channel.writeInt(tx.getUpdatedRecords().size());
        for (        Entry<ORecordId,ORecordInternal<?>> entry : tx.getUpdatedRecords().entrySet()) {
          channel.writeRID(entry.getKey());
          channel.writeVersion(entry.getValue().getRecordVersion());
        }
        if (connection.data.protocolVersion >= 20)         sendCollectionChanges();
      }
  finally {
        endResponse();
      }
    }
 catch (    Exception e) {
      if (connection != null && connection.database != null) {
        if (connection.database.getTransaction().isActive())         connection.database.rollback(true);
        final OSBTreeCollectionManager collectionManager=connection.database.getSbTreeCollectionManager();
        if (collectionManager != null)         collectionManager.clearChangedIds();
      }
      sendError(clientTxId,e);
    }
  }
 catch (  OTransactionAbortedException e) {
  }
catch (  Exception e) {
    if (tx.isActive())     tx.rollback(true,-1);
    sendError(clientTxId,e);
  }
}
