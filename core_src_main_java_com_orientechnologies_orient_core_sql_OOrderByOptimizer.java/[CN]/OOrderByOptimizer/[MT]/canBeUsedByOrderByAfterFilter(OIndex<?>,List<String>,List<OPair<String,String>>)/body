{
  if (orderedFields.isEmpty())   return false;
  if (!index.supportsOrderedIterations())   return false;
  final OIndexDefinition definition=index.getDefinition();
  final List<String> indexFields=definition.getFields();
  int endIndex=Math.min(indexFields.size(),equalsFilterFields.size());
  final String firstOrder=orderedFields.get(0).getValue();
  for (int i=0; i < endIndex; i++) {
    final String equalsFieldName=equalsFilterFields.get(i).toLowerCase();
    final String indexFieldName=indexFields.get(i).toLowerCase();
    if (!equalsFieldName.equals(indexFieldName))     return false;
  }
  endIndex=Math.min(indexFields.size(),orderedFields.size() + equalsFilterFields.size());
  for (int i=equalsFilterFields.size(); i < endIndex; i++) {
    int fieldOrderInOrderByClause=i - equalsFilterFields.size();
    final OPair<String,String> pair=orderedFields.get(fieldOrderInOrderByClause);
    if (!firstOrder.equals(pair.getValue()))     return false;
    final String orderFieldName=pair.getKey().toLowerCase();
    final String indexFieldName=indexFields.get(i).toLowerCase();
    if (!orderFieldName.equals(indexFieldName))     return false;
  }
  return true;
}
