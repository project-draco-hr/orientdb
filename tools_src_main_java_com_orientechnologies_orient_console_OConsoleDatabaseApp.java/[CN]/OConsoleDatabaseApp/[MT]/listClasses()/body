{
  if (currentDatabaseName != null) {
    out.println("\nCLASSES:");
    out.println("----------------------------------------------+------------------------------------+------------+----------------+");
    out.println(" NAME                                         | SUPERCLASS                         | CLUSTERS   | RECORDS        |");
    out.println("----------------------------------------------+------------------------------------+------------+----------------+");
    long totalElements=0;
    long count;
    final List<OClass> classes=new ArrayList<OClass>(currentDatabase.getMetadata().getSchema().getClasses());
    Collections.sort(classes,new Comparator<OClass>(){
      public int compare(      OClass o1,      OClass o2){
        return o1.getName().compareToIgnoreCase(o2.getName());
      }
    }
);
    for (    OClass cls : classes) {
      try {
        final StringBuilder clusters=new StringBuilder();
        if (cls.isAbstract())         clusters.append("-");
 else         for (int i=0; i < cls.getClusterIds().length; ++i) {
          if (i > 0)           clusters.append(", ");
          clusters.append(cls.getClusterIds()[i]);
        }
        count=currentDatabase.countClass(cls.getName());
        totalElements+=count;
        final String superClass=cls.getSuperClass() != null ? cls.getSuperClass().getName() : "";
        out.printf(" %-45s| %-35s| %-11s|%15d |\n",format(cls.getName(),45),format(superClass,35),clusters.toString(),count);
      }
 catch (      Exception e) {
      }
    }
    out.println("----------------------------------------------+------------------------------------+------------+----------------+");
    out.printf(" TOTAL = %-3d                                                                                     %15d |\n",classes.size(),totalElements);
    out.println("----------------------------------------------+------------------------------------+------------+----------------+");
  }
 else   out.println("No database selected yet.");
}
