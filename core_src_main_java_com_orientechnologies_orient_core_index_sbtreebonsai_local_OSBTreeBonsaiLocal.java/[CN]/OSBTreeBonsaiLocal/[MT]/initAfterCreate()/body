{
  initDurableComponent(storage);
  try {
    initSysBucket();
    super.startAtomicOperation();
    final AllocationResult allocationResult=allocateBucket();
    OCacheEntry rootCacheEntry=allocationResult.getCacheEntry();
    this.rootBucketPointer=allocationResult.getPointer();
    rootCacheEntry.acquireExclusiveLock();
    try {
      OSBTreeBonsaiBucket<K,V> rootBucket=new OSBTreeBonsaiBucket<K,V>(rootCacheEntry,this.rootBucketPointer.getPageOffset(),true,keySerializer,valueSerializer,getTrackMode());
      rootBucket.setTreeSize(0);
      super.logPageChanges(rootBucket,fileId,this.rootBucketPointer.getPageIndex(),true);
    }
  finally {
      rootCacheEntry.releaseExclusiveLock();
      diskCache.release(rootCacheEntry);
    }
    super.endAtomicOperation(false);
  }
 catch (  Throwable e) {
    try {
      super.endAtomicOperation(true);
    }
 catch (    IOException e1) {
      OLogManager.instance().error(this,"Error during sbtree data rollback",e1);
    }
    throw new OSBTreeException("Error creation of sbtree with name" + name,e);
  }
}
