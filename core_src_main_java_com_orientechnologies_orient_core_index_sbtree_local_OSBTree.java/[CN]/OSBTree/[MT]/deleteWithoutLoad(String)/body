{
  startOperation();
  try {
    final OAtomicOperation atomicOperation;
    try {
      atomicOperation=startAtomicOperation();
    }
 catch (    IOException e) {
      throw OException.wrapException(new OSBTreeException("Error during sbtree deletion",this),e);
    }
    acquireExclusiveLock();
    try {
      if (isFileExists(atomicOperation,getFullName())) {
        final long fileId=openFile(atomicOperation,getFullName());
        deleteFile(atomicOperation,fileId);
      }
      if (isFileExists(atomicOperation,getName() + nullFileExtension)) {
        final long nullFileId=openFile(atomicOperation,getName() + nullFileExtension);
        deleteFile(atomicOperation,nullFileId);
      }
      endAtomicOperation(false,null);
    }
 catch (    IOException ioe) {
      rollback(ioe);
      throw OException.wrapException(new OSBTreeException("Exception during deletion of sbtree " + getName(),this),ioe);
    }
catch (    Exception e) {
      rollback(e);
      throw OException.wrapException(new OSBTreeException("Exception during deletion of sbtree " + getName(),this),e);
    }
 finally {
      releaseExclusiveLock();
    }
  }
  finally {
    completeOperation();
  }
}
