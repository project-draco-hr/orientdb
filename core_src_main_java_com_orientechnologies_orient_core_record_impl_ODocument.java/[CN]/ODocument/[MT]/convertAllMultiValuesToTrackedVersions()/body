{
  if (_fieldValues == null)   return;
  final Map<String,Object> fieldsToUpdate=new HashMap<String,Object>();
  for (  Map.Entry<String,Object> fieldEntry : _fieldValues.entrySet()) {
    final Object fieldValue=fieldEntry.getValue();
    OType fieldType=fieldType(fieldEntry.getKey());
    if (fieldType == null && _clazz != null) {
      final OProperty prop=_clazz.getProperty(fieldEntry.getKey());
      fieldType=prop != null ? prop.getType() : null;
    }
    if (fieldType == null || !(OType.EMBEDDEDLIST.equals(fieldType) || OType.EMBEDDEDMAP.equals(fieldType) || OType.EMBEDDEDSET.equals(fieldType)))     continue;
    if (fieldValue instanceof List && !(fieldValue instanceof OTrackedMultiValue))     fieldsToUpdate.put(fieldEntry.getKey(),new OTrackedList(this,(List)fieldValue,null));
 else     if (fieldValue instanceof Set && !(fieldValue instanceof OTrackedMultiValue))     fieldsToUpdate.put(fieldEntry.getKey(),new OTrackedSet(this,(Set)fieldValue,null));
 else     if (fieldValue instanceof Map && !(fieldValue instanceof OTrackedMultiValue))     fieldsToUpdate.put(fieldEntry.getKey(),new OTrackedMap(this,(Map)fieldValue,null));
  }
  _fieldValues.putAll(fieldsToUpdate);
  addAllMultiValueChangeListeners();
}
