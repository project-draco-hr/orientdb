{
  boolean updated=false;
  if (content != null) {
    final OClass restricted=getDatabase().getMetadata().getSchema().getClass(OSecurity.RESTRICTED_CLASSNAME);
    final ODocument restrictedFields=new ODocument();
    if (restricted != null) {
      for (      OProperty prop : restricted.properties()) {
        restrictedFields.field(prop.getName(),record.field(prop.getName()));
      }
      OClass recordClass=ODocumentInternal.getImmutableSchemaClass(record);
      if (recordClass != null && recordClass.isSubClassOf("V")) {
        for (        String fieldName : record.fieldNames()) {
          if (fieldName.startsWith("in_") || fieldName.startsWith("out_")) {
            restrictedFields.field(fieldName,record.field(fieldName));
          }
        }
      }
 else       if (recordClass != null && recordClass.isSubClassOf("E")) {
        for (        String fieldName : record.fieldNames()) {
          if (fieldName.equals("in") || fieldName.equals("out")) {
            restrictedFields.field(fieldName,record.field(fieldName));
          }
        }
      }
    }
    record.merge(restrictedFields,false,false);
    record.merge(content,true,false);
    updated=true;
  }
  return updated;
}
