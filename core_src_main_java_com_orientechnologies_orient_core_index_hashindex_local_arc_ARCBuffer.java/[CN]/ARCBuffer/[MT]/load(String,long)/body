{
  LRUEntry lruEntry=fetchedOnce.get(fileName,filePosition);
  if (lruEntry != null) {
    fetchedOnce.remove(fileName,filePosition);
    fetchedSeveralTimes.putToMRU(fileName,filePosition,lruEntry.dataPointer,lruEntry.isDirty);
    return lruEntry;
  }
  lruEntry=fetchedSeveralTimes.get(fileName,filePosition);
  if (lruEntry != null) {
    fetchedSeveralTimes.putToMRU(fileName,filePosition,lruEntry.dataPointer,lruEntry.isDirty);
    return lruEntry;
  }
  if (fetchedOnceEvicted.contains(fileName,filePosition)) {
    int onceSize=fetchedOnceEvicted.size();
    int severalTimesSize=fetchedSeveralTimesEvicted.size();
    long delta=onceSize >= severalTimesSize ? 1 : severalTimesSize / onceSize;
    p=Math.min(p + delta,maxSize);
    long dataPointer=cacheFileContent(fileName,filePosition);
    replace(false);
    fetchedOnceEvicted.remove(fileName,filePosition);
    return fetchedSeveralTimes.putToMRU(fileName,filePosition,dataPointer,false);
  }
  if (fetchedSeveralTimesEvicted.contains(fileName,filePosition)) {
    int onceSize=fetchedOnceEvicted.size();
    int severalTimesSize=fetchedSeveralTimesEvicted.size();
    long delta=severalTimesSize >= onceSize ? 1 : onceSize / severalTimesSize;
    p=Math.max(p - delta,0);
    replace(true);
    fetchedSeveralTimesEvicted.remove(fileName,filePosition);
    long dataPointer=cacheFileContent(fileName,filePosition);
    return fetchedSeveralTimes.putToMRU(fileName,filePosition,dataPointer,false);
  }
  if (fetchedOnce.size() + fetchedOnceEvicted.size() == maxSize) {
    if (fetchedOnce.size() < maxSize) {
      fetchedOnceEvicted.removeLRU();
      replace(false);
    }
 else {
      LRUEntry removedEntry=fetchedOnceEvicted.removeLRU();
      evictFileContent(fileName,filePosition,removedEntry.dataPointer,false);
    }
  }
 else {
    int totalSize=fetchedOnce.size() + fetchedSeveralTimes.size() + fetchedOnceEvicted.size()+ fetchedSeveralTimesEvicted.size();
    if (totalSize >= maxSize) {
      if (totalSize == 2 * maxSize)       fetchedSeveralTimesEvicted.removeLRU();
      replace(false);
    }
  }
  long dataPointer=cacheFileContent(fileName,filePosition);
  return fetchedOnce.putToMRU(fileName,filePosition,dataPointer,false);
}
