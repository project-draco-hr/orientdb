{
synchronized (this) {
    if (status == STATUS.ONLINE)     return;
    final ODistributedDatabaseInfo oldDbInfo=databases.remove(iDatabase.databaseName);
    if (oldDbInfo != null)     oldDbInfo.close();
    OLogManager.instance().warn(this,"REPL <%s> starting replication against distributed node %s:%d",iDatabase.databaseName,networkAddress,networkPort);
    try {
      databases.put(iDatabase.databaseName,iDatabase);
      if (iDatabase.connection == null)       iDatabase.connection=new ONodeConnection(replicator,id,replicator.getConflictResolver());
      iDatabase.connected();
      setStatus(STATUS.SYNCHRONIZING);
      iDatabase.connection.synchronize(iDatabase.databaseName,replicator.getLocalDatabaseConfiguration(iDatabase.databaseName));
      iDatabase.setOnline();
      setStatus(STATUS.ONLINE);
    }
 catch (    Exception e) {
      iDatabase.setOffline();
      iDatabase.close();
      databases.remove(iDatabase.databaseName);
      OLogManager.instance().warn(this,"<> DB %s: cannot find database on remote server. Removing it from shared list.",e,iDatabase.databaseName);
    }
  }
}
