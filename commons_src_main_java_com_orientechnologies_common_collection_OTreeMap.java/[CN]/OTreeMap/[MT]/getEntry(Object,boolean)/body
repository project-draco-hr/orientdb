{
  if (key == null)   return null;
  pageItemFound=false;
  if (comparator != null)   return getEntryUsingComparator(key,iGetContainer);
  final Comparable<? super K> k=(Comparable<? super K>)key;
  OTreeMapEntry<K,V> p=getBestEntryPoint(key);
  OTreeMapEntry<K,V> lastNode=null;
  int beginKey=-1;
  while (p != null) {
    lastNode=p;
    try {
      beginKey=k.compareTo(p.getFirstKey());
    }
 catch (    Exception e) {
    }
    if (beginKey == 0) {
      pageIndex=0;
      pageItemFound=true;
      return p;
    }
 else {
      if (beginKey < 0 && p.getLeft() != null && k.compareTo(p.getLastKey()) < 0)       p=p.getLeft();
 else       if (beginKey > 0 && p.getRight() != null && k.compareTo(p.getLastKey()) > 0)       p=p.getRight();
 else {
        final V value=lastNode.search(k);
        if (value != null)         return lastNode;
 else         if (iGetContainer)         return lastNode;
        break;
      }
    }
  }
  return null;
}
