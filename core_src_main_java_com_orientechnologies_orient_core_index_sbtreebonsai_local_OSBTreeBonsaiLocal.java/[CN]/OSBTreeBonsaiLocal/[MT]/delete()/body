{
  final OAtomicOperation atomicOperation;
  try {
    atomicOperation=startAtomicOperation();
  }
 catch (  IOException e) {
    throw new OSBTreeException("Error during sbtree deletion.",e);
  }
  final Lock lock=fileLockManager.acquireExclusiveLock(fileId);
  try {
    final Queue<OBonsaiBucketPointer> subTreesToDelete=new LinkedList<OBonsaiBucketPointer>();
    subTreesToDelete.add(rootBucketPointer);
    recycleSubTrees(subTreesToDelete,atomicOperation);
    endAtomicOperation(false);
  }
 catch (  Throwable e) {
    rollback();
    throw new OSBTreeException("Error during delete of sbtree with name " + getName(),e);
  }
 finally {
    lock.unlock();
  }
}
