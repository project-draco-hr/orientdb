{
  checkTransaction();
  if (status == OTransaction.TXSTATUS.COMMITTING) {
switch (iStatus) {
case OTransactionEntry.CREATED:
case OTransactionEntry.UPDATED:
      database.executeSaveRecord(iRecord,iClusterName,iRecord.getVersion(),iRecord.getRecordType());
    break;
case OTransactionEntry.DELETED:
  database.executeDeleteRecord(iRecord,iRecord.getVersion());
break;
}
}
 else {
final ORecordId rid=(ORecordId)iRecord.getIdentity();
if (!rid.isValid()) {
for (OTransactionEntry<REC> entry : entries.values()) {
if (entry.record == iRecord) return;
}
rid.clusterPosition=newObjectCounter--;
}
OTransactionEntry<REC> txEntry=entries.get(rid);
if (txEntry == null) {
txEntry=new OTransactionEntry<REC>(iRecord,iStatus,iClusterName);
entries.put(rid,txEntry);
}
 else {
txEntry.record=iRecord;
switch (txEntry.status) {
case OTransactionEntry.LOADED:
switch (iStatus) {
case OTransactionEntry.UPDATED:
  txEntry.status=OTransactionEntry.UPDATED;
break;
case OTransactionEntry.DELETED:
txEntry.status=OTransactionEntry.DELETED;
break;
}
break;
case OTransactionEntry.UPDATED:
switch (iStatus) {
case OTransactionEntry.DELETED:
txEntry.status=OTransactionEntry.DELETED;
break;
}
break;
case OTransactionEntry.DELETED:
break;
case OTransactionEntry.CREATED:
switch (iStatus) {
case OTransactionEntry.DELETED:
entries.remove(rid);
break;
}
break;
}
}
}
}
