{
  if (valueSerializer.isFixedLength()) {
    int entryPosition=getIntValue(offset + index * OIntegerSerializer.INT_SIZE + POSITIONS_ARRAY_OFFSET);
    entryPosition+=keySerializer.getObjectSizeInDirectMemory(pagePointer,offset + entryPosition);
    byte[] serializedValue=new byte[valueSerializer.getFixedLength()];
    valueSerializer.serializeNative(value,serializedValue,0);
    setBinaryValue(offset + entryPosition,serializedValue);
    return true;
  }
  final int entryPosition=getIntValue(offset + index * OIntegerSerializer.INT_SIZE + POSITIONS_ARRAY_OFFSET);
  int entreeSize=keySerializer.getObjectSizeInDirectMemory(pagePointer,offset + entryPosition);
  entreeSize+=valueSerializer.getObjectSize(value);
  checkEntreeSize(entreeSize);
  final K key=getKey(index);
  remove(index);
  return addEntry(index,new SBTreeEntry<K,V>(OBonsaiBucketPointer.NULL,OBonsaiBucketPointer.NULL,key,value),false);
}
