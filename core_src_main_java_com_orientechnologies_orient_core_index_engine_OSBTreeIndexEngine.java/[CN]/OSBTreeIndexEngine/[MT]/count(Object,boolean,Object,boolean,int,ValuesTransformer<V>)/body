{
  acquireSharedLock();
  try {
    final ItemsCounter<V> itemsCounter=new ItemsCounter<V>(transformer,maxValuesToFetch);
    if (rangeTo != null)     sbTree.loadEntriesBetween(rangeFrom,fromInclusive,rangeTo,toInclusive,itemsCounter);
 else     sbTree.loadEntriesMajor(rangeFrom,fromInclusive,itemsCounter);
    return itemsCounter.count;
  }
  finally {
    releaseSharedLock();
  }
}
