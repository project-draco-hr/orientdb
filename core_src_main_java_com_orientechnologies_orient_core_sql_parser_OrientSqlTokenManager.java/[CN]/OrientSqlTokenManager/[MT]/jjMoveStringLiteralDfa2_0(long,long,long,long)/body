{
  if (((active0&=old0) | (active1&=old1)) == 0L)   return jjStartNfa_0(0,old0,old1);
  try {
    curChar=input_stream.readChar();
  }
 catch (  java.io.IOException e) {
    jjStopStringLiteralDfa_0(1,active0,active1);
    return 2;
  }
switch (curChar) {
case 46:
    if ((active1 & 0x10000000L) != 0L)     return jjStopAtPos(2,92);
  break;
case 61:
if ((active1 & 0x2000000L) != 0L) return jjStopAtPos(2,89);
 else if ((active1 & 0x4000000L) != 0L) return jjStopAtPos(2,90);
break;
case 62:
return jjMoveStringLiteralDfa3_0(active0,0L,active1,0x8000000L);
case 100:
return jjMoveStringLiteralDfa3_0(active0,0L,active1,0x800000000000L);
case 104:
return jjMoveStringLiteralDfa3_0(active0,0x20000000L,active1,0L);
case 108:
return jjMoveStringLiteralDfa3_0(active0,0L,active1,0x200000000000L);
case 117:
return jjMoveStringLiteralDfa3_0(active0,0L,active1,0x400000000000L);
case 121:
return jjMoveStringLiteralDfa3_0(active0,0L,active1,0x100000000000L);
default :
break;
}
return jjStartNfa_0(1,active0,active1);
}
