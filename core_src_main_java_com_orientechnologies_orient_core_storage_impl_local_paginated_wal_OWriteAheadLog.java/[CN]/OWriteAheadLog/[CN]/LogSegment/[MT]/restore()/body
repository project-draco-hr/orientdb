{
  flushWALCache();
  rndFile.seek(0);
  while (rndFile.getFilePointer() < rndFile.length()) {
    long startPos=rndFile.getFilePointer();
    try {
      final int crc=rndFile.readInt();
      final int entrySize=rndFile.readInt();
      byte[] record=new byte[entrySize];
      rndFile.readFully(record);
      CRC32 crc32=new CRC32();
      crc32.update(record);
      if (crc != ((int)crc32.getValue())) {
        rndFile.setLength(startPos);
        size=startPos;
        OLogManager.instance().warn(this,"In WAL segment %s broken record with LSN %s was detected, segment is size truncated to %d bytes",file.getPath(),new OLogSequenceNumber(order,startPos),startPos);
        break;
      }
    }
 catch (    EOFException e) {
      rndFile.setLength(startPos);
      size=startPos;
      OLogManager.instance().warn(this,"In WAL segment %s broken record with LSN %s was detected, segment is size truncated to %d bytes",file.getPath(),new OLogSequenceNumber(order,startPos),startPos);
      break;
    }
  }
  rndFile.getFD().sync();
}
