{
  OClass profile=database.getMetadata().getSchema().createClass("MyProfile",database.addCluster("myprofile",OStorage.CLUSTER_TYPE.PHYSICAL));
  OClass edge=database.getMetadata().getSchema().createClass("MyEdge",database.addCluster("myedge",OStorage.CLUSTER_TYPE.PHYSICAL));
  profile.createProperty("name",OType.STRING).setMin("3").setMax("30").createIndex(OClass.INDEX_TYPE.NOTUNIQUE);
  profile.createProperty("surname",OType.STRING).setMin("3").setMax("30");
  profile.createProperty("in",OType.LINKSET,edge);
  profile.createProperty("out",OType.LINKSET,edge);
  edge.createProperty("in",OType.LINK,profile);
  edge.createProperty("out",OType.LINK,profile);
  database.begin();
  ODocument kim=new ODocument("MyProfile").field("name","Kim").field("surname","Bauer");
  ODocument teri=new ODocument("MyProfile").field("name","Teri").field("surname","Bauer");
  ODocument jack=new ODocument("MyProfile").field("name","Jack").field("surname","Bauer");
  ODocument myedge=new ODocument("MyEdge").field("in",kim).field("out",jack);
  myedge.save();
  ((HashSet<ODocument>)kim.field("out",new HashSet<ORID>()).field("out")).add(myedge);
  ((HashSet<ODocument>)jack.field("in",new HashSet<ORID>()).field("in")).add(myedge);
  jack.save();
  kim.save();
  teri.save();
  database.commit();
  database.close();
  database.open("admin","admin");
  List<ODocument> result=database.command(new OSQLSynchQuery<ODocument>("select from MyProfile ")).execute();
  Assert.assertTrue(result.size() != 0);
}
