{
  OScenarioThreadLocal.INSTANCE.set(RUN_MODE.RUNNING_DISTRIBUTED);
  try {
    if (ODistributedServerLog.isDebugEnabled())     ODistributedServerLog.debug(this,manager.getLocalNodeName(),iRequest.getSenderNodeName() + ":" + iRequest.getSenderThreadId(),DIRECTION.IN,"request %s",iRequest.getPayload());
    final Serializable responsePayload=manager.executeOnLocalNode(iRequest);
    if (ODistributedServerLog.isDebugEnabled())     ODistributedServerLog.debug(this,manager.getLocalNodeName(),iRequest.getSenderNodeName() + ":" + iRequest.getSenderThreadId(),DIRECTION.OUT,"sending back response %s to request %s",responsePayload,iRequest.getPayload());
    final OHazelcastDistributedResponse response=new OHazelcastDistributedResponse(iRequest.getId(),manager.getLocalNodeName(),iRequest.getSenderNodeName(),iRequest.getSenderThreadId(),responsePayload);
    try {
      final IQueue<ODistributedResponse> queue=getQueue(getResponseQueueName(iRequest.getSenderNodeName()));
      if (!queue.offer(response,OGlobalConfiguration.DISTRIBUTED_QUEUE_TIMEOUT.getValueAsLong(),TimeUnit.MILLISECONDS))       throw new ODistributedException("Timeout on dispatching response to the thread queue " + iRequest.getSenderNodeName() + ":"+ iRequest.getSenderThreadId());
    }
 catch (    Exception e) {
      throw new ODistributedException("Cannot dispatch response to the thread queue " + iRequest.getSenderNodeName() + ":"+ iRequest.getSenderThreadId(),e);
    }
  }
  finally {
    OScenarioThreadLocal.INSTANCE.set(RUN_MODE.DEFAULT);
  }
}
