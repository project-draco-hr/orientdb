{
  if (iPojo == null)   return null;
  final Class<?> pojoClass=iPojo.getClass();
  getClassFields(pojoClass);
  final Field idField=fieldIds.get(pojoClass);
  if (idField != null) {
    Class<?> fieldType=idField.getType();
    final String idFieldName=idField.getName();
    if (ORID.class.isAssignableFrom(fieldType))     setFieldValue(iPojo,idFieldName,iIdentity);
 else     if (Number.class.isAssignableFrom(fieldType))     setFieldValue(iPojo,idFieldName,iIdentity != null ? iIdentity.getClusterPosition() : null);
 else     if (fieldType.equals(String.class))     setFieldValue(iPojo,idFieldName,iIdentity != null ? iIdentity.toString() : null);
 else     if (fieldType.equals(Object.class))     setFieldValue(iPojo,idFieldName,iIdentity);
 else     OLogManager.instance().warn(OObjectSerializerHelper.class,"@Id field has been declared as %s while the supported are: ORID, Number, String, Object",fieldType);
    return idFieldName;
  }
  return null;
}
