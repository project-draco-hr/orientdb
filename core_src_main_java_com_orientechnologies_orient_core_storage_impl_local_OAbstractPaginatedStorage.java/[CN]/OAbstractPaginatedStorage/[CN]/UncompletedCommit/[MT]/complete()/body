{
  checkOpeness();
  stateLock.acquireReadLock();
  try {
    try {
      dataLock.acquireExclusiveLock();
      try {
        checkOpeness();
        nestedCommit.complete();
        OTransactionAbstract.updateCacheFromEntries(clientTx,entries,true);
      }
 catch (      RuntimeException e) {
        makeRollback(clientTx,e);
      }
 finally {
        transaction.set(null);
        dataLock.releaseExclusiveLock();
      }
    }
  finally {
      ((OMetadataInternal)clientTx.getDatabase().getMetadata()).clearThreadLocalSchemaSnapshot();
    }
  }
  finally {
    stateLock.releaseReadLock();
  }
  return result;
}
