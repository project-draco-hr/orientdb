{
  final long beginTime=System.currentTimeMillis();
  synchronousResponsesLock.lock();
  try {
    long currentTimeout=synchTimeout;
    while (currentTimeout > 0 && receivedResponses < totalExpectedResponses && !isMinimumQuorumReached()) {
      synchronousResponsesArrived.await(currentTimeout,TimeUnit.MILLISECONDS);
      if (isMinimumQuorumReached() || receivedResponses >= totalExpectedResponses)       return true;
      if (Thread.currentThread().isInterrupted()) {
        ODistributedServerLog.warn(this,dManager.getLocalNodeName(),null,DIRECTION.NONE,"Thread has been interrupted wait for request (%s)",request);
        Thread.currentThread().interrupt();
        break;
      }
      final long now=System.currentTimeMillis();
      final long elapsed=now - beginTime;
      currentTimeout=synchTimeout - elapsed;
      int synchronizingNodes=0;
      int missingActiveNodes=0;
      synchronousResponsesLock.lock();
      try {
        for (Iterator<Map.Entry<String,Object>> iter=responses.entrySet().iterator(); iter.hasNext(); ) {
          final Map.Entry<String,Object> curr=iter.next();
          if (curr.getValue() == NO_RESPONSE) {
            final ODistributedServerManager.DB_STATUS dbStatus=dManager.getDatabaseStatus(curr.getKey(),getDatabaseName());
switch (dbStatus) {
case SYNCHRONIZING:
              synchronizingNodes++;
            missingActiveNodes++;
          break;
case ONLINE:
        missingActiveNodes++;
      break;
  }
}
}
}
  finally {
synchronousResponsesLock.unlock();
}
if (missingActiveNodes == 0) {
ODistributedServerLog.debug(this,dManager.getLocalNodeName(),null,DIRECTION.NONE,"No more active nodes to wait for request (%s): anticipate timeout (saved %d ms)",request,currentTimeout);
break;
}
final long lastClusterChange=dManager.getLastClusterChangeOn();
if (lastClusterChange > 0 && now - lastClusterChange < (synchTimeout + ADDITIONAL_TIMEOUT_CLUSTER_SHAPE)) {
currentTimeout=synchTimeout;
ODistributedServerLog.debug(this,dManager.getLocalNodeName(),null,DIRECTION.NONE,"Cluster shape changed during request (%s): enlarge timeout +%dms, wait again for %dms",request,synchTimeout,currentTimeout);
continue;
}
 else if (synchronizingNodes > 0) {
currentTimeout=synchTimeout;
ODistributedServerLog.debug(this,dManager.getLocalNodeName(),null,DIRECTION.NONE,"%d nodes are in synchronization mode during request (%s): enlarge timeout +%dms, wait again for %dms",synchronizingNodes,request,synchTimeout,currentTimeout);
}
}
return isMinimumQuorumReached() || receivedResponses >= totalExpectedResponses;
}
  finally {
synchronousResponsesLock.unlock();
Orient.instance().getProfiler().stopChrono("distributed.synchResponses","Time to collect all the synchronous responses from distributed nodes",beginTime);
}
}
