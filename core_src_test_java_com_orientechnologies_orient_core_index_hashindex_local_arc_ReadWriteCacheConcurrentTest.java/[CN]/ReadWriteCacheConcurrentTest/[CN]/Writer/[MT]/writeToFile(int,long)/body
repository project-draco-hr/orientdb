{
  OCacheEntry cacheEntry=readBuffer.load(fileIds.get(fileNumber),pageIndex,false,writeBuffer,1);
  if (cacheEntry == null) {
    do {
      if (cacheEntry != null)       readBuffer.release(cacheEntry,writeBuffer);
      cacheEntry=readBuffer.allocateNewPage(fileIds.get(fileNumber),writeBuffer);
    }
 while (cacheEntry.getPageIndex() < pageIndex);
  }
  if (cacheEntry.getPageIndex() > pageIndex) {
    readBuffer.release(cacheEntry,writeBuffer);
    cacheEntry=readBuffer.load(fileIds.get(fileNumber),pageIndex,false,writeBuffer,1);
  }
  OCachePointer pointer=cacheEntry.getCachePointer();
  pointer.acquireExclusiveLock();
  final ByteBuffer buffer=pointer.getSharedBuffer();
  buffer.position(systemOffset);
  buffer.put(new byte[]{version.byteValue(),2,3,seed,5,6,(byte)fileNumber,(byte)(pageIndex & 0xFF)});
  cacheEntry.markDirty();
  pointer.releaseExclusiveLock();
  readBuffer.release(cacheEntry,writeBuffer);
}
