{
  StringBuilder result=new StringBuilder();
  result.append("DELETE EDGE");
  if (className != null) {
    result.append(" ");
    result.append(className.toString());
    if (targetClusterName != null) {
      result.append(" CLUSTER ");
      result.append(targetClusterName.toString());
    }
  }
  if (rid != null) {
    result.append(" ");
    result.append(rid.toString());
  }
  if (rids != null) {
    result.append("[");
    boolean first=true;
    for (    ORid rid : rids) {
      if (!first) {
        result.append(", ");
      }
      result.append(rid.toString());
      first=false;
    }
    result.append("]");
  }
  if (leftRid != null || leftRids != null || leftStatement != null || leftParam != null || leftIdentifier != null) {
    result.append(" FROM ");
    if (leftRid != null) {
      result.append(leftRid.toString());
    }
 else     if (leftRids != null) {
      result.append("[");
      boolean first=true;
      for (      ORid rid : leftRids) {
        if (!first) {
          result.append(", ");
        }
        result.append(rid.toString());
        first=false;
      }
      result.append("]");
    }
 else     if (leftStatement != null) {
      result.append("(");
      result.append(leftStatement.toString());
      result.append(")");
    }
 else     if (leftParam != null) {
      if (leftParamValue == unset) {
        result.append(leftParam.toString());
      }
 else       if (leftParamValue == null) {
        result.append("NULL");
      }
 else       if (leftParamValue instanceof String) {
        result.append("\"" + OExpression.encode("" + leftParamValue) + "\"");
      }
 else {
        result.append(leftParamValue.toString());
      }
    }
 else     if (leftIdentifier != null) {
      result.append(leftIdentifier.toString());
    }
  }
  if (rightRid != null || rightRids != null || rightStatement != null || rightParam != null || rightIdentifier != null) {
    result.append(" TO ");
    if (rightRid != null) {
      result.append(rightRid.toString());
    }
 else     if (rightRids != null) {
      result.append("[");
      boolean first=true;
      for (      ORid rid : rightRids) {
        if (!first) {
          result.append(", ");
        }
        result.append(rid.toString());
        first=false;
      }
      result.append("]");
    }
 else     if (rightStatement != null) {
      result.append("(");
      result.append(rightStatement.toString());
      result.append(")");
    }
 else     if (rightParam != null) {
      if (rightParamValue == unset) {
        result.append(rightParam.toString());
      }
 else       if (rightParamValue == null) {
        result.append("NULL");
      }
 else       if (rightParamValue instanceof String) {
        result.append("\"" + OExpression.encode("" + rightParamValue) + "\"");
      }
 else {
        result.append(rightParamValue.toString());
      }
    }
 else     if (rightIdentifier != null) {
      result.append(rightIdentifier.toString());
    }
  }
  if (whereClause != null) {
    result.append(" WHERE ");
    result.append(whereClause.toString());
  }
  if (limit != null) {
    result.append(limit);
  }
  return result.toString();
}
