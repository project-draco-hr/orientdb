{
  ODatabaseDocumentTx db=new ODatabaseDocumentTx(dbUrl);
  if (db.exists())   db.delete();
  db.create();
  OSchema schema=db.getMetadata().getSchema();
  OClass item=schema.createClass("Item");
  item.createProperty("stringKey",OType.STRING).createIndex(INDEX_TYPE.UNIQUE);
  item.createProperty("intKey",OType.INTEGER).createIndex(INDEX_TYPE.UNIQUE);
  item.createProperty("date",OType.DATE).createIndex(INDEX_TYPE.NOTUNIQUE);
  item.createProperty("time",OType.DATETIME).createIndex(INDEX_TYPE.NOTUNIQUE);
  item.createProperty("text",OType.STRING);
  item.createProperty("length",OType.LONG).createIndex(INDEX_TYPE.NOTUNIQUE);
  item.createProperty("published",OType.BOOLEAN).createIndex(INDEX_TYPE.NOTUNIQUE);
  item.createProperty("title",OType.STRING).createIndex(INDEX_TYPE.NOTUNIQUE);
  item.createProperty("author",OType.STRING).createIndex(INDEX_TYPE.NOTUNIQUE);
  item.createProperty("tags",OType.EMBEDDEDLIST);
  schema.save();
  schema.reload();
  db.close();
  db.open("admin","admin");
  assertTrue(db.getMetadata().getSchema().existsClass("Item"));
  db.close();
}
