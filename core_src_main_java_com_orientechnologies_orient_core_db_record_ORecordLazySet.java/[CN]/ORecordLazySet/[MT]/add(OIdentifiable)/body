{
  if (map.containsKey(e))   return false;
  if (e instanceof ORecord && e.getIdentity().isNew()) {
    ORecordInternal.addIdentityChangeListener((ORecord)e,this);
    ODirtyManager dirtyManager=ORecordInternal.getDirtyManager(sourceRecord);
    ORecordInternal.setDirtyManager((ORecord)e,dirtyManager);
    map.put(e,e);
  }
 else   if (!e.getIdentity().isPersistent()) {
    final ORecord record=e.getRecord();
    if (record == null)     throw new IllegalArgumentException("Record with id " + e.getIdentity() + " has not be found");
    ORecordInternal.addIdentityChangeListener(record,this);
    ODirtyManager dirtyManager=ORecordInternal.getDirtyManager(sourceRecord);
    ORecordInternal.setDirtyManager(record,dirtyManager);
    map.put(e,record);
  }
 else   map.put(e,ENTRY_REMOVAL);
  setDirty();
  fireCollectionChangedEvent(new OMultiValueChangeEvent<OIdentifiable,OIdentifiable>(OMultiValueChangeEvent.OChangeType.ADD,e,e));
  return true;
}
