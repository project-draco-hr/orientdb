{
  this.performanceCountersHolder=performanceCountersHolder.newInstance();
  performanceCountersHolder.pushData(this.performanceCountersHolder);
  Map<String,PerformanceCountersHolder> counters=new HashMap<String,PerformanceCountersHolder>();
  for (  Map.Entry<String,PerformanceCountersHolder> entry : countersByComponent.entrySet()) {
    final PerformanceCountersHolder holder=entry.getValue().newInstance();
    entry.getValue().pushData(holder);
    counters.put(entry.getKey(),holder);
  }
  this.countersByComponent=counters;
  if (writCacheCountersHolder != null) {
    final WritCacheCountersHolder wh=new WritCacheCountersHolder();
    writCacheCountersHolder.pushData(wh);
    this.writCacheCountersHolder=wh;
  }
 else {
    this.writCacheCountersHolder=null;
  }
  if (storageCountersHolder != null) {
    final StorageCountersHolder sch=new StorageCountersHolder();
    storageCountersHolder.pushData(sch);
    this.storageCountersHolder=sch;
  }
 else {
    this.storageCountersHolder=null;
  }
  if (walCountersHolder != null) {
    final WALCountersHolder wch=new WALCountersHolder();
    walCountersHolder.pushData(wch);
    this.walCountersHolder=wch;
  }
 else {
    this.walCountersHolder=null;
  }
}
