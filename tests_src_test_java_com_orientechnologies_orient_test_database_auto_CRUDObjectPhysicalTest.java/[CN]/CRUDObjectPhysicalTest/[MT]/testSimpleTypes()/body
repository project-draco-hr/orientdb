{
  database=OObjectDatabasePool.global().acquire(url,"admin","admin");
  JavaSimpleTestClass javaObj=database.newInstance(JavaSimpleTestClass.class);
  Assert.assertEquals(javaObj.getText(),"initTest");
  Date date=new Date();
  javaObj.setText("test");
  javaObj.setNumberSimple(12345);
  javaObj.setDoubleSimple(12.34d);
  javaObj.setFloatSimple(123.45f);
  javaObj.setLongSimple(12345678l);
  javaObj.setByteSimple((byte)1);
  javaObj.setFlagSimple(true);
  javaObj.setDateField(date);
  javaObj.setEnumeration(EnumTest.ENUM1);
  JavaSimpleTestClass savedJavaObj=database.save(javaObj);
  ORID id=database.getIdentity(savedJavaObj);
  database.close();
  database=OObjectDatabasePool.global().acquire(url,"admin","admin");
  JavaSimpleTestClass loadedJavaObj=(JavaSimpleTestClass)database.load(id);
  Assert.assertEquals(loadedJavaObj.getText(),"test");
  Assert.assertEquals(loadedJavaObj.getNumberSimple(),12345);
  Assert.assertEquals(loadedJavaObj.getDoubleSimple(),12.34d);
  Assert.assertEquals(loadedJavaObj.getFloatSimple(),123.45f);
  Assert.assertEquals(loadedJavaObj.getLongSimple(),12345678l);
  Assert.assertEquals(loadedJavaObj.getByteSimple(),(byte)1);
  Assert.assertEquals(loadedJavaObj.getFlagSimple(),true);
  Assert.assertEquals(loadedJavaObj.getEnumeration(),EnumTest.ENUM1);
  Assert.assertEquals(loadedJavaObj.getDateField(),date);
  Assert.assertTrue(loadedJavaObj.getTestAnonymous() instanceof JavaTestInterface);
  Assert.assertEquals(loadedJavaObj.getTestAnonymous().getNumber(),-1);
  loadedJavaObj.setEnumeration(EnumTest.ENUM2);
  loadedJavaObj.setTestAnonymous(new JavaTestInterface(){
    public int getNumber(){
      return 0;
    }
  }
);
  database.save(loadedJavaObj);
  database.close();
  database=OObjectDatabasePool.global().acquire(url,"admin","admin");
  loadedJavaObj=(JavaSimpleTestClass)database.load(id);
  Assert.assertEquals(loadedJavaObj.getEnumeration(),EnumTest.ENUM2);
  Assert.assertTrue(loadedJavaObj.getTestAnonymous() instanceof JavaTestInterface);
  Assert.assertEquals(loadedJavaObj.getTestAnonymous().getNumber(),-1);
}
