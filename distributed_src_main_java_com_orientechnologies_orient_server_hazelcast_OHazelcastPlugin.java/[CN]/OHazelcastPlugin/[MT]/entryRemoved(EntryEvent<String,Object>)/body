{
  if (hazelcastInstance == null || !hazelcastInstance.getLifecycleService().isRunning())   return;
  try {
    final String key=iEvent.getKey();
    if (key.startsWith(CONFIG_NODE_PREFIX)) {
      final String nName=getNodeName(iEvent.getMember());
      if (nName != null) {
        ODistributedServerLog.debug(this,nodeName,null,DIRECTION.NONE,"Removed node configuration id=%s name=%s",iEvent.getMember(),nName);
        activeNodes.remove(nName);
        closeRemoteServer(nName);
      }
      updateLastClusterChange();
    }
 else     if (key.startsWith(CONFIG_DATABASE_PREFIX)) {
synchronized (cachedDatabaseConfiguration) {
        cachedDatabaseConfiguration.remove(key.substring(CONFIG_DATABASE_PREFIX.length()));
      }
      updateLastClusterChange();
    }
 else     if (key.startsWith(CONFIG_DBSTATUS_PREFIX)) {
      ODistributedServerLog.debug(this,nodeName,getNodeName(iEvent.getMember()),DIRECTION.IN,"received removed status %s=%s",key.substring(CONFIG_DBSTATUS_PREFIX.length()),iEvent.getValue());
      final String dbNode=key.substring(CONFIG_DBSTATUS_PREFIX.length());
      final String nodeName=dbNode.substring(0,dbNode.indexOf("."));
      final String databaseName=dbNode.substring(dbNode.indexOf(".") + 1);
      onDatabaseEvent(nodeName,databaseName,(DB_STATUS)iEvent.getValue());
    }
  }
 catch (  HazelcastInstanceNotActiveException e) {
    OLogManager.instance().error(this,"Hazelcast is not running");
  }
catch (  RetryableHazelcastException e) {
    OLogManager.instance().error(this,"Hazelcast is not running");
  }
}
