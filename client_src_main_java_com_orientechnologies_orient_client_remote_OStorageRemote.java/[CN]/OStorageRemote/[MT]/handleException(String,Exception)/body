{
  if (iException instanceof OException)   throw (OException)iException;
  if (!(iException instanceof IOException))   throw new OStorageException(iMessage,iException);
  while (retry < connectionRetry) {
    try {
      Thread.sleep(connectionRetryDelay);
    }
 catch (    InterruptedException e) {
    }
    try {
      if (OLogManager.instance().isDebugEnabled())       OLogManager.instance().debug(this,"Retrying to connect to remote server #" + retry + "/"+ connectionRetry+ "...");
      openRemoteDatabase(null,null);
      retry=0;
      OLogManager.instance().info(this,"Connection re-acquired in transparent way: no errors will be thrown at application level");
      return;
    }
 catch (    Throwable t) {
      ++retry;
    }
  }
  retry=0;
  throw new OStorageException(iMessage,iException);
}
