{
  if (o instanceof Proxy) {
    OObjectProxyMethodHandler handler=(OObjectProxyMethodHandler)((ProxyObject)o).getHandler();
    try {
      handler.attach(o);
    }
 catch (    IllegalArgumentException e) {
      throw OException.wrapException(new OSerializationException("Error detaching object of class " + o.getClass()),e);
    }
catch (    IllegalAccessException e) {
      throw OException.wrapException(new OSerializationException("Error detaching object of class " + o.getClass()),e);
    }
catch (    NoSuchMethodException e) {
      throw OException.wrapException(new OSerializationException("Error detaching object of class " + o.getClass()),e);
    }
catch (    InvocationTargetException e) {
      throw OException.wrapException(new OSerializationException("Error detaching object of class " + o.getClass()),e);
    }
    return o;
  }
 else   return serializeObject(o,db);
}
