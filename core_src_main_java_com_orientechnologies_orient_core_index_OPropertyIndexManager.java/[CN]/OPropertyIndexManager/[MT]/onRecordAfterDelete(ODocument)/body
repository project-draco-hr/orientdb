{
  final Map<OProperty,Object> indexedProperties=getIndexedProperties(iRecord);
  if (indexedProperties != null) {
    final String[] dirtyFields=iRecord.getDirtyFields();
    OIndex<?> index;
    if (dirtyFields.length > 0) {
      for (      Entry<OProperty,Object> propEntry : indexedProperties.entrySet()) {
        for (        String f : dirtyFields) {
          if (f.equals(propEntry.getKey().getName())) {
            Object originalValue=iRecord.getOriginalValue(propEntry.getKey().getName());
            index=propEntry.getKey().getIndex().getUnderlying();
            if (isCollection(originalValue)) {
              for (              Object item : toCollection(originalValue)) {
                index.remove(item,iRecord);
              }
            }
 else {
              index.remove(originalValue,iRecord);
            }
            break;
          }
        }
      }
    }
    for (    Entry<OProperty,Object> propEntry : indexedProperties.entrySet()) {
      if (iRecord.containsField(propEntry.getKey().getName())) {
        boolean found=false;
        for (        String f : dirtyFields) {
          if (f.equals(propEntry.getKey().getName())) {
            found=true;
            break;
          }
        }
        if (!found) {
          Object value=propEntry.getValue();
          index=propEntry.getKey().getIndex().getUnderlying();
          if (isCollection(value)) {
            for (            Object item : toCollection(value)) {
              index.remove(item,iRecord);
            }
          }
 else {
            index.remove(value,iRecord);
          }
        }
      }
    }
  }
  if (iRecord.isTrackingChanges()) {
    iRecord.setTrackingChanges(false);
    iRecord.setTrackingChanges(true);
  }
  return false;
}
