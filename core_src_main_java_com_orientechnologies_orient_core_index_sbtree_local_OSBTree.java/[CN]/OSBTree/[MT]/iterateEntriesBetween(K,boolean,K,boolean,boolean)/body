{
  acquireSharedLock();
  try {
    if (ascSortOrder)     return iterateEntriesBetweenAscOrder(keyFrom,fromInclusive,keyTo,toInclusive);
 else     return iterateEntriesBetweenDescOrder(keyFrom,fromInclusive,keyTo,toInclusive);
  }
 catch (  IOException ioe) {
    throw new OSBTreeException("Error during fetch of values between key " + keyFrom + " and key "+ keyTo+ " in sbtree "+ name);
  }
 finally {
    releaseSharedLock();
  }
}
