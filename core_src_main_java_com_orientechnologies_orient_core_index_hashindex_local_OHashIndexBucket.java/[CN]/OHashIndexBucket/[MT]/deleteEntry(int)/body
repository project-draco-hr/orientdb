{
  final int positionOffset=positionsArrayOffset + index * OIntegerSerializer.INT_SIZE + dataBufferOffset;
  final int positionIndex=OIntegerSerializer.INSTANCE.deserializeNative(dataBuffer,positionOffset);
  System.arraycopy(dataBuffer,positionOffset + OIntegerSerializer.INT_SIZE,dataBuffer,positionOffset,size() * OIntegerSerializer.INT_SIZE - (index + 1) * OIntegerSerializer.INT_SIZE);
  System.arraycopy(dataBuffer,(positionIndex + 1) * maxKeySize + keyLineOffset + dataBufferOffset,dataBuffer,positionIndex * maxKeySize + keyLineOffset + dataBufferOffset,size() * maxKeySize - (positionIndex + 1) * maxKeySize);
  System.arraycopy(dataBuffer,(positionIndex + 1) * entreeSize + entriesOffset + dataBufferOffset,dataBuffer,positionIndex * entreeSize + entriesOffset + dataBufferOffset,size() * entreeSize - (positionIndex + 1) * entreeSize);
  size--;
  int currentPositionOffset=positionsArrayOffset + dataBufferOffset;
  for (int i=0; i < size; i++) {
    int currentPosition=OIntegerSerializer.INSTANCE.deserializeNative(dataBuffer,currentPositionOffset);
    if (currentPosition > positionIndex)     OIntegerSerializer.INSTANCE.serializeNative(currentPosition - 1,dataBuffer,currentPositionOffset);
    currentPositionOffset+=OIntegerSerializer.INT_SIZE;
  }
}
