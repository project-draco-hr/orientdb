{
  for (int s=0; s < SERVERS; ++s) {
    OrientGraphFactory factory=new OrientGraphFactory("plocal:target/server" + s + "/databases/"+ getDatabaseName());
    OrientGraphNoTx g=factory.getNoTx();
    try {
      Iterable<OrientVertex> result=g.command(new OCommandSQL("select amount from v order by amount asc")).execute(v2.getIdentity());
      Iterator<OrientVertex> it=result.iterator();
      Assert.assertTrue(it.hasNext());
      OrientVertex r1=it.next();
      Assert.assertTrue(it.hasNext());
      OrientVertex r2=it.next();
      Assert.assertTrue(it.hasNext());
      OrientVertex r3=it.next();
      Assert.assertFalse(it.hasNext());
      Assert.assertEquals(10,r1.getProperty("amount"));
      Assert.assertEquals(15,r2.getProperty("amount"));
      Assert.assertEquals(21,r3.getProperty("amount"));
      result=g.command(new OCommandSQL("select amount from v order by amount desc")).execute(v2.getIdentity());
      it=result.iterator();
      Assert.assertTrue(it.hasNext());
      r1=it.next();
      Assert.assertTrue(it.hasNext());
      r2=it.next();
      Assert.assertTrue(it.hasNext());
      r3=it.next();
      Assert.assertFalse(it.hasNext());
      Assert.assertEquals(21,r1.getProperty("amount"));
      Assert.assertEquals(15,r2.getProperty("amount"));
      Assert.assertEquals(10,r3.getProperty("amount"));
    }
  finally {
      g.shutdown();
    }
  }
}
