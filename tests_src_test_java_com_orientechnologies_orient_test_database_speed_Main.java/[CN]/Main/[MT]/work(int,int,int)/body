{
  System.out.println("Writing " + rowCount + " rows with "+ colCount+ " columns and lazyUpdates set to "+ lazyUpdates);
  OGlobalConfiguration.TX_USE_LOG.setValue(false);
  OGlobalConfiguration.TX_LOG_SYNCH.setValue(false);
  OGlobalConfiguration.TX_COMMIT_SYNCH.setValue(false);
  OGlobalConfiguration.ENVIRONMENT_CONCURRENT.setValue(false);
  OGlobalConfiguration.CACHE_LEVEL1_ENABLED.setValue(false);
  OGlobalConfiguration.CACHE_LEVEL2_ENABLED.setValue(false);
  OGlobalConfiguration.DB_VALIDATION.setValue(false);
  OGlobalConfiguration.FILE_MMAP_LOCK_MEMORY.setValue(false);
  OGlobalConfiguration.DB_MVCC.setValue(false);
  OGlobalConfiguration.FILE_MMAP_STRATEGY.setValue(4);
  OGlobalConfiguration.STORAGE_KEEP_OPEN.setValue(false);
  OGlobalConfiguration.INDEX_AUTO_REBUILD_AFTER_NOTSOFTCLOSE.setValue(false);
  OGlobalConfiguration.INDEX_AUTO_LAZY_UPDATES.setValue(lazyUpdates);
  final String dbUrl="local:/temp/database/davide";
  final ODatabaseDocumentTx db=new ODatabaseDocumentTx(dbUrl);
  if (db.exists())   db.open("admin","admin").drop();
  db.create();
  try {
    final OStorage storage=db.getStorage();
    final String documentName="fooClass";
    if (!db.getMetadata().getSchema().existsClass(documentName)) {
      storage.command(new OCommandSQL("CREATE CLASS " + documentName));
      storage.command(new OCommandSQL("CREATE PROPERTY " + documentName + ".col0 STRING"));
      storage.command(new OCommandSQL("CREATE INDEX " + documentName + "-col0Idx ON "+ documentName+ " (col0) DICTIONARY"));
    }
    db.declareIntent(new OIntentMassiveInsert());
    for (int id=0; id < rowCount; id++) {
      final ODocument doc=new ODocument(documentName);
      for (int col=0; col < colCount; col++) {
        String string=id + " with a veeeeeeeeeeeeeeeeeeeeery long string associated, just to generate stress memory consumption... ";
        StringBuilder sb=new StringBuilder();
        for (int j=0; j < 1000; j++) {
          sb.append(string).append(" ");
        }
        doc.field("col" + col,sb.toString());
      }
      db.save(doc);
      System.out.print(".");
    }
    System.out.println("Job completed");
    db.declareIntent(null);
  }
  finally {
    db.close();
  }
}
