{
  final String storageCompression=getConfiguration().getContextConfiguration().getValueAsString(OGlobalConfiguration.STORAGE_COMPRESSION_METHOD);
  final String storageEncryption=getConfiguration().getContextConfiguration().getValueAsString(OGlobalConfiguration.STORAGE_ENCRYPTION_METHOD);
  final String encryptionKey=getConfiguration().getContextConfiguration().getValueAsString(OGlobalConfiguration.STORAGE_ENCRYPTION_KEY);
  final String stgConflictStrategy=getConflictStrategy().getName();
  createClusterFromConfig(new OStoragePaginatedClusterConfiguration(configuration,clusters.size(),OMetadataDefault.CLUSTER_INTERNAL_NAME,null,true,20,4,storageCompression,storageEncryption,encryptionKey,stgConflictStrategy,OStorageClusterConfiguration.STATUS.ONLINE));
  createClusterFromConfig(new OStoragePaginatedClusterConfiguration(configuration,clusters.size(),OMetadataDefault.CLUSTER_INDEX_NAME,null,false,OStoragePaginatedClusterConfiguration.DEFAULT_GROW_FACTOR,OStoragePaginatedClusterConfiguration.DEFAULT_GROW_FACTOR,storageCompression,storageEncryption,encryptionKey,stgConflictStrategy,OStorageClusterConfiguration.STATUS.ONLINE));
  createClusterFromConfig(new OStoragePaginatedClusterConfiguration(configuration,clusters.size(),OMetadataDefault.CLUSTER_MANUAL_INDEX_NAME,null,false,1,1,storageCompression,storageEncryption,encryptionKey,stgConflictStrategy,OStorageClusterConfiguration.STATUS.ONLINE));
  defaultClusterId=createClusterFromConfig(new OStoragePaginatedClusterConfiguration(configuration,clusters.size(),CLUSTER_DEFAULT_NAME,null,true,OStoragePaginatedClusterConfiguration.DEFAULT_GROW_FACTOR,OStoragePaginatedClusterConfiguration.DEFAULT_GROW_FACTOR,storageCompression,storageEncryption,encryptionKey,stgConflictStrategy,OStorageClusterConfiguration.STATUS.ONLINE));
}
