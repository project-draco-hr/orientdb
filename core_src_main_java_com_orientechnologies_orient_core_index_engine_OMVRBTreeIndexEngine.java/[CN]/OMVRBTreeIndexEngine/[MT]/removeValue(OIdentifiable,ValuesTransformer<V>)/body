{
  acquireExclusiveLock();
  try {
    Map<Object,V> entriesToUpdate=new TreeMap<Object,V>(ODefaultComparator.INSTANCE);
    final OMVRBTreeEntry<Object,V> firstEntry=map.getFirstEntry();
    if (firstEntry == null)     return 0;
    OMVRBTreeEntry<Object,V> entry=firstEntry;
    while (entry != null) {
      final Object key=entry.getKey();
      final V value=entry.getValue();
      if (transformer != null) {
        Collection<OIdentifiable> rids=transformer.transformFromValue(value);
        if (rids.remove(valueToRemove)) {
          entriesToUpdate.put(key,transformer.transformToValue(rids));
        }
      }
 else       if (value.equals(valueToRemove)) {
        entriesToUpdate.put(key,value);
      }
      entry=OMVRBTree.next(entry);
    }
    for (    Map.Entry<Object,V> entryToUpdate : entriesToUpdate.entrySet()) {
      V value=entryToUpdate.getValue();
      if (value instanceof Collection) {
        Collection col=(Collection)value;
        if (col.isEmpty())         map.remove(entryToUpdate.getKey());
 else         map.put(entryToUpdate.getKey(),value);
      }
 else       map.remove(entryToUpdate.getKey());
    }
    return entriesToUpdate.size();
  }
  finally {
    releaseExclusiveLock();
  }
}
