{
  final List<OExtendibleHashingBucket> firstLevel=new ArrayList<OExtendibleHashingBucket>();
  for (int i=0; i < maxLevelSize; i++)   firstLevel.add(new OExtendibleHashingBucket(maxLevelDepth,maxBucketSize,new long[64]));
  final long[] rootTree=new long[maxLevelSize];
  for (int i=0; i < maxLevelSize; i++) {
    rootTree[i]=createBucketPointer(i + 1,0);
  }
  hashTree=new long[1][];
  hashTree[0]=rootTree;
  nodesMetadata=new OEHNodeMetadata[1];
  nodesMetadata[0]=new OEHNodeMetadata((byte)0,(byte)0,(byte)maxLevelDepth);
  size=0;
  hashTreeSize=1;
  files=new ArrayList<List<OExtendibleHashingBucket>>();
  files.add(firstLevel);
  fileLevelSizes[0]=maxLevelSize;
  for (int i=1; i < 64; i++)   fileLevelSizes[i]=0;
  Arrays.fill(fileTombstones,0);
}
