{
  database.begin();
  final OIndex<?> index=database.getMetadata().getIndexManager().getIndex("idxTxAwareOneValueGetEntriesTest");
  Assert.assertTrue(index instanceof OIndexTxAwareOneValue);
  final int clusterId=database.getDefaultClusterId();
  index.put(1,new ORecordId(clusterId,1));
  index.put(2,new ORecordId(clusterId,2));
  database.commit();
  Assert.assertNull(database.getTransaction().getIndexChanges("idxTxAwareOneValueGetEntriesTest"));
  Set<OIdentifiable> resultOne=new HashSet<OIdentifiable>();
  OIndexCursor cursor=index.iterateEntries(Arrays.asList(1,2),true);
  cursorToSet(cursor,resultOne);
  Assert.assertEquals(resultOne.size(),2);
  database.begin();
  index.put(3,new ORecordId(clusterId,3));
  Assert.assertNotNull(database.getTransaction().getIndexChanges("idxTxAwareOneValueGetEntriesTest"));
  Set<OIdentifiable> resultTwo=new HashSet<OIdentifiable>();
  cursor=index.iterateEntries(Arrays.asList(1,2,3),true);
  cursorToSet(cursor,resultTwo);
  Assert.assertEquals(resultTwo.size(),3);
  database.rollback();
  Assert.assertNull(database.getTransaction().getIndexChanges("idxTxAwareOneValueGetEntriesTest"));
  Set<OIdentifiable> resultThree=new HashSet<OIdentifiable>();
  cursor=index.iterateEntries(Arrays.asList(1,2),true);
  cursorToSet(cursor,resultThree);
  Assert.assertEquals(resultThree.size(),2);
}
