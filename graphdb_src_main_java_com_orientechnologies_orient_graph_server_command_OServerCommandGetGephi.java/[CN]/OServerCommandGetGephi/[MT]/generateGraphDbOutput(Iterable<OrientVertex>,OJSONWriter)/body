{
  if (iVertices == null)   return;
  final Set<OrientVertex> vertexes=new HashSet<OrientVertex>();
  for (  OrientVertex id : iVertices)   vertexes.add(id);
  final Set<OrientEdge> edges=new HashSet<OrientEdge>();
  for (  OrientVertex vertex : vertexes) {
    json.resetAttributes();
    json.beginObject(0,false,null);
    json.beginObject(1,false,"an");
    json.beginObject(2,false,vertex.getIdentity());
    for (    Edge e : vertex.getEdges(Direction.BOTH))     edges.add((OrientEdge)e);
    for (    String field : vertex.getPropertyKeys()) {
      final Object v=vertex.getProperty(field);
      if (v != null)       json.writeAttribute(3,false,field,v);
    }
    json.endObject(2,false);
    json.endObject(1,false);
    json.endObject(0,false);
    json.newline();
  }
  for (  OrientEdge edge : edges) {
    json.resetAttributes();
    json.beginObject();
    json.beginObject(1,false,"ae");
    json.beginObject(2,false,edge.getId());
    json.writeAttribute(3,false,"directed",false);
    json.writeAttribute(3,false,"source",edge.getVertex(Direction.IN).getId());
    json.writeAttribute(3,false,"target",edge.getVertex(Direction.OUT).getId());
    for (    String field : edge.getPropertyKeys()) {
      final Object v=edge.getProperty(field);
      if (v != null)       json.writeAttribute(3,false,field,v);
    }
    json.endObject(2,false);
    json.endObject(1,false);
    json.endObject(0,false);
    json.newline();
  }
}
