{
  int currentLevel=level;
  long naturalOrderedKey=OLinearHashingHashCalculator.INSTANCE.calculateNaturalOrderedHash(currentRecord,currentLevel);
  if (naturalOrderedKey < next)   currentLevel++;
  naturalOrderedKey=OLinearHashingHashCalculator.INSTANCE.calculateNaturalOrderedHash(currentRecord,currentLevel);
  for (int i=0; i < step; i++) {
    naturalOrderedKey++;
    if (currentLevel > level && naturalOrderedKey >= 2 * next) {
      currentLevel--;
      naturalOrderedKey=naturalOrderedKey / 2;
    }
    if (naturalOrderedKey >= (1 << currentLevel))     return null;
  }
  final int bucketNumber=OLinearHashingHashCalculator.INSTANCE.calculateBucketNumber(naturalOrderedKey,currentLevel);
  return new int[]{bucketNumber,currentLevel};
}
