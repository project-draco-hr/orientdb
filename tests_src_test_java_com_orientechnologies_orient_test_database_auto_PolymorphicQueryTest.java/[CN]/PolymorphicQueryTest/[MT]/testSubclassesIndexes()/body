{
  database.begin();
  OProfilerMBean profiler=Orient.instance().getProfiler();
  long indexUsage=profiler.getCounter("db.demo.query.indexUsed");
  long indexUsageReverted=profiler.getCounter("db.demo.query.indexUseAttemptedAndReverted");
  if (indexUsage < 0) {
    indexUsage=0;
  }
  if (indexUsageReverted < 0) {
    indexUsageReverted=0;
  }
  profiler.startRecording();
  for (int i=0; i < 10000; i++) {
    final ODocument doc1=new ODocument("IndexInSubclassesTestChild1");
    doc1.field("name","name" + i);
    doc1.save();
    final ODocument doc2=new ODocument("IndexInSubclassesTestChild2");
    doc2.field("name","name" + i);
    doc2.save();
    if (i % 100 == 0) {
      database.commit();
    }
  }
  database.commit();
  List<ODocument> result=database.query(new OSQLSynchQuery<ODocument>("select from IndexInSubclassesTestBase where name > 'name9995' and name < 'name9999' order by name ASC"));
  Assert.assertEquals(result.size(),6);
  String lastName=result.get(0).field("name");
  for (int i=1; i < result.size(); i++) {
    ODocument current=result.get(i);
    String currentName=current.field("name");
    Assert.assertTrue(lastName.compareTo(currentName) <= 0);
    lastName=currentName;
  }
  Assert.assertEquals(profiler.getCounter("db.demo.query.indexUsed"),indexUsage + 2);
  long reverted=profiler.getCounter("db.demo.query.indexUseAttemptedAndReverted");
  Assert.assertEquals(reverted < 0 ? 0 : reverted,indexUsageReverted);
  result=database.query(new OSQLSynchQuery<ODocument>("select from IndexInSubclassesTestBase where name > 'name9995' and name < 'name9999' order by name DESC"));
  Assert.assertEquals(result.size(),6);
  lastName=result.get(0).field("name");
  for (int i=1; i < result.size(); i++) {
    ODocument current=result.get(i);
    String currentName=current.field("name");
    Assert.assertTrue(lastName.compareTo(currentName) >= 0);
    lastName=currentName;
  }
  profiler.stopRecording();
}
