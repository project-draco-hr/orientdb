{
  ODocument jaimeDoc=new ODocument("NestedLinkCreation");
  jaimeDoc.field("name","jaime");
  jaimeDoc.save();
  ODocument cerseiDoc=new ODocument("NestedLinkCreation");
  cerseiDoc.fromJSON("{\"@type\":\"d\",\"name\":\"cersei\",\"valonqar\":" + jaimeDoc.toJSON() + "}");
  cerseiDoc.save();
  ODocument tyrionDoc=new ODocument("NestedLinkCreation");
  tyrionDoc.fromJSON("{\"@type\":\"d\",\"name\":\"tyrion\",\"emergency_contact\":{\"@type\":\"d\", \"relationship\":\"brother\",\"contact\":" + jaimeDoc.toJSON() + "}}");
  tyrionDoc.save();
  final Map<ORID,ODocument> contentMap=new HashMap<ORID,ODocument>();
  ODocument jaime=new ODocument("NestedLinkCreation");
  jaime.field("name","jaime");
  contentMap.put(jaimeDoc.getIdentity(),jaime);
  ODocument cersei=new ODocument("NestedLinkCreation");
  cersei.field("name","cersei");
  cersei.field("valonqar",jaimeDoc.getIdentity());
  contentMap.put(cerseiDoc.getIdentity(),cersei);
  ODocument tyrion=new ODocument("NestedLinkCreation");
  tyrion.field("name","tyrion");
  ODocument embeddedDoc=new ODocument();
  embeddedDoc.field("relationship","brother");
  embeddedDoc.field("contact",jaimeDoc.getIdentity());
  tyrion.field("emergency_contact",embeddedDoc);
  contentMap.put(tyrionDoc.getIdentity(),tyrion);
  final Map<ORID,List<ORID>> traverseMap=new HashMap<ORID,List<ORID>>();
  List<ORID> jaimeTraverse=new ArrayList<ORID>();
  jaimeTraverse.add(jaimeDoc.getIdentity());
  traverseMap.put(jaimeDoc.getIdentity(),jaimeTraverse);
  List<ORID> cerseiTraverse=new ArrayList<ORID>();
  cerseiTraverse.add(cerseiDoc.getIdentity());
  cerseiTraverse.add(jaimeDoc.getIdentity());
  traverseMap.put(cerseiDoc.getIdentity(),cerseiTraverse);
  List<ORID> tyrionTraverse=new ArrayList<ORID>();
  tyrionTraverse.add(tyrionDoc.getIdentity());
  tyrionTraverse.add(jaimeDoc.getIdentity());
  traverseMap.put(tyrionDoc.getIdentity(),tyrionTraverse);
  for (  ODocument o : database.browseClass("NestedLinkCreation")) {
    ODocument content=contentMap.get(o.getIdentity());
    Assert.assertTrue(content.hasSameContentOf(o));
    List<ORID> traverse=traverseMap.remove(o.getIdentity());
    for (    OIdentifiable id : new OSQLSynchQuery<ODocument>("traverse * from " + o.getIdentity().toString())) {
      Assert.assertTrue(traverse.remove(id.getIdentity()));
    }
    Assert.assertTrue(traverse.isEmpty());
  }
  Assert.assertTrue(traverseMap.isEmpty());
}
