{
  startOperation();
  try {
    atomicOperationsManager.acquireReadLock(this);
    try {
      acquireSharedLock();
      try {
        OAtomicOperation atomicOperation=atomicOperationsManager.getCurrentOperation();
        OCacheEntry rootCacheEntry=loadPage(atomicOperation,fileId,ROOT_INDEX,false);
        rootCacheEntry.acquireSharedLock();
        try {
          OSBTreeBucket<K,V> rootBucket=new OSBTreeBucket<K,V>(rootCacheEntry,keySerializer,keyTypes,valueSerializer,getChanges(atomicOperation,rootCacheEntry));
          return rootBucket.getTreeSize();
        }
  finally {
          rootCacheEntry.releaseSharedLock();
          releasePage(atomicOperation,rootCacheEntry);
        }
      }
  finally {
        releaseSharedLock();
      }
    }
 catch (    IOException e) {
      throw OException.wrapException(new OSBTreeException("Error during retrieving of size of index " + getName(),this),e);
    }
 finally {
      atomicOperationsManager.releaseReadLock(this);
    }
  }
  finally {
    completeOperation();
  }
}
