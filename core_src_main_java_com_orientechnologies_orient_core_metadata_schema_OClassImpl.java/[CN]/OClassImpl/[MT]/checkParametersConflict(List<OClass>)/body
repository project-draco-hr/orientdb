{
  final Map<String,OProperty> comulative=new HashMap<String,OProperty>();
  final Map<String,OProperty> properties=new HashMap<String,OProperty>();
  for (  OClass superClass : classes) {
    if (superClass == null)     continue;
    OClassImpl impl;
    if (superClass instanceof OClassAbstractDelegate)     impl=(OClassImpl)((OClassAbstractDelegate)superClass).delegate;
 else     impl=(OClassImpl)superClass;
    impl.propertiesMap(properties,false);
    for (    Map.Entry<String,OProperty> entry : properties.entrySet()) {
      if (comulative.containsKey(entry.getKey())) {
        final String property=entry.getKey();
        final OProperty existingProperty=comulative.get(property);
        if (!existingProperty.getType().equals(entry.getValue().getType())) {
          throw new OSchemaException("Properties conflict detected: '" + existingProperty + "] vs ["+ entry.getValue()+ "]");
        }
      }
    }
    comulative.putAll(properties);
    properties.clear();
  }
}
