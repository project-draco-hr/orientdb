{
  OMatchFilterItem jjtn000=new OMatchFilterItem(JJTMATCHFILTERITEM);
  boolean jjtc000=true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
  try {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case CLASS:
      jj_consume_token(CLASS);
    jj_consume_token(COLON);
  jjtn000.className=Expression();
break;
case CLASSES:
jj_consume_token(CLASSES);
jj_consume_token(COLON);
jjtn000.classNames=Expression();
break;
case AS:
jj_consume_token(AS);
jj_consume_token(COLON);
jjtn000.alias=Identifier();
break;
case WHERE:
jj_consume_token(WHERE);
jj_consume_token(COLON);
jj_consume_token(LPAREN);
jjtn000.filter=WhereClause();
jj_consume_token(RPAREN);
break;
case WHILE:
jj_consume_token(WHILE);
jj_consume_token(COLON);
jj_consume_token(LPAREN);
jjtn000.whileCondition=WhereClause();
jj_consume_token(RPAREN);
break;
case MAXDEPTH:
jj_consume_token(MAXDEPTH);
jj_consume_token(COLON);
jjtn000.maxDepth=Integer();
break;
default :
jj_la1[220]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
jjtree.closeNodeScope(jjtn000,true);
jjtc000=false;
jjtn000.jjtSetLastToken(getToken(0));
{
if (true) return jjtn000;
}
}
 catch (Throwable jjte000) {
if (jjtc000) {
jjtree.clearNodeScope(jjtn000);
jjtc000=false;
}
 else {
jjtree.popNode();
}
if (jjte000 instanceof RuntimeException) {
{
if (true) throw (RuntimeException)jjte000;
}
}
if (jjte000 instanceof ParseException) {
{
if (true) throw (ParseException)jjte000;
}
}
{
if (true) throw (Error)jjte000;
}
}
 finally {
if (jjtc000) {
jjtree.closeNodeScope(jjtn000,true);
jjtn000.jjtSetLastToken(getToken(0));
}
}
throw new Error("Missing return statement in function");
}
