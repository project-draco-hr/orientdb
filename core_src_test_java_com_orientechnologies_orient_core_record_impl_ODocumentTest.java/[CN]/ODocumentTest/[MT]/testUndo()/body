{
  ODatabaseDocumentTx db=new ODatabaseDocumentTx("memory:" + ODocumentTest.class.getSimpleName());
  db.create();
  try {
    OSchema schema=db.getMetadata().getSchema();
    OClass classA=schema.createClass("TestUndo");
    classA.createProperty("name",OType.STRING);
    classA.createProperty("property",OType.STRING);
    ODocument doc=new ODocument(classA);
    doc.field("name","My Name");
    doc.field("property","value1");
    doc.save();
    assertEquals(doc.field("name"),"My Name");
    assertEquals(doc.field("property"),"value1");
    doc.undo();
    assertEquals(doc.field("name"),"My Name");
    assertEquals(doc.field("property"),"value1");
    doc.field("name","My Name 2");
    doc.field("property","value2");
    doc.undo();
    doc.field("name","My Name 3");
    assertEquals(doc.field("name"),"My Name 3");
    assertEquals(doc.field("property"),"value1");
    doc.save();
    doc.field("name","My Name 4");
    doc.field("property","value4");
    doc.undo("property");
    assertEquals(doc.field("name"),"My Name 4");
    assertEquals(doc.field("property"),"value1");
    doc.save();
    doc.undo("property");
    assertEquals(doc.field("name"),"My Name 4");
    assertEquals(doc.field("property"),"value1");
    doc.undo();
    assertEquals(doc.field("name"),"My Name 4");
    assertEquals(doc.field("property"),"value1");
  }
  finally {
    db.drop();
  }
}
