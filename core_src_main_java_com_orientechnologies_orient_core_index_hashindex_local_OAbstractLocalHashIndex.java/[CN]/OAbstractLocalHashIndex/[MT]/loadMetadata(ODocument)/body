{
  final String indexName=config.field(OIndexInternal.CONFIG_NAME);
  final String indexType=config.field(OIndexInternal.CONFIG_TYPE);
  OIndexDefinition loadedIndexDefinition=null;
  final ODocument indexDefinitionDoc=config.field(OIndexInternal.INDEX_DEFINITION);
  if (indexDefinitionDoc != null) {
    try {
      final String indexDefClassName=config.field(OIndexInternal.INDEX_DEFINITION_CLASS);
      final Class<?> indexDefClass=Class.forName(indexDefClassName);
      loadedIndexDefinition=(OIndexDefinition)indexDefClass.getDeclaredConstructor().newInstance();
      loadedIndexDefinition.fromStream(indexDefinitionDoc);
    }
 catch (    final ClassNotFoundException e) {
      throw new OIndexException("Error during deserialization of index definition",e);
    }
catch (    final NoSuchMethodException e) {
      throw new OIndexException("Error during deserialization of index definition",e);
    }
catch (    final InvocationTargetException e) {
      throw new OIndexException("Error during deserialization of index definition",e);
    }
catch (    final InstantiationException e) {
      throw new OIndexException("Error during deserialization of index definition",e);
    }
catch (    final IllegalAccessException e) {
      throw new OIndexException("Error during deserialization of index definition",e);
    }
  }
  final Set<String> clusters=new HashSet<String>((Collection<String>)config.field(CONFIG_CLUSTERS));
  return new IndexMetadata(indexName,loadedIndexDefinition,clusters,indexType);
}
