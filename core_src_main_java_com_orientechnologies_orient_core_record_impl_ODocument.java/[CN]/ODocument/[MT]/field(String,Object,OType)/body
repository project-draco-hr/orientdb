{
  iFieldName=checkFieldName(iFieldName);
  checkForLoading();
  checkForFields();
  _source=null;
  final boolean knownProperty=_fieldValues.containsKey(iFieldName);
  final Object oldValue=_fieldValues.get(iFieldName);
  if (knownProperty)   if (iPropertyValue == null) {
    if (oldValue == null)     return this;
  }
 else {
    try {
      if (iPropertyValue == oldValue) {
        if (!(iPropertyValue instanceof ORecordElement))         setDirty();
        return this;
      }
    }
 catch (    Exception e) {
      OLogManager.instance().warn(this,"Error on checking the value of property %s against the record %s",e,iFieldName,getIdentity());
    }
  }
  if (iFieldType != null)   setFieldType(iFieldName,iFieldType);
 else   if (_clazz != null) {
    final OProperty prop=_clazz.getProperty(iFieldName);
    if (prop != null)     iFieldType=prop.getType();
  }
  if (iPropertyValue != null)   if (iFieldType != null)   iPropertyValue=ODocumentHelper.convertField(this,iFieldName,iFieldType.getDefaultJavaType(),iPropertyValue);
 else   if (iPropertyValue instanceof Enum)   iPropertyValue=iPropertyValue.toString();
  removeCollectionChangeListener(iFieldName);
  removeCollectionTimeLine(iFieldName);
  _fieldValues.put(iFieldName,iPropertyValue);
  addCollectionChangeListener(iFieldName,iPropertyValue);
  if (_status != STATUS.UNMARSHALLING) {
    setDirty();
    if (_trackingChanges && _recordId.isValid()) {
      if (_fieldOriginalValues == null)       _fieldOriginalValues=new HashMap<String,Object>();
      if (!_fieldOriginalValues.containsKey(iFieldName))       _fieldOriginalValues.put(iFieldName,oldValue);
    }
  }
  return this;
}
