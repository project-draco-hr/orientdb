{
  if (iRecordId.getClusterId() < 0)   throw new IllegalArgumentException("RID " + iRecordId + " is not valid");
  String clusterName=getClusterNameByRID(iRecordId);
  String ownerNode=dbCfg.getClusterOwner(clusterName);
  if (ownerNode.equals(localNodeName))   return null;
  final OCluster cl=getClusterByName(clusterName);
  final ODatabaseDocumentInternal db=ODatabaseRecordThreadLocal.INSTANCE.get();
  final OClass cls=db.getMetadata().getSchema().getClassByClusterId(cl.getId());
  String newClusterName=null;
  if (cls != null) {
    OClusterSelectionStrategy clSel=cls.getClusterSelection();
    if (!(clSel instanceof OLocalClusterStrategy)) {
      dManager.propagateSchemaChanges(db);
      clSel=cls.getClusterSelection();
    }
    if (!(clSel instanceof OLocalClusterStrategy))     throw new ODistributedException("Cannot install local cluster strategy on class '" + cls.getName() + "'");
    OLogManager.instance().info(this,"Local node '" + localNodeName + "' is not the master for cluster '"+ clusterName+ "' (it is '"+ ownerNode+ "'). Reloading distributed configuration for database '"+ getName()+ "'");
    dbCfg=((OLocalClusterStrategy)clSel).readConfiguration();
    throw new ODistributedConfigurationChangedException("Local node '" + localNodeName + "' is not the master for cluster '"+ clusterName+ "' (it is '"+ ownerNode+ "')");
  }
  if (!ownerNode.equals(localNodeName))   throw new ODistributedException("Error on inserting into cluster '" + clusterName + "' where local node '"+ localNodeName+ "' is not the master of it, but it is '"+ ownerNode+ "'");
  OLogManager.instance().info(this,"Local node '" + localNodeName + "' is not the master for cluster '"+ clusterName+ "' (it is '"+ ownerNode+ "'). Switching to a valid cluster of the same class: '"+ newClusterName+ "'");
  clusterName=newClusterName;
  final ORecordId oldRID=iRecordId.copy();
  iRecordId.clusterId=db.getClusterIdByName(newClusterName);
  OLogManager.instance().warn(this,"Reassigned local cluster '%s' to the record %s. New RID is %s",newClusterName,oldRID,iRecordId);
  return clusterName;
}
