{
  final ODatabaseRecord database=getDatabase();
  final Set<Integer> clusterIds=new HashSet<Integer>();
  for (  String clusterName : compiledFilter.getTargetClusters().keySet()) {
    if (clusterName == null || clusterName.length() == 0)     throw new OCommandExecutionException("No cluster or schema class selected in query");
    database.checkSecurity(ODatabaseSecurityResources.CLUSTER,ORole.PERMISSION_READ,clusterName.toLowerCase());
    if (Character.isDigit(clusterName.charAt(0))) {
      for (      int clusterId : OStringSerializerHelper.splitIntArray(clusterName)) {
        if (clusterId == -1)         throw new OCommandExecutionException("Cluster '" + clusterName + "' not found");
        clusterIds.add(clusterId);
      }
    }
 else {
      final int clusterId=database.getClusterIdByName(clusterName.toLowerCase());
      if (clusterId == -1)       throw new OCommandExecutionException("Cluster '" + clusterName + "' not found");
      clusterIds.add(clusterId);
    }
  }
  final int[] clIds=new int[clusterIds.size()];
  int i=0;
  for (  int c : clusterIds)   clIds[i++]=c;
  final ORID[] range=getRange();
  target=new ORecordIteratorClusters<ORecordInternal<?>>(database,(ODatabaseRecordAbstract)database,clIds).setRange(range[0],range[1]);
}
