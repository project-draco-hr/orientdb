{
  try {
    network.beginResponse(sessionId,0);
    try {
      final byte request=network.readByte();
      Object obj=null;
switch (request) {
case OChannelBinaryProtocol.REQUEST_PUSH_RECORD:
        obj=(ORecordInternal<?>)OChannelBinaryProtocol.readIdentifiable(network);
      break;
case OChannelBinaryProtocol.REQUEST_PUSH_DISTRIB_CONFIG:
    obj=network.readBytes();
  break;
}
if (remoteServerEventListener != null) remoteServerEventListener.onRequest(request,obj);
}
 catch (IOException ioe) {
sendShutdown();
network.close();
network=null;
}
 finally {
if (network != null) network.endResponse();
}
}
 catch (Exception e) {
sendShutdown();
if (network != null) {
final OChannelBinaryClient n=network;
network=null;
n.close();
}
}
}
