{
  OMatchExpression jjtn000=new OMatchExpression(JJTMATCHEXPRESSION);
  boolean jjtc000=true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
  OMatchPathItem nextItem=null;
  try {
    jjtn000.origin=MatchFilter();
    label_42:     while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case DOT:
case LT:
case DECR:
case MINUS:
        ;
      break;
default :
    jj_la1[227]=jj_gen;
  break label_42;
}
if (jj_2_106(3)) {
nextItem=MatchPathItem();
}
 else if (jj_2_107(3)) {
nextItem=MultiMatchPathItemArrows();
}
 else if (jj_2_108(3)) {
nextItem=MultiMatchPathItem();
}
 else if (jj_2_109(2147483647)) {
nextItem=OutPathItem();
}
 else {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case LT:
  nextItem=InPathItem();
break;
default :
jj_la1[228]=jj_gen;
if (jj_2_110(2147483647)) {
nextItem=BothPathItem();
}
 else {
jj_consume_token(-1);
throw new ParseException();
}
}
}
jjtn000.items.add(nextItem);
}
jjtree.closeNodeScope(jjtn000,true);
jjtc000=false;
jjtn000.jjtSetLastToken(getToken(0));
{
if (true) return jjtn000;
}
}
 catch (Throwable jjte000) {
if (jjtc000) {
jjtree.clearNodeScope(jjtn000);
jjtc000=false;
}
 else {
jjtree.popNode();
}
if (jjte000 instanceof RuntimeException) {
{
if (true) throw (RuntimeException)jjte000;
}
}
if (jjte000 instanceof ParseException) {
{
if (true) throw (ParseException)jjte000;
}
}
{
if (true) throw (Error)jjte000;
}
}
 finally {
if (jjtc000) {
jjtree.closeNodeScope(jjtn000,true);
jjtn000.jjtSetLastToken(getToken(0));
}
}
throw new Error("Missing return statement in function");
}
