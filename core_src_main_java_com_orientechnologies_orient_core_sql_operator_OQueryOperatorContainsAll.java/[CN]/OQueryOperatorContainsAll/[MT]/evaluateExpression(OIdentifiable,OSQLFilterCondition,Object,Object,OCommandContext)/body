{
  final OSQLFilterCondition condition;
  if (iCondition.getLeft() instanceof OSQLFilterCondition)   condition=(OSQLFilterCondition)iCondition.getLeft();
 else   if (iCondition.getRight() instanceof OSQLFilterCondition)   condition=(OSQLFilterCondition)iCondition.getRight();
 else   condition=null;
  if (iLeft.getClass().isArray()) {
    if (iRight.getClass().isArray()) {
      int matches=0;
      for (      final Object l : (Object[])iLeft) {
        for (        final Object r : (Object[])iRight) {
          if (OQueryOperatorEquals.equals(l,r)) {
            ++matches;
            break;
          }
        }
      }
      return matches == ((Object[])iRight).length;
    }
 else     if (iRight instanceof Collection<?>) {
      int matches=0;
      for (      final Object l : (Object[])iLeft) {
        for (        final Object r : (Collection<?>)iRight) {
          if (OQueryOperatorEquals.equals(l,r)) {
            ++matches;
            break;
          }
        }
      }
      return matches == ((Collection<?>)iRight).size();
    }
  }
 else   if (iLeft instanceof Collection<?>) {
    final Collection<ORecordSchemaAware<?>> collection=(Collection<ORecordSchemaAware<?>>)iLeft;
    if (condition != null) {
      for (      final ORecordSchemaAware<?> o : collection) {
        if ((Boolean)condition.evaluate(o,null,iContext) == Boolean.FALSE)         return false;
      }
    }
 else {
      for (      final Object o : collection) {
        if (!OQueryOperatorEquals.equals(iRight,o))         return false;
      }
    }
  }
 else   if (iRight instanceof Collection<?>) {
    final Collection<ORecordSchemaAware<?>> collection=(Collection<ORecordSchemaAware<?>>)iRight;
    if (condition != null) {
      for (      final ORecordSchemaAware<?> o : collection) {
        if ((Boolean)condition.evaluate(o,null,iContext) == Boolean.FALSE)         return false;
      }
    }
 else {
      for (      final Object o : collection) {
        if (!OQueryOperatorEquals.equals(iLeft,o))         return false;
      }
    }
  }
  return true;
}
