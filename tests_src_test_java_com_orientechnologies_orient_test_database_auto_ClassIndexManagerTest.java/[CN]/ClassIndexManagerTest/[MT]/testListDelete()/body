{
  final OSchema schema=database.getMetadata().getSchema();
  final OClass oClass=schema.getClass("classIndexManagerTestClass");
  final OIndex<?> propFourIndex=oClass.getClassIndex("classIndexManagerTestClass.prop4");
  Assert.assertEquals(propFourIndex.getSize(),0);
  final ODocument doc=new ODocument("classIndexManagerTestClass");
  final List<String> listProperty=new ArrayList<String>();
  listProperty.add("value1");
  listProperty.add("value2");
  doc.field("prop4",listProperty);
  doc.save();
  Assert.assertEquals(propFourIndex.getSize(),2);
  Assert.assertNotNull(propFourIndex.get("value1"));
  Assert.assertNotNull(propFourIndex.get("value2"));
  List<String> trackedList=doc.field("prop4");
  trackedList.set(0,"value3");
  trackedList.add("value4");
  trackedList.add("value4");
  trackedList.add("value4");
  trackedList.remove("value4");
  trackedList.remove("value2");
  trackedList.add("value5");
  doc.save();
  Assert.assertEquals(propFourIndex.getSize(),3);
  Assert.assertNotNull(propFourIndex.get("value3"));
  Assert.assertNotNull(propFourIndex.get("value4"));
  Assert.assertNotNull(propFourIndex.get("value5"));
  trackedList=doc.field("prop4");
  trackedList.remove("value3");
  trackedList.remove("value4");
  trackedList.add("value8");
  doc.delete();
  Assert.assertEquals(propFourIndex.getSize(),0);
}
