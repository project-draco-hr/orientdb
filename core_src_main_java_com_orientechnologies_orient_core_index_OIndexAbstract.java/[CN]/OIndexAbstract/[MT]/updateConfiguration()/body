{
  acquireExclusiveLock();
  try {
    configuration.setInternalStatus(ORecordElement.STATUS.UNMARSHALLING);
    try {
      configuration.field(OIndexInternal.CONFIG_TYPE,type);
      configuration.field(OIndexInternal.CONFIG_NAME,name);
      if (indexDefinition != null) {
        final ODocument indexDefDocument=indexDefinition.toStream();
        if (!indexDefDocument.hasOwners())         ODocumentInternal.addOwner(indexDefDocument,configuration);
        configuration.field(OIndexInternal.INDEX_DEFINITION,indexDefDocument,OType.EMBEDDED);
        configuration.field(OIndexInternal.INDEX_DEFINITION_CLASS,indexDefinition.getClass().getName());
      }
 else {
        configuration.removeField(OIndexInternal.INDEX_DEFINITION);
        configuration.removeField(OIndexInternal.INDEX_DEFINITION_CLASS);
      }
      configuration.field(CONFIG_CLUSTERS,clustersToIndex,OType.EMBEDDEDSET);
      configuration.field(CONFIG_MAP_RID,indexEngine.getIdentity());
      configuration.field(ALGORITHM,algorithm);
      configuration.field(VALUE_CONTAINER_ALGORITHM,valueContainerAlgorithm);
    }
  finally {
      configuration.setInternalStatus(ORecordElement.STATUS.LOADED);
    }
  }
  finally {
    releaseExclusiveLock();
  }
  return configuration;
}
