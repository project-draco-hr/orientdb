{
  File file=new File("./target/databases/");
  if (file.exists())   OFileUtils.deleteRecursively(file);
  file.mkdirs();
  server=new OServer(false);
  server.startup("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n" + "<orient-server>\n" + "    <handlers>\n"+ "        <!-- GRAPH PLUGIN -->\n"+ "        <handler class=\"com.orientechnologies.orient.graph.handler.OGraphServerHandler\">\n"+ "            <parameters>\n"+ "                <parameter name=\"enabled\" value=\"true\"/>\n"+ "                <parameter name=\"graph.pool.max\" value=\"50\"/>\n"+ "            </parameters>\n"+ "        </handler>\n"+ "       \n"+ "<handler class=\"com.orientechnologies.orient.server.hazelcast.OHazelcastPlugin\">\n"+ "            <parameters>\n"+ "                <parameter name=\"nodeName\" value=\"unittest\" />\n"+ "                <parameter name=\"enabled\" value=\"true\"/>\n"+ "                <parameter name=\"configuration.db.default\"\n"+ "                           value=\"src/test/resources/default-distributed-db-config.json\"/>\n"+ "                <parameter name=\"configuration.hazelcast\" value=\"config/hazelcast.xml\"/>\n"+ "\n"+ "            </parameters>\n"+ "        </handler>"+ "    </handlers>\n"+ "    <network>\n"+ "        <protocols>\n"+ "            <protocol name=\"binary\"\n"+ "                      implementation=\"com.orientechnologies.orient.server.network.protocol.binary.ONetworkProtocolBinary\"/>\n"+ "        </protocols>\n"+ "        <listeners>\n"+ "            <listener protocol=\"binary\" ip-address=\"0.0.0.0\" port-range=\"2424-2430\"/>\n"+ "        </listeners>\n"+ "        <cluster>\n"+ "        </cluster>\n"+ "    </network>\n"+ "    <storages>\n"+ "    </storages>\n"+ "    <users>\n"+ "      <user name=\"root\" password=\"root\" resources=\"*\"/>\n"+ "    </users>\n"+ "    <properties>\n"+ "\n"+ "        <!-- Uses the Hazelcast's distributed cache as 2nd level cache -->\n"+ "        <!-- <entry name=\"cache.level2.impl\" value=\"com.orientechnologies.orient.server.hazelcast.OHazelcastCache\" /> -->\n"+ "\n"+ "        <!-- DATABASE POOL: size min/max -->\n"+ "        <entry name=\"db.pool.min\" value=\"1\"/>\n"+ "        <entry name=\"db.pool.max\" value=\"20\"/>\n"+ "\n"+ "        <!-- LEVEL1 AND 2 CACHE: enable/disable and set the size as number of entries -->\n"+ "        <entry name=\"cache.level1.enabled\" value=\"false\"/>\n"+ "        <entry name=\"cache.level1.size\" value=\"1000\"/>\n"+ "        <entry name=\"cache.level2.enabled\" value=\"false\"/>\n"+ "        <entry name=\"cache.level2.size\" value=\"1000\"/>\n"+ "\n"+ "<entry name=\"server.database.path\" value=\"target/databases\" />"+ "        <!-- PROFILER: configures the profiler as <seconds-for-snapshot>,<archive-snapshot-size>,<summary-size>  -->\n"+ "        <entry name=\"profiler.enabled\" value=\"true\"/>\n"+ "        <!-- <entry name=\"profiler.config\" value=\"30,10,10\" />  -->\n"+ "\n"+ "        <!-- LOG: enable/Disable logging. Levels are: finer, fine, finest, info, warning -->\n"+ "        <entry name=\"log.console.level\" value=\"finest\"/>\n"+ "        <entry name=\"log.file.level\" value=\"finest\"/>\n"+ "    </properties>\n"+ " <isAfterFirstTime>true</isAfterFirstTime></orient-server>");
  server.activate();
}
