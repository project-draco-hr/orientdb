{
  if (status == STATUS.UNREACHABLE)   bufferChange(iRequest);
 else {
    final ORecordInternal<?> record=iRequest.getRecord();
    try {
switch (iRequest.status) {
case OTransactionEntry.CREATED:
        channel.acquireExclusiveLock();
      try {
        channel.writeByte(OChannelDistributedProtocol.REQUEST_RECORD_CREATE);
        channel.writeInt(clientTxId);
        channel.writeShort((short)record.getIdentity().getClusterId());
        channel.writeBytes(record.toStream());
        channel.writeByte(record.getRecordType());
        channel.flush();
        dbVersion++;
        readStatus();
        channel.readLong();
      }
  finally {
        channel.releaseExclusiveLock();
      }
    break;
case OTransactionEntry.UPDATED:
  channel.acquireExclusiveLock();
try {
  channel.writeByte(OChannelDistributedProtocol.REQUEST_RECORD_UPDATE);
  channel.writeInt(clientTxId);
  channel.writeShort((short)record.getIdentity().getClusterId());
  channel.writeLong(record.getIdentity().getClusterPosition());
  channel.writeBytes(record.toStream());
  channel.writeInt(record.getVersion());
  channel.writeByte(record.getRecordType());
  channel.flush();
  readStatus();
  dbVersion++;
  channel.readInt();
}
  finally {
  channel.releaseExclusiveLock();
}
break;
case OTransactionEntry.DELETED:
channel.acquireExclusiveLock();
try {
channel.writeByte(OChannelDistributedProtocol.REQUEST_RECORD_DELETE);
channel.writeInt(clientTxId);
channel.writeShort((short)record.getIdentity().getClusterId());
channel.writeLong(record.getIdentity().getClusterPosition());
channel.writeInt(record.getVersion());
channel.flush();
dbVersion++;
readStatus();
channel.readByte();
}
  finally {
channel.releaseExclusiveLock();
}
break;
}
}
 catch (RuntimeException e) {
throw e;
}
}
}
