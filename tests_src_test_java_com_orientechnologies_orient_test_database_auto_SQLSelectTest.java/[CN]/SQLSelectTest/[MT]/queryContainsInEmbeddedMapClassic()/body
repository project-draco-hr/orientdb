{
  Map<String,ODocument> customReferences=new HashMap<String,ODocument>();
  customReferences.put("first",new ODocument("name","Luca","surname","Garulli"));
  customReferences.put("second",new ODocument("name","Jay","surname","Miner"));
  ODocument doc=new ODocument("Profile");
  doc.field("customReferences",customReferences,OType.EMBEDDEDMAP);
  doc.save();
  List<ODocument> resultset=executeQuery("select from Profile where customReferences CONTAINSKEY 'first'",database);
  Assert.assertEquals(resultset.size(),1);
  Assert.assertEquals(resultset.get(0).getIdentity(),doc.getIdentity());
  resultset=executeQuery("select from Profile where customReferences CONTAINSVALUE ( name like 'Ja%')",database);
  Assert.assertEquals(resultset.size(),1);
  Assert.assertEquals(resultset.get(0).getIdentity(),doc.getIdentity());
  resultset=executeQuery("select from Profile where customReferences[second]['name'] like 'Ja%'",database);
  Assert.assertEquals(resultset.size(),1);
  Assert.assertEquals(resultset.get(0).getIdentity(),doc.getIdentity());
  resultset=executeQuery("select customReferences['second', 'first'] from Profile where customReferences.size() = 2",database);
  Assert.assertEquals(resultset.size(),1);
  if (resultset.get(0).field("customReferences").getClass().isArray()) {
    Object[] customReferencesBack=resultset.get(0).field("customReferences");
    Assert.assertEquals(customReferencesBack.length,2);
    Assert.assertTrue(customReferencesBack[0] instanceof ODocument);
    Assert.assertTrue(customReferencesBack[1] instanceof ODocument);
  }
 else   if (resultset.get(0).field("customReferences") instanceof List) {
    List<ODocument> customReferencesBack=resultset.get(0).field("customReferences");
    Assert.assertEquals(customReferencesBack.size(),2);
    Assert.assertTrue(customReferencesBack.get(0) instanceof ODocument);
    Assert.assertTrue(customReferencesBack.get(1) instanceof ODocument);
  }
 else   Assert.assertTrue(false,"Wrong type received: " + resultset.get(0).field("customReferences"));
  resultset=executeQuery("select customReferences[second]['name'] from Profile where customReferences[second]['name'] is not null",database);
  Assert.assertEquals(resultset.size(),1);
  resultset=executeQuery("select customReferences[second]['name'] as value from Profile where customReferences[second]['name'] is not null",database);
  Assert.assertEquals(resultset.size(),1);
  doc.delete();
}
