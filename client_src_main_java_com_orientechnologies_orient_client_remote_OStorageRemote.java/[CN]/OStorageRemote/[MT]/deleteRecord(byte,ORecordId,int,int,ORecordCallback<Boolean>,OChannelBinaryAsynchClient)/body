{
  try {
    beginRequest(network,command);
    network.writeRID(iRid);
    network.writeVersion(iVersion);
    network.writeByte((byte)iMode);
  }
  finally {
    endRequest(network);
  }
switch (iMode) {
case 0:
    try {
      beginResponse(network);
      return network.readByte() == 1;
    }
  finally {
      endResponse(network);
    }
case 1:
  if (iCallback != null) {
    final int sessionId=getSessionId();
    Callable<Object> response=new Callable<Object>(){
      public Object call() throws Exception {
        Boolean result;
        try {
          getCurrentSession().sessionId=sessionId;
          beginResponse(network);
          result=network.readByte() == 1;
        }
  finally {
          endResponse(network);
          getCurrentSession().sessionId=-1;
        }
        iCallback.call(iRid,result);
        return null;
      }
    }
;
    asynchExecutor.submit(new FutureTask<Object>(response));
  }
}
return false;
}
