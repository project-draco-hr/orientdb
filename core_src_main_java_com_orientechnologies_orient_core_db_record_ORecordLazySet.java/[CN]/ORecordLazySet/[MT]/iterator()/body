{
  return new OLazyRecordIterator(new OLazyIterator<OIdentifiable>(){
    private Iterator<Entry<OIdentifiable,Object>> iter=ORecordLazySet.super.map.entrySet().iterator();
    @Override public boolean hasNext(){
      return iter.hasNext();
    }
    @Override public OIdentifiable next(){
      Entry<OIdentifiable,Object> entry=iter.next();
      if (entry.getValue() != ENTRY_REMOVAL)       return (OIdentifiable)entry.getValue();
      return entry.getKey();
    }
    @Override public void remove(){
      iter.remove();
    }
    @Override public OIdentifiable update(    OIdentifiable iValue){
      map.put(iValue.getIdentity(),iValue.getRecord());
      return iValue;
    }
  }
,autoConvertToRecord);
}
