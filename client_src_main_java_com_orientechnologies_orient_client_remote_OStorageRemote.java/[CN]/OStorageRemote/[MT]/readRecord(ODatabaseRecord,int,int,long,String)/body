{
  checkConnection();
  if (OStorageRemoteThreadLocal.INSTANCE.get())   return null;
  do {
    boolean locked=lock.acquireExclusiveLock();
    try {
      final int reqId;
      try {
        reqId=beginRequest(OChannelBinaryProtocol.REQUEST_RECORD_LOAD);
        network.writeShort((short)iClusterId);
        network.writeLong(iPosition);
        network.writeString(iFetchPlan != null ? iFetchPlan : "");
      }
  finally {
        endRequest();
      }
      try {
        beginResponse(reqId);
        if (network.readByte() == 0)         return null;
        final ORawBuffer buffer=new ORawBuffer(network.readBytes(),network.readInt(),network.readByte());
        while (network.readByte() == 2) {
          final int classId=network.readInt();
          if (classId == OChannelBinaryProtocol.RECORD_NULL)           break;
          final byte recordType=network.readByte();
          final String rid=ORecordId.generateString(network.readShort(),network.readLong());
          final int recordVersion=network.readInt();
          final byte[] recordContent=network.readBytes();
          cache.pushRecord(rid,new ORawBuffer(recordContent,recordVersion,recordType));
        }
        return buffer;
      }
  finally {
        endResponse();
      }
    }
 catch (    Exception e) {
      handleException("Error on read record: " + iClusterId + ":"+ iPosition,e);
    }
 finally {
      lock.releaseExclusiveLock(locked);
    }
  }
 while (true);
}
