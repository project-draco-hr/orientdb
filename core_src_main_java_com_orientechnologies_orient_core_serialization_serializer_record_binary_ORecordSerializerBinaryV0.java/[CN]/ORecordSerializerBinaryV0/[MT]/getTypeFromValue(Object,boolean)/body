{
  OType type=null;
  if (fieldValue.getClass() == byte[].class)   type=OType.BINARY;
 else   if (fieldValue instanceof ORecord<?>) {
    if (fieldValue instanceof ODocument && (((ODocument)fieldValue).hasOwners() || forceEmbedded)) {
      type=OType.EMBEDDED;
    }
 else     type=OType.LINK;
  }
 else   if (fieldValue instanceof ODocumentSerializable)   type=OType.EMBEDDED;
 else   if (fieldValue instanceof ORID)   type=OType.LINK;
 else   if (fieldValue instanceof Date)   type=OType.DATETIME;
 else   if (fieldValue instanceof String)   type=OType.STRING;
 else   if (fieldValue instanceof Integer || fieldValue instanceof BigInteger)   type=OType.INTEGER;
 else   if (fieldValue instanceof Long)   type=OType.LONG;
 else   if (fieldValue instanceof Float)   type=OType.FLOAT;
 else   if (fieldValue instanceof Short)   type=OType.SHORT;
 else   if (fieldValue instanceof Byte)   type=OType.BYTE;
 else   if (fieldValue instanceof Double)   type=OType.DOUBLE;
 else   if (fieldValue instanceof BigDecimal)   type=OType.DECIMAL;
 else   if (fieldValue instanceof Boolean)   type=OType.BOOLEAN;
 else   if (fieldValue instanceof ORidBag)   type=OType.LINKBAG;
 else   if (fieldValue instanceof Map<?,?>) {
    boolean link=true;
    if (((Map<?,?>)fieldValue).size() > 0) {
      final Iterable<Object> firstValue=OMultiValue.getMultiValueIterable(fieldValue);
      boolean empty=true;
      for (      Object object : firstValue) {
        if (!(object instanceof OIdentifiable) && object != null)         link=false;
 else         if (object != null)         empty=false;
      }
      if (empty)       link=false;
    }
 else     link=false;
    if (link)     type=OType.LINKMAP;
 else     type=OType.EMBEDDEDMAP;
  }
 else   if (fieldValue instanceof OMultiCollectionIterator<?>)   type=((OMultiCollectionIterator<?>)fieldValue).isEmbedded() ? OType.EMBEDDEDLIST : OType.LINKLIST;
 else   if (fieldValue.getClass().isArray()) {
    type=OType.EMBEDDEDLIST;
  }
 else   if (fieldValue instanceof Collection<?>) {
    final Object firstValue=OMultiValue.getFirstValue(fieldValue);
    if (firstValue instanceof OIdentifiable) {
      if (fieldValue instanceof Set<?>) {
        type=OType.LINKSET;
      }
 else {
        type=OType.LINKLIST;
      }
    }
 else {
      if (fieldValue instanceof Set<?>) {
        type=OType.EMBEDDEDSET;
      }
 else {
        type=OType.EMBEDDEDLIST;
      }
    }
  }
 else   if (fieldValue instanceof OSerializableStream)   type=OType.CUSTOM;
  return type;
}
