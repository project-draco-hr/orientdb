{
  final OIndexDefinition indexDefinition=index.getDefinition();
  final OIndexInternal<?> internalIndex=index.getInternal();
  OIndexCursor cursor;
  if (!internalIndex.canBeUsedInEqualityOperators())   return null;
  if (indexDefinition.getParamCount() == 1) {
    final Object key;
    if (indexDefinition instanceof OIndexDefinitionMultiValue)     key=((OIndexDefinitionMultiValue)indexDefinition).createSingleValue(keyParams.get(0));
 else     key=indexDefinition.createValue(keyParams);
    if (key == null)     return null;
    final Object indexResult;
    indexResult=index.get(key);
    if (indexResult == null || indexResult instanceof OIdentifiable)     cursor=new OIndexCursorSingleValue((OIdentifiable)indexResult,key);
 else     cursor=new OIndexCursorCollectionValue((Collection<OIdentifiable>)indexResult,key);
  }
 else {
    final OCompositeIndexDefinition compositeIndexDefinition=(OCompositeIndexDefinition)indexDefinition;
    final Object keyOne=compositeIndexDefinition.createSingleValue(keyParams);
    if (keyOne == null)     return null;
    final Object keyTwo=compositeIndexDefinition.createSingleValue(keyParams);
    if (internalIndex.hasRangeQuerySupport()) {
      cursor=index.iterateEntriesBetween(keyOne,true,keyTwo,true,ascSortOrder);
    }
 else {
      if (indexDefinition.getParamCount() == keyParams.size()) {
        final Object indexResult;
        indexResult=index.get(keyOne);
        if (indexResult == null || indexResult instanceof OIdentifiable)         cursor=new OIndexCursorSingleValue((OIdentifiable)indexResult,keyOne);
 else         cursor=new OIndexCursorCollectionValue((Collection<OIdentifiable>)indexResult,keyOne);
      }
 else       return null;
    }
  }
  updateProfiler(iContext,index,keyParams,indexDefinition);
  return cursor;
}
