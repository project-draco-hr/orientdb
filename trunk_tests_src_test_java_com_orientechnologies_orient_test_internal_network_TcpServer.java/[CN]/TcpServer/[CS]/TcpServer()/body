{
  initServerSocket();
  long transferred=0;
  long date=System.currentTimeMillis();
  try {
    while (true) {
      Socket sock=this.serverSocket.accept();
      InputStream iStream=sock.getInputStream();
      OutputStream oStream=sock.getOutputStream();
      ObjectOutputStream ooStream=new ObjectOutputStream(oStream);
      ObjectInputStream iiStream=null;
      for (int i=0; i < 1000000; ++i) {
        this.payload=new String("10|Gipsy|European|Rome|300.00").getBytes();
        ooStream.writeInt(this.payload.length);
        transferred+=4;
        ooStream.write(this.payload);
        transferred+=this.payload.length;
        ooStream.flush();
        oStream.flush();
        if (iiStream == null)         iiStream=new ObjectInputStream(iStream);
        iiStream.readByte();
      }
      ooStream.writeInt(0);
      System.out.println("Transferred total MB: " + (float)transferred / 1000000 + " in " + (System.currentTimeMillis() - date) + "ms");
      Thread.sleep(1000);
      ooStream.close();
    }
  }
 catch (  SecurityException se) {
    System.err.println("Unable to get host address due to security.");
    System.err.println(se.toString());
  }
catch (  IOException ioe) {
    System.err.println("Unable to read data from an open socket.");
    System.err.println(ioe.toString());
  }
catch (  InterruptedException ie) {
  }
 finally {
    try {
      this.serverSocket.close();
    }
 catch (    IOException ioe) {
      System.err.println("Unable to close an open socket.");
      System.err.println(ioe.toString());
      System.exit(1);
    }
  }
}
