{
  if (iValue.length() == 0)   return null;
  final String value=iValue.startsWith("[") ? iValue.substring(1,iValue.length() - 1) : iValue;
  final Collection<Object> coll=iType == OType.EMBEDDEDLIST ? new ORecordTrackedList(iDocument) : new ORecordTrackedSet(iDocument);
  if (value.length() == 0)   return coll;
  final List<String> items=OStringSerializerHelper.smartSplit(value,OStringSerializerHelper.RECORD_SEPARATOR);
  Object objectToAdd;
  for (  String item : items) {
    objectToAdd=null;
    if (iLinkedClass != null) {
      if (item.length() > 2) {
        item=item.substring(1,item.length() - 1);
        objectToAdd=fromString(iDocument.getDatabase(),item,new ODocument(iDocument.getDatabase(),iLinkedClass.getName()));
      }
    }
 else     if (item.length() > 0 && item.charAt(0) == OStringSerializerHelper.EMBEDDED) {
      objectToAdd=OStringSerializerHelper.fieldTypeFromStream(iLinkedType,item.substring(1,item.length() - 1));
    }
 else {
      if (iLinkedType == null)       throw new IllegalArgumentException("Linked type can't be null. Probably the serialized type has not stored the type along with data");
      objectToAdd=OStringSerializerHelper.fieldTypeFromStream(iLinkedType,item);
    }
    if (objectToAdd != null) {
      if (objectToAdd instanceof ODocument)       ((ODocument)objectToAdd).setOwner(iDocument);
      coll.add(objectToAdd);
    }
  }
  return coll;
}
