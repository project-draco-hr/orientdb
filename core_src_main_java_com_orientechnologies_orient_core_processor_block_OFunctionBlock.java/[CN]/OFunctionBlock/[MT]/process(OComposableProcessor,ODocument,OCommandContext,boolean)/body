{
  final String function=getRequiredFieldOfClass(iConfig,"function",String.class);
  final Object[] args;
  final Collection<Object> configuredArgs=getFieldOfClass(iConfig,"args",Collection.class);
  if (configuredArgs != null) {
    args=new Object[configuredArgs.size()];
    int argIdx=0;
    for (    Object arg : configuredArgs) {
      args[argIdx++]=resolveInContext(arg,iContext);
    }
  }
 else   args=null;
  final OFunction f=ODatabaseRecordThreadLocal.INSTANCE.get().getMetadata().getFunctionLibrary().getFunction(function);
  if (f == null)   throw new OProcessException("Function '" + function + "' was not found");
  debug(iContext,"Calling: " + function + "("+ Arrays.toString(args)+ ")...");
  final Object result=f.executeInContext(iContext,args);
  debug(iContext,"-> Returned " + result);
  final String ret=getField(iConfig,"return");
  assignVariable(iContext,ret,result);
  return null;
}
