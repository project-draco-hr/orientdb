{
  ODatabaseDocumentInternal dbInThreadLocal=ODatabaseRecordThreadLocal.INSTANCE.getIfDefined();
  if (this.isClosed())   throw new ODatabaseException("Cannot copy a closed db");
  final ODatabaseDocumentTx db=new ODatabaseDocumentTx(this.url);
  db.setupThreadOwner();
  db.user=this.user;
  db.properties.putAll(this.properties);
  db.serializer=this.serializer;
  db.componentsFactory=this.componentsFactory;
  db.metadata=new OMetadataDefault(db);
  db.initialized=true;
  if (storage instanceof OStorageProxy) {
    db.storage=((OStorageProxy)storage).copy(this,db);
    ((OStorageProxy)db.storage).addUser();
  }
 else {
    db.storage=storage;
  }
  db.setStatus(STATUS.OPEN);
  db.metadata.load();
  if (!(db.getStorage() instanceof OStorageProxy))   db.installHooksEmbedded();
 else   db.installHooksRemote();
  db.initialized=true;
  if (dbInThreadLocal != null) {
    dbInThreadLocal.activateOnCurrentThread();
  }
 else {
    if (ODatabaseRecordThreadLocal.INSTANCE.isDefined()) {
      ODatabaseRecordThreadLocal.INSTANCE.remove();
    }
  }
  return db;
}
