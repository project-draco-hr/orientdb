{
  final String buildDirectory=System.getProperty("buildDirectory",".");
  final String dbPath=buildDirectory + File.separator + DBNAME_CLUSTERTEST;
  OFileUtils.deleteRecursively(new File(dbPath));
  final ODatabase db=new ODatabaseDocumentTx("plocal:" + dbPath);
  db.setProperty(OGlobalConfiguration.STORAGE_ENCRYPTION_KEY.getKey(),"T1JJRU5UREJfSVNfQ09PTA==");
  db.create();
  try {
    db.command(new OCommandSQL("create class TestEncryption")).execute();
    db.command(new OCommandSQL("alter cluster TestEncryption encryption aes")).execute();
    db.command(new OCommandSQL("insert into TestEncryption set name = 'Jay'")).execute();
    List result=db.query(new OSQLSynchQuery<ODocument>("select from TestEncryption"));
    Assert.assertEquals(result.size(),1);
    db.close();
    db.open("admin","admin");
    OStorage storage=((ODatabaseDocumentInternal)db).getStorage();
    db.close();
    storage.close(true,false);
    db.setProperty(OGlobalConfiguration.STORAGE_ENCRYPTION_KEY.getKey(),"T1JJRU5UREJfSVNfQ09PTA==");
    db.open("admin","admin");
    result=db.query(new OSQLSynchQuery<ODocument>("select from TestEncryption"));
    Assert.assertEquals(result.size(),1);
    storage=((ODatabaseDocumentInternal)db).getStorage();
    db.close();
    storage.close(true,false);
    db.setProperty(OGlobalConfiguration.STORAGE_ENCRYPTION_KEY.getKey(),"invalidPassword");
    try {
      db.open("admin","admin");
      storage=((ODatabaseDocumentInternal)db).getStorage();
      db.query(new OSQLSynchQuery<ODocument>("select from TestEncryption"));
      result=db.query(new OSQLSynchQuery<ODocument>("select from OUser"));
      Assert.assertFalse(result.isEmpty());
      Assert.fail();
    }
 catch (    OSecurityException e) {
      Assert.assertTrue(true);
    }
 finally {
      db.close();
      storage.close(true,false);
    }
    db.setProperty(OGlobalConfiguration.STORAGE_ENCRYPTION_KEY.getKey(),"T1JJRU5UREJfSVNfQ09PTA=-");
    try {
      db.open("admin","admin");
      storage=((ODatabaseDocumentInternal)db).getStorage();
      db.query(new OSQLSynchQuery<ODocument>("select from TestEncryption"));
      Assert.fail();
    }
 catch (    OSecurityException e) {
      Assert.assertTrue(true);
    }
 finally {
      db.close();
      storage.close(true,false);
    }
    db.setProperty(OGlobalConfiguration.STORAGE_ENCRYPTION_KEY.getKey(),"T1JJRU5UREJfSVNfQ09PTA==");
    db.open("admin","admin");
    result=db.query(new OSQLSynchQuery<ODocument>("select from TestEncryption"));
    Assert.assertEquals(result.size(),1);
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
 finally {
    db.activateOnCurrentThread();
    if (db.isClosed())     db.open("admin","admin");
    db.drop();
  }
}
