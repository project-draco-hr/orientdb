{
  final ODatabaseDocumentInternal db=getDatabase();
  final OSequenceLibrary sequenceLibrary=db.getMetadata().getSequenceLibrary();
  OSequence sequence=sequenceLibrary.getSequence(this.sequenceName);
  if (sequence == null) {
    return null;
  }
  try {
    return this.method.invoke(sequence);
  }
 catch (  IllegalAccessException e) {
    throw new OCommandExecutionException("Failed executing method '" + this.method.getName() + "' on sequence '"+ this.sequenceName+ "'",e);
  }
catch (  InvocationTargetException e) {
    throw new OCommandExecutionException("Failed executing method '" + this.method.getName() + "' on sequence '"+ this.sequenceName+ "'",e);
  }
}
