{
  final ODocument document=new ODocument();
  final Map<String,String> stringMap=new HashMap<String,String>();
  stringMap.put("key1","val1");
  stringMap.put("key2","val2");
  document.field("fOne",12);
  document.field("fTwo",stringMap);
  final OCompositeIndexDefinition compositeIndexDefinition=new OCompositeIndexDefinition("testCollectionClass",-1);
  compositeIndexDefinition.addIndex(new OPropertyIndexDefinition("testCollectionClass","fOne",OType.INTEGER,-1));
  compositeIndexDefinition.addIndex(new OPropertyMapIndexDefinition("testCollectionClass","fTwo",OType.STRING,OPropertyMapIndexDefinition.INDEX_BY.KEY,-1));
  final Object result=compositeIndexDefinition.getDocumentValueToIndex(document);
  final Collection<OCompositeKey> collectionResult=(Collection<OCompositeKey>)result;
  Assert.assertEquals(collectionResult.size(),2);
  Assert.assertTrue(collectionResult.contains(new OCompositeKey(12,"key1")));
  Assert.assertTrue(collectionResult.contains(new OCompositeKey(12,"key2")));
}
