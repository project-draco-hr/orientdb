{
  if (getStorage().getUnderlying() instanceof OAbstractPaginatedStorage) {
    final OClass cls=ODocumentInternal.getImmutableSchemaClass(doc);
    if (cls != null) {
      final Collection<OIndex<?>> indexes=cls.getIndexes();
      if (indexes != null) {
        final SortedSet<OIndex<?>> indexesToLock=new TreeSet<OIndex<?>>(new Comparator<OIndex<?>>(){
          public int compare(          OIndex<?> indexOne,          OIndex<?> indexTwo){
            return indexOne.getName().compareTo(indexTwo.getName());
          }
        }
);
        indexesToLock.addAll(indexes);
        for (        final OIndex<?> index : indexesToLock) {
          index.getInternal().acquireModificationLock();
          lockedIndexes.add(index);
        }
      }
    }
  }
}
