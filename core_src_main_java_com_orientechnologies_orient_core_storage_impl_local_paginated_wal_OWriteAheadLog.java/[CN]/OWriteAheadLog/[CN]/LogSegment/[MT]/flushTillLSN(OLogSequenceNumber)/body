{
  if (pages.isEmpty() || pages.get(0).getFirstLsn().compareTo(lsn) > 0)   return;
  rndFile.seek(lastFlushedPosition);
  int lastIndex=-1;
  for (int i=0; i < pages.size() - 1; i++) {
    OWALPage walPage=pages.get(i);
    if (walPage.getFirstLsn().compareTo(lsn) <= 0) {
      flushPage(walPage);
      directMemory.free(walPage.getPagePointer());
      lastIndex=i;
    }
 else     break;
  }
  lastFlushedPosition=rndFile.getFilePointer();
  OWALPage lastPage=pages.get(pages.size() - 1);
  if (lastPage.getFirstLsn().compareTo(lsn) <= 0) {
    flushPage(lastPage);
    if (lastPage.getFreeSpace() < OWALPage.MIN_RECORD_SIZE) {
      filledUpTo+=lastPage.getFreeSpace();
      directMemory.free(lastPage.getPagePointer());
      lastFlushedPosition=rndFile.getFilePointer();
      lastIndex=pages.size() - 1;
    }
  }
  rndFile.getFD().sync();
  if (lastIndex > -1)   pages.subList(0,lastIndex + 1).clear();
}
