{
  final long[] parentNode=hashTree[nodeInfo.parent.nodeIndex];
  int startIndex=-1;
  for (int i=0; i < parentNode.length; i++)   if (parentNode[i] < 0 && (parentNode[i] & Long.MAX_VALUE) >>> 8 == nodeInfo.nodeIndex) {
    startIndex=i;
    break;
  }
  final int hashMapSize=1 << nodeLocalDepths[nodeInfo.nodeIndex];
  for (int i=0, k=startIndex; i < node.length; i+=hashMapSize, k++) {
    parentNode[k]=node[i];
  }
  deleteNode(nodeInfo.nodeIndex);
}
