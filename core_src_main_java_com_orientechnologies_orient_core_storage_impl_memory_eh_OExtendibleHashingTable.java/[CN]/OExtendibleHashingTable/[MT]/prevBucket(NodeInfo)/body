{
  prevBucketLoop:   while (nodeInfo != null) {
    final long[] node=hashTree[nodeInfo.nodeIndex];
    final int startIndex=0;
    final int endIndex=nodeInfo.itemIndex + nodeInfo.hashMapOffset;
    for (int i=endIndex; i >= startIndex; i--) {
      final long position=node[i];
      if (position > 0)       return position;
      if (position < 0) {
        final int childNodeIndex=(int)((position & Long.MAX_VALUE) >> 8);
        final int childItemOffset=(int)position & 0xFF;
        final int localDepth=nodeLocalDepths[childNodeIndex];
        final int endChildIndex=1 << localDepth - 1;
        final NodeInfo parent=new NodeInfo(nodeInfo.parent,0,i,nodeInfo.nodeIndex,-1);
        nodeInfo=new NodeInfo(parent,childItemOffset,endChildIndex,childNodeIndex,-1);
        continue prevBucketLoop;
      }
    }
    nodeInfo=prevLevelUp(nodeInfo);
  }
  return 0;
}
