{
  HashSet<ONodeId> keys=new HashSet<ONodeId>();
  for (int i=0; i < KEYS_COUNT; i++) {
    ONodeId key=ONodeId.generateUniqueId();
    final OPhysicalPosition position=new OPhysicalPosition(new OClusterPositionNodeId(key));
    if (extendibleHashingCluster.addPhysicalPosition(position)) {
      keys.add(key);
    }
  }
  for (  ONodeId key : keys) {
    if (key.longValueHigh() % 3 == 0) {
      final OPhysicalPosition position=new OPhysicalPosition(new OClusterPositionNodeId(key));
      extendibleHashingCluster.removePhysicalPosition(position.clusterPosition);
    }
  }
  for (  ONodeId key : keys) {
    if (key.longValueHigh() % 3 == 0) {
      final OPhysicalPosition position=new OPhysicalPosition(new OClusterPositionNodeId(key));
      Assert.assertNull(extendibleHashingCluster.getPhysicalPosition(position));
    }
 else {
      final OPhysicalPosition position=new OPhysicalPosition(new OClusterPositionNodeId(key));
      Assert.assertNotNull(extendibleHashingCluster.getPhysicalPosition(position));
    }
  }
}
