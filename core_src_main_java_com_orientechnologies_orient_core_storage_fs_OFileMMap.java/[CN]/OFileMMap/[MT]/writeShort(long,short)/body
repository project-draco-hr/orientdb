{
  iOffset=checkRegions(iOffset,OBinaryProtocol.SIZE_SHORT);
  final OMMapBufferEntry[] entries=OMMapManagerLocator.getInstance().acquire(this,iOffset,OBinaryProtocol.SIZE_SHORT,OMMapManager.OPERATION_TYPE.WRITE,strategy);
  if (entries != null) {
    try {
      if (entries.length == 1)       entries[0].buffer.putShort((int)(iOffset - entries[0].beginOffset),iValue);
 else {
        entries[0].buffer.position((int)(iOffset - entries[0].beginOffset));
        entries[1].buffer.position(0);
        OByteBufferUtils.splitShortToBuffers(entries[0].buffer,entries[1].buffer,iValue);
      }
    }
  finally {
      OMMapManagerLocator.getInstance().release(entries,OMMapManager.OPERATION_TYPE.WRITE);
    }
  }
 else {
    final ByteBuffer buffer=acquireByteBuffer(OBinaryProtocol.SIZE_SHORT);
    buffer.putShort(iValue);
    buffer.rewind();
    channel.write(buffer,iOffset + HEADER_SIZE);
    releaseByteBuffer(buffer);
  }
}
