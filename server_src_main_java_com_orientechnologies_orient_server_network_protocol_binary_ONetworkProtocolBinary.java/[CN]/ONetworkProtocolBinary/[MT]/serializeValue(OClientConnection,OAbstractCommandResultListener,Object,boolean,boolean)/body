{
  if (result == null) {
    channel.writeByte((byte)'n');
  }
 else   if (result instanceof OIdentifiable) {
    channel.writeByte((byte)'r');
    if (load && result instanceof ORecordId)     result=((ORecordId)result).getRecord();
    if (listener != null)     listener.result(result);
    writeIdentifiable(connection,(OIdentifiable)result);
  }
 else   if (result instanceof ODocumentWrapper) {
    channel.writeByte((byte)'r');
    final ODocument doc=((ODocumentWrapper)result).getDocument();
    if (listener != null)     listener.result(doc);
    writeIdentifiable(connection,doc);
  }
 else   if (!isRecordResultSet) {
    writeSimpleValue(connection,listener,result);
  }
 else   if (OMultiValue.isMultiValue(result)) {
    final byte collectionType=result instanceof Set ? (byte)'s' : (byte)'l';
    channel.writeByte(collectionType);
    channel.writeInt(OMultiValue.getSize(result));
    for (    Object o : OMultiValue.getMultiValueIterable(result,false)) {
      try {
        if (load && o instanceof ORecordId)         o=((ORecordId)o).getRecord();
        if (listener != null)         listener.result(o);
        writeIdentifiable(connection,(OIdentifiable)o);
      }
 catch (      Exception e) {
        OLogManager.instance().warn(this,"Cannot serialize record: " + o);
        writeIdentifiable(connection,null);
      }
    }
  }
 else   if (OMultiValue.isIterable(result)) {
    if (connection.getData().protocolVersion >= OChannelBinaryProtocol.PROTOCOL_VERSION_32) {
      channel.writeByte((byte)'i');
      for (      Object o : OMultiValue.getMultiValueIterable(result)) {
        try {
          if (load && o instanceof ORecordId)           o=((ORecordId)o).getRecord();
          if (listener != null)           listener.result(o);
          channel.writeByte((byte)1);
          writeIdentifiable(connection,(OIdentifiable)o);
        }
 catch (        Exception e) {
          OLogManager.instance().warn(this,"Cannot serialize record: " + o);
        }
      }
      channel.writeByte((byte)0);
    }
 else {
      final byte collectionType=result instanceof Set ? (byte)'s' : (byte)'l';
      channel.writeByte(collectionType);
      channel.writeInt(OMultiValue.getSize(result));
      for (      Object o : OMultiValue.getMultiValueIterable(result)) {
        try {
          if (load && o instanceof ORecordId)           o=((ORecordId)o).getRecord();
          if (listener != null)           listener.result(o);
          writeIdentifiable(connection,(OIdentifiable)o);
        }
 catch (        Exception e) {
          OLogManager.instance().warn(this,"Cannot serialize record: " + o);
        }
      }
    }
  }
 else {
    writeSimpleValue(connection,listener,result);
  }
}
