{
  if (!sbTreeValue.isLink())   return sbTreeValue.getValue();
  OCacheEntry cacheEntry=diskCache.load(fileId,sbTreeValue.getLink(),false);
  OCachePointer cachePointer=cacheEntry.getCachePointer();
  OSBTreeValuePage valuePage=new OSBTreeValuePage(cachePointer.getDataPointer(),ODurablePage.TrackMode.NONE,false);
  int totalSize=valuePage.getSize();
  int currentSize=0;
  byte[] value=new byte[totalSize];
  while (currentSize < totalSize) {
    currentSize=valuePage.readBinaryContent(value,currentSize);
    long nextPage=valuePage.getNextPage();
    if (nextPage >= 0) {
      diskCache.release(cacheEntry);
      cacheEntry=diskCache.load(fileId,nextPage,false);
      cachePointer=cacheEntry.getCachePointer();
      valuePage=new OSBTreeValuePage(cachePointer.getDataPointer(),ODurablePage.TrackMode.NONE,false);
    }
  }
  diskCache.release(cacheEntry);
  return valueSerializer.deserializeNative(value,0);
}
