{
  OSequenceLibrary sequenceLibrary=database.getMetadata().getSequenceLibrary();
  OSequence seq=sequenceLibrary.createSequence(sequenceName,sequenceType,null);
  OSequenceException err=null;
  try {
    sequenceLibrary.createSequence(sequenceName,sequenceType,null);
  }
 catch (  OSequenceException se) {
    err=se;
  }
  Assert.assertTrue(err == null || err.getMessage().toLowerCase().contains("already exists"),"Creating a second " + sequenceType.toString() + " sequences with same name doesn't throw an exception");
  OSequence seqSame=sequenceLibrary.getSequence(sequenceName);
  Assert.assertEquals(seqSame,seq);
  for (int i=0; i < 2; ++i) {
    Assert.assertEquals(seq.next(),1L);
    Assert.assertEquals(seq.current(),1L);
    Assert.assertEquals(seq.next(),2L);
    Assert.assertEquals(seq.next(),3L);
    Assert.assertEquals(seq.next(),4L);
    Assert.assertEquals(seq.current(),4L);
    Assert.assertEquals(seq.reset(),0L);
  }
}
