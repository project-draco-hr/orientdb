{
  final ODocument doc=new ODocument();
  doc.unsetDirty();
  Assert.assertFalse(doc.isDirty());
  final OTrackedList<String> trackedList=new OTrackedList<String>(doc);
  trackedList.add("value1");
  trackedList.add("value2");
  trackedList.add("value3");
  doc.unsetDirty();
  Assert.assertFalse(doc.isDirty());
  final List<OMultiValueChangeEvent<Integer,String>> firedEvents=new ArrayList<OMultiValueChangeEvent<Integer,String>>();
  firedEvents.add(new OMultiValueChangeEvent<Integer,String>(OMultiValueChangeEvent.OChangeType.REMOVE,2,null,"value3"));
  firedEvents.add(new OMultiValueChangeEvent<Integer,String>(OMultiValueChangeEvent.OChangeType.REMOVE,1,null,"value2"));
  firedEvents.add(new OMultiValueChangeEvent<Integer,String>(OMultiValueChangeEvent.OChangeType.REMOVE,0,null,"value1"));
  trackedList.addChangeListener(new OMultiValueChangeListener<Integer,String>(){
    public void onAfterRecordChanged(    final OMultiValueChangeEvent<Integer,String> event){
      if (firedEvents.get(0).equals(event))       firedEvents.remove(0);
 else       Assert.fail();
    }
  }
);
  trackedList.clear();
  Assert.assertEquals(0,firedEvents.size());
  Assert.assertTrue(doc.isDirty());
}
