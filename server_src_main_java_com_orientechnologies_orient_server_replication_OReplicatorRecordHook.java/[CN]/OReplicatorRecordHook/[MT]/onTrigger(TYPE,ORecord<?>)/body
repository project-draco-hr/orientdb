{
  if (ODistributedRequesterThreadLocal.INSTANCE.get())   return false;
  if (iRecord instanceof ODocument && replicator.isIgnoredDocumentClass(((ODocument)iRecord).getClassName()))   return false;
  try {
switch (iType) {
case AFTER_CREATE:
      if (checkRecord(iRecord))       replicator.distributeRequest(new ORecordOperation((ORecordInternal<?>)iRecord,ORecordOperation.CREATED));
    break;
case AFTER_UPDATE:
  if (checkRecord(iRecord))   replicator.distributeRequest(new ORecordOperation((ORecordInternal<?>)iRecord,ORecordOperation.UPDATED));
break;
case AFTER_DELETE:
if (checkRecord(iRecord)) replicator.distributeRequest(new ORecordOperation((ORecordInternal<?>)iRecord,ORecordOperation.DELETED));
break;
}
}
 catch (IOException e) {
throw new ODistributedSynchronizationException("Error on distribution of the record to the configured cluster",e);
}
return false;
}
