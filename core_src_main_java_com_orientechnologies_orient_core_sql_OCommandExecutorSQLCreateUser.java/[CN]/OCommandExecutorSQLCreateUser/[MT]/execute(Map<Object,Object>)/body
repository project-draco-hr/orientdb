{
  if (this.userName == null) {
    throw new OCommandExecutionException("Cannot execute the command because it has not been parsed yet");
  }
  StringBuilder sb=new StringBuilder();
  sb.append("INSERT INTO ");
  sb.append(USER_CLASS);
  sb.append(" SET ");
  sb.append(USER_FIELD_NAME);
  sb.append("='");
  sb.append(this.userName);
  sb.append("'");
  sb.append(',');
  sb.append(USER_FIELD_PASSWORD);
  sb.append("='");
  sb.append(this.pass);
  sb.append("'");
  sb.append(',');
  sb.append(USER_FIELD_STATUS);
  sb.append("='");
  sb.append(DEFAULT_STATUS);
  sb.append("'");
  if (this.roles.size() == 0) {
    this.roles.add(DEFAULT_ROLE);
  }
  sb.append(',');
  sb.append(USER_FIELD_ROLES);
  sb.append("=(SELECT FROM ");
  sb.append(ROLE_CLASS);
  sb.append(" WHERE ");
  sb.append(ROLE_FIELD_NAME);
  sb.append(" IN [");
  for (int i=0; i < this.roles.size(); ++i) {
    if (i > 0) {
      sb.append(", ");
    }
    String role=roles.get(i);
    if (role.startsWith("'") || role.startsWith("\"")) {
      sb.append(this.roles.get(i));
    }
 else {
      sb.append("'");
      sb.append(this.roles.get(i));
      sb.append("'");
    }
  }
  sb.append("])");
  return getDatabase().command(new OCommandSQL(sb.toString())).execute();
}
