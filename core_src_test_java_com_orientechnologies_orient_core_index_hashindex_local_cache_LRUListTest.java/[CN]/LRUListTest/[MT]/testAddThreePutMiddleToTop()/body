{
  final OByteBufferPool bufferPool=new OByteBufferPool(1);
  ByteBuffer bufferOne=bufferPool.acquireDirect(true);
  ByteBuffer bufferTwo=bufferPool.acquireDirect(true);
  ByteBuffer bufferThree=bufferPool.acquireDirect(true);
  OCachePointer cachePointerOne=new OCachePointer(bufferOne,bufferPool,new OLogSequenceNumber(0,0),0,0);
  OCachePointer cachePointerTwo=new OCachePointer(bufferTwo,bufferPool,new OLogSequenceNumber(0,0),0,0);
  OCachePointer cachePointerThree=new OCachePointer(bufferThree,bufferPool,new OLogSequenceNumber(0,0),0,0);
  lruList.putToMRU(new OCacheEntry(1,10,cachePointerOne,false));
  lruList.putToMRU(new OCacheEntry(1,20,cachePointerTwo,false));
  lruList.putToMRU(new OCacheEntry(3,30,cachePointerThree,false));
  lruList.putToMRU(new OCacheEntry(1,20,cachePointerTwo,false));
  Assert.assertEquals(lruList.size(),3);
  Iterator<OCacheEntry> entryIterator=lruList.iterator();
  Assert.assertTrue(entryIterator.hasNext());
  Assert.assertEquals(entryIterator.next(),new OCacheEntry(1,20,cachePointerTwo,false));
  Assert.assertEquals(entryIterator.next(),new OCacheEntry(3,30,cachePointerThree,false));
  Assert.assertEquals(entryIterator.next(),new OCacheEntry(1,10,cachePointerOne,false));
}
