{
  acquireSharedLock();
  try {
    if (entryPosition < 0 || entryPosition > mainBucketsSize - 1)     return new OPhysicalPosition[0];
    OClusterLocalLHPEBucket bucket=loadMainBucket(entryPosition);
    int sum=0;
    while (true) {
      sum+=bucket.getSize();
      if (bucket.getOverflowBucket() > -1)       bucket=loadOverflowBucket(bucket.getOverflowBucket());
 else       break;
    }
    OPhysicalPosition[] result=new OPhysicalPosition[sum];
    int pos=0;
    bucket=loadMainBucket(entryPosition);
    while (true) {
      for (int i=0; i < bucket.getSize(); i++) {
        result[pos]=bucket.getPhysicalPosition(i);
        pos++;
      }
      if (bucket.getOverflowBucket() > -1)       bucket=loadOverflowBucket(bucket.getOverflowBucket());
 else       break;
    }
    return result;
  }
  finally {
    clearCache();
    releaseSharedLock();
  }
}
