{
  ORecordVersion recordVersion=OVersionFactory.instance().createVersion();
  recordVersion.increment();
  List<Integer> positions=new ArrayList<Integer>();
  int lastPosition;
  byte counter=0;
  int freeSpace=localPage.getFreeSpace();
  do {
    lastPosition=localPage.appendRecord(recordVersion,new byte[]{counter,counter,counter},false);
    if (lastPosition >= 0) {
      Assert.assertEquals(lastPosition,positions.size());
      positions.add(lastPosition);
      counter++;
      Assert.assertEquals(localPage.getFreeSpace(),freeSpace - (19 + OVersionFactory.instance().getVersionSize()));
      freeSpace=localPage.getFreeSpace();
    }
  }
 while (lastPosition >= 0);
  Assert.assertEquals(localPage.getRecordsCount(),positions.size());
  counter=0;
  for (  int position : positions) {
    Assert.assertEquals(localPage.getRecordBinaryValue(position,0,3),new byte[]{counter,counter,counter});
    Assert.assertEquals(localPage.getRecordSize(position),3);
    Assert.assertEquals(localPage.getRecordVersion(position),recordVersion);
    counter++;
  }
}
