{
  final OIndex<?> previousIndex=indexChain.get(indexChain.size() - 2);
  Set<Comparable> currentKeys=prepareKeys(previousIndex,result);
  for (int j=indexChain.size() - 2; j > 0; j--) {
    Set<Comparable> newKeys=new TreeSet<Comparable>();
    final OIndex<?> currentIndex=indexChain.get(j);
    for (    Comparable currentKey : currentKeys) {
      final List<OIdentifiable> currentResult=new ArrayList<OIdentifiable>();
      final OIndexCursor cursor=currentIndex.iterateEntriesBetween(currentKey,true,currentKey,true,true);
      Map.Entry<Object,OIdentifiable> entry=cursor.next(-1);
      while (entry != null) {
        currentResult.add(entry.getValue());
        entry=cursor.next(-1);
      }
      final Set<Comparable> preparedKeys;
      preparedKeys=prepareKeys(indexChain.get(j - 1),currentResult);
      newKeys.addAll(preparedKeys);
    }
    updateStatistic(currentIndex);
    currentKeys=newKeys;
  }
  return applyMainIndex(currentKeys);
}
