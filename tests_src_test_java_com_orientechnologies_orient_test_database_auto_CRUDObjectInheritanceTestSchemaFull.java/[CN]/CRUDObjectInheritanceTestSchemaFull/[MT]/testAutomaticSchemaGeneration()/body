{
  database.setAutomaticSchemaGeneration(true);
  database.getEntityManager().registerEntityClasses("com.orientechnologies.orient.test.domain.schemageneration");
  if (url.startsWith(OEngineRemote.NAME)) {
    database.getMetadata().reload();
  }
  OClass testSchemaClass=database.getMetadata().getSchema().getClass(JavaTestSchemaGeneration.class);
  OClass childClass=database.getMetadata().getSchema().getClass(TestSchemaGenerationChild.class);
  checkNotExistsProperty(testSchemaClass,"id");
  checkNotExistsProperty(testSchemaClass,"version");
  checkProperty(testSchemaClass,"text",OType.STRING);
  checkProperty(testSchemaClass,"enumeration",OType.STRING);
  checkProperty(testSchemaClass,"numberSimple",OType.INTEGER);
  checkProperty(testSchemaClass,"longSimple",OType.LONG);
  checkProperty(testSchemaClass,"doubleSimple",OType.DOUBLE);
  checkProperty(testSchemaClass,"floatSimple",OType.FLOAT);
  checkProperty(testSchemaClass,"byteSimple",OType.BYTE);
  checkProperty(testSchemaClass,"flagSimple",OType.BOOLEAN);
  checkProperty(testSchemaClass,"dateField",OType.DATETIME);
  checkProperty(testSchemaClass,"stringListMap",OType.EMBEDDEDMAP,OType.EMBEDDEDLIST);
  checkProperty(testSchemaClass,"enumList",OType.EMBEDDEDLIST,OType.STRING);
  checkProperty(testSchemaClass,"enumSet",OType.EMBEDDEDSET,OType.STRING);
  checkProperty(testSchemaClass,"stringSet",OType.EMBEDDEDSET,OType.STRING);
  checkProperty(testSchemaClass,"stringMap",OType.EMBEDDEDMAP,OType.STRING);
  checkProperty(testSchemaClass,"enumMap",OType.EMBEDDEDMAP,OType.STRING);
  checkNotExistsProperty(testSchemaClass,"document");
  checkNotExistsProperty(testSchemaClass,"mapObject ");
  checkNotExistsProperty(testSchemaClass,"byteArray");
  checkProperty(testSchemaClass,"list",OType.LINKLIST,childClass);
  checkProperty(testSchemaClass,"set",OType.LINKSET,childClass);
  checkProperty(testSchemaClass,"children",OType.LINKMAP,childClass);
  checkProperty(testSchemaClass,"child",OType.LINK,childClass);
  checkProperty(testSchemaClass,"enumMap",OType.EMBEDDEDMAP,OType.STRING);
  checkNotExistsProperty(testSchemaClass,"embeddedDocument");
  checkProperty(testSchemaClass,"embeddedSet",OType.EMBEDDEDSET,childClass);
  checkProperty(testSchemaClass,"embeddedChildren",OType.EMBEDDEDMAP,childClass);
  checkProperty(testSchemaClass,"embeddedChild",OType.EMBEDDED,childClass);
  checkProperty(testSchemaClass,"embeddedList",OType.EMBEDDEDLIST,childClass);
  checkNotExistsProperty(testSchemaClass,"tranisentText");
  checkNotExistsProperty(testSchemaClass,"transientList ");
  checkNotExistsProperty(testSchemaClass,"transientSet");
  checkNotExistsProperty(testSchemaClass,"transientChildren");
  checkNotExistsProperty(testSchemaClass,"transientDocument ");
  checkNotExistsProperty(testSchemaClass,"transientDateField");
  database.setAutomaticSchemaGeneration(false);
}
