{
  if (OScenarioThreadLocal.INSTANCE.get() == RUN_MODE.RUNNING_DISTRIBUTED)   return wrapped.command(iCommand);
  final ODistributedConfiguration dConfig=dManager.getDatabaseConfiguration(getName());
  if (!dConfig.isReplicationActive(null))   return wrapped.command(iCommand);
  final OCommandExecutor executor=OCommandManager.instance().getExecutor(iCommand);
  executor.setProgressListener(iCommand.getProgressListener());
  executor.parse(iCommand);
  final OCommandExecutor exec=executor instanceof OCommandExecutorSQLDelegate ? ((OCommandExecutorSQLDelegate)executor).getDelegate() : executor;
  boolean distribute=false;
  if (OScenarioThreadLocal.INSTANCE.get() != RUN_MODE.RUNNING_DISTRIBUTED)   if (exec instanceof OCommandDistributedReplicateRequest)   distribute=((OCommandDistributedReplicateRequest)exec).isReplicated();
  if (!distribute)   return wrapped.executeCommand(iCommand,executor);
  try {
    final OAbstractRemoteTask task=new OSQLCommandTask(iCommand.getText());
    final Object result=dManager.sendRequest(getName(),null,task,EXECUTION_MODE.RESPONSE);
    if (result instanceof ONeedRetryException)     throw (ONeedRetryException)result;
 else     if (result instanceof Throwable)     throw new ODistributedException("Error on execution distributed COMMAND",(Throwable)result);
    return result;
  }
 catch (  ONeedRetryException e) {
    throw e;
  }
catch (  Exception e) {
    handleDistributedException("Cannot route COMMAND operation to the distributed node",e);
    return null;
  }
}
