{
  if (objectOne == null) {
    if (objectTwo == null)     return 0;
 else     return -1;
  }
 else   if (objectTwo == null)   return 1;
  ODatabaseDocumentInternal internal;
  if (objectOne instanceof String && objectTwo instanceof String && (internal=ODatabaseRecordThreadLocal.INSTANCE.getIfDefined()) != null) {
    Collator collator=Collator.getInstance(new Locale(internal.get(ATTRIBUTES.LOCALECOUNTRY) + "_" + internal.get(ATTRIBUTES.LOCALELANGUAGE)));
    return collator.compare(objectOne,objectTwo);
  }
 else   if (objectOne instanceof Comparable)   return ((Comparable<Object>)objectOne).compareTo(objectTwo);
  final Comparator<?> comparator=OComparatorFactory.INSTANCE.getComparator(objectOne.getClass());
  if (comparator != null)   return ((Comparator<Object>)comparator).compare(objectOne,objectTwo);
  throw new IllegalStateException("Object of class" + objectOne.getClass().getName() + " can not be compared");
}
