{
  acquireExclusiveLock();
  try {
    long[] pos=getRelativePosition(iPosition);
    final OFile file=files[(int)pos[0]];
    final int recordSize=file.readInt(pos[1]);
    if (iContent.length == recordSize) {
      file.write(pos[1] + RECORD_FIX_SIZE,iContent);
      OProfiler.getInstance().updateCounter(PROFILER_UPDATE_REUSED_ALL,+1);
      return iPosition;
    }
 else     if (recordSize - iContent.length > RECORD_FIX_SIZE + 50) {
      writeRecord(pos,iRid.clusterId,iRid.clusterPosition,iContent);
      handleHole(iPosition + RECORD_FIX_SIZE + iContent.length,recordSize - iContent.length - RECORD_FIX_SIZE);
      OProfiler.getInstance().updateCounter(PROFILER_UPDATE_REUSED_PARTIAL,+1);
    }
 else {
      handleHole(iPosition,recordSize);
      pos=getFreeSpace(iContent.length + RECORD_FIX_SIZE);
      writeRecord(pos,iRid.clusterId,iRid.clusterPosition,iContent);
      OProfiler.getInstance().updateCounter(PROFILER_UPDATE_NOT_REUSED,+1);
    }
    return getAbsolutePosition(pos);
  }
  finally {
    releaseExclusiveLock();
  }
}
