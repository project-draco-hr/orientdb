{
  checkOpeness();
  checkLowDiskSpaceFullCheckpointRequestsAndBackgroundDataFlushExceptions();
  final OCluster cluster=getClusterById(rid.clusterId);
  if (transaction.get() != null) {
    return doRecycleRecord(rid,content,version,cluster,recordType);
  }
  stateLock.acquireReadLock();
  try {
    final Lock lock=recordVersionManager.acquireExclusiveLock(rid);
    try {
      checkOpeness();
      return doRecycleRecord(rid,content,version,cluster,recordType);
    }
  finally {
      lock.unlock();
    }
  }
  finally {
    stateLock.releaseReadLock();
  }
}
