{
  init((OCommandRequestText)iRequest);
  final ODatabaseDocumentInternal database=getDatabase();
  final StringBuilder word=new StringBuilder();
  parserRequiredKeyword(KEYWORD_CREATE);
  parserRequiredKeyword(KEYWORD_SEQUENCE);
  this.sequenceName=parserRequiredWord(false,"Expected <sequence name>");
  this.params=new OSequence.CreateParams();
  String temp;
  while ((temp=parseOptionalWord(true)) != null) {
    if (parserIsEnded()) {
      break;
    }
    if (temp.equals(KEYWORD_TYPE)) {
      String typeAsString=parserRequiredWord(true,"Expected <sequence type>");
      try {
        this.sequenceType=OSequenceHelper.getSequenceTyeFromString(typeAsString);
      }
 catch (      IllegalArgumentException e) {
        throw new OCommandSQLParsingException("Unknown sequence's type '" + typeAsString + "'. Supported attributes are: "+ Arrays.toString(SEQUENCE_TYPE.values()));
      }
    }
 else     if (temp.equals(KEYWORD_START)) {
      String startAsString=parserRequiredWord(true,"Expected <start value>");
      this.params.start=Long.parseLong(startAsString);
    }
 else     if (temp.equals(KEYWORD_INCREMENT)) {
      String incrementAsString=parserRequiredWord(true,"Expected <increment value>");
      this.params.increment=Integer.parseInt(incrementAsString);
    }
 else     if (temp.equals(KEYWORD_CACHE)) {
      String cacheAsString=parserRequiredWord(true,"Expected <cache value>");
      this.params.cacheSize=Integer.parseInt(cacheAsString);
    }
  }
  return this;
}
