{
  final StringWriter buffer=new StringWriter();
  final OJSONWriter json=new OJSONWriter(buffer);
  json.beginObject();
  if (iRecords != null && iRecords.size() > 0) {
    ORecord<?> first=iRecords.get(0);
    if (first != null && first instanceof ODocument) {
      ODatabaseDocumentTx db=(ODatabaseDocumentTx)((ODocument)first).getDatabase();
      String className=((ODocument)first).getClassName();
      exportClassSchema(db,json,db.getMetadata().getSchema().getClass(className));
    }
  }
  json.beginCollection(1,true,"result");
  if (iRecords != null) {
    int counter=0;
    String objectJson;
    for (    ORecord<?> rec : iRecords) {
      try {
        objectJson=rec.toJSON();
        if (counter++ > 0)         buffer.append(",\r\n");
        buffer.append(objectJson);
      }
 catch (      Exception e) {
      }
    }
  }
  json.endCollection(1,true);
  json.endObject();
  sendTextContent(iRequest,OHttpUtils.STATUS_OK_CODE,"OK",null,OHttpUtils.CONTENT_TEXT_PLAIN,buffer.toString());
}
