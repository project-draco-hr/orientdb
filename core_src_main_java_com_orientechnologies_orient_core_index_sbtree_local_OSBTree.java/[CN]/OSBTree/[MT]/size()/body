{
  acquireSharedLock();
  try {
    atomicOperationsManager.acquireReadLock(this);
    try {
      OAtomicOperation atomicOperation=atomicOperationsManager.getCurrentOperation();
      OCacheEntry rootCacheEntry=loadPage(atomicOperation,fileId,ROOT_INDEX,false,diskCache);
      try {
        OSBTreeBucket<K,V> rootBucket=new OSBTreeBucket<K,V>(rootCacheEntry,keySerializer,keyTypes,valueSerializer,getChangesTree(atomicOperation,rootCacheEntry));
        return rootBucket.getTreeSize();
      }
  finally {
        releasePage(atomicOperation,rootCacheEntry,diskCache);
      }
    }
  finally {
      atomicOperationsManager.releaseReadLock(this);
    }
  }
 catch (  IOException e) {
    throw new OSBTreeException("Error during retrieving of size of index " + name);
  }
 finally {
    releaseSharedLock();
  }
}
