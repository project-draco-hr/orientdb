{
  for (int retry=0; retry < SEND_RETRY_MAX; ++retry) {
    ODistributedServerLog.debug(this,getLocalNodeId(),iTask.getNodeDestination(),DIRECTION.OUT,"routing %s against db=%s in %s mode...",iTask.getName().toUpperCase(),dbName,EXECUTION_MODE.SYNCHRONOUS);
    try {
      ODistributedServerLog.debug(this,getLocalNodeId(),iTask.getNodeDestination(),DIRECTION.OUT,"remote execution %s db=%s mode=%s oper=%d.%d...",iTask.getName().toUpperCase(),dbName,iTask.getMode(),iTask.getRunId(),iTask.getOperationSerial());
      final Object remoteResult=executeOperation((Callable<Object>)iTask,iKey,EXECUTION_MODE.SYNCHRONOUS,null);
      final Object localResult;
      if (iTask instanceof OAbstractReplicatedTask<?>) {
        ODistributedServerLog.debug(this,getLocalNodeId(),iTask.getNodeDestination(),DIRECTION.IN,"local execution %s against db=%s mode=%s oper=%d.%d...",iTask.getName().toUpperCase(),dbName,iTask.getMode(),iTask.getRunId(),iTask.getOperationSerial());
        localResult=enqueueLocalExecution(iTask);
        if (remoteResult != null && localResult != null)         if (!remoteResult.equals(localResult)) {
          ODistributedServerLog.warn(this,getLocalNodeId(),iTask.getNodeDestination(),DIRECTION.IN,"detected conflict on %s mode=%s db=%s oper=%d.%d: remote={%s} != local={%s}",iTask.getName().toUpperCase(),EXECUTION_MODE.SYNCHRONOUS,dbName,iTask.getRunId(),iTask.getOperationSerial(),remoteResult,localResult);
          iTask.handleConflict(iTask.getNodeDestination(),localResult,remoteResult);
        }
      }
 else       localResult=remoteResult;
      return localResult;
    }
 catch (    MemberLeftException e) {
      ODistributedServerLog.warn(this,getLocalNodeId(),iTask.getNodeDestination(),DIRECTION.OUT,"error on execution of operation in %s mode, because node left. Re-route it in transparent way",e,EXECUTION_MODE.SYNCHRONOUS);
      return execute(iClusterName,iKey,iTask,iReplicationData);
    }
catch (    ExecutionException e) {
      if (e.getCause() instanceof OServerOfflineException) {
        ODistributedServerLog.warn(this,getLocalNodeId(),iTask.getNodeDestination(),DIRECTION.OUT,"remote node is not online, retrying %d...",retry + 1);
        try {
          Thread.sleep(200 + (retry * 50));
        }
 catch (        InterruptedException ex) {
          Thread.interrupted();
        }
      }
 else {
        ODistributedServerLog.error(this,getLocalNodeId(),iTask.getNodeDestination(),DIRECTION.OUT,"error on execution of operation in %s mode",e,EXECUTION_MODE.SYNCHRONOUS);
        throw e;
      }
    }
  }
  ODistributedServerLog.error(this,getLocalNodeId(),iTask.getNodeDestination(),DIRECTION.OUT,"error on execution %s in %s mode",iTask.getName(),EXECUTION_MODE.SYNCHRONOUS);
  throw new ODistributedException("Error on execution " + iTask.getName() + " in "+ EXECUTION_MODE.SYNCHRONOUS+ " mode");
}
