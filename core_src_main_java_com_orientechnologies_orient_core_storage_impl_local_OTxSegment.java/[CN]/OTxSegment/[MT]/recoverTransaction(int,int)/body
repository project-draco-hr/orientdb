{
  byte status;
  byte operation;
  int reqId;
  int txId;
  int clusterId;
  long clusterOffset;
  long oldDataOffset;
  int offset;
  OPhysicalPosition ppos=new OPhysicalPosition();
  int size=(file.getFilledUpTo() / RECORD_SIZE);
  int recordsRecovered=0;
  for (int i=0; i < size; ++i) {
    offset=i * RECORD_SIZE;
    status=file.readByte(offset);
    offset+=OConstants.SIZE_BYTE;
    if (status != STATUS_FREE) {
      operation=file.readByte(offset);
      offset+=OConstants.SIZE_BYTE;
      reqId=file.readShort(offset);
      if (reqId == iReqId) {
        offset+=OConstants.SIZE_SHORT;
        txId=file.readInt(offset);
        if (txId == iTxId) {
          offset+=OConstants.SIZE_INT;
          clusterId=file.readShort(offset);
          offset+=OConstants.SIZE_SHORT;
          clusterOffset=file.readLong(offset);
          offset+=OConstants.SIZE_LONG;
          oldDataOffset=file.readLong(offset);
          recoverTransactionEntry(status,operation,reqId,txId,clusterId,clusterOffset,oldDataOffset,ppos);
          recordsRecovered++;
          file.writeByte(i * RECORD_SIZE + OConstants.SIZE_SHORT + OConstants.SIZE_INT,STATUS_FREE);
        }
      }
    }
  }
  return recordsRecovered;
}
