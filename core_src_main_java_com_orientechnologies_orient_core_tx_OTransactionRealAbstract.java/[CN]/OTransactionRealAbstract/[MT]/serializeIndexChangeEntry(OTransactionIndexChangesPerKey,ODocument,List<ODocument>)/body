{
  final StringBuilder value=new StringBuilder();
  if (entry.key != null) {
    if (entry.key instanceof OCompositeKey) {
      final List<Comparable<?>> keys=((OCompositeKey)entry.key).getKeys();
      ORecordSerializerStringAbstract.fieldTypeToString(value,OType.EMBEDDEDLIST,keys);
    }
 else     ORecordSerializerStringAbstract.fieldTypeToString(value,OType.getTypeByClass(entry.key.getClass()),entry.key);
  }
 else   value.append('*');
  String key=value.toString();
  final List<ODocument> operations=new ArrayList<ODocument>();
  if (entry.entries != null && !entry.entries.isEmpty()) {
    for (    OTransactionIndexEntry e : entry.entries) {
      final ODocument changeDoc=new ODocument().addOwner(indexDoc);
      changeDoc.field("o",e.operation.ordinal());
      if (e.value instanceof ORecord<?> && e.value.getIdentity().isNew()) {
        final ORecord<?> saved=temp2persistent.get(e.value.getIdentity());
        if (saved != null)         e.value=saved;
 else         ((ORecord<?>)e.value).save();
      }
      changeDoc.field("v",e.value != null ? e.value.getIdentity() : null);
      operations.add(changeDoc);
    }
  }
  entries.add(new ODocument().addOwner(indexDoc).field("k",OStringSerializerHelper.encode(key)).field("ops",operations,OType.EMBEDDEDLIST));
}
