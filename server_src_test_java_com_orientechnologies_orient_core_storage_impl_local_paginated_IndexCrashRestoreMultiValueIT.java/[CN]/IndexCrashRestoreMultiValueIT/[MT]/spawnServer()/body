{
  OLogManager.instance().installCustomFormatter();
  OGlobalConfiguration.WAL_FUZZY_CHECKPOINT_INTERVAL.setValue(1000000);
  OGlobalConfiguration.RID_BAG_EMBEDDED_TO_SBTREEBONSAI_THRESHOLD.setValue(3);
  OGlobalConfiguration.FILE_LOCK.setValue(false);
  String buildDirectory=System.getProperty("buildDirectory",".");
  buildDirectory+="/" + getClass().getSimpleName();
  buildDir=new File(buildDirectory);
  if (buildDir.exists()) {
    OFileUtils.deleteRecursively(buildDir);
  }
  buildDir.mkdirs();
  final File mutexFile=new File(buildDir,"mutex.ct");
  final RandomAccessFile mutex=new RandomAccessFile(mutexFile,"rw");
  mutex.seek(0);
  mutex.write(0);
  buildDirectory=buildDir.getCanonicalPath();
  buildDir=new File(buildDirectory);
  String javaExec=System.getProperty("java.home") + "/bin/java";
  javaExec=new File(javaExec).getCanonicalPath();
  ProcessBuilder processBuilder=new ProcessBuilder(javaExec,"-Xmx2048m","-XX:MaxDirectMemorySize=512g","-classpath",System.getProperty("java.class.path"),"-DmutexFile=" + mutexFile.getCanonicalPath(),"-DORIENTDB_HOME=" + buildDirectory,RemoteDBRunner.class.getName());
  processBuilder.inheritIO();
  serverProcess=processBuilder.start();
  System.out.println(IndexCrashRestoreMultiValueIT.class.getSimpleName() + ": Wait for server start");
  boolean started=false;
  do {
    Thread.sleep(5000);
    mutex.seek(0);
    started=mutex.read() == 1;
  }
 while (!started);
  mutex.close();
  mutexFile.delete();
  System.out.println(IndexCrashRestoreMultiValueIT.class.getSimpleName() + ": Server was started");
}
