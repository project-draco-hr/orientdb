{
  final ODocument inputDocument=(ODocument)(iRecord != null ? iRecord.getRecord() : null);
  if (iProjections.isEmpty())   inputDocument.copyTo(iValue);
 else {
    for (    Entry<String,Object> projection : iProjections.entrySet()) {
      final Object v=projection.getValue();
      if (v == null)       continue;
      final Object projectionValue;
      if (v.equals("*")) {
        inputDocument.copyTo(iValue);
        projectionValue=null;
      }
 else       if (v instanceof OSQLFilterItemVariable) {
        projectionValue=((OSQLFilterItemVariable)v).getValue(inputDocument,iValue,iContext);
      }
 else       if (v instanceof OSQLFilterItemField)       projectionValue=((OSQLFilterItemField)v).getValue(inputDocument,iValue,iContext);
 else       if (v instanceof OSQLFunctionRuntime) {
        final OSQLFunctionRuntime f=(OSQLFunctionRuntime)v;
        projectionValue=f.execute(inputDocument,inputDocument,iValue,iContext);
      }
 else       projectionValue=v;
      if (projectionValue != null)       if (projectionValue instanceof ORidBag)       iValue.field(projection.getKey(),new ORidBag((ORidBag)projectionValue));
 else       if (projectionValue instanceof OIdentifiable && !(projectionValue instanceof ORID) && !(projectionValue instanceof ORecord))       iValue.field(projection.getKey(),((OIdentifiable)projectionValue).getRecord());
 else       if (projectionValue instanceof Iterator) {
        boolean link=true;
        if (projectionValue instanceof OResettable)         ((OResettable)projectionValue).reset();
        final List<Object> iteratorValues=new ArrayList<Object>();
        final Iterator projectionValueIterator=(Iterator)projectionValue;
        while (projectionValueIterator.hasNext()) {
          Object value=projectionValueIterator.next();
          if (value instanceof OIdentifiable) {
            value=((OIdentifiable)value).getRecord();
            if (!((OIdentifiable)value).getIdentity().isPersistent())             link=false;
          }
          if (value != null)           iteratorValues.add(value);
        }
        iValue.field(projection.getKey(),iteratorValues,link ? OType.LINKLIST : OType.EMBEDDEDLIST);
      }
 else       if (projectionValue instanceof ODocument && !((ODocument)projectionValue).getIdentity().isPersistent()) {
        iValue.field(projection.getKey(),projectionValue,OType.EMBEDDED);
      }
 else       if (projectionValue instanceof Set<?>) {
        OType type=OType.getTypeByValue(projectionValue);
        if (type == OType.LINKSET && !entriesPersistent((Collection<OIdentifiable>)projectionValue))         type=OType.EMBEDDEDSET;
        iValue.field(projection.getKey(),projectionValue,type);
      }
 else       if (projectionValue instanceof Map<?,?>) {
        OType type=OType.getTypeByValue(projectionValue);
        if (type == OType.LINKMAP && !entriesPersistent(((Map<?,OIdentifiable>)projectionValue).values()))         type=OType.EMBEDDEDMAP;
        iValue.field(projection.getKey(),projectionValue,type);
      }
 else       if (projectionValue instanceof List<?>) {
        OType type=OType.getTypeByValue(projectionValue);
        if (type == OType.LINKLIST && !entriesPersistent((Collection<OIdentifiable>)projectionValue))         type=OType.EMBEDDEDLIST;
        iValue.field(projection.getKey(),projectionValue,type);
      }
 else       iValue.field(projection.getKey(),projectionValue);
    }
  }
  return iValue;
}
