{
  long oldIndexUsage=profiler.getCounter("db.demo.query.indexUsed");
  long oldcompositeIndexUsed=profiler.getCounter("db.demo.query.compositeIndexUsed");
  long oldcompositeIndexUsed2=profiler.getCounter("db.demo.query.compositeIndexUsed.2");
  long oldcompositeIndexUsed22=profiler.getCounter("db.demo.query.compositeIndexUsed.2.2");
  if (oldIndexUsage == -1) {
    oldIndexUsage=0;
  }
  if (oldcompositeIndexUsed == -1) {
    oldcompositeIndexUsed=0;
  }
  if (oldcompositeIndexUsed2 == -1) {
    oldcompositeIndexUsed2=0;
  }
  if (oldcompositeIndexUsed22 == -1) {
    oldcompositeIndexUsed22=0;
  }
  final List<ODocument> result=database.command(new OSQLSynchQuery<ODocument>("select * from sqlSelectIndexReuseTestClass " + "where prop8 = 1 and fEmbeddedMapTwo containsValue 22")).execute();
  final Map<String,Integer> embeddedMap=new HashMap<String,Integer>();
  embeddedMap.put("key21",21);
  embeddedMap.put("key22",22);
  embeddedMap.put("key23",23);
  embeddedMap.put("key24",21);
  Assert.assertEquals(result.size(),1);
  final ODocument document=new ODocument();
  document.field("prop8",1);
  document.field("fEmbeddedMap",embeddedMap);
  Assert.assertEquals(containsDocument(result,document),1);
  Assert.assertEquals(profiler.getCounter("db.demo.query.indexUsed"),oldIndexUsage + 1);
  Assert.assertEquals(profiler.getCounter("db.demo.query.compositeIndexUsed"),oldcompositeIndexUsed + 1);
  Assert.assertEquals(profiler.getCounter("db.demo.query.compositeIndexUsed.2"),oldcompositeIndexUsed2 + 1);
  Assert.assertEquals(profiler.getCounter("db.demo.query.compositeIndexUsed.2.2"),oldcompositeIndexUsed22 + 1);
}
