{
  if (attribute == null)   throw new IllegalArgumentException("attribute is null");
  final String stringValue=value != null ? value.toString() : null;
  externalModificationLock.requestModificationLock();
  try {
    acquireExclusiveLock();
    try {
switch (attribute) {
case NAME:
        setNameInternal(stringValue);
      break;
case USE_WAL:
    setUseWalInternal(stringValue);
  break;
case RECORD_GROW_FACTOR:
setRecordGrowFactorInternal(stringValue);
break;
case RECORD_OVERFLOW_GROW_FACTOR:
setRecordOverflowGrowFactorInternal(stringValue);
break;
case COMPRESSION:
if (getEntries() > 0) throw new IllegalArgumentException("Cannot change compression setting on cluster '" + getName() + "' because it is not empty");
setCompressionInternal(stringValue,ODatabaseRecordThreadLocal.INSTANCE.get().getStorage().getConfiguration().getContextConfiguration().getValueAsString(OGlobalConfiguration.STORAGE_ENCRYPTION_KEY));
break;
case CONFLICTSTRATEGY:
setRecordConflictStrategy(stringValue);
break;
case STATUS:
{
if (stringValue == null) throw new IllegalStateException("Value of attribute is null");
return storageLocal.setClusterStatus(id,OStorageClusterConfiguration.STATUS.valueOf(stringValue.toUpperCase(storageLocal.getConfiguration().getLocaleInstance())));
}
case ENCRYPTION:
if (getEntries() > 0) throw new IllegalArgumentException("Cannot change encryption setting on cluster '" + getName() + "' because it is not empty");
setEncryptionInternal(stringValue,ODatabaseRecordThreadLocal.INSTANCE.get().getStorage().getConfiguration().getContextConfiguration().getValueAsString(OGlobalConfiguration.STORAGE_ENCRYPTION_KEY));
break;
default :
throw new IllegalArgumentException("Runtime change of attribute '" + attribute + " is not supported");
}
}
  finally {
releaseExclusiveLock();
}
}
  finally {
externalModificationLock.releaseModificationLock();
}
return null;
}
