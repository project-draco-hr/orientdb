{
  ODocument tom=database.createVertex().field("name","Tom").save();
  ODocument ferrari=database.createVertex("GraphCar").field("brand","Ferrari").save();
  ODocument maserati=database.createVertex("GraphCar").field("brand","Maserati").save();
  ODocument porsche=database.createVertex("GraphCar").field("brand","Porsche").save();
  database.createEdge(tom,ferrari).field("label","drives").save();
  database.createEdge(tom,maserati).field("label","drives").save();
  database.createEdge(tom,porsche).field("label","owns").save();
  Assert.assertNotNull(database.getOutEdges(tom,"drives"));
  Assert.assertFalse(database.getOutEdges(tom,"drives").isEmpty());
  List<ODocument> result=database.query(new OSQLSynchQuery<ODocument>("select out_[in.@class = 'GraphCar'].in_ from V where name = 'Tom'"));
  Assert.assertEquals(result.size(),1);
  result=database.query(new OSQLSynchQuery<ODocument>("select out_[label='drives'][in.brand = 'Ferrari'].in_ from V where name = 'Tom'"));
  Assert.assertEquals(result.size(),1);
  result=database.query(new OSQLSynchQuery<ODocument>("select out_[in.brand = 'Ferrari'].in_ from V where name = 'Tom'"));
  Assert.assertEquals(result.size(),1);
}
