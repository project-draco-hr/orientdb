{
  final Set<Integer> txToRecover=new HashSet<Integer>();
  final Set<Integer> txToNotRecover=new HashSet<Integer>();
  int size=file.getFilledUpTo() / RECORD_SIZE;
  for (int i=0; i < size; ++i) {
    int offset=i * RECORD_SIZE;
    final byte status=file.readByte(offset);
    offset+=OConstants.SIZE_BYTE;
    offset+=OConstants.SIZE_BYTE;
    final int txId=file.readInt(offset);
switch (status) {
case STATUS_FREE:
      txToNotRecover.add(txId);
    break;
case STATUS_COMMITTING:
  txToRecover.add(txId);
break;
}
}
txToRecover.removeAll(txToNotRecover);
return txToRecover;
}
