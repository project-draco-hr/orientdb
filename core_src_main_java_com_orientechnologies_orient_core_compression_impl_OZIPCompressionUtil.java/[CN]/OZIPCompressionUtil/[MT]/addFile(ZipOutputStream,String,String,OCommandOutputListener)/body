{
  final long begin=System.currentTimeMillis();
  if (iOutput != null)   iOutput.onMessage("\n- Compressing file " + entryName + "...");
  final ZipEntry ze=new ZipEntry(entryName);
  zos.putNextEntry(ze);
  try {
    final FileInputStream in=new FileInputStream(folderName);
    try {
      OIOUtils.copyStream(in,zos,-1);
    }
  finally {
      in.close();
    }
  }
 catch (  IOException e) {
    if (iOutput != null)     iOutput.onMessage("error: " + e);
    OLogManager.instance().error(OZIPCompression.class,"Cannot compress file: %s",e,folderName);
    throw e;
  }
 finally {
    zos.closeEntry();
  }
  if (iOutput != null) {
    final long ratio=ze.getSize() > 0 ? 100 - (ze.getCompressedSize() * 100 / ze.getSize()) : 0;
    iOutput.onMessage("ok size=" + OFileUtils.getSizeAsString(ze.getSize()) + " compressedSize="+ ze.getCompressedSize()+ " ratio="+ ratio+ "%% elapsed="+ OIOUtils.getTimeAsString(System.currentTimeMillis() - begin)+ "");
  }
}
