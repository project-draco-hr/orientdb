{
  final ArrayList<Thread> threadsToRemove=new ArrayList<Thread>();
  for (  Map.Entry<Thread,OSessionStoragePerformanceStatistic> entry : statistics.entrySet()) {
    final Thread thread=entry.getKey();
    if (!thread.isAlive()) {
      threadsToRemove.add(thread);
    }
 else {
      final OSessionStoragePerformanceStatistic performanceStatistic=entry.getValue();
      performanceStatistic.pushComponentCounters(componentName,componentCountersHolder);
    }
  }
  if (!threadsToRemove.isEmpty()) {
    updateDeadThreadsStatistic(threadsToRemove);
  }
  final ImmutableStatistic ds=deadThreadsStatistic;
  if (ds != null) {
    final PerformanceCountersHolder dch=ds.countersByComponents.get(componentName);
    if (dch != null) {
      dch.pushData(componentCountersHolder);
    }
  }
}
