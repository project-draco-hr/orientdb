{
  OLogManager.instance().debug(this,"looking for analyzer::  " + analyzerFQN);
  try {
    final Class classAnalyzer=Class.forName(analyzerFQN);
    final Constructor constructor=classAnalyzer.getConstructor();
    return (Analyzer)constructor.newInstance();
  }
 catch (  ClassNotFoundException e) {
    throw OException.wrapException(new OIndexException("Analyzer: " + analyzerFQN + " not found"),e);
  }
catch (  NoSuchMethodException e) {
    Class classAnalyzer=null;
    try {
      classAnalyzer=Class.forName(analyzerFQN);
      return (Analyzer)classAnalyzer.newInstance();
    }
 catch (    Throwable e1) {
      throw OException.wrapException(new OIndexException("Couldn't instantiate analyzer:  public constructor  not found"),e);
    }
  }
catch (  Exception e) {
    OLogManager.instance().error(this,"Error on getting analyzer for Lucene index",e);
  }
  return new StandardAnalyzer();
}
