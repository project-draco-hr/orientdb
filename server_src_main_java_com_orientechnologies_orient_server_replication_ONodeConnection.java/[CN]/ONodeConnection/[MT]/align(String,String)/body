{
  logger.setDatabase(iDatabaseName);
  logger.log(this,Level.INFO,TYPE.REPLICATION,DIRECTION.IN,"alignment started with options %s",iOptions);
  try {
    connect();
    final String path=OServerMain.server().getStoragePath(iDatabaseName);
    final ODatabaseComplex<?> database=OServerMain.server().openDatabase("document",path,null,null);
    final int blockSize=OGlobalConfiguration.DISTRIBUTED_ALIGN_RECORD_BLOCK.getValueAsInteger();
    final ODocument cfg=new ODocument();
    cfg.field("db",iDatabaseName);
    final ODocument block=new ODocument().addOwner(cfg);
    cfg.field("block",block);
    int current=0;
    OPhysicalPosition ppos=new OPhysicalPosition();
    for (    OCluster cluster : database.getStorage().getClusterInstances()) {
      final OClusterPositionIterator iterator=cluster.absoluteIterator();
      while (iterator.hasNext()) {
        final long position=iterator.next();
        cluster.getPhysicalPosition(position,ppos);
        block.field(cluster.getId() + ":" + position,ppos.version);
        if (current++ % blockSize == 0) {
          sendAlignmentBlock(cfg);
          current=0;
        }
      }
    }
    if (current > 0)     sendAlignmentBlock(cfg);
  }
 catch (  OException e) {
    throw e;
  }
catch (  Exception e) {
    throw new OIOException("REPL DB (" + iDatabaseName + ") error on alignment",e);
  }
}
