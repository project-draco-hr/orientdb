{
  if (iFetchPlan == null)   return;
  if (iMaxFetch > -1 && iCurrentLevel >= iMaxFetch)   return;
  Object fieldValue;
  for (  String fieldName : record.fieldNames()) {
    final int depthLevel=getDepthLevel(record,iFetchPlan,fieldName);
    if (depthLevel == 0)     continue;
    if (depthLevel > -1 && iCurrentLevel >= depthLevel - 1)     continue;
    fieldValue=record.field(fieldName);
    if (fieldValue == null || !(fieldValue instanceof OIdentifiable) && (!(fieldValue instanceof Collection<?>) || ((Collection<?>)fieldValue).size() == 0 || !(((Collection<?>)fieldValue).iterator().next() instanceof OIdentifiable)) && (!(fieldValue instanceof Map<?,?>) || ((Map<?,?>)fieldValue).size() == 0 || !(((Map<?,?>)fieldValue).values().iterator().next() instanceof OIdentifiable))) {
      continue;
    }
 else {
      try {
        fetchRidMap(record,iFetchPlan,fieldValue,fieldName,iCurrentLevel,iMaxFetch,parsedRecords);
      }
 catch (      Exception e) {
        e.printStackTrace();
        OLogManager.instance().error(null,"Fetching error on record %s",e,record.getIdentity());
      }
    }
  }
}
