{
  lock.acquireSharedLock();
  try {
    final List<ORecordOperation> tmpEntries=new ArrayList<ORecordOperation>();
    while (iTx.getCurrentRecordEntries().iterator().hasNext()) {
      for (      ORecordOperation txEntry : iTx.getCurrentRecordEntries())       tmpEntries.add(txEntry);
      iTx.clearRecordEntries();
      for (      ORecordOperation txEntry : tmpEntries)       commitEntry(iTx,txEntry);
      tmpEntries.clear();
    }
    OTransactionAbstract.updateCacheFromEntries(iTx,iTx.getAllRecordEntries(),true);
  }
 catch (  IOException e) {
    rollback(iTx);
  }
 finally {
    lock.releaseSharedLock();
  }
}
