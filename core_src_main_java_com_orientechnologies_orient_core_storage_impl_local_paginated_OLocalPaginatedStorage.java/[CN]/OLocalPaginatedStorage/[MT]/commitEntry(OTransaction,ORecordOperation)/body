{
  if (txEntry.type != ORecordOperation.DELETED && !txEntry.getRecord().isDirty())   return;
  final ORecordId rid=(ORecordId)txEntry.getRecord().getIdentity();
  if (rid.clusterId == ORID.CLUSTER_ID_INVALID && txEntry.getRecord() instanceof ODocument && ((ODocument)txEntry.getRecord()).getSchemaClass() != null) {
    rid.clusterId=((ODocument)txEntry.getRecord()).getSchemaClass().getDefaultClusterId();
  }
  final OPaginatedCluster cluster=getClusterById(rid.clusterId);
  if (cluster.getName().equals(OMetadata.CLUSTER_INDEX_NAME) || cluster.getName().equals(OMetadata.CLUSTER_MANUAL_INDEX_NAME))   return;
  if (txEntry.getRecord() instanceof OTxListener)   ((OTxListener)txEntry.getRecord()).onEvent(txEntry,OTxListener.EVENT.BEFORE_COMMIT);
switch (txEntry.type) {
case ORecordOperation.LOADED:
    break;
case ORecordOperation.CREATED:
{
    byte[] stream=txEntry.getRecord().toStream();
    if (stream == null) {
      OLogManager.instance().warn(this,"Null serialization on committing new record %s in transaction",rid);
      break;
    }
    final ORecordId oldRID=rid.isNew() ? rid.copy() : rid;
    if (rid.isNew()) {
      txEntry.getRecord().onBeforeIdentityChanged(rid);
      rid.clusterId=cluster.getId();
    }
    if (rid.isNew()) {
      final OPhysicalPosition ppos;
      ppos=createRecord(-1,rid,stream,txEntry.getRecord().getRecordVersion(),txEntry.getRecord().getRecordType(),-1,null).getResult();
      rid.clusterPosition=ppos.clusterPosition;
      txEntry.getRecord().getRecordVersion().copyFrom(ppos.recordVersion);
      txEntry.getRecord().onAfterIdentityChanged(txEntry.getRecord());
      clientTx.updateIdentityAfterCommit(oldRID,rid);
    }
 else {
      txEntry.getRecord().getRecordVersion().copyFrom(updateRecord(rid,stream,txEntry.getRecord().getRecordVersion(),txEntry.getRecord().getRecordType(),-1,null).getResult());
    }
    break;
  }
case ORecordOperation.UPDATED:
{
  byte[] stream=txEntry.getRecord().toStream();
  if (stream == null) {
    OLogManager.instance().warn(this,"Null serialization on committing updated record %s in transaction",rid);
    break;
  }
  txEntry.getRecord().getRecordVersion().copyFrom(updateRecord(rid,stream,txEntry.getRecord().getRecordVersion(),txEntry.getRecord().getRecordType(),-1,null).getResult());
  break;
}
case ORecordOperation.DELETED:
{
deleteRecord(rid,txEntry.getRecord().getRecordVersion(),-1,null);
break;
}
}
txEntry.getRecord().unsetDirty();
if (txEntry.getRecord() instanceof OTxListener) ((OTxListener)txEntry.getRecord()).onEvent(txEntry,OTxListener.EVENT.AFTER_COMMIT);
}
