{
  if (iFetchPlan == null)   return;
  Object fieldValue;
  for (  String fieldName : record.fieldNames()) {
    int depthLevel;
    final String fieldPath=!iFieldPathFromRoot.isEmpty() ? iFieldPathFromRoot + "." + fieldName : fieldName;
    depthLevel=getDepthLevel(iFetchPlan,fieldPath);
    if (depthLevel == -2)     continue;
    if (iFieldDepthLevel > -1)     depthLevel=iFieldDepthLevel;
    fieldValue=record.field(fieldName);
    if (fieldValue == null || !(fieldValue instanceof OIdentifiable) && (!(fieldValue instanceof ORecordLazyMultiValue) || !((ORecordLazyMultiValue)fieldValue).rawIterator().hasNext() || !(((ORecordLazyMultiValue)fieldValue).rawIterator().next() instanceof OIdentifiable)) && (!(fieldValue instanceof Collection<?>) || ((Collection<?>)fieldValue).size() == 0 || !(((Collection<?>)fieldValue).iterator().next() instanceof OIdentifiable))&& (!(fieldValue instanceof OMultiCollectionIterator<?>))&& (!(fieldValue instanceof Map<?,?>) || ((Map<?,?>)fieldValue).size() == 0 || !(((Map<?,?>)fieldValue).values().iterator().next() instanceof OIdentifiable))) {
      continue;
    }
 else {
      try {
        final boolean isEmbedded=isEmbedded(fieldValue);
        if (!(isEmbedded && iContext.fetchEmbeddedDocuments()) && !iFetchPlan.has(fieldPath) && depthLevel > -1 && iCurrentLevel >= depthLevel)         continue;
        final int nextLevel=isEmbedded ? iLevelFromRoot : iLevelFromRoot + 1;
        fetchRidMap(record,iFetchPlan,fieldValue,fieldName,iCurrentLevel,nextLevel,iFieldDepthLevel,parsedRecords,fieldPath,iContext);
      }
 catch (      Exception e) {
        OLogManager.instance().error(null,"Fetching error on record %s",e,record.getIdentity());
      }
    }
  }
}
