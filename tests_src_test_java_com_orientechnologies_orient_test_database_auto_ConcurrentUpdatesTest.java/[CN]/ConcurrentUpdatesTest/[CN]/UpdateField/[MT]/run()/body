{
  try {
    for (int i=0; i < CYCLES; i++) {
      for (int retry=0; retry < MAX_RETRIES; ++retry) {
        try {
          db.begin(TXTYPE.OPTIMISTIC);
          ODocument vDoc1=db.load(rid1,null,true);
          vDoc1.field(threadName,vDoc1.field(threadName) + ";" + i);
          vDoc1.save();
          ODocument vDoc2=db.load(rid2,null,true);
          vDoc2.field(threadName,vDoc2.field(threadName) + ";" + i);
          vDoc2.save();
          db.commit();
          counter.incrementAndGet();
          totalRetries.addAndGet(retry);
          break;
        }
 catch (        OResponseProcessingException e) {
          Assert.assertTrue(e.getCause() instanceof ONeedRetryException);
          System.out.println("Retry " + Thread.currentThread().getName() + " "+ i+ " - "+ retry+ "/"+ MAX_RETRIES+ "...");
          Thread.sleep(retry * 10);
        }
catch (        ONeedRetryException e) {
          System.out.println("Retry " + Thread.currentThread().getName() + " "+ i+ " - "+ retry+ "/"+ MAX_RETRIES+ "...");
          Thread.sleep(retry * 10);
        }
      }
      fieldValue+=";" + i;
    }
  }
 catch (  Throwable e) {
    e.printStackTrace();
    Assert.assertTrue(false);
  }
}
