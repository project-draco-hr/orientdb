{
  int quorum=1;
  if (clusterNames == null || clusterNames.isEmpty()) {
    clusterNames=new ArrayList<String>(1);
    clusterNames.add(null);
  }
  for (  String cluster : clusterNames) {
    int clusterQuorum=0;
switch (quorumType) {
case NONE:
      break;
case READ:
    clusterQuorum=cfg.getReadQuorum(cluster,allAvailableNodes,localNodeName);
  break;
case WRITE:
clusterQuorum=cfg.getWriteQuorum(cluster,masterAvailableNodes,localNodeName);
break;
case ALL:
clusterQuorum=allAvailableNodes;
break;
}
quorum=Math.max(quorum,clusterQuorum);
}
if (quorum < 0) quorum=0;
if (checkNodesAreOnline && quorum > allAvailableNodes) throw new ODistributedException("Quorum (" + quorum + ") cannot be reached because it is major than available nodes ("+ allAvailableNodes+ ")");
return quorum;
}
