{
  if (ioResult != null && operationsChain != null) {
    int operator=-2;
    try {
      for (      OPair<Integer,List<String>> op : operationsChain) {
        operator=op.key.intValue();
        if (operator == OSQLFilterFieldOperator.SIZE.id) {
          if (ioResult != null)           if (ioResult instanceof ORecord<?>)           ioResult=1;
 else           ioResult=OMultiValue.getSize(ioResult);
 else           ioResult=0;
        }
 else         if (operator == OSQLFilterFieldOperator.LENGTH.id)         ioResult=ioResult != null ? ioResult.toString().length() : 0;
 else         if (operator == OSQLFilterFieldOperator.TOUPPERCASE.id)         ioResult=ioResult != null ? ioResult.toString().toUpperCase() : null;
 else         if (operator == OSQLFilterFieldOperator.TOLOWERCASE.id)         ioResult=ioResult != null ? ioResult.toString().toLowerCase() : null;
 else         if (operator == OSQLFilterFieldOperator.TRIM.id)         ioResult=ioResult != null ? ioResult.toString().trim() : null;
 else         if (operator == OSQLFilterFieldOperator.FIELD.id) {
          if (ioResult != null) {
            if (ioResult instanceof String) {
              try {
                ioResult=new ODocument(new ORecordId((String)ioResult));
              }
 catch (              Exception e) {
                OLogManager.instance().error(this,"Error on reading rid with value '%s'",null,ioResult);
                ioResult=null;
              }
            }
 else             if (ioResult instanceof OIdentifiable)             ioResult=((OIdentifiable)ioResult).getRecord();
            if (ioResult != null)             if (ioResult instanceof OCommandContext)             ioResult=((OCommandContext)ioResult).getVariable(op.value.get(0));
 else             ioResult=ODocumentHelper.getFieldValue(ioResult,op.value.get(0));
          }
        }
 else         if (operator == OSQLFilterFieldOperator.CHARAT.id) {
          int index=Integer.parseInt(op.value.get(0));
          ioResult=ioResult != null ? ioResult.toString().substring(index,index + 1) : null;
        }
 else         if (operator == OSQLFilterFieldOperator.INDEXOF.id && op.value.get(0).length() > 2) {
          String toFind=op.value.get(0).substring(1,op.value.get(0).length() - 1);
          int startIndex=op.value.size() > 1 ? Integer.parseInt(op.value.get(1)) : 0;
          ioResult=ioResult != null ? ioResult.toString().indexOf(toFind,startIndex) : null;
        }
 else         if (operator == OSQLFilterFieldOperator.SUBSTRING.id) {
          if (op.value.size() > 1)           ioResult=ioResult != null ? ioResult.toString().substring(Integer.parseInt(op.value.get(0)),Integer.parseInt(op.value.get(1))) : null;
 else           ioResult=ioResult != null ? ioResult.toString().substring(Integer.parseInt(op.value.get(0))) : null;
        }
 else         if (operator == OSQLFilterFieldOperator.REPLACE.id) {
          ioResult=ioResult != null ? ioResult.toString().replace(op.value.get(0),op.value.get(1)) : null;
        }
 else         if (operator == OSQLFilterFieldOperator.APPEND.id) {
          final Object v=getParameterValue(iRecord,op.value.get(0));
          if (v != null)           ioResult=ioResult != null ? ioResult.toString() + v : null;
        }
 else         if (operator == OSQLFilterFieldOperator.PREFIX.id) {
          final Object v=getParameterValue(iRecord,op.value.get(0));
          if (v != null)           ioResult=ioResult != null ? v + ioResult.toString() : null;
        }
 else         if (operator == OSQLFilterFieldOperator.FORMAT.id) {
          final Object v=getParameterValue(iRecord,op.value.get(0));
          if (v != null)           if (ioResult instanceof Date)           ioResult=new SimpleDateFormat(v.toString()).format(ioResult);
 else           ioResult=ioResult != null ? String.format(v.toString(),ioResult) : null;
        }
 else         if (operator == OSQLFilterFieldOperator.LEFT.id) {
          final int len=Integer.parseInt(op.value.get(0));
          ioResult=ioResult != null ? ioResult.toString().substring(0,len <= ioResult.toString().length() ? len : ioResult.toString().length()) : null;
        }
 else         if (operator == OSQLFilterFieldOperator.RIGHT.id) {
          final int offset=Integer.parseInt(op.value.get(0));
          ioResult=ioResult != null ? ioResult.toString().substring(offset < ioResult.toString().length() ? ioResult.toString().length() - offset : 0) : null;
        }
 else         if (operator == OSQLFilterFieldOperator.ASSTRING.id)         ioResult=ioResult != null ? ioResult.toString() : null;
 else         if (operator == OSQLFilterFieldOperator.ASINTEGER.id)         ioResult=ioResult != null ? new Integer(ioResult.toString()) : null;
 else         if (operator == OSQLFilterFieldOperator.ASLONG.id)         if (ioResult instanceof Date)         ioResult=((Date)ioResult).getTime();
 else         ioResult=ioResult != null ? new Long(ioResult.toString()) : null;
 else         if (operator == OSQLFilterFieldOperator.ASFLOAT.id)         ioResult=ioResult != null ? new Float(ioResult.toString()) : null;
 else         if (operator == OSQLFilterFieldOperator.ASDECIMAL.id)         ioResult=ioResult != null ? new BigDecimal(ioResult.toString()) : null;
 else         if (operator == OSQLFilterFieldOperator.ASBOOLEAN.id) {
          if (ioResult != null) {
            if (ioResult instanceof String)             ioResult=Boolean.valueOf((String)ioResult);
 else             if (ioResult instanceof Number) {
              final int bValue=((Number)ioResult).intValue();
              if (bValue == 0)               ioResult=Boolean.FALSE;
 else               if (bValue == 1)               ioResult=Boolean.TRUE;
 else               ioResult=null;
            }
          }
        }
 else         if (operator == OSQLFilterFieldOperator.ASDATE.id) {
          if (ioResult != null) {
            if (ioResult instanceof Number)             ioResult=new Date(((Number)ioResult).longValue());
 else             if (!(ioResult instanceof Date))             ioResult=ODatabaseRecordThreadLocal.INSTANCE.get().getStorage().getConfiguration().getDateFormatInstance().parse(ioResult.toString());
          }
        }
 else         if (operator == OSQLFilterFieldOperator.ASDATETIME.id) {
          if (ioResult != null) {
            if (ioResult instanceof Number)             ioResult=new Date(((Number)ioResult).longValue());
 else             if (!(ioResult instanceof Date))             ioResult=ODatabaseRecordThreadLocal.INSTANCE.get().getStorage().getConfiguration().getDateTimeFormatInstance().parse(ioResult.toString());
          }
        }
 else         if (operator == OSQLFilterFieldOperator.TOJSON.id)         ioResult=ioResult != null && ioResult instanceof ODocument ? ((ODocument)ioResult).toJSON() : null;
 else         if (operator == OSQLFilterFieldOperator.KEYS.id)         ioResult=ioResult != null && ioResult instanceof Map<?,?> ? ((Map<?,?>)ioResult).keySet() : null;
 else         if (operator == OSQLFilterFieldOperator.VALUES.id)         ioResult=ioResult != null && ioResult instanceof Map<?,?> ? ((Map<?,?>)ioResult).values() : null;
      }
    }
 catch (    ParseException e) {
      OLogManager.instance().exception("Error on conversion of value '%s' using field operator %s",e,OCommandExecutionException.class,ioResult,OSQLFilterFieldOperator.getById(operator));
    }
  }
  return ioResult;
}
