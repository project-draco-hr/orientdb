{
  final String query=new StringBuilder("CREATE INDEX sqlCreateIndexCompositeIndex2WithConfig ON sqlCreateIndexTestClass (prop1, prop2) UNIQUE ").append(EXPECTED_PROP1_TYPE).append(", ").append(EXPECTED_PROP2_TYPE).append(" metadata {v1:23, v2:\"val2\"}").toString();
  database.command(new OCommandSQL(query)).execute();
  database.getMetadata().getIndexManager().reload();
  final OIndex<?> index=database.getMetadata().getSchema().getClass("sqlCreateIndexTestClass").getClassIndex("sqlCreateIndexCompositeIndex2WithConfig");
  Assert.assertNotNull(index);
  final OIndexDefinition indexDefinition=index.getDefinition();
  Assert.assertTrue(indexDefinition instanceof OCompositeIndexDefinition);
  Assert.assertEquals(indexDefinition.getFields(),Arrays.asList("prop1","prop2"));
  Assert.assertEquals(indexDefinition.getTypes(),new OType[]{EXPECTED_PROP1_TYPE,EXPECTED_PROP2_TYPE});
  Assert.assertEquals(index.getType(),"UNIQUE");
  ODocument metadata=index.getMetadata();
  Assert.assertEquals(metadata.field("v1"),23);
  Assert.assertEquals(metadata.field("v2"),"val2");
}
