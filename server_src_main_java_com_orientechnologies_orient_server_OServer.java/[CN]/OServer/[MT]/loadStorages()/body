{
  if (configuration.storages == null)   return;
  String type;
  for (  OServerStorageConfiguration stg : configuration.storages)   if (stg.loadOnStartup) {
    if (stg.userName == null)     stg.userName=OUser.ADMIN;
    if (stg.userPassword == null)     stg.userPassword=OUser.ADMIN;
    int idx=stg.path.indexOf(':');
    if (idx == -1) {
      OLogManager.instance().error(this,"-> Invalid path '" + stg.path + "' for database '"+ stg.name+ "'");
      return;
    }
    type=stg.path.substring(0,idx);
    ODatabaseDocument db=null;
    try {
      db=new ODatabaseDocumentTx(stg.path);
      if (db.exists())       db.open(stg.userName,stg.userPassword);
 else {
        db.create();
        if (stg.userName.equals(OUser.ADMIN)) {
          if (!stg.userPassword.equals(OUser.ADMIN))           db.getMetadata().getSecurity().getUser(OUser.ADMIN).setPassword(stg.userPassword);
        }
 else {
          db.getMetadata().getSecurity().createUser(stg.userName,stg.userPassword,new String[]{ORole.ADMIN});
          db.getMetadata().getSecurity().dropUser(OUser.ADMIN);
          db.close();
          db.open(stg.userName,stg.userPassword);
        }
      }
      OLogManager.instance().info(this,"-> Loaded " + type + " database '"+ stg.name+ "'");
    }
 catch (    Exception e) {
      OLogManager.instance().error(this,"-> Cannot load " + type + " database '"+ stg.name+ "': "+ e);
    }
 finally {
      if (db != null)       db.close();
    }
  }
}
