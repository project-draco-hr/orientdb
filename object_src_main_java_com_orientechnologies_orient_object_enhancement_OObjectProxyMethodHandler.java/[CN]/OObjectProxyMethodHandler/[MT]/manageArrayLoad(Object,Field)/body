{
  if (((Object[])value).length > 0) {
    Object o=((Object[])value)[0];
    if (o instanceof OIdentifiable) {
      Object[] newValue=new Object[((Object[])value).length];
      for (int i=0; i < ((Object[])value).length; i++) {
        ODocument doc=((OIdentifiable)((Object[])value)[i]).getRecord();
        newValue[i]=OObjectEntitySerializer.getDocument((Proxy)doc);
      }
      value=newValue;
    }
 else {
      final Class genericType=OReflectionHelper.getGenericMultivalueType(f);
      if (genericType != null && genericType.isEnum()) {
        Object newValue=Array.newInstance(genericType,((Object[])value).length);
        for (int i=0; i < ((Object[])value).length; i++) {
          o=((Object[])value)[i];
          if (o instanceof Number)           o=genericType.getEnumConstants()[((Number)o).intValue()];
 else           o=Enum.valueOf(genericType,o.toString());
          ((Enum[])newValue)[i]=(Enum)o;
        }
        value=newValue;
      }
    }
  }
  return value;
}
