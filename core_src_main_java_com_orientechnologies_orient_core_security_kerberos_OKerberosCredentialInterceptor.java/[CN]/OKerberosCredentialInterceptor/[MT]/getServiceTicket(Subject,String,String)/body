{
  try {
    GSSManager manager=GSSManager.getInstance();
    GSSName serviceName=manager.createName(servicePrincipalName,GSSName.NT_USER_NAME);
    Oid krb5Oid=new Oid("1.2.840.113554.1.2.2");
    final GSSContext context=manager.createContext(serviceName,krb5Oid,null,GSSContext.DEFAULT_LIFETIME);
    if (context != null) {
      boolean useNativeJgss=Boolean.getBoolean("sun.security.jgss.native");
      if (useNativeJgss) {
        System.out.println("OKerberosCredentialInterceptor.getServiceTicket() Using Native JGSS");
        OLogManager.instance().info(this,"getServiceTicket() Using Native JGSS");
        try {
          GSSName clientName=manager.createName(principal,GSSName.NT_USER_NAME);
          GSSCredential cred=manager.createCredential(clientName,GSSContext.DEFAULT_LIFETIME,krb5Oid,GSSCredential.INITIATE_ONLY);
          subject.getPrivateCredentials().add(cred);
        }
 catch (        GSSException gssEx) {
          OLogManager.instance().error(this,"getServiceTicket() Use Native JGSS GSSException",gssEx);
          System.out.println("OKerberosCredentialInterceptor.getServiceTicket() Use Native JGSS GSSException: " + gssEx);
        }
      }
      byte[] serviceTicket=Subject.doAs(subject,new PrivilegedAction<byte[]>(){
        public byte[] run(){
          try {
            byte[] token=new byte[0];
            context.requestMutualAuth(false);
            context.requestCredDeleg(false);
            return context.initSecContext(token,0,token.length);
          }
 catch (          Exception inner) {
            System.out.println("OKerberosCredentialInterceptor.getServiceTicket() doAs() Exception: " + inner);
            OLogManager.instance().debug(this,"getServiceTicket() doAs() Exception",inner);
          }
          return null;
        }
      }
);
      System.out.println("OKerberosCredentialInterceptor.getServiceTicket() serviceTicket = " + serviceTicket);
      System.out.println("OKerberosCredentialInterceptor.getServiceTicket() calling sun.misc.BASE64Encoder().encode()");
      if (serviceTicket != null)       return new sun.misc.BASE64Encoder().encode(serviceTicket);
      context.dispose();
    }
 else {
      OLogManager.instance().debug(this,"getServiceTicket() GSSContext is null!");
    }
  }
 catch (  Exception ex) {
    System.out.println("OKerberosCredentialInterceptor.getServiceTicket() Exception: " + ex);
    OLogManager.instance().error(this,"getServiceTicket() Exception",ex);
  }
  return null;
}
