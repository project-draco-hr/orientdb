{
  acquireSharedLock();
  try {
    sbTree.loadEntriesBetween(rangeFrom,inclusive,rangeTo,inclusive,ascOrder,new OTreeInternal.RangeResultListener<Object,V>(){
      @Override public boolean addResult(      Map.Entry<Object,V> entry){
        final Object key=entry.getKey();
        final V value=entry.getValue();
        return addToEntriesResult(transformer,entriesResultListener,key,value);
      }
    }
);
  }
  finally {
    releaseSharedLock();
  }
}
