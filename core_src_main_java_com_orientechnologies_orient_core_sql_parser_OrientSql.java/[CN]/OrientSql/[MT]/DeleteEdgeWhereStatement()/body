{
  ODeleteEdgeWhereStatement jjtn000=new ODeleteEdgeWhereStatement(JJTDELETEEDGEWHERESTATEMENT);
  boolean jjtc000=true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
  ORid lastRid;
  try {
    jj_consume_token(DELETE);
    jj_consume_token(EDGE);
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case TO:
case VALUES:
case SET:
case ADD:
case PUT:
case MERGE:
case CONTENT:
case REMOVE:
case ORDER:
case GROUP:
case OFFSET:
case RECORD:
case LUCENE:
case NEAR:
case WITHIN:
case MINDEPTH:
case CLASS:
case SUPERCLASS:
case CLASSES:
case SUPERCLASSES:
case EXCEPTION:
case PROFILE:
case STORAGE:
case ON:
case OFF:
case TRUNCATE:
case FIND:
case REFERENCES:
case EXTENDS:
case CLUSTERS:
case ABSTRACT:
case ALTER:
case NAME:
case SHORTNAME:
case OVERSIZE:
case STRICTMODE:
case ADDCLUSTER:
case REMOVECLUSTER:
case CUSTOM:
case CLUSTERSELECTION:
case DESCRIPTION:
case ENCRYPTION:
case DROP:
case PROPERTY:
case IN:
case KEY:
case IDENTIFIER:
case QUOTED_IDENTIFIER:
      jjtn000.className=Identifier();
    break;
default :
  jj_la1[82]=jj_gen;
;
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case WHERE:
jj_consume_token(WHERE);
jjtn000.whereClause=WhereClause();
break;
default :
jj_la1[83]=jj_gen;
;
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case LIMIT:
jjtn000.limit=Limit();
break;
default :
jj_la1[84]=jj_gen;
;
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case BATCH:
jjtn000.batch=Batch();
break;
default :
jj_la1[85]=jj_gen;
;
}
jjtree.closeNodeScope(jjtn000,true);
jjtc000=false;
jjtn000.jjtSetLastToken(getToken(0));
{
if (true) return jjtn000;
}
}
 catch (Throwable jjte000) {
if (jjtc000) {
jjtree.clearNodeScope(jjtn000);
jjtc000=false;
}
 else {
jjtree.popNode();
}
if (jjte000 instanceof RuntimeException) {
{
if (true) throw (RuntimeException)jjte000;
}
}
if (jjte000 instanceof ParseException) {
{
if (true) throw (ParseException)jjte000;
}
}
{
if (true) throw (Error)jjte000;
}
}
 finally {
if (jjtc000) {
jjtree.closeNodeScope(jjtn000,true);
jjtn000.jjtSetLastToken(getToken(0));
}
}
throw new Error("Missing return statement in function");
}
