{
  acquireSharedLock();
  try {
    if (ascSortOrder)     loadEntriesMajorAscOrder(key,inclusive,listener);
 else     loadEntriesMajorDescOrder(key,inclusive,listener);
  }
 catch (  IOException ioe) {
    throw new OSBTreeException("Error during fetch of major values for key " + key + " in sbtree "+ name);
  }
 finally {
    releaseSharedLock();
  }
}
