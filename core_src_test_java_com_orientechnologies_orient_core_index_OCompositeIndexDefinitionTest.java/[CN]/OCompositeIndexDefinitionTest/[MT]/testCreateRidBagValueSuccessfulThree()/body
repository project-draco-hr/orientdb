{
  final OCompositeIndexDefinition compositeIndexDefinition=new OCompositeIndexDefinition("testCollectionClass",-1);
  compositeIndexDefinition.addIndex(new OPropertyIndexDefinition("testCollectionClass","fOne",OType.INTEGER));
  compositeIndexDefinition.addIndex(new OPropertyRidBagIndexDefinition("testCollectionClass","fTwo"));
  compositeIndexDefinition.addIndex(new OPropertyIndexDefinition("testCollectionClass","fThree",OType.STRING));
  ORidBag ridBag=new ORidBag();
  ridBag.setAutoConvertToRecord(false);
  ridBag.add(new ORecordId("#1:10"));
  ridBag.add(new ORecordId("#1:11"));
  ridBag.add(new ORecordId("#1:11"));
  final Object result=compositeIndexDefinition.createValue(12,ridBag,"test");
  final ArrayList<OCompositeKey> expectedResult=new ArrayList<OCompositeKey>();
  expectedResult.add(new OCompositeKey(12,new ORecordId("#1:10"),"test"));
  expectedResult.add(new OCompositeKey(12,new ORecordId("#1:11"),"test"));
  expectedResult.add(new OCompositeKey(12,new ORecordId("#1:11"),"test"));
  Assert.assertEquals(result,expectedResult);
}
