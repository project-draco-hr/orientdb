{
  final StringBuilder buffer=new StringBuilder(8192);
  write(buffer,CURRENT_VERSION);
  write(buffer,name);
  write(buffer,schemaRecordId);
  write(buffer,dictionaryRecordId);
  write(buffer,indexMgrRecordId);
  write(buffer,localeLanguage);
  write(buffer,localeCountry);
  write(buffer,dateFormat);
  write(buffer,dateTimeFormat);
  write(buffer,timeZone.getID());
  write(buffer,charset);
  if (iNetworkVersion > 24)   write(buffer,conflictStrategy);
  phySegmentToStream(buffer,fileTemplate);
  write(buffer,clusters.size());
  for (  OStorageClusterConfiguration c : clusters) {
    if (c == null) {
      write(buffer,-1);
      continue;
    }
    write(buffer,c.getId());
    write(buffer,c.getName());
    write(buffer,c.getDataSegmentId());
    if (c instanceof OStoragePaginatedClusterConfiguration) {
      write(buffer,"d");
      final OStoragePaginatedClusterConfiguration paginatedClusterConfiguration=(OStoragePaginatedClusterConfiguration)c;
      write(buffer,paginatedClusterConfiguration.useWal);
      write(buffer,paginatedClusterConfiguration.recordOverflowGrowFactor);
      write(buffer,paginatedClusterConfiguration.recordGrowFactor);
      write(buffer,paginatedClusterConfiguration.compression);
      if (iNetworkVersion >= 31)       write(buffer,paginatedClusterConfiguration.encryption);
      if (iNetworkVersion > 24)       write(buffer,paginatedClusterConfiguration.conflictStrategy);
      if (iNetworkVersion > 25)       write(buffer,paginatedClusterConfiguration.getStatus().name().toString());
    }
  }
  if (iNetworkVersion <= 25) {
    write(buffer,0);
    write(buffer,"");
    write(buffer,"");
    write(buffer,0);
    write(buffer,false);
    write(buffer,false);
  }
  write(buffer,properties.size());
  for (  OStorageEntryConfiguration e : properties)   entryToStream(buffer,e);
  write(buffer,binaryFormatVersion);
  write(buffer,clusterSelection);
  write(buffer,minimumClusters);
  if (iNetworkVersion > 24) {
    write(buffer,recordSerializer);
    write(buffer,recordSerializerVersion);
    write(buffer,configuration.getContextSize());
    for (    String k : configuration.getContextKeys()) {
      final OGlobalConfiguration cfg=OGlobalConfiguration.findByKey(k);
      write(buffer,k);
      write(buffer,cfg.isHidden() ? null : configuration.getValueAsString(cfg));
    }
  }
  write(buffer,indexEngines.size());
  for (  IndexEngineData engineData : indexEngines.values()) {
    write(buffer,engineData.name);
    write(buffer,engineData.algorithm);
    write(buffer,engineData.valueSerializerId);
    write(buffer,engineData.keySerializedId);
    write(buffer,engineData.isAutomatic);
    write(buffer,engineData.durableInNonTxMode);
    write(buffer,engineData.version);
    write(buffer,engineData.nullValuesSupport);
    write(buffer,engineData.keySize);
    if (engineData.keyTypes != null) {
      write(buffer,engineData.keyTypes.length);
      for (      OType type : engineData.keyTypes) {
        write(buffer,type.name());
      }
    }
 else {
      write(buffer,0);
    }
  }
  buffer.append("|");
  return buffer.toString().getBytes();
}
