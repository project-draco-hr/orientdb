{
  final OIndexDefinition indexDefinition;
  final String className=oClass.getName();
  final OCompositeIndexDefinition compositeIndex=new OCompositeIndexDefinition(className);
  for (int i=0, fieldsToIndexSize=fieldsToIndex.size(); i < fieldsToIndexSize; i++) {
    String fieldName=adjustFieldName(oClass,fieldsToIndex.get(i));
    final OType propertyType=types.get(i);
    if (propertyType.equals(OType.EMBEDDEDLIST) || propertyType.equals(OType.EMBEDDEDSET) || propertyType.equals(OType.LINKSET)|| propertyType.equals(OType.LINKLIST)|| propertyType.equals(OType.EMBEDDEDMAP)|| propertyType.equals(OType.LINKMAP))     throw new OIndexException("Collections are not supported in composite indexes");
    final OPropertyIndexDefinition propertyIndex=new OPropertyIndexDefinition(className,fieldName,propertyType);
    compositeIndex.addIndex(propertyIndex);
  }
  indexDefinition=compositeIndex;
  return indexDefinition;
}
