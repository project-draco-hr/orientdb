{
  checkOpeness();
  checkLowDiskSpaceAndFullCheckpointRequests();
  final OCluster cluster=getClusterById(rid.clusterId);
  if (transaction.get() != null) {
    final long timer=Orient.instance().getProfiler().startChrono();
    try {
      return doUpdateRecord(rid,updateContent,content,version,recordType,callback,cluster);
    }
  finally {
      Orient.instance().getProfiler().stopChrono(PROFILER_UPDATE_RECORD,"Update a record to database",timer,"db.*.updateRecord");
    }
  }
  final long timer=Orient.instance().getProfiler().startChrono();
  stateLock.acquireReadLock();
  try {
    final Lock lock=recordVersionManager.acquireExclusiveLock(rid);
    try {
      dataLock.acquireSharedLock();
      try {
        checkOpeness();
        return doUpdateRecord(rid,updateContent,content,version,recordType,callback,cluster);
      }
  finally {
        dataLock.releaseSharedLock();
      }
    }
  finally {
      lock.unlock();
    }
  }
  finally {
    stateLock.releaseReadLock();
    Orient.instance().getProfiler().stopChrono(PROFILER_UPDATE_RECORD,"Update a record to database",timer,"db.*.updateRecord");
  }
}
