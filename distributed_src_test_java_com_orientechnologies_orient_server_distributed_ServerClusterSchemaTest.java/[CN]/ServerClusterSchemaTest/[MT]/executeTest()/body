{
  for (int s=0; s < SERVERS; ++s) {
    OrientGraphFactory factory=new OrientGraphFactory("plocal:target/server" + s + "/databases/"+ getDatabaseName());
    OrientGraphNoTx g=factory.getNoTx();
    try {
      System.out.println("Creating vertex class Client" + s + " against server "+ g+ "...");
      OrientVertexType t=g.createVertexType("Client" + s);
      t.createProperty("name",OType.STRING).setMandatory(true);
      System.out.println("Creating vertex class Knows" + s + " against server "+ g+ "...");
      g.createEdgeType("Knows" + s);
    }
  finally {
      g.shutdown();
    }
  }
  for (int s=0; s < SERVERS; ++s) {
    OrientGraphFactory factory=new OrientGraphFactory("plocal:target/server" + s + "/databases/"+ getDatabaseName());
    OrientGraphNoTx g=factory.getNoTx();
    try {
      for (int i=0; i < SERVERS; ++i) {
        Assert.assertNotNull(g.getVertexType("Client" + i));
        Assert.assertNotNull(g.getEdgeType("Knows" + i));
      }
    }
  finally {
      g.shutdown();
    }
  }
  for (int s=0; s < SERVERS; ++s) {
    OrientGraphFactory factory=new OrientGraphFactory("plocal:target/server" + s + "/databases/"+ getDatabaseName());
    OrientGraphNoTx g=factory.getNoTx();
    try {
      for (int i=0; i < SERVERS; ++i) {
        try {
          final OrientVertex v=g.addVertex("class:" + "Client" + i);
          Assert.assertTrue(false);
        }
 catch (        OValidationException e) {
        }
      }
    }
  finally {
      g.shutdown();
    }
  }
  for (int s=0; s < SERVERS; ++s) {
    OrientGraphFactory factory=new OrientGraphFactory("plocal:target/server" + s + "/databases/"+ getDatabaseName());
    OrientGraph g=factory.getTx();
    try {
      for (int i=0; i < SERVERS; ++i) {
        try {
          final OrientVertex v=g.addVertex("class:" + "Client" + i);
          Assert.assertTrue(false);
        }
 catch (        OValidationException e) {
        }
      }
    }
  finally {
      g.shutdown();
    }
  }
}
