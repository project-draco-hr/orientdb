{
  database.command(new OCommandSQL("create class TestTruncateVertexClassSuperclassWithIndex")).execute();
  database.command(new OCommandSQL("create property TestTruncateVertexClassSuperclassWithIndex.name STRING")).execute();
  database.command(new OCommandSQL("create index TestTruncateVertexClassSuperclassWithIndex_index on TestTruncateVertexClassSuperclassWithIndex (name) NOTUNIQUE")).execute();
  database.command(new OCommandSQL("create class TestTruncateVertexClassSubclassWithIndex extends TestTruncateVertexClassSuperclassWithIndex")).execute();
  database.command(new OCommandSQL("insert into TestTruncateVertexClassSuperclassWithIndex set name = 'foo'")).execute();
  database.command(new OCommandSQL("insert into TestTruncateVertexClassSubclassWithIndex set name = 'bar'")).execute();
  List<?> result=database.query(new OSQLSynchQuery("select from index:TestTruncateVertexClassSuperclassWithIndex_index"));
  Assert.assertEquals(result.size(),2);
  database.command(new OCommandSQL("truncate class TestTruncateVertexClassSubclassWithIndex")).execute();
  result=database.query(new OSQLSynchQuery("select from index:TestTruncateVertexClassSuperclassWithIndex_index"));
  Assert.assertEquals(result.size(),1);
  database.command(new OCommandSQL("truncate class TestTruncateVertexClassSuperclassWithIndex polymorphic")).execute();
  result=database.query(new OSQLSynchQuery("select from index:TestTruncateVertexClassSuperclassWithIndex_index"));
  Assert.assertEquals(result.size(),0);
}
