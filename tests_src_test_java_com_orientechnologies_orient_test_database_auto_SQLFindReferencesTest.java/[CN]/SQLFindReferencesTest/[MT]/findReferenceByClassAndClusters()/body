{
  if (database.isClosed())   database.open("admin","admin");
  Collection<ORID> result=database.command(new OCommandSQL("find references " + janeDoeID.toString() + " ["+ WORKPLACE+ "]")).execute();
  Assert.assertEquals(result.size(),1);
  Assert.assertTrue(result.iterator().next().toString().equals(ctuID.toString()));
  result=database.command(new OCommandSQL("find references " + jackBauerID.toString() + " ["+ WORKPLACE+ ",cluster:"+ CAR+ "]")).execute();
  Assert.assertTrue(result.size() == 3);
  ORID rid=result.iterator().next();
  Assert.assertTrue(rid.toString().equals(ctuID.toString()) || rid.toString().equals(fbiID.toString()) || rid.toString().equals(carID.toString()));
  rid=result.iterator().next();
  Assert.assertTrue(rid.toString().equals(ctuID.toString()) || rid.toString().equals(fbiID.toString()) || rid.toString().equals(carID.toString()));
  rid=result.iterator().next();
  Assert.assertTrue(rid.toString().equals(ctuID.toString()) || rid.toString().equals(fbiID.toString()) || rid.toString().equals(carID.toString()));
  result=database.command(new OCommandSQL("find references " + johnDoeID.toString() + " ["+ WORKPLACE+ ","+ CAR+ ",cluster:"+ WORKER+ "]")).execute();
  Assert.assertTrue(result.size() == 0);
  result.clear();
  result=null;
  database.close();
}
