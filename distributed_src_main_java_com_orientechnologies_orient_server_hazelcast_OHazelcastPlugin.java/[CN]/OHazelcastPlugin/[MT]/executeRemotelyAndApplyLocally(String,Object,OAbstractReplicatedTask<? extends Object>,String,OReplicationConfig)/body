{
  try {
    ODistributedServerLog.debug(this,getLocalNodeId(),iTask.getNodeDestination(),DIRECTION.OUT,"routing %s against db=%s in %s mode...",iTask.getName().toUpperCase(),dbName,EXECUTION_MODE.SYNCHRONOUS);
    try {
      ODistributedServerLog.debug(this,getLocalNodeId(),iTask.getNodeDestination(),DIRECTION.OUT,"remote execution %s db=%s oper=%d.%d...",iTask.getName().toUpperCase(),dbName,iTask.getRunId(),iTask.getOperationSerial());
      iTask.setNodeSource(getLocalNodeId());
      final Map<String,Object> remoteResults=replicate(iTask,iReplicationData);
      final Object localResult;
      if (iTask instanceof OAbstractReplicatedTask<?>) {
        ODistributedServerLog.debug(this,getLocalNodeId(),iTask.getNodeDestination(),DIRECTION.IN,"local exec: %s against db=%s oper=%d.%d...",iTask.getName().toUpperCase(),dbName,iTask.getRunId(),iTask.getOperationSerial());
        localResult=enqueueLocalExecution(iTask);
        checkForConflicts(iTask,localResult,remoteResults,iReplicationData.minSuccessfulOperations);
      }
 else       localResult=remoteResults.values().iterator().next();
      return localResult;
    }
 catch (    MemberLeftException e) {
      ODistributedServerLog.warn(this,getLocalNodeId(),iTask.getNodeDestination(),DIRECTION.OUT,"error on execution of operation %d.%d in %s mode, because node left. Re-route it in transparent way",e,iTask.getRunId(),iTask.getOperationSerial(),EXECUTION_MODE.SYNCHRONOUS);
      return execute(iClusterName,iKey,iTask,iReplicationData);
    }
catch (    Exception e) {
      ODistributedServerLog.error(this,getLocalNodeId(),iTask.getNodeDestination(),DIRECTION.OUT,"error on execution of operation %d.%d in %s mode",e,iTask.getRunId(),iTask.getOperationSerial(),EXECUTION_MODE.SYNCHRONOUS);
      throw e;
    }
  }
  finally {
    notifyQueueWaiters(iTask.getDatabaseName(),iTask.getRunId(),iTask.getOperationSerial(),false);
  }
}
