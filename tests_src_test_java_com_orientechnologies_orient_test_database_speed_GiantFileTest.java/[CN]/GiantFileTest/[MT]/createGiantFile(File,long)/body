{
  final int PAGE_SIZE=4096;
  final Random rng=new Random();
  byte currentPercent=0;
  final RandomAccessFile raf=new RandomAccessFile(file,"rw");
  try {
    final int fullPages=(int)(fileSize / PAGE_SIZE);
    final int totalPages;
    if (fileSize > (fullPages * PAGE_SIZE)) {
      totalPages=fullPages + 1;
    }
 else {
      totalPages=fullPages;
    }
    raf.setLength(fileSize);
    final byte[] buffer=new byte[PAGE_SIZE];
    for (int i=1; i <= fullPages; i++) {
      rng.nextBytes(buffer);
      raf.write(buffer,0,PAGE_SIZE);
      final byte percent=(byte)(i * 100 / totalPages);
      if (percent > currentPercent) {
        System.out.printf("Create Giant File: %d%%\n",percent);
        currentPercent=percent;
      }
    }
    rng.nextBytes(buffer);
    raf.write(buffer,0,(int)(fileSize - (fullPages * PAGE_SIZE)));
    if (currentPercent < 100) {
      System.out.printf("Create Giant File: 100%%\n");
    }
  }
 catch (  final IOException ex) {
    throw new Exception("Failed to create giant file.",ex);
  }
 finally {
    raf.close();
  }
}
