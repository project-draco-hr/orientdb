{
  final Runtime runtime=Runtime.getRuntime();
  int stgs=0;
  long diskCacheUsed=0;
  long diskCacheTotal=0;
  for (  OStorage stg : Orient.instance().getStorages()) {
    if (stg instanceof OLocalPaginatedStorage) {
      diskCacheUsed+=((OLocalPaginatedStorage)stg).getDiskCache().getUsedMemory();
      diskCacheTotal+=OGlobalConfiguration.DISK_CACHE_SIZE.getValueAsLong() * 1024 * 1024;
      stgs++;
    }
  }
  if (osMgmtBean != null) {
    final long osTotalMem=osMgmtBean.getTotalPhysicalMemorySize();
    final long osUsedMem=osTotalMem - osMgmtBean.getFreePhysicalMemorySize();
    out.printf("OrientDB Memory profiler: Heap=%s of %s - DiskCache (%s dbs)=%s of %s - OS=%s of %s\n",OFileUtils.getSizeAsString(runtime.totalMemory() - runtime.freeMemory()),OFileUtils.getSizeAsString(runtime.maxMemory()),stgs,OFileUtils.getSizeAsString(diskCacheUsed),OFileUtils.getSizeAsString(diskCacheTotal),OFileUtils.getSizeAsString(osUsedMem),OFileUtils.getSizeAsString(osTotalMem));
  }
 else {
    out.printf("OrientDB Memory profiler: Heap=%s of %s - DiskCache (%s dbs)=%s of %s\n",OFileUtils.getSizeAsString(runtime.totalMemory() - runtime.freeMemory()),OFileUtils.getSizeAsString(runtime.maxMemory()),stgs,OFileUtils.getSizeAsString(diskCacheUsed),OFileUtils.getSizeAsString(diskCacheTotal));
  }
}
