{
  buffer.append(OStringSerializerHelper.COLLECTION_BEGIN);
  int size=iValue instanceof Collection<?> ? ((Collection<Object>)iValue).size() : Array.getLength(iValue);
  Iterator<Object> iterator=iValue instanceof Collection<?> ? ((Collection<Object>)iValue).iterator() : null;
  Object o;
  for (int i=0; i < size; ++i) {
    if (iValue instanceof Collection<?>)     o=iterator.next();
 else     o=Array.get(iValue,i);
    if (i > 0)     buffer.append(OStringSerializerHelper.RECORD_SEPARATOR);
    if (o == null)     continue;
    ODocument record=null;
    if (!(o instanceof ORecord<?>)) {
      final String fieldBound=OObjectSerializerHelper.getDocumentBoundField(o.getClass());
      if (fieldBound != null) {
        OObjectSerializerHelper.invokeCallback(o,null,OBeforeSerialization.class);
        record=(ODocument)OObjectSerializerHelper.getFieldValue(o,fieldBound);
        OObjectSerializerHelper.invokeCallback(o,record,OAfterSerialization.class);
      }
    }
 else     record=(ODocument)o;
    if (record != null)     buffer.append(OStringSerializerHelper.EMBEDDED);
    if (iLinkedClass != null || record != null) {
      if (record == null)       record=OObjectSerializerHelper.toStream(o,new ODocument((ODatabaseRecord<?>)iDatabase,o.getClass().getSimpleName()),iDatabase instanceof ODatabaseObjectTx ? ((ODatabaseObjectTx)iDatabase).getEntityManager() : OEntityManagerInternal.INSTANCE,iLinkedClass,iObjHandler != null ? iObjHandler : new OUserObject2RecordHandler(){
        public Object getUserObjectByRecord(        ORecordInternal<?> iRecord,        final String iFetchPlan){
          return iRecord;
        }
        public ORecordInternal<?> getRecordByUserObject(        Object iPojo,        boolean iIsMandatory){
          return new ODocument(iLinkedClass);
        }
        public boolean existsUserObjectByRecord(        ORecordInternal<?> iRecord){
          return false;
        }
      }
);
      buffer.append(toString(record,null,iObjHandler,iMarshalledRecords));
    }
 else {
      buffer.append(OStringSerializerHelper.fieldTypeToString(iLinkedType,o));
    }
    if (record != null)     buffer.append(OStringSerializerHelper.EMBEDDED);
  }
  buffer.append(OStringSerializerHelper.COLLECTION_END);
}
