{
  ORecord<?> rec;
  if (key instanceof ORecord<?>) {
    rec=(ORecord<?>)key;
    if (!rec.getIdentity().isValid())     rec.save();
  }
  if (value instanceof ORecord<?>) {
    rec=(ORecord<?>)value;
    if (!rec.getIdentity().isValid())     rec.save();
  }
  for (int i=0; i < OPTIMIZE_MAX_RETRY; ++i) {
    try {
      final V previous=super.put(key,value);
      if (optimizeThreshold > -1 && ++insertionCounter >= optimizeThreshold) {
        insertionCounter=0;
        optimization=2;
        optimize(true);
      }
      return previous;
    }
 catch (    OLowMemoryException e) {
      OLogManager.instance().debug(this,"Optimization required during put %d/%d",i,OPTIMIZE_MAX_RETRY);
      optimize(true);
      System.gc();
      if (i > 0)       try {
        Thread.sleep(300 * i);
      }
 catch (      InterruptedException e1) {
      }
    }
  }
  throw new OLowMemoryException("OMVRBTreePersistent.put()");
}
