{
  ODocument outVertexRecord=null;
  boolean outVertexChanged=false;
  ODocument inVertexRecord=null;
  boolean inVertexChanged=false;
  final Settings settings=graph != null ? graph.settings : new Settings();
  final int maxRetries=graph != null ? graph.getMaxRetries() : 1;
  for (int retry=0; retry < maxRetries; ++retry) {
    try {
      final OIdentifiable inVertexEdge=edge.vIn != null ? edge.vIn : edge.rawElement;
      final String edgeClassName=OrientBaseGraph.encodeClassName(edge.getLabel());
      final boolean useVertexFieldsForEdgeLabels=settings.isUseVertexFieldsForEdgeLabels();
      final OIdentifiable outVertex=edge.getOutVertex();
      if (outVertex != null) {
        if (outVertex != null) {
          outVertexRecord=outVertex.getRecord();
          final String outFieldName=OrientVertex.getConnectionFieldName(Direction.OUT,edgeClassName,useVertexFieldsForEdgeLabels);
          outVertexChanged=edge.dropEdgeFromVertex(inVertexEdge,outVertexRecord,outFieldName,outVertexRecord.field(outFieldName));
        }
 else         OLogManager.instance().debug(graph,"Found broken link to outgoing vertex " + outVertex.getIdentity() + " while removing edge "+ edge.getId());
      }
      final OIdentifiable outVertexEdge=edge.vOut != null ? edge.vOut : edge.rawElement;
      final OIdentifiable inVertex=edge.getInVertex();
      inVertexRecord=null;
      inVertexChanged=false;
      if (inVertex != null) {
        inVertexRecord=inVertex.getRecord();
        if (inVertexRecord != null) {
          final String inFieldName=OrientVertex.getConnectionFieldName(Direction.IN,edgeClassName,useVertexFieldsForEdgeLabels);
          inVertexChanged=edge.dropEdgeFromVertex(outVertexEdge,inVertexRecord,inFieldName,inVertexRecord.field(inFieldName));
        }
 else         OLogManager.instance().debug(graph,"Found broken link to incoming vertex " + inVertex.getIdentity() + " while removing edge "+ edge.getId());
      }
      if (outVertexChanged)       outVertexRecord.save();
      if (inVertexChanged)       inVertexRecord.save();
      if (edge.rawElement != null)       edge.removeRecord();
      break;
    }
 catch (    ONeedRetryException e) {
      if (outVertexChanged)       outVertexRecord.reload();
 else       if (inVertexChanged)       inVertexRecord.reload();
    }
catch (    RuntimeException e) {
      throw e;
    }
catch (    Throwable e) {
      throw OException.wrapException(new OrientGraphModificationException("Error on addEdge in non tx environment"),e);
    }
  }
}
