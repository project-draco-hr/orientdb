{
  ODatabaseDocument db=new ODatabaseDocumentTx("memory:" + CheckHookCallCountTest.class.getSimpleName());
  db.create();
  try {
    OSchema schema=db.getMetadata().getSchema();
    OClass oClass=schema.createClass("TestInHook");
    oClass.createProperty("a",OType.INTEGER);
    oClass.createProperty("b",OType.INTEGER);
    oClass.createProperty("c",OType.INTEGER);
    ODocument doc=new ODocument(oClass);
    doc.field("a",2);
    doc.field("b",2);
    doc.save();
    doc.reload();
    assertEquals(2,doc.field("a"));
    assertEquals(2,doc.field("b"));
    assertNull(doc.field("c"));
    db.registerHook(new ODocumentHookAbstract(db){
{
        setIncludeClasses("TestInHook");
      }
      @Override public void onRecordAfterCreate(      ODocument iDocument){
        onRecordAfterRead(iDocument);
      }
      @Override public void onRecordAfterRead(      ODocument iDocument){
        String script="select sum(a, b) as value from " + iDocument.getIdentity();
        List<ODocument> calculated=database.query(new OSQLSynchQuery<Object>(script));
        if (calculated != null && !calculated.isEmpty()) {
          iDocument.field("c",calculated.get(0).field("value"));
        }
      }
      @Override public DISTRIBUTED_EXECUTION_MODE getDistributedExecutionMode(){
        return DISTRIBUTED_EXECUTION_MODE.SOURCE_NODE;
      }
    }
);
    doc.reload();
    assertEquals(2,doc.field("a"));
    assertEquals(2,doc.field("b"));
    assertEquals(4,doc.field("c"));
    doc=new ODocument(oClass);
    doc.field("a",3);
    doc.field("b",3);
    doc.save();
    assertEquals(3,doc.field("a"));
    assertEquals(3,doc.field("b"));
    assertEquals(6,doc.field("c"));
  }
  finally {
    db.drop();
  }
}
