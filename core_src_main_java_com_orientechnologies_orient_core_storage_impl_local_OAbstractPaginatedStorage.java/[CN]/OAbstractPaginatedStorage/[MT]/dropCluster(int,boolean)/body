{
  checkOpeness();
  checkLowDiskSpaceAndFullCheckpointRequests();
  stateLock.acquireWriteLock();
  try {
    checkOpeness();
    if (clusterId < 0 || clusterId >= clusters.size())     throw new IllegalArgumentException("Cluster id '" + clusterId + "' is outside the of range of configured clusters (0-"+ (clusters.size() - 1)+ ") in database '"+ name+ "'");
    final OCluster cluster=clusters.get(clusterId);
    if (cluster == null)     return false;
    if (iTruncate)     cluster.truncate();
    cluster.delete();
    makeStorageDirty();
    clusterMap.remove(cluster.getName().toLowerCase(configuration.getLocaleInstance()));
    clusters.set(clusterId,null);
    configuration.dropCluster(clusterId);
    makeFullCheckpoint();
    return true;
  }
 catch (  Exception e) {
    throw new OStorageException("Error while removing cluster '" + clusterId + "'",e);
  }
 finally {
    stateLock.releaseWriteLock();
  }
}
