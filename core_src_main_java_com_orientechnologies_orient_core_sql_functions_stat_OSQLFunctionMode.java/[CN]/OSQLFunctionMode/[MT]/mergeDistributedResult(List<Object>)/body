{
  if (returnDistributedResult()) {
    Map<Object,Integer> dSeen=new HashMap<Object,Integer>();
    int dMax=0;
    List<Object> dMaxElems=new ArrayList<Object>();
    for (    Object iParameter : resultsToMerge) {
      final Map<Object,Integer> mSeen=(Map<Object,Integer>)iParameter;
      for (      Entry<Object,Integer> o : mSeen.entrySet()) {
        dMax=this.evaluate(o.getKey(),o.getValue(),dSeen,dMaxElems,dMax);
      }
    }
    return dMaxElems;
  }
  return resultsToMerge.get(0);
}
