{
  if (!isRelatedToLocalServer(iDatabase))   return;
  final ODatabaseDocumentInternal currDb=ODatabaseRecordThreadLocal.INSTANCE.getIfDefined();
  try {
    final String dbName=iDatabase.getName();
    if (configurationMap.containsKey(OHazelcastPlugin.CONFIG_DATABASE_PREFIX + dbName))     throw new ODistributedException("Cannot create a new database with the same name of one available distributed");
    getStorage(dbName);
    final ODistributedDatabaseImpl distribDatabase=messageService.registerDatabase(dbName);
    distribDatabase.setOnline();
    try {
      Thread.sleep(1000);
    }
 catch (    InterruptedException e) {
      Thread.currentThread().interrupt();
      throw new ODistributedException("Error on creating database '" + dbName + "' on distributed nodes");
    }
    final ODistributedConfiguration cfg=getDatabaseConfiguration(dbName);
    final Set<String> servers=cfg.getAllConfiguredServers();
    if (servers.size() > 1) {
      while (true) {
        boolean allServersAreOnline=true;
        for (        String server : servers) {
          if (!isNodeOnline(server,dbName)) {
            allServersAreOnline=false;
            break;
          }
        }
        if (allServersAreOnline)         break;
        try {
          Thread.sleep(200);
        }
 catch (        InterruptedException e) {
          Thread.currentThread().interrupt();
          throw new ODistributedException("Error on creating database '" + dbName + "' on distributed nodes");
        }
      }
    }
    onOpen(iDatabase);
  }
  finally {
    ODatabaseRecordThreadLocal.INSTANCE.set(currDb);
  }
}
