{
  ODatabaseDocumentTx db=new ODatabaseDocumentTx("memory:updateTxTest");
  db.create();
  createSchema(db);
  try {
    db.begin();
    ODocument doc=new ODocument("c1");
    doc.field("p1",new String[]{"abc"});
    OIndex<?> index=db.getMetadata().getIndexManager().getIndex("C1.p1");
    db.save(doc);
    String query="select from C1 where p1 lucene \"abc\" ";
    List<ODocument> vertices=db.command(new OSQLSynchQuery<ODocument>(query)).execute();
    Assert.assertEquals(vertices.size(),1);
    Assert.assertEquals(index.getSize(),1);
    db.commit();
    query="select from C1 where p1 lucene \"abc\" ";
    vertices=db.command(new OSQLSynchQuery<ODocument>(query)).execute();
    Assert.assertEquals(vertices.size(),1);
    Assert.assertEquals(index.getSize(),1);
    db.begin();
    db.delete(vertices.get(0));
    query="select from C1 where p1 lucene \"abc\" ";
    vertices=db.command(new OSQLSynchQuery<ODocument>(query)).execute();
    Collection coll=(Collection)index.get("abc");
    Assert.assertEquals(vertices.size(),0);
    Assert.assertEquals(coll.size(),0);
    Iterator iterator=coll.iterator();
    int i=0;
    while (iterator.hasNext()) {
      iterator.next();
      i++;
    }
    Assert.assertEquals(i,0);
    Assert.assertEquals(index.getSize(),0);
    db.rollback();
    query="select from C1 where p1 lucene \"abc\" ";
    vertices=db.command(new OSQLSynchQuery<ODocument>(query)).execute();
    Assert.assertEquals(vertices.size(),1);
    Assert.assertEquals(index.getSize(),1);
  }
  finally {
    db.drop();
  }
}
