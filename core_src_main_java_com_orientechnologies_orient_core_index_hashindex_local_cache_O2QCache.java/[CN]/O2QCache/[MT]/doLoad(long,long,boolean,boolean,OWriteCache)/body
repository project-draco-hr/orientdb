{
  boolean removeColdPages=false;
  OCacheEntry cacheEntry=null;
  Lock fileLock;
  Lock pageLock;
  cacheLock.acquireReadLock();
  try {
    fileLock=fileLockManager.acquireSharedLock(fileId);
    try {
      pageLock=pageLockManager.acquireExclusiveLock(new PageKey(fileId,pageIndex));
      try {
        if (checkPinnedPages)         cacheEntry=pinnedPages.get(new PinnedPage(fileId,pageIndex));
        if (cacheEntry == null) {
          UpdateCacheResult cacheResult=updateCache(fileId,pageIndex,addNewPages,writeCache);
          if (cacheResult == null)           return null;
          cacheEntry=cacheResult.cacheEntry;
          removeColdPages=cacheResult.removeColdPages;
        }
        cacheEntry.usagesCount++;
      }
  finally {
        pageLockManager.releaseLock(pageLock);
      }
    }
  finally {
      fileLockManager.releaseLock(fileLock);
    }
  }
  finally {
    cacheLock.releaseReadLock();
  }
  return new UpdateCacheResult(removeColdPages,cacheEntry);
}
