{
  short pointer=0;
switch (type) {
case INTEGER:
case LONG:
case SHORT:
    pointer=OVarIntSerializer.write(bytes,((Number)value).longValue());
  break;
case STRING:
pointer=writeString(bytes,(String)value);
break;
case DOUBLE:
long dg=Double.doubleToLongBits((Double)value);
pointer=bytes.alloc((short)OLongSerializer.LONG_SIZE);
OLongSerializer.INSTANCE.serialize(dg,bytes.bytes,pointer);
break;
case FLOAT:
int fg=Float.floatToIntBits((Float)value);
pointer=bytes.alloc((short)OIntegerSerializer.INT_SIZE);
OIntegerSerializer.INSTANCE.serialize(fg,bytes.bytes,pointer);
break;
case BYTE:
pointer=bytes.alloc((short)1);
bytes.bytes[pointer]=(Byte)value;
break;
case BOOLEAN:
pointer=bytes.alloc((short)1);
bytes.bytes[pointer]=((Boolean)value) ? (byte)1 : (byte)0;
break;
case DATETIME:
long time=((Date)value).getTime();
pointer=OVarIntSerializer.write(bytes,time);
break;
case EMBEDDEDSET:
case EMBEDDEDLIST:
pointer=writeList(bytes,(Collection<?>)value);
case DECIMAL:
break;
default :
break;
}
return pointer;
}
