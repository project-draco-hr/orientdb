{
  final Object[] result=new Object[iExpectedWords];
  for (int i=0; i < iExpectedWords; ++i) {
    String[] words=nextValue(true);
    if (words == null)     break;
    if (words[0].length() > 0 && words[0].charAt(0) == OStringSerializerHelper.EMBEDDED_BEGIN) {
      braces++;
      currentPos=currentPos - words[0].length() + 1;
      OSQLFilterCondition subCondition=extractConditions(null);
      if (!jumpWhiteSpaces() || text.charAt(currentPos) == ')')       braces--;
      currentPos++;
      result[i]=subCondition;
    }
 else     if (words[0].charAt(0) == OStringSerializerHelper.COLLECTION_BEGIN) {
      currentPos=currentPos - words[0].length();
      final List<String> stringItems=new ArrayList<String>();
      currentPos=OStringSerializerHelper.getCollection(text,currentPos,stringItems);
      if (stringItems.get(0).charAt(0) == OStringSerializerHelper.COLLECTION_BEGIN) {
        List<List<Object>> coll=new ArrayList<List<Object>>();
        for (        String stringItem : stringItems) {
          final List<String> stringSubItems=new ArrayList<String>();
          OStringSerializerHelper.getCollection(stringItem,0,stringSubItems);
          coll.add(convertCollectionItems(stringSubItems));
        }
        result[i]=coll;
      }
 else {
        result[i]=convertCollectionItems(stringItems);
      }
      currentPos++;
    }
 else     if (words[0].startsWith(OSQLFilterItemFieldAll.NAME + OStringSerializerHelper.EMBEDDED_BEGIN)) {
      result[i]=new OSQLFilterItemFieldAll(this,words[1]);
    }
 else     if (words[0].startsWith(OSQLFilterItemFieldAny.NAME + OStringSerializerHelper.EMBEDDED_BEGIN)) {
      result[i]=new OSQLFilterItemFieldAny(this,words[1]);
    }
 else {
      if (words[0].equals("NOT")) {
        String[] nextWord=nextValue(true);
        if (nextWord != null && nextWord.length == 2) {
          words[1]=words[1] + " " + nextWord[1];
          if (words[1].endsWith(")"))           words[1]=words[1].substring(0,words[1].length() - 1);
        }
      }
      result[i]=OSQLHelper.parseValue(this,this,words[1]);
    }
  }
  return iExpectedWords == 1 ? result[0] : result;
}
