{
  int addressId=database.getMetadata().getSchema().getClass("Address").getDefaultClusterId();
  List<OClusterPosition> positions=getValidPositions(addressId);
  ODocument doc=(ODocument)database.command(new OCommandSQL("insert into Profile (name, surname, salary, location, dummy) values (?,?,?,?,?)")).execute("Marc","Smith",120.0,new ORecordId(addressId,positions.get(3)),"hooray");
  Assert.assertTrue(doc != null);
  Assert.assertEquals(doc.field("name"),"Marc");
  Assert.assertEquals(doc.field("surname"),"Smith");
  Assert.assertEquals(((Number)doc.field("salary")).floatValue(),120.0f);
  Assert.assertEquals(doc.field("location",OType.LINK),new ORecordId(addressId,positions.get(3)));
  Assert.assertEquals(doc.field("dummy"),"hooray");
  database.delete(doc);
  doc=(ODocument)database.command(new OCommandSQL("insert into Profile SET name = ?, surname = ?, salary = ?, location = ?, dummy = ?")).execute("Marc","Smith",120.0,new ORecordId(addressId,positions.get(3)),"hooray");
  Assert.assertTrue(doc != null);
  Assert.assertEquals(doc.field("name"),"Marc");
  Assert.assertEquals(doc.field("surname"),"Smith");
  Assert.assertEquals(((Number)doc.field("salary")).floatValue(),120.0f);
  Assert.assertEquals(doc.field("location",OType.LINK),new ORecordId(addressId,positions.get(3)));
  Assert.assertEquals(doc.field("dummy"),"hooray");
}
