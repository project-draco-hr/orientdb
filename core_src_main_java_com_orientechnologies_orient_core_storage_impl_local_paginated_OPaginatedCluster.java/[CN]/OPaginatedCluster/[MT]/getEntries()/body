{
  acquireSharedLock();
  try {
    final OAtomicOperationsManager operationsManager=storage.getAtomicOperationsManager();
    operationsManager.acquireReadLock(this);
    try {
      final OAtomicOperation atomicOperation=operationsManager.getCurrentOperation();
      final OCacheEntry pinnedStateEntry=loadPage(atomicOperation,fileId,pinnedStateEntryIndex,true,diskCache);
      try {
        return new OPaginatedClusterState(pinnedStateEntry,getChangesTree(atomicOperation,pinnedStateEntry)).getSize();
      }
  finally {
        releasePage(atomicOperation,pinnedStateEntry,diskCache);
      }
    }
  finally {
      operationsManager.releaseReadLock(this);
    }
  }
 catch (  IOException ioe) {
    throw new OStorageException("Error during retrieval of size of " + name + " cluster.");
  }
 finally {
    releaseSharedLock();
  }
}
