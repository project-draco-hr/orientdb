{
  if (iOther == null)   return false;
  if (!equals(iOther) && _recordId.isValid())   return false;
  if (_status == STATUS.NOT_LOADED)   reload();
  if (iOther._status == STATUS.NOT_LOADED)   iOther=(ODocument)iOther.load();
  checkForFields();
  iOther.checkForFields();
  if (_fieldValues.size() != iOther._fieldValues.size())   return false;
  Object myFieldValue;
  Object otherFieldValue;
  for (  Entry<String,Object> f : _fieldValues.entrySet()) {
    myFieldValue=f.getValue();
    otherFieldValue=iOther._fieldValues.get(f.getKey());
    if (myFieldValue == null) {
      if (otherFieldValue != null)       return false;
    }
 else     if (otherFieldValue == null)     return false;
    if (myFieldValue != null && otherFieldValue != null)     if (myFieldValue instanceof Collection && otherFieldValue instanceof Collection) {
      final Collection<?> myCollection=(Collection<?>)myFieldValue;
      final Collection<?> otherCollection=(Collection<?>)otherFieldValue;
      if (myCollection.size() != otherCollection.size())       return false;
      Iterator<?> myIterator=myCollection.iterator();
      Iterator<?> otherIterator=otherCollection.iterator();
      while (myIterator.hasNext()) {
        hasSameContentItem(myIterator.next(),otherIterator.next());
      }
    }
 else     if (myFieldValue instanceof Map && otherFieldValue instanceof Map) {
      final Map<?,?> myMap=(Map<?,?>)myFieldValue;
      final Map<?,?> otherMap=(Map<?,?>)otherFieldValue;
      if (myMap.size() != otherMap.size())       return false;
      for (      Entry<?,?> myEntry : myMap.entrySet()) {
        if (!otherMap.containsKey(myEntry.getKey()))         return false;
        if (myEntry.getValue() instanceof ODocument) {
          if (!((ODocument)myEntry.getValue()).hasSameContentOf((ODocument)otherMap.get(myEntry.getKey())))           return false;
        }
 else         if (!myEntry.getValue().equals(otherMap.get(myEntry.getKey())))         return false;
      }
    }
 else {
      if (!myFieldValue.equals(otherFieldValue))       return false;
    }
  }
  return true;
}
