{
  final OSchema schema=database.getMetadata().getSchema();
  OClass vertex=schema.getClass("V");
  schema.createClass("UpdateVertexContent",vertex);
  final ORID vOneId=((ODocument)database.command(new OCommandSQL("create vertex UpdateVertexContent")).execute()).getIdentity();
  final ORID vTwoId=((ODocument)database.command(new OCommandSQL("create vertex UpdateVertexContent")).execute()).getIdentity();
  database.command(new OCommandSQL("create edge from " + vOneId + " to "+ vTwoId)).execute();
  database.command(new OCommandSQL("create edge from " + vOneId + " to "+ vTwoId)).execute();
  database.command(new OCommandSQL("create edge from " + vOneId + " to "+ vTwoId)).execute();
  List<ODocument> result=database.query(new OSQLSynchQuery<ODocument>("select sum(outE().size(), inE().size()) from UpdateVertexContent"));
  Assert.assertEquals(result.size(),2);
  for (  ODocument doc : result) {
    Assert.assertEquals(doc.field("sum"),3);
  }
  database.command(new OCommandSQL("update UpdateVertexContent content {value : 'val'} where @rid = " + vOneId)).execute();
  database.command(new OCommandSQL("update UpdateVertexContent content {value : 'val'} where @rid =  " + vTwoId)).execute();
  result=database.query(new OSQLSynchQuery<ODocument>("select sum(outE().size(), inE().size()) from UpdateVertexContent"));
  Assert.assertEquals(result.size(),2);
  for (  ODocument doc : result) {
    Assert.assertEquals(doc.field("sum"),3);
  }
  result=database.query(new OSQLSynchQuery<ODocument>("select from UpdateVertexContent"));
  Assert.assertEquals(result.size(),2);
  for (  ODocument doc : result) {
    Assert.assertEquals(doc.field("value"),"val");
  }
}
