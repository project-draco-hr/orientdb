{
  if (iException instanceof OException)   throw (OException)iException;
  if (!(iException instanceof IOException))   throw new OStorageException(iMessage,iException);
  final long lostConnectionTime=System.currentTimeMillis();
  for (retry=0; retry < connectionRetry; ++retry) {
    try {
      Thread.sleep(connectionRetryDelay);
    }
 catch (    InterruptedException e) {
    }
    try {
      if (OLogManager.instance().isDebugEnabled())       OLogManager.instance().debug(this,"Retrying to connect to remote server #" + retry + "/"+ connectionRetry+ "...");
      openRemoteDatabase();
      OLogManager.instance().info(this,"Connection re-acquired in transparent way after %dms and %d retries: no errors will be thrown at application level",System.currentTimeMillis() - lostConnectionTime,retry + 1);
      return;
    }
 catch (    Throwable t) {
    }
  }
  throw new OStorageException(iMessage,iException);
}
