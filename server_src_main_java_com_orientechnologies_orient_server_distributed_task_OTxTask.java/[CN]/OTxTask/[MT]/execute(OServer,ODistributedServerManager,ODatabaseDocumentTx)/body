{
  ODistributedServerLog.debug(this,iManager.getLocalNodeName(),getNodeSource(),DIRECTION.IN,"committing transaction against db=%s...",database.getName());
  ODatabaseRecordThreadLocal.INSTANCE.set(database);
  try {
    database.begin();
    final List<Object> results=new ArrayList<Object>();
    for (    OAbstractRecordReplicatedTask task : tasks) {
      final Object taskResult=task.execute(iServer,iManager,database);
      results.add(taskResult);
    }
    database.commit();
    for (int i=0; i < results.size(); ++i) {
      final Object o=results.get(i);
      final OAbstractRecordReplicatedTask task=tasks.get(i);
      if (task instanceof OCreateRecordTask) {
        final OCreateRecordTask t=(OCreateRecordTask)task;
        results.set(i,new OPlaceholder(t.getRecord()));
      }
 else       if (task instanceof OUpdateRecordTask) {
        final OUpdateRecordTask t=(OUpdateRecordTask)task;
        results.set(i,t.getVersion());
      }
    }
    return results;
  }
 catch (  ONeedRetryException e) {
    return e;
  }
catch (  OTransactionException e) {
    return e;
  }
catch (  Exception e) {
    OLogManager.instance().error(this,"Error on distributed transaction commit",e);
    return e;
  }
}
