{
  int openPos=iText.indexOf(COLLECTION_BEGIN);
  if (openPos == -1)   return EMPTY_MAP;
  int closePos=iText.indexOf(COLLECTION_END,openPos + 1);
  if (closePos == -1)   return EMPTY_MAP;
  final List<String> entries=smartSplit(iText.substring(openPos + 1,closePos),COLLECTION_SEPARATOR);
  if (entries.size() == 0)   return EMPTY_MAP;
  Map<String,String> map=new HashMap<String,String>();
  List<String> entry;
  for (  String item : entries) {
    if (item != null && item.length() > 0) {
      entry=OStringSerializerHelper.split(item,OStringSerializerHelper.ENTRY_SEPARATOR);
      map.put((String)fieldTypeFromStream(OType.STRING,entry.get(0)),entry.get(1));
    }
  }
  return map;
}
