{
  getDatabase().checkSecurity(ODatabaseSecurityResources.SCHEMA,ORole.PERMISSION_CREATE);
  StringBuilder cmd=null;
  final String key=iClassName.toLowerCase();
  if (classes.containsKey(key))   throw new OSchemaException("Class " + iClassName + " already exists in current database");
  checkClustersAreAbsent(iClusterIds);
  cmd=new StringBuilder("create class ");
  cmd.append(iClassName);
  if (iSuperClass != null) {
    cmd.append(" extends ");
    cmd.append(iSuperClass.getName());
  }
  if (iClusterIds != null) {
    if (iClusterIds.length == 1 && iClusterIds[0] == -1)     cmd.append(" abstract");
 else {
      cmd.append(" cluster ");
      for (int i=0; i < iClusterIds.length; ++i) {
        if (i > 0)         cmd.append(',');
 else         cmd.append(' ');
        cmd.append(iClusterIds[i]);
      }
    }
  }
  final ODatabaseRecord db=getDatabase();
  db.command(new OCommandSQL(cmd.toString())).execute();
  final OClass cls=classes.get(key);
  if (cls == null) {
    getDatabase().reload();
    reload();
    return classes.get(key);
  }
  return cls;
}
