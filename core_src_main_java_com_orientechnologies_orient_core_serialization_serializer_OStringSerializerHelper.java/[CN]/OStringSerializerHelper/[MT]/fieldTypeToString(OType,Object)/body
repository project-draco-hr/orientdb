{
  if (iValue == null)   return null;
  if (iType == null)   iType=OType.EMBEDDED;
switch (iType) {
case STRING:
    return "\"" + encode((String)iValue) + "\"";
case INTEGER:
case FLOAT:
case LONG:
case DOUBLE:
case SHORT:
case BYTE:
case BOOLEAN:
  return String.valueOf(iValue);
case BINARY:
if (iValue instanceof Byte) return new String(new byte[]{((Byte)iValue).byteValue()});
return OBase64Utils.encodeBytes((byte[])iValue);
case DATE:
return String.valueOf(((Date)iValue).getTime());
case LINK:
if (iValue instanceof ORID) return iValue.toString();
 else return ((ORecord<?>)iValue).getIdentity().toString();
case EMBEDDED:
return OStringSerializerAnyStreamable.INSTANCE.toStream(iValue);
}
throw new IllegalArgumentException("Type " + iType + " not supported to convert value: "+ iValue);
}
