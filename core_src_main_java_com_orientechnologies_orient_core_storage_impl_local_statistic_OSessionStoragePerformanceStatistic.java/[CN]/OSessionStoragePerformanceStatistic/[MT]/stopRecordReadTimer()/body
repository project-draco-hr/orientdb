{
  final Component component=componentsStack.peek();
  if (component.type.equals(ComponentType.CLUSTER))   throw new IllegalStateException("Invalid component type , required " + ComponentType.CLUSTER + " but found "+ component.type);
  final long endTs=nanoTimer.getNano();
  final long timeDiff=(endTs - timeStamps.pop());
  ClusterCountersHolder cHolder=(ClusterCountersHolder)countersByComponent.get(component.name);
  if (cHolder == null) {
    cHolder=(ClusterCountersHolder)ComponentType.CLUSTER.newCountersHolder();
    countersByComponent.put(component.name,cHolder);
  }
  cHolder.readRecords++;
  cHolder.timeRecordRead+=timeDiff;
  makeSnapshotIfNeeded(endTs);
}
