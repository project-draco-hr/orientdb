{
  long oldIndexUsage=profiler.getCounter("db.demo.query.indexUsed");
  long oldcompositeIndexUsed=profiler.getCounter("db.demo.query.compositeIndexUsed");
  long oldcompositeIndexUsed2=profiler.getCounter("db.demo.query.compositeIndexUsed.2");
  long oldcompositeIndexUsed21=profiler.getCounter("db.demo.query.compositeIndexUsed.2.1");
  if (oldIndexUsage == -1) {
    oldIndexUsage=0;
  }
  if (oldcompositeIndexUsed == -1) {
    oldcompositeIndexUsed=0;
  }
  if (oldcompositeIndexUsed2 == -1)   oldcompositeIndexUsed2=0;
  if (oldcompositeIndexUsed21 == -1)   oldcompositeIndexUsed21=0;
  final List<ODocument> result=database.command(new OSQLSynchQuery<ODocument>("select * from sqlSelectIndexReuseTestClass where fEmbeddedMapTwo containsKey 'key11'")).execute();
  Assert.assertEquals(result.size(),10);
  final Map<String,Integer> embeddedMap=new HashMap<String,Integer>();
  embeddedMap.put("key11",11);
  embeddedMap.put("key12",12);
  embeddedMap.put("key13",13);
  embeddedMap.put("key14",11);
  for (int i=0; i < 10; i++) {
    final ODocument document=new ODocument();
    document.field("prop8",1);
    document.field("fEmbeddedMapTwo",embeddedMap);
    Assert.assertEquals(containsDocument(result,document),1);
  }
  Assert.assertEquals(profiler.getCounter("db.demo.query.indexUsed"),oldIndexUsage + 1);
  Assert.assertEquals(profiler.getCounter("db.demo.query.compositeIndexUsed"),oldcompositeIndexUsed + 1);
  Assert.assertEquals(profiler.getCounter("db.demo.query.compositeIndexUsed.2"),oldcompositeIndexUsed2 + 1);
  Assert.assertEquals(profiler.getCounter("db.demo.query.compositeIndexUsed.2.1"),oldcompositeIndexUsed21 + 1);
}
