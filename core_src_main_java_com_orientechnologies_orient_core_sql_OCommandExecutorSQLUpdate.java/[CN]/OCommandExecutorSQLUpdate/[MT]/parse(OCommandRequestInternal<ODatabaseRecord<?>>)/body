{
  init(iRequest.getDatabase(),iRequest.getText());
  className=null;
  fieldEntries.clear();
  query=null;
  recordCount=0;
  final StringBuilder word=new StringBuilder();
  int pos=OSQLHelper.nextWord(text,textUpperCase,0,word,true);
  if (pos == -1 || !word.toString().equals(OSQLHelper.KEYWORD_UPDATE))   throw new OCommandSQLParsingException("Keyword " + OSQLHelper.KEYWORD_UPDATE + " not found",text,0);
  int newPos=OSQLHelper.nextWord(text,textUpperCase,pos,word,true);
  if (newPos == -1)   throw new OCommandSQLParsingException("Invalid cluster/class name",text,pos);
  pos=newPos;
  String subjectName=word.toString();
  if (subjectName.startsWith(OSQLHelper.CLASS_PREFIX))   subjectName=subjectName.substring(OSQLHelper.CLASS_PREFIX.length());
  final OClass cls=database.getMetadata().getSchema().getClass(subjectName);
  if (cls == null)   throw new OCommandSQLParsingException("Class " + subjectName + " not found in database",text,pos);
  className=cls.getName();
  newPos=OSQLHelper.nextWord(text,textUpperCase,pos,word,true);
  if (pos == -1 || !word.toString().equals(KEYWORD_SET))   throw new OCommandSQLParsingException("Keyword " + KEYWORD_SET + " not found",text,pos);
  String fieldName;
  String fieldValue;
  while (pos != -1 && (fieldEntries.size() == 0 || word.toString().equals(","))) {
    newPos=OSQLHelper.nextWord(text,textUpperCase,newPos,word,false);
    if (pos == -1)     throw new OCommandSQLParsingException("Field name expected",text,pos);
    pos=newPos;
    fieldName=word.toString();
    newPos=OSQLHelper.nextWord(text,textUpperCase,pos,word,false);
    if (pos == -1 || !word.toString().equals("="))     throw new OCommandSQLParsingException("Character '=' was expected",text,pos);
    pos=newPos;
    newPos=OSQLHelper.nextWord(text,textUpperCase,pos,word,false);
    if (pos == -1)     throw new OCommandSQLParsingException("Value expected",text,pos);
    fieldValue=word.toString();
    if (fieldValue.endsWith(",")) {
      pos=newPos - 1;
      fieldValue=fieldValue.substring(0,fieldValue.length() - 1);
    }
 else     pos=newPos;
    fieldEntries.put(fieldName,OSQLHelper.convertValue(fieldValue));
    newPos=OSQLHelper.nextWord(text,textUpperCase,pos,word,true);
  }
  if (fieldEntries.size() == 0)   throw new OCommandSQLParsingException("Set of entries <field> = <value> is missed. Example: name = 'Bill', salary = 300.2",text,pos);
  String whereCondition=word.toString();
  if (whereCondition.equals(OSQLHelper.KEYWORD_WHERE))   query=database.command(new OSQLAsynchQuery<ODocument>("select from " + className + text.substring(pos),this));
 else   query=database.command(new OSQLAsynchQuery<ODocument>("select from " + className,this));
  return this;
}
