{
  while (target.hasNext()) {
    field=target.next();
    final Object fieldValue;
    if (field instanceof OSQLFilterItem)     fieldValue=((OSQLFilterItem)field).getValue(((OTraverseRecordProcess)command.getContext().peek(-2)).getTarget(),null);
 else     fieldValue=((OTraverseRecordProcess)command.getContext().peek(-2)).getTarget().rawField(field.toString());
    if (fieldValue != null) {
      final OTraverseAbstractProcess<?> subProcess;
      if (fieldValue instanceof Iterator<?> || OMultiValue.isMultiValue(fieldValue)) {
        final Iterator<Object> coll=OMultiValue.getMultiValueIterator(fieldValue);
switch (command.getStrategy()) {
case BREADTH_FIRST:
          subProcess=new OTraverseMultiValueBreadthFirstProcess(command,coll);
        break;
case DEPTH_FIRST:
      subProcess=new OTraverseMultiValueDepthFirstProcess(command,coll);
    break;
default :
  throw new IllegalArgumentException("Traverse strategy not supported: " + command.getStrategy());
}
}
 else if (fieldValue instanceof OIdentifiable && ((OIdentifiable)fieldValue).getRecord() instanceof ODocument) subProcess=new OTraverseRecordProcess(command,(ODocument)((OIdentifiable)fieldValue).getRecord());
 else continue;
final OIdentifiable subValue=subProcess.process();
if (subValue != null) return subValue;
}
}
return drop();
}
