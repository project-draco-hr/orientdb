{
  OrientGraphFactory factory=getGraphFactory();
  OrientBaseGraph g=factory.getNoTx();
  try {
    try {
      g.createEdgeType("some-label");
    }
 catch (    OSchemaException ex) {
      if (!ex.getMessage().contains("exists"))       throw (ex);
      g.command(new OCommandSQL("delete edge some-label")).execute();
    }
    try {
      g.createVertexType("some-v-label");
    }
 catch (    OSchemaException ex) {
      if (!ex.getMessage().contains("exists"))       throw (ex);
      g.command(new OCommandSQL("delete vertex some-v-label")).execute();
    }
  }
  finally {
    g.shutdown();
  }
  OrientGraph t=factory.getTx();
  try {
    Vertex v1=t.addVertex("class:some-v-label");
    Vertex v2=t.addVertex("class:some-v-label");
    v1.setProperty("_id","v1");
    v2.setProperty("_id","v2");
    OrientEdge edge=t.addEdge(null,v1,v2,"some-label");
    edge.setProperty("some","thing");
    t.commit();
    t.shutdown();
    t=factory.getTx();
    assertEquals(2,t.countVertices("some-v-label"));
    assertEquals(1,t.countEdges());
    assertNotNull(t.getVertices("_id","v1").iterator().next());
    assertNotNull(t.getVertices("_id","v2").iterator().next());
    t.commit();
    t.shutdown();
    t=factory.getTx();
    assertEquals(1,t.getVertices("_id","v1").iterator().next().query().labels("some-label").count());
    assertNotNull(t.getVertices("_id","v1").iterator().next().query().labels("some-label").edges().iterator().next());
    t.commit();
  }
  finally {
    t.shutdown();
  }
}
