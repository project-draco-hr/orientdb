{
  OGroupBy jjtn000=new OGroupBy(JJTGROUPBY);
  boolean jjtc000=true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
  OIdentifier lastIdentifier;
  try {
    jj_consume_token(GROUP);
    jj_consume_token(BY);
    lastIdentifier=Identifier();
    jjtn000.items.add(lastIdentifier);
    label_32:     while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case COMMA:
        ;
      break;
default :
    jj_la1[173]=jj_gen;
  break label_32;
}
jj_consume_token(COMMA);
lastIdentifier=Identifier();
jjtn000.items.add(lastIdentifier);
}
jjtree.closeNodeScope(jjtn000,true);
jjtc000=false;
jjtn000.jjtSetLastToken(getToken(0));
{
if (true) return jjtn000;
}
}
 catch (Throwable jjte000) {
if (jjtc000) {
jjtree.clearNodeScope(jjtn000);
jjtc000=false;
}
 else {
jjtree.popNode();
}
if (jjte000 instanceof RuntimeException) {
{
if (true) throw (RuntimeException)jjte000;
}
}
if (jjte000 instanceof ParseException) {
{
if (true) throw (ParseException)jjte000;
}
}
{
if (true) throw (Error)jjte000;
}
}
 finally {
if (jjtc000) {
jjtree.closeNodeScope(jjtn000,true);
jjtn000.jjtSetLastToken(getToken(0));
}
}
throw new Error("Missing return statement in function");
}
