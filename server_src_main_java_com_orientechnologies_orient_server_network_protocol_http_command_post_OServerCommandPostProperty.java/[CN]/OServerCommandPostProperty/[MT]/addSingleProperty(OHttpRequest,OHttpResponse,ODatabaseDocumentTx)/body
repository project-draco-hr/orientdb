{
  String[] urlParts=checkSyntax(iRequest.url,4,"Syntax error: property/<database>/<class-name>/<property-name>/[<property-type>]/[<link-type>]");
  iRequest.data.commandInfo="Create property";
  iRequest.data.commandDetail=urlParts[2] + "." + urlParts[3];
  if (db.getMetadata().getSchema().getClass(urlParts[2]) == null)   throw new IllegalArgumentException("Invalid class '" + urlParts[2] + "'");
  final OClass cls=db.getMetadata().getSchema().getClass(urlParts[2]);
  final String propertyName=urlParts[3];
  final OType propertyType=urlParts.length > 4 ? OType.valueOf(urlParts[4]) : OType.STRING;
switch (propertyType) {
case LINKLIST:
case LINKMAP:
case LINKSET:
case LINK:
{
      OType linkType=null;
      OClass linkClass=null;
      if (urlParts.length >= 6) {
        try {
          linkType=OType.valueOf(urlParts[5]);
        }
 catch (        IllegalArgumentException ex) {
        }
        if (linkType == null) {
          linkClass=db.getMetadata().getSchema().getClass(urlParts[5]);
          if (linkClass == null) {
            throw new IllegalArgumentException("linked type declared as " + urlParts[5] + " can be either a Type or a Class, use the JSON document usage instead. See 'http://code.google.com/p/orient/w/edit/OrientDB_REST'");
          }
        }
      }
      if (linkType != null) {
        final OProperty prop=cls.createProperty(propertyName,propertyType,linkType);
      }
 else       if (linkClass != null) {
        final OProperty prop=cls.createProperty(propertyName,propertyType,linkClass);
      }
 else {
        final OProperty prop=cls.createProperty(propertyName,propertyType);
      }
    }
  break;
default :
final OProperty prop=cls.createProperty(propertyName,propertyType);
break;
}
iResponse.send(OHttpUtils.STATUS_CREATED_CODE,OHttpUtils.STATUS_CREATED_DESCRIPTION,OHttpUtils.CONTENT_TEXT_PLAIN,cls.properties().size(),null);
return false;
}
