{
  database.getMetadata().getSchema().createClass("Thing");
  List result=database.command(new OCommandSQL("select from cluster:internal")).execute();
  List result0=database.command(new OCommandSQL("select from cluster:internal where \"\\u005C\" == \"\\u005C\"")).execute();
  Assert.assertEquals(result.size(),result0.size());
  ODocument document0=database.command(new OCommandSQL("insert into Thing set value = \"\\u005C\"")).execute();
  Assert.assertEquals("\\",document0.field("value"));
  ODocument document1=database.command(new OCommandSQL("insert into Thing set value = \"\\\\\"")).execute();
  Assert.assertEquals("\\",document1.field("value"));
  List list1=database.command(new OCommandSQL("select from cluster:internal where \"\\u005C\" == \"\\\\\"")).execute();
  Assert.assertEquals(result.size(),list1.size());
  try {
    ODocument document2=database.command(new OCommandSQL("insert into Thing set value = \"\\\"")).execute();
    Assert.assertTrue(false);
  }
 catch (  Exception e) {
    Assert.assertTrue(true);
  }
  try {
    List list2=database.command(new OCommandSQL("select from cluster:internal where \"\\u005C\" == \"\\\"")).execute();
    Assert.assertTrue(false);
  }
 catch (  Exception e) {
    Assert.assertTrue(true);
  }
  try {
    List list3=database.command(new OCommandSQL("select from cluster:internal where \"\\\" == \"\\u005C\"")).execute();
    Assert.assertTrue(false);
  }
 catch (  Exception e) {
    Assert.assertTrue(true);
  }
}
