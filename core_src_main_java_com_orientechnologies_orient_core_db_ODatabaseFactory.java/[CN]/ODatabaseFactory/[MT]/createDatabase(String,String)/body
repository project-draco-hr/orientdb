{
  if (iType.equals("graph"))   return new ODatabaseDocumentTx(url){
    @Override public <THISDB extends ODatabase>THISDB create(){
      final THISDB db=super.create();
      checkSchema();
      return db;
    }
    private void checkSchema(){
      OScenarioThreadLocal.INSTANCE.set(OScenarioThreadLocal.RUN_MODE.RUNNING_DISTRIBUTED);
      try {
        getMetadata().getSchema().getOrCreateClass(OMVRBTreeRIDProvider.PERSISTENT_CLASS_NAME);
        OClass vertexBaseClass=getMetadata().getSchema().getClass("V");
        OClass edgeBaseClass=getMetadata().getSchema().getClass("E");
        if (vertexBaseClass == null) {
          vertexBaseClass=getMetadata().getSchema().createClass("V");
          vertexBaseClass.setOverSize(2);
        }
        if (edgeBaseClass == null) {
          edgeBaseClass=getMetadata().getSchema().createClass("E");
          edgeBaseClass.setShortName("E");
        }
      }
  finally {
        OScenarioThreadLocal.INSTANCE.set(OScenarioThreadLocal.RUN_MODE.DEFAULT);
      }
    }
  }
;
  return new ODatabaseDocumentTx(url);
}
