{
  ORecordInternal<?> record;
  ORawBuffer recordBuffer;
  long positionInPhyCluster;
  if (iLockEntireCluster)   cluster.lock();
  try {
    final OClusterPositionIterator iterator=cluster.absoluteIterator(iBeginRange,iEndRange);
    final ORecordId rid=new ORecordId(cluster.getId());
    final ODatabaseRecord database=ioRecord.getDatabase();
    ORecordInternal<?> recordToCheck=null;
    while (iterator.hasNext()) {
      positionInPhyCluster=iterator.next();
      if (positionInPhyCluster == -1)       continue;
      rid.clusterPosition=positionInPhyCluster;
      record=database.getTransaction().getEntry(rid);
      if (record == null)       record=database.getLevel1Cache().findRecord(rid);
      if (record != null && record.getRecordType() != ODocument.RECORD_TYPE)       continue;
      try {
        if (record == null) {
          recordBuffer=readRecord(cluster,rid,!iLockEntireCluster);
          if (recordBuffer == null)           continue;
          if (recordBuffer.recordType != ODocument.RECORD_TYPE)           continue;
          if (ioRecord.getRecordType() != recordBuffer.recordType) {
            final ORecordInternal<?> newRecord=ORecordFactory.newInstance(recordBuffer.recordType);
            newRecord.setDatabase(ioRecord.getDatabase());
            ioRecord=newRecord;
          }
 else           ioRecord.reset();
          ioRecord.setVersion(recordBuffer.version);
          ioRecord.setIdentity(cluster.getId(),positionInPhyCluster);
          ioRecord.fromStream(recordBuffer.buffer);
          recordToCheck=ioRecord;
        }
 else         recordToCheck=record;
        if (!iListener.foreach(recordToCheck))         break;
      }
 catch (      OCommandExecutionException e) {
        throw e;
      }
catch (      Exception e) {
        OLogManager.instance().error(this,"Error on loading record %s. Cause: %s",recordToCheck.getIdentity(),e);
      }
    }
  }
  finally {
    if (iLockEntireCluster)     cluster.unlock();
  }
  return ioRecord;
}
