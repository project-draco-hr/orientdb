{
  ODurablePage.TrackMode trackMode=getTrackMode();
  pinnedStateEntry=diskCache.allocateNewPage(fileId);
  OCachePointer statePointer=pinnedStateEntry.getCachePointer();
  statePointer.acquireExclusiveLock();
  try {
    OPaginatedClusterState paginatedClusterState=new OPaginatedClusterState(statePointer.getDataPointer(),trackMode);
    diskCache.pinPage(pinnedStateEntry);
    paginatedClusterState.setSize(0);
    paginatedClusterState.setRecordsSize(0);
    for (int i=0; i < FREE_LIST_SIZE; i++)     paginatedClusterState.setFreeListPage(i,-1);
    logPageChanges(paginatedClusterState,pinnedStateEntry.getPageIndex(),true);
    pinnedStateEntry.markDirty();
  }
  finally {
    statePointer.releaseExclusiveLock();
    diskCache.release(pinnedStateEntry);
  }
}
