{
  final StringBuilder buffer=new StringBuilder();
  final ArrayList<String> parts=new ArrayList<String>();
  int startSeparatorAt=-1;
  if (iSource != null && !iSource.isEmpty()) {
    final char[] source=iSource.toCharArray();
    while ((beginIndex=parse(source,buffer,beginIndex,endIndex,iRecordSeparator,iStringSeparatorExtended,iConsiderBraces,iConsiderSets,startSeparatorAt,considerBags,iJumpChars)) > -1) {
      if (beginIndex > -1) {
        final char lastSeparator=source[beginIndex - 1];
        for (int i=0; i < iRecordSeparator.length; ++i)         if (iRecordSeparator[i] == lastSeparator) {
          if (iRecordSeparatorIncludeAsPrefix[i]) {
            buffer.append(lastSeparator);
          }
          break;
        }
      }
      if (buffer.length() > 0) {
        parts.add(buffer.toString());
        buffer.setLength(0);
      }
      startSeparatorAt=beginIndex;
      if (beginIndex > -1) {
        final char lastSeparator=source[beginIndex - 1];
        for (int i=0; i < iRecordSeparator.length; ++i)         if (iRecordSeparator[i] == lastSeparator) {
          if (iRecordSeparatorIncludeAsPostfix[i]) {
            beginIndex--;
            startSeparatorAt=beginIndex + 1;
          }
          break;
        }
      }
    }
    if (buffer.length() > 0)     parts.add(buffer.toString());
  }
  return parts;
}
