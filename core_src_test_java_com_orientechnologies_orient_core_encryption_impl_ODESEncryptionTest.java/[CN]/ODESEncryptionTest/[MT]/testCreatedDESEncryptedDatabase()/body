{
  OFileUtils.deleteRecursively(new File("target/" + DBNAME_DATABASETEST));
  final ODatabase db=new ODatabaseDocumentTx("plocal:target/" + DBNAME_DATABASETEST);
  db.setProperty(OGlobalConfiguration.STORAGE_ENCRYPTION_METHOD.getKey(),"des");
  db.setProperty(OGlobalConfiguration.STORAGE_ENCRYPTION_KEY.getKey(),"T1JJRU5UREJfSVNfQ09PTA==");
  db.create();
  try {
    db.command(new OCommandSQL("create class TestEncryption")).execute();
    db.command(new OCommandSQL("insert into TestEncryption set name = 'Jay'")).execute();
    List result=db.query(new OSQLSynchQuery<ODocument>("select from TestEncryption"));
    Assert.assertEquals(result.size(),1);
    db.close();
    db.open("admin","admin");
    db.close();
    Orient.instance().getStorage(DBNAME_DATABASETEST).close(true,false);
    db.setProperty(OGlobalConfiguration.STORAGE_ENCRYPTION_KEY.getKey(),"T1JJRU5UREJfSVNfQ09PTA==");
    db.open("admin","admin");
    result=db.query(new OSQLSynchQuery<ODocument>("select from TestEncryption"));
    Assert.assertEquals(result.size(),1);
    db.close();
    Orient.instance().getStorage(DBNAME_DATABASETEST).close(true,false);
    db.setProperty(OGlobalConfiguration.STORAGE_ENCRYPTION_KEY.getKey(),"invalidPassword");
    try {
      db.open("admin","admin");
      Assert.fail();
    }
 catch (    OSecurityException e) {
      Assert.assertTrue(true);
    }
 finally {
      db.activateOnCurrentThread();
      db.close();
      Orient.instance().getStorage(DBNAME_DATABASETEST).close(true,false);
    }
    db.setProperty(OGlobalConfiguration.STORAGE_ENCRYPTION_KEY.getKey(),"T1JJRU5UREJfSVNfQ09PTA=-");
    try {
      db.open("admin","admin");
      Assert.fail();
    }
 catch (    OSecurityException e) {
      Assert.assertTrue(true);
    }
 finally {
      db.activateOnCurrentThread();
      db.close();
      Orient.instance().getStorage(DBNAME_DATABASETEST).close(true,false);
    }
    db.setProperty(OGlobalConfiguration.STORAGE_ENCRYPTION_KEY.getKey(),"T1JJRU5UREJfSVNfQ09PTA==");
    db.open("admin","admin");
    result=db.query(new OSQLSynchQuery<ODocument>("select from TestEncryption"));
    Assert.assertEquals(result.size(),1);
  }
  finally {
    db.activateOnCurrentThread();
    db.drop();
  }
}
