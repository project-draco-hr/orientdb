{
  acquireExclusiveLock();
  try {
    final OIndexDefinition indexDefinition=idx.getDefinition();
    if (indexDefinition == null || indexDefinition.getClassName() == null)     return;
    Map<OMultiKey,Set<OIndex<?>>> map=classPropertyIndex.get(indexDefinition.getClassName().toLowerCase());
    if (map == null) {
      return;
    }
    map=new HashMap<OMultiKey,Set<OIndex<?>>>(map);
    final int paramCount=indexDefinition.getParamCount();
    for (int i=1; i <= paramCount; i++) {
      final List<String> fields=normalizeFieldNames(indexDefinition.getFields().subList(0,i));
      final OMultiKey multiKey=new OMultiKey(fields);
      Set<OIndex<?>> indexSet=map.get(multiKey);
      if (indexSet == null)       continue;
      indexSet=new HashSet<OIndex<?>>(indexSet);
      indexSet.remove(idx);
      if (indexSet.isEmpty()) {
        map.remove(multiKey);
      }
 else {
        map.put(multiKey,indexSet);
      }
    }
    final Locale locale=getServerLocale();
    if (map.isEmpty())     classPropertyIndex.remove(indexDefinition.getClassName().toLowerCase(locale));
 else     classPropertyIndex.put(indexDefinition.getClassName().toLowerCase(locale),copyPropertyMap(map));
  }
  finally {
    releaseExclusiveLock();
  }
}
