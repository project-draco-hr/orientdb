{
  final OPhysicalPosition position=new OPhysicalPosition();
  int bufferPosition=dataBufferOffset + entriesOffset + index * entreeSize;
  position.clusterPosition=clusterPositionFactory.fromStream(dataBuffer,bufferPosition);
  bufferPosition+=clusterPositionFactory.getSerializedSize();
  position.dataSegmentId=OIntegerSerializer.INSTANCE.deserializeNative(dataBuffer,bufferPosition);
  bufferPosition+=OIntegerSerializer.INT_SIZE;
  position.dataSegmentPos=OLongSerializer.INSTANCE.deserializeNative(dataBuffer,bufferPosition);
  bufferPosition+=OLongSerializer.LONG_SIZE;
  position.recordType=dataBuffer[bufferPosition];
  bufferPosition++;
  position.recordVersion=OVersionFactory.instance().createVersion();
  position.recordVersion.getSerializer().fastReadFrom(dataBuffer,bufferPosition,position.recordVersion);
  bufferPosition+=OVersionFactory.instance().getVersionSize();
  position.recordSize=OIntegerSerializer.INSTANCE.deserializeNative(dataBuffer,bufferPosition);
  return position;
}
