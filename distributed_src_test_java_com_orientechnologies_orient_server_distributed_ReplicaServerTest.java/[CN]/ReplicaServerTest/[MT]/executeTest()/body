{
  for (int s=0; s < SERVERS; ++s) {
    OrientGraphFactory factory=new OrientGraphFactory("plocal:target/server" + s + "/databases/"+ getDatabaseName());
    OrientGraphNoTx g=factory.getNoTx();
    try {
      System.out.println("Creating vertex class Client" + s + " against server "+ g+ "...");
      OrientVertexType t=g.createVertexType("Client" + s);
      System.out.println("Creating vertex class Knows" + s + " against server "+ g+ "...");
      g.createEdgeType("Knows" + s);
      Assert.assertTrue(s == 0);
    }
 catch (    Exception e) {
      Assert.assertTrue(s > 0);
    }
 finally {
      g.shutdown();
    }
  }
  for (int s=0; s < SERVERS; ++s) {
    System.out.println("Add vertices on server " + s + "...");
    OrientGraphFactory factory=new OrientGraphFactory("plocal:target/server" + s + "/databases/"+ getDatabaseName());
    OrientGraphNoTx g=factory.getNoTx();
    try {
      final OrientVertex v=g.addVertex("class:" + "Client" + s);
      Assert.assertTrue(s == 0);
    }
 catch (    Exception e) {
      Assert.assertTrue(s > 0);
    }
 finally {
      g.shutdown();
    }
  }
  for (int s=0; s < SERVERS; ++s) {
    System.out.println("Add vertices in TX on server " + s + "...");
    OrientGraphFactory factory=new OrientGraphFactory("plocal:target/server" + s + "/databases/"+ getDatabaseName());
    OrientGraph g=factory.getTx();
    try {
      final OrientVertex v=g.addVertex("class:" + "Client" + s);
      g.commit();
      Assert.assertTrue(s == 0);
    }
 catch (    Exception e) {
      Assert.assertTrue(s > 0);
    }
 finally {
      g.shutdown();
    }
  }
}
