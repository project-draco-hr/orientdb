{
  Thread.currentThread().setName("TransactionalDeleterDeleter - " + Thread.currentThread().getId());
  ODatabaseDocumentTx database=new ODatabaseDocumentTx(URL);
  database.open("admin","admin");
  try {
    ODatabaseRecordThreadLocal.INSTANCE.set(database);
    countDownLatch.await();
    int number=transactionalDeleteCounter.getAndIncrement();
    while (number < TRANSACTIONAL_DOCUMENT_COUNT) {
      while (number > transactionalCreateCounter.get())       ;
      try {
        List<ODocument> execute;
        if (number % 10 == 0)         System.out.println(Thread.currentThread() + " : before search cycle (delete) " + number);
        do {
          execute=database.command(new OSQLSynchQuery<Object>("select * from " + TRANSACTIONAL_WORD + STUDENT_CLASS_NAME+ " where counter2 = ?")).execute(number);
        }
 while (execute == null || execute.isEmpty());
        if (number % 10 == 0)         System.out.println(Thread.currentThread() + " : after search cycle (delete)" + number);
        database.begin();
        ODocument document=execute.get(0);
        document.delete();
        database.commit();
        deletedInTransaction.add(number);
        if (number % 10 == 0)         System.out.println(Thread.currentThread() + " : document deleted " + number);
        number=transactionalDeleteCounter.getAndIncrement();
      }
 catch (      OConcurrentModificationException e) {
        System.out.println(Thread.currentThread() + " : exception while deleted " + number);
      }
    }
    return null;
  }
 catch (  Exception e) {
    e.printStackTrace();
    throw e;
  }
catch (  Throwable e) {
    e.printStackTrace();
    return null;
  }
 finally {
    System.out.println(Thread.currentThread() + "************************CLOSE************************************");
    database.close();
  }
}
