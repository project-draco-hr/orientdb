{
  final StringBuilder buffer=new StringBuilder();
  int openPos=iText.indexOf(iCollectionBegin,iStartPosition);
  if (openPos == -1)   return -1;
  int currentPos, deep;
  for (currentPos=openPos + 1, deep=1; deep > 0; currentPos++) {
    if (currentPos >= iText.length()) {
      return -1;
    }
    char c=iText.charAt(currentPos);
    if (buffer.length() == 0 && c == ' ') {
      continue;
    }
    if (c == iCollectionBegin) {
      buffer.append(c);
      deep++;
    }
 else     if (c == iCollectionEnd) {
      if (deep > 1)       buffer.append(c);
      deep--;
    }
 else     if (c == iCollectionSeparator) {
      if (deep > 1) {
        buffer.append(c);
      }
 else {
        iCollection.add(buffer.toString().trim());
        buffer.setLength(0);
      }
    }
 else     buffer.append(c);
  }
  if (buffer.length() > 0)   iCollection.add(buffer.toString().trim());
  return --currentPos;
}
