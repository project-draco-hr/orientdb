{
  database.command(new OCommandSQL("create class V1 extends V")).execute();
  database.command(new OCommandSQL("create class E1 extends E")).execute();
  database.getMetadata().getSchema().reload();
  ODocument v1=database.command(new OCommandSQL("create vertex")).execute();
  Assert.assertEquals(v1.getClassName(),OGraphDatabase.VERTEX_ALIAS);
  ODocument v2=database.command(new OCommandSQL("create vertex V1")).execute();
  Assert.assertEquals(v2.getClassName(),"V1");
  ODocument v3=database.command(new OCommandSQL("create vertex set brand = 'fiat'")).execute();
  Assert.assertEquals(v3.getClassName(),OGraphDatabase.VERTEX_ALIAS);
  Assert.assertEquals(v3.field("brand"),"fiat");
  ODocument v4=database.command(new OCommandSQL("create vertex V1 set brand = 'fiat',name = 'wow'")).execute();
  Assert.assertEquals(v4.getClassName(),"V1");
  Assert.assertEquals(v4.field("brand"),"fiat");
  Assert.assertEquals(v4.field("name"),"wow");
  ODocument v5=database.command(new OCommandSQL("create vertex V1 cluster default")).execute();
  Assert.assertEquals(v5.getClassName(),"V1");
  Assert.assertEquals(v5.getIdentity().getClusterId(),database.getDefaultClusterId());
  List<Object> edges=database.command(new OCommandSQL("create edge from " + v1.getIdentity() + " to "+ v2.getIdentity())).execute();
  Assert.assertFalse(edges.isEmpty());
  edges=database.command(new OCommandSQL("create edge E1 from " + v1.getIdentity() + " to "+ v3.getIdentity())).execute();
  Assert.assertFalse(edges.isEmpty());
  edges=database.command(new OCommandSQL("create edge from " + v1.getIdentity() + " to "+ v4.getIdentity()+ " set weight = 3")).execute();
  Assert.assertFalse(edges.isEmpty());
  ODocument e3=((OIdentifiable)edges.get(0)).getRecord();
  Assert.assertEquals(e3.getClassName(),OGraphDatabase.EDGE_CLASS_NAME);
  Assert.assertEquals(e3.field("out"),v1);
  Assert.assertEquals(e3.field("in"),v4);
  Assert.assertEquals(e3.field("weight"),3);
  edges=database.command(new OCommandSQL("create edge E1 from " + v2.getIdentity() + " to "+ v3.getIdentity()+ " set weight = 10")).execute();
  Assert.assertFalse(edges.isEmpty());
  ODocument e4=((OIdentifiable)edges.get(0)).getRecord();
  Assert.assertEquals(e4.getClassName(),"E1");
  Assert.assertEquals(e4.field("out"),v2);
  Assert.assertEquals(e4.field("in"),v3);
  Assert.assertEquals(e4.field("weight"),10);
  edges=database.command(new OCommandSQL("create edge e1 cluster default from " + v3.getIdentity() + " to "+ v5.getIdentity()+ " set weight = 17")).execute();
  Assert.assertFalse(edges.isEmpty());
  ODocument e5=((OIdentifiable)edges.get(0)).getRecord();
  Assert.assertEquals(e5.getClassName(),"E1");
  Assert.assertEquals(e5.getIdentity().getClusterId(),database.getDefaultClusterId());
}
