{
  String buildDirectory=System.getProperty("buildDirectory");
  if (buildDirectory == null)   buildDirectory=".";
  databaseDocumentTx=new ODatabaseDocumentTx("local:" + buildDirectory + "/localHashTableTest");
  if (databaseDocumentTx.exists()) {
    databaseDocumentTx.open("admin","admin");
    databaseDocumentTx.drop();
  }
  databaseDocumentTx.create();
  buffer=new OLRUCache(400 * 1024 * 1024,ODirectMemoryFactory.INSTANCE.directMemory(),OHashIndexBucket.MAX_BUCKET_SIZE_BYTES,(OStorageLocal)databaseDocumentTx.getStorage(),false);
  OMurmurHash3HashFunction<Integer> murmurHash3HashFunction=new OMurmurHash3HashFunction<Integer>();
  murmurHash3HashFunction.setValueSerializer(OIntegerSerializer.INSTANCE);
  localHashTable=new OLocalHashTable<Integer,String>(OAbstractLocalHashIndex.METADATA_CONFIGURATION_FILE_EXTENSION,OAbstractLocalHashIndex.TREE_STATE_FILE_EXTENSION,OAbstractLocalHashIndex.BUCKET_FILE_EXTENSION,murmurHash3HashFunction);
  localHashTable.create("localHashTableTest",OIntegerSerializer.INSTANCE,OStringSerializer.INSTANCE,(OStorageLocal)databaseDocumentTx.getStorage());
}
