{
  cluster=iCluster;
  storageName=iStorageName;
  storage=openStorage(iStorageName);
  final String logDirectory=OSystemVariableResolver.resolveSystemVariables(OServerMain.server().getDatabaseDirectory() + "/" + iStorageName);
  log=new ODatabaseJournal(storage,logDirectory);
  for (  ORecordId rid : log.getUncommittedOperations()) {
    try {
      final ORawBuffer record=(ORawBuffer)iCluster.routeOperation2Node(rid,new OReadRecordDistributedTask(iCluster.getLocalNodeId(),iStorageName,rid));
      if (record == null)       storage.deleteRecord(rid,-1,0,null);
 else       storage.updateRecord(rid,record.buffer,record.version,record.recordType,0,null);
    }
 catch (    ExecutionException e) {
      OLogManager.instance().warn(this,"DISTRIBUTED Error on acquiring uncommitted record %s from other servers. The database could be unaligned with others!",e,rid);
    }
  }
}
