{
  acquireSharedLock();
  try {
    BucketSearchResult bucketSearchResult=findBucket(key);
    if (bucketSearchResult.itemIndex < 0)     return null;
    OBonsaiBucketPointer bucketPointer=bucketSearchResult.getLastPathItem();
    OCacheEntry keyBucketCacheEntry=diskCache.load(fileId,bucketPointer.getPageIndex(),false);
    try {
      OSBTreeBonsaiBucket<K,V> keyBucket=new OSBTreeBonsaiBucket<K,V>(keyBucketCacheEntry,bucketPointer.getPageOffset(),keySerializer,valueSerializer,ODurablePage.TrackMode.NONE);
      return keyBucket.getEntry(bucketSearchResult.itemIndex).value;
    }
  finally {
      diskCache.release(keyBucketCacheEntry);
    }
  }
 catch (  IOException e) {
    throw new OSBTreeException("Error during retrieving  of sbtree with name " + name,e);
  }
 finally {
    releaseSharedLock();
  }
}
