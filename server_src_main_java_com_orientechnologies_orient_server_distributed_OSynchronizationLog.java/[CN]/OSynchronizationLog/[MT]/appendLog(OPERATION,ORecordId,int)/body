{
  lock.acquireExclusiveLock();
  try {
    final long serial=totalEntries();
    if (limit > -1 && serial > limit)     return -1;
    pendingLogs++;
    if (pendingLogs > 1)     OLogManager.instance().warn(this,"Journaled operation #%d as %s against %s/%s record %s. Remain to synchronize: %d",serial,iOperation,nodeId,databaseName,iRID,pendingLogs);
 else     OLogManager.instance().debug(this,"Journaled operation #%d as %s against %s/%s record %s",serial,iOperation,nodeId,databaseName,iRID);
    int offset=file.allocateSpace(RECORD_SIZE);
    file.writeByte(offset,(byte)iOperation.ordinal());
    offset+=OBinaryProtocol.SIZE_BYTE;
    file.writeShort(offset,(short)iRID.clusterId);
    offset+=OBinaryProtocol.SIZE_SHORT;
    file.writeLong(offset,iRID.clusterPosition);
    offset+=OBinaryProtocol.SIZE_LONG;
    file.writeInt(offset,iVersion);
    offset+=OBinaryProtocol.SIZE_INT;
    file.writeLong(offset,System.currentTimeMillis() + manager.getTimeOffset());
    if (synchEnabled)     file.synch();
    return serial;
  }
  finally {
    lock.releaseExclusiveLock();
  }
}
