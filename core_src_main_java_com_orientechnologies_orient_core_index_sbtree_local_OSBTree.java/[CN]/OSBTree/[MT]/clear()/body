{
  startOperation();
  try {
    final OAtomicOperation atomicOperation;
    try {
      atomicOperation=startAtomicOperation(true);
    }
 catch (    IOException e) {
      throw OException.wrapException(new OSBTreeException("Error during sbtree clear",this),e);
    }
    acquireExclusiveLock();
    try {
      truncateFile(atomicOperation,fileId);
      if (nullPointerSupport)       truncateFile(atomicOperation,nullBucketFileId);
      OCacheEntry cacheEntry=loadPage(atomicOperation,fileId,ROOT_INDEX,false);
      if (cacheEntry == null) {
        cacheEntry=addPage(atomicOperation,fileId);
      }
      cacheEntry.acquireExclusiveLock();
      try {
        OSBTreeBucket<K,V> rootBucket=new OSBTreeBucket<K,V>(cacheEntry,true,keySerializer,keyTypes,valueSerializer,getChanges(atomicOperation,cacheEntry));
        rootBucket.setTreeSize(0);
      }
  finally {
        cacheEntry.releaseExclusiveLock();
        releasePage(atomicOperation,cacheEntry);
      }
      endAtomicOperation(false,null);
    }
 catch (    IOException e) {
      rollback(e);
      throw OException.wrapException(new OSBTreeException("Error during clear of sbtree with name " + getName(),this),e);
    }
catch (    RuntimeException e) {
      rollback(e);
      throw e;
    }
 finally {
      releaseExclusiveLock();
    }
  }
  finally {
    completeOperation();
  }
}
