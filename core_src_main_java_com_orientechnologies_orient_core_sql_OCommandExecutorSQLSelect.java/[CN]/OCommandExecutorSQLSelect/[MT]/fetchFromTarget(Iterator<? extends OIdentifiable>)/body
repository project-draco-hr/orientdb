{
  fetchLimit=getQueryFetchLimit();
  final long startFetching=System.currentTimeMillis();
  try {
    if (parallel) {
      parallelExec(iTarget);
    }
 else {
      int queryScanThresholdWarning=OGlobalConfiguration.QUERY_SCAN_THRESHOLD_TIP.getValueAsInteger();
      for (int browsed=0; iTarget.hasNext(); browsed++) {
        final OIdentifiable next=iTarget.next();
        if (next == null)         break;
        final ORID identity=next.getIdentity();
        if (uniqueResult != null) {
          if (uniqueResult.contains(identity))           continue;
          if (identity.isValid())           uniqueResult.add(identity);
        }
        if (!executeSearchRecord(next))         break;
        if (queryScanThresholdWarning > 0 && browsed > queryScanThresholdWarning && compiledFilter != null) {
          OLogManager.instance().info(this,"[TIP] Query '%s' fetched more than %d records: to speed up the execution, create an index or change the query to use an existent index",parserText,queryScanThresholdWarning);
          queryScanThresholdWarning=0;
        }
      }
    }
  }
  finally {
    context.setVariable("fetchingFromTargetElapsed",(System.currentTimeMillis() - startFetching));
  }
}
