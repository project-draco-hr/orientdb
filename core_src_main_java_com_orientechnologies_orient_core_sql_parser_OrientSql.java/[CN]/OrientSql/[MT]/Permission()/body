{
  OPermission jjtn000=new OPermission(JJTPERMISSION);
  boolean jjtc000=true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
  try {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case CREATE:
      jj_consume_token(CREATE);
    jjtn000.permission="CREATE";
  break;
case READ:
jj_consume_token(READ);
jjtn000.permission="READ";
break;
case UPDATE:
jj_consume_token(UPDATE);
jjtn000.permission="UPDATE";
break;
case DELETE:
jj_consume_token(DELETE);
jjtn000.permission="DELETE";
break;
case ALL:
jj_consume_token(ALL);
jjtn000.permission="ALL";
break;
case NONE:
jj_consume_token(NONE);
jjtn000.permission="NONE";
break;
default :
jj_la1[336]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
jjtree.closeNodeScope(jjtn000,true);
jjtc000=false;
jjtn000.jjtSetLastToken(getToken(0));
{
if (true) return jjtn000;
}
}
  finally {
if (jjtc000) {
jjtree.closeNodeScope(jjtn000,true);
jjtn000.jjtSetLastToken(getToken(0));
}
}
throw new Error("Missing return statement in function");
}
