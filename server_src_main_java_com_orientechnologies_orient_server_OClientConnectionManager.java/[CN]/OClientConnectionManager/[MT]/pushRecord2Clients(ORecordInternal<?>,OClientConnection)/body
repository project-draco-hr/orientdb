{
  acquireSharedLock();
  try {
    final String dbName=iRecord.getDatabase().getName();
    for (    OClientConnection c : connections.values()) {
      if (c != iExcludeConnection) {
        final ONetworkProtocolBinary p=(ONetworkProtocolBinary)c.protocol;
        final OChannelBinary channel=(OChannelBinary)p.getChannel();
        if (c.database != null && c.database.getName().equals(dbName)) synchronized (c) {
          try {
            channel.acquireExclusiveLock();
            try {
              channel.writeByte(OChannelBinaryProtocol.PUSH_DATA);
              channel.writeInt(Integer.MIN_VALUE);
              channel.writeByte(OChannelBinaryProtocol.REQUEST_PUSH_RECORD);
              p.writeIdentifiable(iRecord);
            }
  finally {
              channel.releaseExclusiveLock();
            }
          }
 catch (          IOException e) {
            OLogManager.instance().warn(this,"Cannot push record to the client %s",c.getRemoteAddress());
          }
        }
      }
    }
  }
  finally {
    releaseSharedLock();
  }
}
