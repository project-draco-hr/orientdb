{
  if (root == null) {
    root=createEntry(key,value);
    size=1;
    modCount++;
    if (listener != null)     listener.signalTreeChanged(this);
    return null;
  }
  OTreeMapEntry<K,V> parent=getEntry(key,true);
  if (pageItemFound)   return parent.setValue(value);
  if (parent == null)   parent=root;
  if (parent.getFreeSpace() > 0) {
    parent.insert(pageIndex,key,value);
  }
 else {
    final OTreeMapEntry<K,V> newEntry=createEntry(parent,false);
    if (pageIndex < parent.getPageSplitItems())     parent.insert(pageIndex,key,value);
 else     newEntry.insert(pageIndex - parent.getPageSplitItems(),key,value);
    OTreeMapEntry<K,V> prevNode=parent.getRight();
    if (prevNode != null)     newEntry.setRight(prevNode);
    parent.setRight(newEntry);
    fixAfterInsertion(newEntry);
    modCount++;
  }
  size++;
  if (listener != null)   listener.signalTreeChanged(this);
  return null;
}
