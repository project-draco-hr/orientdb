{
  if (iOutVertex == null)   throw new IllegalArgumentException("iOutVertex is null");
  if (iInVertex == null)   throw new IllegalArgumentException("iInVertex is null");
  checkEdgeClass(iClassName);
  final boolean safeMode=beginBlock();
  try {
    iInVertex.setDatabase(this);
    iOutVertex.setDatabase(this);
    final ODocument edge=new ODocument(this,iClassName != null ? iClassName : EDGE_CLASS_NAME).setOrdered(true);
    edge.field(EDGE_FIELD_OUT,iOutVertex);
    edge.field(EDGE_FIELD_IN,iInVertex);
    OMVRBTreeRIDSet out=((OMVRBTreeRIDSet)iOutVertex.field(VERTEX_FIELD_OUT));
    if (out == null) {
      out=new OMVRBTreeRIDSet(iOutVertex);
      iOutVertex.field(VERTEX_FIELD_OUT,out);
    }
    out.add(edge);
    OMVRBTreeRIDSet in=((OMVRBTreeRIDSet)iInVertex.field(VERTEX_FIELD_IN));
    if (in == null) {
      in=new OMVRBTreeRIDSet(iInVertex);
      iInVertex.field(VERTEX_FIELD_IN,in);
    }
    in.add(edge);
    if (safeMode) {
      save(edge);
      commitBlock(safeMode);
    }
    return edge;
  }
 catch (  RuntimeException e) {
    rollbackBlock(safeMode);
    throw e;
  }
}
