{
  final StringBuilder buffer=new StringBuilder();
  write(buffer,CURRENT_VERSION);
  write(buffer,name);
  write(buffer,schemaRecordId);
  write(buffer,dictionaryRecordId);
  write(buffer,indexMgrRecordId);
  write(buffer,localeLanguage);
  write(buffer,localeCountry);
  write(buffer,dateFormat);
  write(buffer,dateTimeFormat);
  write(buffer,timeZone.getID());
  write(buffer,charset);
  phySegmentToStream(buffer,fileTemplate);
  write(buffer,clusters.size());
  for (  OStorageClusterConfiguration c : clusters) {
    if (c == null) {
      write(buffer,-1);
      continue;
    }
    write(buffer,c.getId());
    write(buffer,c.getName());
    write(buffer,c.getDataSegmentId());
    if (c instanceof OStoragePhysicalClusterConfigurationLocal) {
      write(buffer,"p");
      phySegmentToStream(buffer,(OStoragePhysicalClusterConfigurationLocal)c);
      OStorageFileConfiguration holeFile=((OStoragePhysicalClusterConfigurationLocal)c).getHoleFile();
      if (holeFile == null)       write(buffer,"e");
 else       write(buffer,"f");
      if (holeFile != null)       fileToStream(buffer,holeFile);
    }
 else     if (c instanceof OStorageMemoryClusterConfiguration) {
      write(buffer,"m");
    }
 else     if (c instanceof OStorageEHClusterConfiguration) {
      write(buffer,"h");
    }
  }
  write(buffer,dataSegments.size());
  for (  OStorageDataConfiguration d : dataSegments) {
    if (d == null) {
      write(buffer,-1);
      continue;
    }
    write(buffer,d.id);
    write(buffer,d.name);
    phySegmentToStream(buffer,d);
    fileToStream(buffer,d.holeFile);
  }
  fileToStream(buffer,txSegment);
  write(buffer,txSegment.isSynchRecord());
  write(buffer,txSegment.isSynchTx());
  write(buffer,properties.size());
  for (  OStorageEntryConfiguration e : properties)   entryToStream(buffer,e);
  buffer.append("|");
  return buffer.toString().getBytes();
}
