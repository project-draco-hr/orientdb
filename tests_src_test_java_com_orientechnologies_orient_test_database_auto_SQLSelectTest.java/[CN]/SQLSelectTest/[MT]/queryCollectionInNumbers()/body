{
  record.reset();
  record.setClassName("Animal");
  record.field("name","Cat");
  Collection<Integer> rates=new HashSet<Integer>();
  rates.add(100);
  rates.add(200);
  record.field("rates",rates);
  record.save();
  List<ODocument> result=executeQuery("select * from cluster:animal where rates in [100,200]",database);
  boolean found=false;
  for (int i=0; i < result.size() && !found; ++i) {
    record=result.get(i);
    Assert.assertTrue(record.getClassName().equalsIgnoreCase("animal"));
    Assert.assertNotNull(record.field("rates"));
    rates=record.field("rates");
    for (    Integer rate : rates) {
      if (rate == 100 || rate == 105) {
        found=true;
        break;
      }
    }
  }
  Assert.assertTrue(found);
  result=executeQuery("select * from cluster:animal where rates in [200,10333]",database);
  found=false;
  for (int i=0; i < result.size() && !found; ++i) {
    record=result.get(i);
    Assert.assertTrue(record.getClassName().equalsIgnoreCase("animal"));
    Assert.assertNotNull(record.field("rates"));
    rates=record.field("rates");
    for (    Integer rate : rates) {
      if (rate == 100 || rate == 105) {
        found=true;
        break;
      }
    }
  }
  Assert.assertTrue(found);
  result=executeQuery("select * from cluster:animal where rates in [500]",database);
  Assert.assertEquals(result.size(),0);
  result=executeQuery("select * from cluster:animal where rates in 500",database);
  Assert.assertEquals(result.size(),0);
  result=executeQuery("select * from cluster:animal where rates in [100]",database);
  Assert.assertEquals(result.size(),1);
  record.delete();
}
