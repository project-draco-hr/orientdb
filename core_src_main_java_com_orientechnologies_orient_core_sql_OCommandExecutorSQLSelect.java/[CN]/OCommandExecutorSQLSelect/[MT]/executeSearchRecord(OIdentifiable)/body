{
  if (Thread.interrupted())   throw new OCommandExecutionException("The select execution has been interrupted");
  if (!context.checkTimeout())   return false;
  final OStorage.LOCKING_STRATEGY lockingStrategy=context.getVariable("$locking") != null ? (OStorage.LOCKING_STRATEGY)context.getVariable("$locking") : OStorage.LOCKING_STRATEGY.DEFAULT;
  ORecordInternal<?> record=null;
  try {
    record=id instanceof ORecordInternal<?> ? (ORecordInternal<?>)id : getDatabase().load(id.getIdentity(),null,false,false,lockingStrategy);
    context.updateMetric("recordReads",+1);
    if (record == null || record.getRecordType() != ODocument.RECORD_TYPE)     return true;
    context.updateMetric("documentReads",+1);
    if (filter(record))     if (!handleResult(record,true))     return false;
  }
  finally {
    if (lockingStrategy == OStorage.LOCKING_STRATEGY.KEEP_EXCLUSIVE_LOCK) {
      if (record != null) {
        ((OStorageEmbedded)getDatabase().getStorage()).releaseWriteLock(record.getIdentity());
      }
    }
  }
  return true;
}
