{
  final OAtomicOperation atomicOperation;
  try {
    atomicOperation=startAtomicOperation();
  }
 catch (  IOException e) {
    throw new OSBTreeException("Error during sbtree creation.",e);
  }
  acquireExclusiveLock();
  try {
    this.diskCache=storage.getDiskCache();
    this.keySerializer=keySerializer;
    this.valueSerializer=valueSerializer;
    if (isFileExists(atomicOperation,name + dataFileExtension,diskCache))     this.fileId=openFile(atomicOperation,name + dataFileExtension,diskCache);
 else     this.fileId=addFile(atomicOperation,name + dataFileExtension,diskCache);
    this.name=name;
    initAfterCreate(atomicOperation);
    endAtomicOperation(false);
  }
 catch (  IOException e) {
    rollback();
    throw new OSBTreeException("Error creation of sbtree with name" + name,e);
  }
catch (  Exception e) {
    rollback();
    throw new OSBTreeException("Error creation of sbtree with name" + name,e);
  }
 finally {
    releaseExclusiveLock();
  }
}
