{
  atomicOperationsManager.acquireReadLock(this);
  try {
    acquireSharedLock();
    try {
      OAtomicOperation atomicOperation=atomicOperationsManager.getCurrentOperation();
      final BucketSearchResult searchResult=lastItem(atomicOperation);
      if (searchResult == null)       return null;
      final OCacheEntry cacheEntry=loadPage(atomicOperation,fileId,searchResult.getLastPathItem(),false);
      try {
        OSBTreeBucket<K,V> bucket=new OSBTreeBucket<K,V>(cacheEntry,keySerializer,keyTypes,valueSerializer,getChangesTree(atomicOperation,cacheEntry));
        return bucket.getKey(searchResult.itemIndex);
      }
  finally {
        releasePage(atomicOperation,cacheEntry);
      }
    }
  finally {
      releaseSharedLock();
    }
  }
 catch (  IOException e) {
    throw new OSBTreeException("Error during finding last key in sbtree [" + name + "]");
  }
 finally {
    atomicOperationsManager.releaseReadLock(this);
  }
}
