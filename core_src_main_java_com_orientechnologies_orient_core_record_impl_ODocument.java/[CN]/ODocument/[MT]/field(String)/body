{
  RET value=this.rawField(iFieldName);
  final OType t=fieldType(iFieldName);
  if (!iFieldName.startsWith("@") && _lazyLoad && value instanceof ORID&& (((ORID)value).isPersistent() || ((ORID)value).isNew())&& ODatabaseRecordThreadLocal.INSTANCE.isDefined()) {
    RET newValue=(RET)getDatabase().load((ORID)value);
    if (newValue != null) {
      value=newValue;
      if (!iFieldName.contains(".")) {
        removeCollectionChangeListener(iFieldName,_fieldValues.get(iFieldName));
        removeCollectionTimeLine(iFieldName);
        _fieldValues.put(iFieldName,value);
        addCollectionChangeListener(iFieldName,value);
      }
    }
  }
  if (t != null) {
    Object newValue=null;
    if (t == OType.BINARY && value instanceof String)     newValue=OStringSerializerHelper.getBinaryContent(value);
 else     if (t == OType.DATE && value instanceof Long)     newValue=new Date((Long)value);
 else     if ((t == OType.EMBEDDEDSET || t == OType.LINKSET) && value instanceof List)     newValue=ODocumentHelper.convertField(this,iFieldName,Set.class,value);
 else     if ((t == OType.EMBEDDEDLIST || t == OType.LINKLIST) && value instanceof Set)     newValue=ODocumentHelper.convertField(this,iFieldName,List.class,value);
    if (newValue != null) {
      removeCollectionChangeListener(iFieldName,null);
      removeCollectionTimeLine(iFieldName);
      _fieldValues.put(iFieldName,newValue);
      addCollectionChangeListener(iFieldName,newValue);
      value=(RET)newValue;
    }
  }
  return value;
}
