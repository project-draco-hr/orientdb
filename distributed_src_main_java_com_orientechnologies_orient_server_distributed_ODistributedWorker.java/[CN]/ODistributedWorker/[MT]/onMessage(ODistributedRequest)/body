{
  final String senderNodeName=manager.getNodeNameById(iRequest.getId().getNodeId());
  final ORemoteTask task=iRequest.getTask();
  if (ODistributedServerLog.isDebugEnabled())   ODistributedServerLog.debug(this,localNodeName,senderNodeName,DIRECTION.IN,"Received request: %s",iRequest);
  Serializable responsePayload;
  OSecurityUser origin=null;
  try {
    task.setNodeSource(senderNodeName);
    waitNodeIsOnline();
    initDatabaseInstance();
    if (database != null) {
      database.activateOnCurrentThread();
      origin=database.getUser();
      try {
        if (iRequest.getUserRID() != null && iRequest.getUserRID().isValid() && (lastUser == null || !(lastUser.getIdentity()).equals(iRequest.getUserRID()))) {
          lastUser=database.getMetadata().getSecurity().getUser(iRequest.getUserRID());
          database.setUser(lastUser);
        }
 else         origin=null;
      }
 catch (      Throwable ex) {
        OLogManager.instance().error(this,"Failed on user switching database. " + ex.getMessage());
      }
    }
    for (int retry=1; ; ++retry) {
      responsePayload=manager.executeOnLocalNode(iRequest.getId(),iRequest.getTask(),database);
      if (responsePayload instanceof OModificationOperationProhibitedException) {
        try {
          ODistributedServerLog.info(this,localNodeName,senderNodeName,DIRECTION.IN,"Database is frozen, waiting and retrying. Request %s (retry=%d, worker=%d)",iRequest,retry,id);
          Thread.sleep(1000);
        }
 catch (        InterruptedException e) {
        }
      }
 else {
        if (retry > 1)         ODistributedServerLog.info(this,localNodeName,senderNodeName,DIRECTION.IN,"Request %s succeed after retry=%d",iRequest,retry);
        break;
      }
    }
  }
 catch (  RuntimeException e) {
    sendResponseBack(iRequest,e);
    throw e;
  }
 finally {
    if (database != null && !database.isClosed()) {
      database.activateOnCurrentThread();
      if (!database.isClosed()) {
        database.rollback();
        database.getLocalCache().clear();
        if (origin != null)         database.setUser(origin);
      }
    }
  }
  if (running)   sendResponseBack(iRequest,responsePayload);
}
