{
  super(iName,iFilePath,iMode);
  File f=new File(url);
  if (f.exists() || !exists(f.getParent())) {
    storagePath=OSystemVariableResolver.resolveSystemVariables(OFileUtils.getPath(new File(url).getPath()));
  }
 else {
    storagePath=OSystemVariableResolver.resolveSystemVariables(OFileUtils.getPath(new File(url).getParent()));
  }
  storagePath=OIOUtils.getPathFromDatabaseName(storagePath);
  variableParser=new OStorageVariableParser(storagePath);
  configuration=new OStorageConfigurationSegment(this);
  txManager=new OStorageLocalTxExecuter(this,configuration.txSegment);
  DELETE_MAX_RETRIES=OGlobalConfiguration.FILE_MMAP_FORCE_RETRY.getValueAsInteger();
  DELETE_WAIT_TIME=OGlobalConfiguration.FILE_MMAP_FORCE_DELAY.getValueAsInteger();
  final String[] clustersToSync=OGlobalConfiguration.NON_TX_CLUSTERS_SYNC_IMMEDIATELY.getValueAsString().trim().split("\\s*,\\s*");
  clustersToSyncImmediately.addAll(Arrays.asList(clustersToSync));
  installProfilerHooks();
  long diskCacheSize=OGlobalConfiguration.DISK_CACHE_SIZE.getValueAsLong() * 1024 * 1024;
  long writeCacheSize=(long)Math.floor((((double)OGlobalConfiguration.DISK_WRITE_CACHE_PART.getValueAsInteger()) / 100.0) * diskCacheSize);
  long readCacheSize=diskCacheSize - writeCacheSize;
  diskCache=new OReadWriteDiskCache(name,readCacheSize,writeCacheSize,OGlobalConfiguration.DISK_CACHE_PAGE_SIZE.getValueAsInteger() * 1024,OGlobalConfiguration.DISK_WRITE_CACHE_PAGE_TTL.getValueAsLong() * 1000,OGlobalConfiguration.DISK_WRITE_CACHE_PAGE_FLUSH_INTERVAL.getValueAsInteger(),this,null,false,true);
}
