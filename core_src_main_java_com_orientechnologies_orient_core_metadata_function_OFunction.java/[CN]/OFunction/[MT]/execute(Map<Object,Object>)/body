{
  final long start=Orient.instance().getProfiler().startChrono();
  Object result;
  while (true) {
    try {
      final OCommandExecutorScript command=new OCommandExecutorScript();
      command.parse(new OCommandScript(getLanguage(),getCode()));
      result=command.execute(iArgs);
      break;
    }
 catch (    ORetryQueryException e) {
      continue;
    }
  }
  if (Orient.instance().getProfiler().isRecording())   Orient.instance().getProfiler().stopChrono("db." + ODatabaseRecordThreadLocal.INSTANCE.get().getName() + ".function.execute","Time to execute a function",start,"db.*.function.execute");
  return result;
}
