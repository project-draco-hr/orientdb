{
  final OTransactionIndexChanges indexChanges=database.getTransaction().getIndexChanges(delegate.getName());
  if (indexChanges == null)   return super.getEntriesBetween(rangeFrom,rangeTo);
  final OIndexDefinition indexDefinition=getDefinition();
  Object compRangeFrom=rangeFrom;
  Object compRangeTo=rangeTo;
  if (indexDefinition instanceof OCompositeIndexDefinition || indexDefinition.getParamCount() > 1) {
    int keySize=indexDefinition.getParamCount();
    final OCompositeKey fullKeyFrom=new OCompositeKey((Comparable)rangeFrom);
    final OCompositeKey fullKeyTo=new OCompositeKey((Comparable)rangeTo);
    while (fullKeyFrom.getKeys().size() < keySize)     fullKeyFrom.addKey(new OAlwaysLessKey());
    while (fullKeyTo.getKeys().size() < keySize)     fullKeyTo.addKey(new OAlwaysGreaterKey());
    compRangeFrom=fullKeyFrom;
    compRangeTo=fullKeyTo;
  }
  final Collection<OTransactionIndexChangesPerKey> rangeChanges=indexChanges.getChangesForKeys(compRangeFrom,compRangeTo);
  if (rangeChanges.isEmpty())   return super.getEntriesBetween(rangeFrom,rangeTo);
  final Map<Object,OIdentifiable> keyValueEntries=new HashMap<Object,OIdentifiable>();
  if (indexChanges.cleared) {
    for (    OTransactionIndexChangesPerKey changesPerKey : rangeChanges)     keyValueEntries.put(changesPerKey.key,null);
  }
 else {
    final Collection<ODocument> storedEntries=super.getEntriesBetween(rangeFrom,rangeTo);
    for (    ODocument entry : storedEntries)     keyValueEntries.put(entry.field("key"),entry.<OIdentifiable>field("rid"));
    for (    OTransactionIndexChangesPerKey changesPerKey : rangeChanges)     if (!keyValueEntries.containsKey(changesPerKey.key))     keyValueEntries.put(changesPerKey.key,null);
  }
  final Map<Object,OIdentifiable> keyValuesResult=filterIndexChanges(indexChanges,keyValueEntries,null);
  final Set<ODocument> result=new ODocumentFieldsHashSet();
  for (  Map.Entry<Object,OIdentifiable> keyResultEntry : keyValuesResult.entrySet()) {
    final ODocument document=new ODocument();
    document.field("key",keyResultEntry.getKey());
    document.field("rid",keyResultEntry.getValue().getIdentity());
    document.unsetDirty();
    result.add(document);
  }
  return result;
}
