{
  final ODatabaseRecord database=getDatabase();
  database.checkSecurity(ODatabaseSecurityResources.COMMAND,ORole.PERMISSION_READ);
  init(((OCommandRequestText)iRequest).getText());
  query=null;
  recordCount=0;
  StringBuilder word=new StringBuilder();
  int pos=nextWord(parserText,parserTextUpperCase,0,word,true);
  if (pos == -1 || !word.toString().equals(OCommandExecutorSQLDelete.KEYWORD_DELETE))   throw new OCommandSQLParsingException("Keyword " + OCommandExecutorSQLDelete.KEYWORD_DELETE + " not found. Use "+ getSyntax(),parserText,0);
  int oldPos=pos;
  pos=nextWord(parserText,parserTextUpperCase,oldPos,word,true);
  if (pos == -1 || !word.toString().equals(KEYWORD_FROM))   throw new OCommandSQLParsingException("Keyword " + KEYWORD_FROM + " not found. Use "+ getSyntax(),parserText,oldPos);
  oldPos=pos;
  pos=nextWord(parserText,parserTextUpperCase,oldPos,word,true);
  if (pos == -1)   throw new OCommandSQLParsingException("Invalid subject name. Expected cluster, class or index. Use " + getSyntax(),parserText,oldPos);
  final String subjectName=word.toString();
  if (subjectName.startsWith(OCommandExecutorSQLAbstract.INDEX_PREFIX)) {
    indexName=subjectName.substring(OCommandExecutorSQLAbstract.INDEX_PREFIX.length());
    parsedTarget=OSQLEngine.getInstance().parseTarget(parserText.substring(oldPos),getContext(),KEYWORD_WHERE);
    if (!parsedTarget.parserIsEnded()) {
      parserSetCurrentPosition(parsedTarget.parserGetCurrentPosition() + oldPos + 1);
      parserNextWord(true);
      if (parserGetLastWord().equalsIgnoreCase(KEYWORD_WHERE))       compiledFilter=OSQLEngine.getInstance().parseCondition(parserText.substring(parserGetCurrentPosition()),getContext(),KEYWORD_WHERE);
    }
 else     parserSetCurrentPosition(-1);
  }
 else {
    query=database.command(new OSQLAsynchQuery<ODocument>("select from " + subjectName + " "+ parserText.substring(pos),this));
  }
  return this;
}
