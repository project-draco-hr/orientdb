{
  if (iRecord == null)   return;
  if (projections != null || groupByFields != null && !groupByFields.isEmpty()) {
    if (groupedResult == null) {
      iRecord=ORuntimeResult.getProjectionResult(resultCount,projections,context,iRecord);
      if (iRecord == null)       return;
    }
 else {
      final ODocument doc=(ODocument)iRecord.getRecord();
      Object fieldValue=null;
      if (groupByFields != null && !groupByFields.isEmpty()) {
        if (groupByFields.size() > 1) {
          final Object[] fields=new Object[groupByFields.size()];
          for (int i=0; i < groupByFields.size(); ++i) {
            final String field=groupByFields.get(i);
            if (field.startsWith("$"))             fields[i]=context.getVariable(field);
 else             fields[i]=doc.field(field);
          }
          fieldValue=fields;
        }
 else {
          final String field=groupByFields.get(0);
          if (field != null) {
            if (field.startsWith("$"))             fieldValue=context.getVariable(field);
 else             fieldValue=doc.field(field);
          }
        }
      }
      getProjectionGroup(fieldValue).applyRecord(iRecord);
      return;
    }
  }
  if (orderedFields == null && expandTarget == null) {
    if (request.getResultListener() != null)     request.getResultListener().result(iRecord);
  }
 else {
    if (tempResult == null)     tempResult=new ArrayList<OIdentifiable>();
    ((Collection<OIdentifiable>)tempResult).add(iRecord);
  }
}
