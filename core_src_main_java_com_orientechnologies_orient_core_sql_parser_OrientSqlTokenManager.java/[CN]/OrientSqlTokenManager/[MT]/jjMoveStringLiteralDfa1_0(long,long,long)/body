{
  try {
    curChar=input_stream.readChar();
  }
 catch (  java.io.IOException e) {
    jjStopStringLiteralDfa_0(0,active0,active1,active2);
    return 1;
  }
switch (curChar) {
case 38:
    if ((active2 & 0x8L) != 0L)     return jjStopAtPos(1,131);
  break;
case 42:
if ((active0 & 0x80L) != 0L) return jjStartNfaWithStates_0(1,7,0);
break;
case 43:
if ((active2 & 0x10L) != 0L) return jjStopAtPos(1,132);
break;
case 45:
if ((active2 & 0x20L) != 0L) return jjStopAtPos(1,133);
break;
case 46:
if ((active2 & 0x8000000L) != 0L) {
jjmatchedKind=155;
jjmatchedPos=1;
}
return jjMoveStringLiteralDfa2_0(active0,0L,active1,0L,active2,0x4000000L);
case 60:
if ((active2 & 0x4000L) != 0L) {
jjmatchedKind=142;
jjmatchedPos=1;
}
return jjMoveStringLiteralDfa2_0(active0,0L,active1,0L,active2,0x800000L);
case 61:
if ((active1 & 0x80000000000000L) != 0L) return jjStopAtPos(1,119);
 else if ((active1 & 0x4000000000000000L) != 0L) return jjStopAtPos(1,126);
 else if ((active1 & 0x8000000000000000L) != 0L) return jjStopAtPos(1,127);
 else if ((active2 & 0x1L) != 0L) return jjStopAtPos(1,128);
 else if ((active2 & 0x8000L) != 0L) return jjStopAtPos(1,143);
 else if ((active2 & 0x10000L) != 0L) return jjStopAtPos(1,144);
 else if ((active2 & 0x20000L) != 0L) return jjStopAtPos(1,145);
 else if ((active2 & 0x40000L) != 0L) return jjStopAtPos(1,146);
 else if ((active2 & 0x80000L) != 0L) return jjStopAtPos(1,147);
 else if ((active2 & 0x100000L) != 0L) return jjStopAtPos(1,148);
 else if ((active2 & 0x200000L) != 0L) return jjStopAtPos(1,149);
 else if ((active2 & 0x400000L) != 0L) return jjStopAtPos(1,150);
break;
case 62:
if ((active2 & 0x2L) != 0L) return jjStopAtPos(1,129);
return jjMoveStringLiteralDfa2_0(active0,0L,active1,0L,active2,0x3000000L);
case 97:
return jjMoveStringLiteralDfa2_0(active0,0L,active1,0x20000000000L,active2,0L);
case 114:
return jjMoveStringLiteralDfa2_0(active0,0L,active1,0x10000000000L,active2,0L);
case 124:
if ((active2 & 0x4L) != 0L) return jjStopAtPos(1,130);
break;
default :
break;
}
return jjStartNfa_0(0,active0,active1,active2);
}
