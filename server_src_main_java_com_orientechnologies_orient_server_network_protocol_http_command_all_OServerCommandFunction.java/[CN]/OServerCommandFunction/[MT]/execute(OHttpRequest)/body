{
  final String[] parts=checkSyntax(iRequest.url,3,"Syntax error: function/<database>/<name>[/param]*");
  iRequest.data.commandInfo="Execute a function";
  ODatabaseDocumentTx db=null;
  Object result=null;
  try {
    db=getProfiledDatabaseInstance(iRequest);
    final OFunction f=db.getMetadata().getFunctionManager().getFunction(parts[2]);
    if (f == null)     throw new IllegalArgumentException("Function '" + parts[2] + "' is not configured");
    final Object[] args=new Object[parts.length - 3];
    for (int i=3; i < parts.length; ++i)     args[i - 3]=parts[i];
    result=f.execute(args);
    if (result != null) {
      if (result instanceof ODocument && ((ODocument)result).isEmbedded()) {
        sendTextContent(iRequest,OHttpUtils.STATUS_OK_CODE,OHttpUtils.STATUS_OK_DESCRIPTION,null,OHttpUtils.CONTENT_JSON,((ODocument)result).toJSON(),true,null);
      }
 else       sendTextContent(iRequest,OHttpUtils.STATUS_OK_CODE,OHttpUtils.STATUS_OK_DESCRIPTION,null,OHttpUtils.CONTENT_TEXT_PLAIN,result,true,null);
    }
 else     sendTextContent(iRequest,OHttpUtils.STATUS_OK_NOCONTENT_CODE,"",null,OHttpUtils.CONTENT_TEXT_PLAIN,null,true,null);
  }
 catch (  OCommandScriptException e) {
    final StringBuilder msg=new StringBuilder();
    for (Exception currentException=e; currentException != null; currentException=(Exception)currentException.getCause()) {
      if (msg.length() > 0)       msg.append("\n");
      msg.append(currentException.getMessage());
    }
    sendTextContent(iRequest,OHttpUtils.STATUS_BADREQ_CODE,OHttpUtils.STATUS_BADREQ_DESCRIPTION,null,OHttpUtils.CONTENT_TEXT_PLAIN,msg.toString(),true,null);
  }
 finally {
    if (db != null)     OSharedDocumentDatabase.release(db);
  }
  return false;
}
