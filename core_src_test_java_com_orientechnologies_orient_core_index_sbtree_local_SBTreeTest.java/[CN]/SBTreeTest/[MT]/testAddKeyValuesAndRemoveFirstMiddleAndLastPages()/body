{
  for (int i=0; i < 12055; i++)   sbTree.put(i,new ORecordId(i % 32000,OClusterPositionFactory.INSTANCE.valueOf(i)));
  for (int i=0; i < 1730; i++)   sbTree.remove(i);
  for (int i=3440; i < 6900; i++)   sbTree.remove(i);
  for (int i=8600; i < 12055; i++)   sbTree.remove(i);
  Assert.assertEquals((int)sbTree.firstKey(),1730);
  Assert.assertEquals((int)sbTree.lastKey(),8599);
  Collection<OIdentifiable> result=sbTree.getValuesMinor(7200,true,-1);
  Set<OIdentifiable> identifiables=new HashSet<OIdentifiable>(result);
  for (int i=7200; i >= 6900; i--) {
    boolean removed=identifiables.remove(new ORecordId(i % 32000,OClusterPositionFactory.INSTANCE.valueOf(i)));
    Assert.assertTrue(removed);
  }
  for (int i=3439; i >= 1730; i--) {
    boolean removed=identifiables.remove(new ORecordId(i % 32000,OClusterPositionFactory.INSTANCE.valueOf(i)));
    Assert.assertTrue(removed);
  }
  Assert.assertTrue(identifiables.isEmpty());
  result=sbTree.getValuesMajor(1740,true,-1);
  identifiables=new HashSet<OIdentifiable>(result);
  for (int i=1740; i < 3440; i++) {
    boolean removed=identifiables.remove(new ORecordId(i % 32000,OClusterPositionFactory.INSTANCE.valueOf(i)));
    Assert.assertTrue(removed);
  }
  for (int i=6900; i < 8600; i++) {
    boolean removed=identifiables.remove(new ORecordId(i % 32000,OClusterPositionFactory.INSTANCE.valueOf(i)));
    Assert.assertTrue(removed);
  }
  Assert.assertTrue(identifiables.isEmpty());
  result=sbTree.getValuesBetween(1740,true,7200,true,-1);
  identifiables=new HashSet<OIdentifiable>(result);
  for (int i=1740; i < 3440; i++) {
    boolean removed=identifiables.remove(new ORecordId(i % 32000,OClusterPositionFactory.INSTANCE.valueOf(i)));
    Assert.assertTrue(removed);
  }
  for (int i=6900; i <= 7200; i++) {
    boolean removed=identifiables.remove(new ORecordId(i % 32000,OClusterPositionFactory.INSTANCE.valueOf(i)));
    Assert.assertTrue(removed);
  }
  Assert.assertTrue(identifiables.isEmpty());
}
