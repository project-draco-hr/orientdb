{
  try {
    final OStorage storage=newDb.getStorage();
    storage.callInLock(new Callable<Object>(){
      @Override public Object call() throws Exception {
        final int dataId=storage.getDataSegmentIdByName(OMetadataDefault.DATASEGMENT_INDEX_NAME);
        if (dataId > -1)         storage.dropDataSegment(OMetadataDefault.DATASEGMENT_INDEX_NAME);
        final int clusterId=storage.getClusterIdByName(OMetadataDefault.CLUSTER_INDEX_NAME);
        if (clusterId > -1)         storage.dropCluster(clusterId,false);
        storage.addDataSegment(OMetadataDefault.DATASEGMENT_INDEX_NAME);
        storage.addCluster(OClusterLocal.TYPE,OMetadataDefault.CLUSTER_INDEX_NAME,null,OMetadataDefault.DATASEGMENT_INDEX_NAME,true);
        return null;
      }
    }
,true);
  }
 catch (  IllegalArgumentException ex) {
    OLogManager.instance().info(this,"Creating 'index' data-segment to store all the index content...");
    newDb.addDataSegment(OMetadataDefault.DATASEGMENT_INDEX_NAME,null);
    final OCluster indexCluster=newDb.getStorage().getClusterById(newDb.getStorage().getClusterIdByName(OMetadataDefault.CLUSTER_INDEX_NAME));
    try {
      indexCluster.set(ATTRIBUTES.DATASEGMENT,OMetadataDefault.DATASEGMENT_INDEX_NAME);
      OLogManager.instance().info(this,"Data-segment 'index' create correctly. Indexes will store content into this data-segment");
    }
 catch (    IOException e) {
      OLogManager.instance().error(this,"Error changing data segment for cluster 'index'",e);
    }
  }
}
