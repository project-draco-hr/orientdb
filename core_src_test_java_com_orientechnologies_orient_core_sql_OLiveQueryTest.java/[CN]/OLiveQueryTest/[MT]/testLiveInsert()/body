{
  OLiveCommandExecutorSQLFactory.init();
  ODatabaseDocumentTx db=new ODatabaseDocumentTx("memory:OLiveQueryTest");
  db.setCurrentDatabaseInThreadLocal();
  db.registerHook(new OLiveQueryHook(db));
  db.create();
  try {
    db.getMetadata().getSchema().createClass("test");
    db.getMetadata().getSchema().createClass("test2");
    MyLiveQueryListener listener=new MyLiveQueryListener();
    db.query(new OLiveQuery<ODocument>("live select from test",listener));
    db.command(new OCommandSQL("insert into test set name = 'foo', surname = 'bar'")).execute();
    db.command(new OCommandSQL("insert into test set name = 'foo', surname = 'baz'")).execute();
    db.command(new OCommandSQL("insert into test2 set name = 'foo'"));
    try {
      Thread.sleep(3000);
    }
 catch (    InterruptedException e) {
      e.printStackTrace();
    }
    Assert.assertEquals(listener.ops.size(),2);
    for (    ORecordOperation doc : listener.ops) {
      Assert.assertEquals(doc.type,ORecordOperation.CREATED);
      Assert.assertEquals(((ODocument)doc.record).field("name"),"foo");
    }
  }
  finally {
    db.drop();
  }
}
