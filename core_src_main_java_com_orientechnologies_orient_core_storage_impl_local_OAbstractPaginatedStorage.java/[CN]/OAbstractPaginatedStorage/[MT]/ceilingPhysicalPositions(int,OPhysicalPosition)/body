{
  if (clusterId == -1)   return null;
  checkOpeness();
  stateLock.acquireReadLock();
  try {
    dataLock.acquireSharedLock();
    try {
      checkOpeness();
      final OCluster cluster=getClusterById(clusterId);
      return cluster.ceilingPositions(physicalPosition);
    }
 catch (    IOException ioe) {
      throw new OStorageException("Cluster Id " + clusterId + " is invalid in storage '"+ name+ '\'',ioe);
    }
 finally {
      dataLock.releaseSharedLock();
    }
  }
  finally {
    stateLock.releaseReadLock();
  }
}
