{
  final byte[] emptyBuffer=new byte[bucketBufferSize];
  final OEHBucket emptyBucket=new OEHBucket(maxLevelDepth,emptyBuffer,0,keySize,entreeSize,clusterPositionFactory);
  final OMultiFileSegment zeroLevelFile=filesMetadata[0].getFile();
  zeroLevelFile.allocateSpace(bucketBufferSize * maxLevelSize);
  for (long filePosition=0; filePosition < bucketBufferSize * maxLevelSize; filePosition+=bucketBufferSize)   saveBucket(0,filePosition,emptyBucket);
  filesMetadata[0].setBucketsCount(maxLevelSize);
  final long[] rootTree=new long[maxLevelSize];
  for (int i=0; i < maxLevelSize; i++)   rootTree[i]=createBucketPointer(i * bucketBufferSize,0);
  hashTree=new long[1][];
  hashTree[0]=rootTree;
  nodesMetadata=new OEHNodeMetadata[1];
  nodesMetadata[0]=new OEHNodeMetadata((byte)0,(byte)0,(byte)maxLevelDepth);
  size=0;
  hashTreeSize=1;
}
