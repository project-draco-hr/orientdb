{
  do {
    if (iTimeout == -1)     iTimeout=DEFAULT_TIMEOUT;
    try {
      if (!lockRead.tryLock(iTimeout,TimeUnit.MILLISECONDS))       throw new IOException("Timeout on reading network response");
    }
 catch (    InterruptedException e) {
      throw new IOException("Error on reading network response",e);
    }
    if (!channelRead) {
      channelRead=true;
      try {
        currentStatus=readByte();
        currentTxId=readInt();
      }
 catch (      IOException e) {
        lockRead.unlock();
        throw e;
      }
    }
    if (currentTxId == iRequesterId)     break;
    lockRead.unlock();
synchronized (this) {
      try {
        wait(1000);
      }
 catch (      InterruptedException e) {
        Thread.currentThread().interrupt();
      }
    }
  }
 while (true);
  handleStatus(currentStatus,currentTxId);
}
