{
  if (am.size() + a1in.size() >= maxSize) {
    if (a1in.size() > K_IN) {
      OCacheEntry removedFromAInEntry=a1in.removeLast();
      evictFileContent(removedFromAInEntry.fileId,removedFromAInEntry.pageIndex,removedFromAInEntry.dataPointer,removedFromAInEntry.isDirty,removedFromAInEntry.managedExternally);
      removedFromAInEntry.dataPointer=ODirectMemory.NULL_POINTER;
      a1out.addFirst(removedFromAInEntry);
      if (a1out.size() > K_OUT) {
        OCacheEntry removedEntry=a1out.removeLast();
        Set<Long> pageEntries=filesPages.get(removedEntry.fileId);
        pageEntries.remove(removedEntry.pageIndex);
      }
    }
 else {
      OCacheEntry removedEntry=am.removeLast();
      evictFileContent(removedEntry.fileId,removedEntry.pageIndex,removedEntry.dataPointer,removedEntry.isDirty,removedEntry.managedExternally);
      Set<Long> pageEntries=filesPages.get(removedEntry.fileId);
      pageEntries.remove(removedEntry.pageIndex);
    }
  }
}
