{
  int returnCode=0;
  OLogManager.instance().setConsoleLevel("SEVERE");
  ODatabaseUtils.createDatabase(databaseIdentifier);
  consoleProgressWriter.printMessage(String.format("Created database [%s].",databaseIdentifier.getUrl()));
  try {
    new Thread(consoleProgressWriter).start();
    consoleProgressWriter.printMessage(String.format("Starting workload %s - concurrencyLevel=%d...",workload.getName(),threadsNumber));
    final long startTime=System.currentTimeMillis();
    workload.execute(threadsNumber,databaseIdentifier);
    final long endTime=System.currentTimeMillis();
    consoleProgressWriter.sendShutdown();
    System.out.println(String.format("\nTotal execution time: %.3f secs",((float)(endTime - startTime) / 1000f)));
    System.out.println(workload.getFinalResult());
    if (outputResultFile != null)     writeFile(workload);
  }
 catch (  Exception ex) {
    System.err.println("\nAn error has occurred while running the stress test: " + ex.getMessage());
    returnCode=1;
  }
 finally {
    if (databaseIdentifier.getMode() != OMode.MEMORY) {
      ODatabaseUtils.dropDatabase(databaseIdentifier);
      consoleProgressWriter.printMessage(String.format("\nDropped database [%s].",databaseIdentifier.getUrl()));
    }
  }
  return returnCode;
}
