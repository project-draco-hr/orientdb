{
  for (  Entry<String,String> storageEntry : serverInstance.getAvailableStorageNames().entrySet()) {
    final String databaseName=storageEntry.getKey();
    if (messageService.getDatabase(databaseName) == null) {
      ODistributedServerLog.info(this,nodeName,null,DIRECTION.NONE,"opening database '%s'...",databaseName);
      ODistributedConfiguration cfg=getDatabaseConfiguration(databaseName);
      final boolean hotAlignment=cfg.isHotAlignment();
      if (!getConfigurationMap().containsKey(CONFIG_DATABASE_PREFIX + databaseName)) {
        ODocument cfgDoc=cfg.serialize();
        ORecordInternal.setRecordSerializer(cfgDoc,ODatabaseDocumentTx.getDefaultSerializer());
        getConfigurationMap().put(CONFIG_DATABASE_PREFIX + databaseName,cfgDoc);
      }
      final OHazelcastDistributedDatabase db=messageService.registerDatabase(databaseName).configureDatabase(hotAlignment,hotAlignment,null);
      final ODatabaseDocumentTx database=(ODatabaseDocumentTx)serverInstance.openDatabase(databaseName,"internal","internal",null,true);
      try {
        cfg=getDatabaseConfiguration(databaseName);
        final boolean distribCfgDirty=installDbClustersForLocalNode(database,cfg);
        if (distribCfgDirty) {
          OLogManager.instance().info(this,"Distributed configuration modified");
          updateCachedDatabaseConfiguration(databaseName,cfg.serialize(),true,true);
        }
      }
  finally {
        database.close();
      }
    }
  }
}
