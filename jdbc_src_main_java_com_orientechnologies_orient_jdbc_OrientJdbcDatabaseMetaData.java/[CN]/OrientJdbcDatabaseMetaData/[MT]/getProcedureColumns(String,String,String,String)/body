{
  final List<ODocument> records=new ArrayList<ODocument>();
  final OFunction f=metadata.getFunctionLibrary().getFunction(procedureNamePattern);
  for (  String p : f.getParameters()) {
    final ODocument doc=new ODocument();
    doc.field("PROCEDURE_CAT",(Object)null);
    doc.field("PROCEDURE_SCHEM",(Object)null);
    doc.field("PROCEDURE_NAME",f.getName());
    doc.field("COLUMN_NAME",p);
    doc.field("COLUMN_TYPE",procedureColumnIn);
    doc.field("DATA_TYPE",java.sql.Types.OTHER);
    doc.field("SPECIFIC_NAME",f.getName());
    records.add(doc);
  }
  final ODocument doc=new ODocument();
  doc.field("PROCEDURE_CAT",(Object)null);
  doc.field("PROCEDURE_SCHEM",(Object)null);
  doc.field("PROCEDURE_NAME",f.getName());
  doc.field("COLUMN_NAME","return");
  doc.field("COLUMN_TYPE",procedureColumnReturn);
  doc.field("DATA_TYPE",java.sql.Types.OTHER);
  doc.field("SPECIFIC_NAME",f.getName());
  records.add(doc);
  return new OrientJdbcResultSet(new OrientJdbcStatement(connection),records,ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY,ResultSet.HOLD_CURSORS_OVER_COMMIT);
}
