{
  final Class<?> pojoClass=iPojo.getClass();
  final String idFieldName=fieldIds.get(pojoClass);
  if (idFieldName != null) {
    final List<Field> properties=getClassFields(pojoClass);
    if (properties != null)     for (    Field p : properties) {
      if (p.getName().equals(idFieldName)) {
        Class<?> fieldType=p.getType();
        if (ORID.class.isAssignableFrom(fieldType))         setFieldValue(iPojo,idFieldName,iIdentity);
 else         if (Number.class.isAssignableFrom(fieldType))         setFieldValue(iPojo,idFieldName,iIdentity != null ? iIdentity.getClusterPosition() : null);
 else         if (fieldType.equals(String.class))         setFieldValue(iPojo,idFieldName,iIdentity != null ? iIdentity.toString() : null);
 else         if (fieldType.equals(Object.class))         setFieldValue(iPojo,idFieldName,iIdentity);
 else         OLogManager.instance().warn(OObjectSerializerHelper.class,"@Id field has been declared as %s while the supported are: ORID, Number, String, Object",fieldType);
        break;
      }
    }
  }
  return idFieldName;
}
