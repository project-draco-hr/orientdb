{
  if (iResult == OChannelBinaryProtocol.RESPONSE_STATUS_OK || iResult == OChannelBinaryProtocol.PUSH_DATA) {
    return iClientTxId;
  }
 else   if (iResult == OChannelBinaryProtocol.RESPONSE_STATUS_ERROR) {
    final List<OPair<String,String>> exceptions=new ArrayList<OPair<String,String>>();
    while (readByte() == 1) {
      final String excClassName=readString();
      final String excMessage=readString();
      exceptions.add(new OPair<String,String>(excClassName,excMessage));
    }
    byte[] serializedException=null;
    if (srvProtocolVersion >= 19)     serializedException=readBytes();
    Exception previous=null;
    if (serializedException != null && serializedException.length > 0)     throwSerializedException(serializedException);
    for (int i=exceptions.size() - 1; i > -1; --i) {
      previous=createException(exceptions.get(i).getKey(),exceptions.get(i).getValue(),previous);
    }
    if (previous != null) {
      throw new RuntimeException(previous);
    }
 else     throw new ONetworkProtocolException("Network response error");
  }
 else {
    throw new ONetworkProtocolException("Error on reading response from the server");
  }
}
