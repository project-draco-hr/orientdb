{
  final Comparable<? super K> key=(Comparable<? super K>)iKey;
  OTreeMapEntryPersistent<K,V> bestNode=null;
  if (entryPoints.size() == 0)   return root;
  OTreeMapEntryPersistent<K,V> e;
  for (int i=0; i < entryPoints.size(); ++i) {
    e=entryPoints.get(i);
    if (e.serializedKeys == null) {
      entryPoints.remove(i);
      --i;
      continue;
    }
    if (key.compareTo(e.getFirstKey()) < 0) {
      return bestNode != null ? bestNode : e;
    }
 else     if (key.compareTo(e.getFirstKey()) >= 0 && key.compareTo(e.getLastKey()) <= 0)     return e;
    bestNode=e;
  }
  return bestNode;
}
