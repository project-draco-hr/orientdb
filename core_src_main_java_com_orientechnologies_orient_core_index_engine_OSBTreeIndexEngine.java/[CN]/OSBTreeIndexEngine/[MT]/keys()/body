{
  acquireSharedLock();
  try {
    return new Iterable<Object>(){
      @Override public Iterator<Object> iterator(){
        return new Iterator<Object>(){
          final MapEntryIterator<V> entryIterator=new MapEntryIterator<V>(sbTree);
          @Override public boolean hasNext(){
            return entryIterator.hasNext();
          }
          @Override public Object next(){
            return entryIterator.next().getKey();
          }
          @Override public void remove(){
            entryIterator.remove();
          }
        }
;
      }
    }
;
  }
  finally {
    releaseSharedLock();
  }
}
