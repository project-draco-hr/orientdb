{
  document=checkForLoading(document);
  ODocument replaced=null;
  final OClass cls=ODocumentInternal.getImmutableSchemaClass(document);
  if (cls != null) {
    final Collection<OIndex<?>> indexes=hookType == BEFORE_UPDATE ? getAffectedIndexes(cls.getIndexes(),document.getDirtyFields()) : cls.getIndexes();
    try {
      startAtomicOperationIfRequired(document,indexes);
switch (hookType) {
case BEFORE_CREATE:
        replaced=checkIndexedPropertiesOnCreation(document,indexes);
      break;
case BEFORE_UPDATE:
    checkIndexedPropertiesOnUpdate(document,indexes);
  break;
default :
throw new IllegalArgumentException("Invalid hook type: " + hookType);
}
}
 catch (RuntimeException e) {
endFailedAtomicOperationIfAny(document);
throw e;
}
}
 else startAtomicOperationIfRequired(document,Collections.<OIndex<?>>emptyList());
return replaced;
}
