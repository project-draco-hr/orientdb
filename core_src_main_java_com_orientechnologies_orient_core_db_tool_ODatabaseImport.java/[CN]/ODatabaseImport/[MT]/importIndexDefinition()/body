{
  jsonReader.readString(OJSONReader.BEGIN_OBJECT);
  jsonReader.readNext(OJSONReader.FIELD_ASSIGNMENT);
  final String className=jsonReader.readString(OJSONReader.NEXT_IN_OBJECT);
  jsonReader.readNext(OJSONReader.FIELD_ASSIGNMENT);
  final String value=jsonReader.readString(OJSONReader.END_OBJECT,true);
  final OIndexDefinition indexDefinition;
  final ODocument indexDefinitionDoc=(ODocument)ORecordSerializerJSON.INSTANCE.fromString(value,null,null);
  try {
    final Class<?> indexDefClass=Class.forName(className);
    indexDefinition=(OIndexDefinition)indexDefClass.getDeclaredConstructor().newInstance();
    indexDefinition.fromStream(indexDefinitionDoc);
  }
 catch (  final ClassNotFoundException e) {
    throw new IOException("Error during deserialization of index definition",e);
  }
catch (  final NoSuchMethodException e) {
    throw new IOException("Error during deserialization of index definition",e);
  }
catch (  final InvocationTargetException e) {
    throw new IOException("Error during deserialization of index definition",e);
  }
catch (  final InstantiationException e) {
    throw new IOException("Error during deserialization of index definition",e);
  }
catch (  final IllegalAccessException e) {
    throw new IOException("Error during deserialization of index definition",e);
  }
  jsonReader.readNext(OJSONReader.NEXT_IN_OBJECT);
  return indexDefinition;
}
