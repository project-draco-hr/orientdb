{
  checkOpeness();
  checkLowDiskSpaceAndFullCheckpointRequests();
  final OCluster cluster=getClusterById(rid.clusterId);
  if (transaction.get() != null) {
    final long timer=Orient.instance().getProfiler().startChrono();
    try {
      return doHideMethod(rid,cluster);
    }
  finally {
      Orient.instance().getProfiler().stopChrono(PROFILER_DELETE_RECORD,"Delete a record from database",timer,"db.*.deleteRecord");
    }
  }
  final long timer=Orient.instance().getProfiler().startChrono();
  stateLock.acquireReadLock();
  try {
    lockManager.acquireLock(rid,OLockManager.LOCK.EXCLUSIVE);
    try {
      checkOpeness();
      return doHideMethod(rid,cluster);
    }
  finally {
      lockManager.releaseLock(this,rid,OLockManager.LOCK.EXCLUSIVE);
    }
  }
  finally {
    stateLock.releaseReadLock();
    Orient.instance().getProfiler().stopChrono(PROFILER_DELETE_RECORD,"Delete a record from database",timer,"db.*.deleteRecord");
  }
}
