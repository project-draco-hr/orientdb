{
  try {
    final File rootDir=new File(configuration.getDirectory());
    final File backUpDir=new File(rootDir,"wal_backup");
    if (!backUpDir.exists()) {
      final boolean created=backUpDir.mkdir();
      if (!created) {
        OLogManager.instance().error(this,"Can not create directory for backup files " + backUpDir.getAbsolutePath());
        return;
      }
    }
    final Date date=new Date();
    final SimpleDateFormat dateFormat=new SimpleDateFormat("dd_MM_yy_HH_mm_ss");
    final String strDate=dateFormat.format(date);
    final String archiveName="wal_backup_" + strDate + ".zip";
    final String metadataName="wal_metadata_" + strDate + ".txt";
    final File archiveFile=new File(backUpDir,archiveName);
    if (!archiveFile.createNewFile()) {
      OLogManager.instance().error(this,"Can not create backup file " + archiveFile.getAbsolutePath());
      return;
    }
    final FileOutputStream archiveOutputStream=new FileOutputStream(archiveFile);
    final ZipOutputStream archiveZipOutputStream=new ZipOutputStream(archiveOutputStream);
    final ZipEntry metadataEntry=new ZipEntry(metadataName);
    archiveZipOutputStream.putNextEntry(metadataEntry);
    final PrintWriter metadataFileWriter=new PrintWriter(archiveZipOutputStream);
    metadataFileWriter.append("Storage name : ").append(getName()).append("\n");
    metadataFileWriter.append("Date : ").append(strDate).append("\n");
    metadataFileWriter.append("Stacktrace : \n");
    e.printStackTrace(metadataFileWriter);
    metadataFileWriter.flush();
    archiveZipOutputStream.closeEntry();
    final List<String> walPaths=((ODiskWriteAheadLog)writeAheadLog).getFiles();
    for (    String walSegment : walPaths) {
      final File walFile=new File(walSegment);
      final ZipEntry walZipEntry=new ZipEntry(walFile.getName());
      archiveZipOutputStream.putNextEntry(walZipEntry);
      final FileInputStream walInputStream=new FileInputStream(walFile);
      final BufferedInputStream walBufferedInputStream=new BufferedInputStream(walInputStream);
      final BufferedOutputStream walBufferedOutputStream=new BufferedOutputStream(archiveOutputStream);
      final byte[] buffer=new byte[1024];
      int readBytes=0;
      while ((readBytes=walBufferedInputStream.read(buffer)) > -1) {
        walBufferedOutputStream.write(buffer,0,readBytes);
      }
      walInputStream.close();
      walBufferedOutputStream.flush();
      archiveZipOutputStream.closeEntry();
    }
    archiveZipOutputStream.close();
  }
 catch (  Exception ioe) {
    OLogManager.instance().error(this,"Error during WAL backup.",ioe);
  }
}
