{
  final ODatabaseDocumentInternal database=getDatabase();
  database.checkSecurity(ORule.ResourceGeneric.CLASS,ORole.PERMISSION_READ,iCls.getName().toLowerCase());
  final ORID[] range=getRange();
  if (iAscendentOrder)   return new ORecordIteratorClass<ORecord>(database,database,iCls.getName(),iPolymorphic,isUseCache()).setRange(range[0],range[1]);
 else   return new ORecordIteratorClassDescendentOrder<ORecord>(database,database,iCls.getName(),iPolymorphic,isUseCache()).setRange(range[0],range[1]);
}
