{
  StringBuilder result=new StringBuilder();
  result.append("KEY ");
  if (operator != null) {
    result.append(operator.toString());
    result.append(" [");
    boolean first=true;
    for (    OExpression x : leftExpressions) {
      if (!first) {
        result.append(", ");
      }
      result.append(x.toString());
      first=false;
    }
    result.append("]");
  }
 else   if (Boolean.TRUE.equals(between)) {
    result.append(" BETWEEN [");
    boolean first=true;
    for (    OExpression x : leftExpressions) {
      if (!first) {
        result.append(", ");
      }
      result.append(x.toString());
      first=false;
    }
    result.append("] AND [");
    first=true;
    for (    OExpression x : rightExpressions) {
      if (!first) {
        result.append(", ");
      }
      result.append(x.toString());
      first=false;
    }
    result.append("]");
  }
  return result.toString();
}
