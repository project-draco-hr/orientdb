{
  final List<Future> futures=new ArrayList<Future>();
  long start=System.currentTimeMillis();
  int n=0;
  while (System.currentTimeMillis() - start < 60 * 60 * 1000) {
    n++;
    futures.clear();
    addedThreads.clear();
    threadsCounter.set(0);
    stop=false;
    threadCounters=new OThreadCountersHashTable(2,true);
    latch=new CountDownLatch(1);
    System.out.println("Start iteration " + n);
    for (int i=0; i < 7; i++)     futures.add(executorService.submit(new Adder()));
    futures.add(executorService.submit(new Checker()));
    latch.countDown();
    Thread.sleep(10 * 1000);
    stop=true;
    for (    Future future : futures)     future.get();
    System.out.println("Iteration : " + n + " Added threads : "+ threadsCounter.get());
    for (    Thread thread : addedThreads)     Assert.assertSame(threadCounters.search(thread).getThread(),thread);
  }
}
