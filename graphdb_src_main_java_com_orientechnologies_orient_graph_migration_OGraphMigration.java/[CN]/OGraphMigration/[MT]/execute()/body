{
  List<ODocument> vertexes=database.query(new OSQLSynchQuery<ODocument>("select from V"));
  if (commandOutputListener != null)   commandOutputListener.onMessage(vertexes.size() + " vertexes were fetched to process.");
  for (int i=0; i < vertexes.size(); i++) {
    final ODocument vertex=vertexes.get(i);
    for (    String fieldName : vertex.fieldNames()) {
      if (fieldName.startsWith(OrientVertex.CONNECTION_IN_PREFIX) || fieldName.startsWith(OrientVertex.CONNECTION_OUT_PREFIX)) {
        Object oldValue=vertex.field(fieldName);
        if (oldValue instanceof OMVRBTreeRIDSet) {
          OMVRBTreeRIDSet oldTree=(OMVRBTreeRIDSet)oldValue;
          ORidBag bag=new ORidBag();
          bag.addAll(oldTree);
          vertex.field(fieldName,bag);
        }
      }
    }
    vertex.save();
    if (commandOutputListener != null && i % 10000 == 0)     commandOutputListener.onMessage(i + " vertexes were processed.");
  }
  if (commandOutputListener != null)   commandOutputListener.onMessage("All vertexes were processed, looking for manual indexes to update.");
  final OIndexManager indexManager=database.getMetadata().getIndexManager();
  boolean indexWasMigrated=false;
  for (  OIndex index : indexManager.getIndexes()) {
    final ODocument config=index.getConfiguration();
    ODocument metadata=index.getMetadata();
    if (config.field(OrientIndex.CONFIG_CLASSNAME) != null && metadata == null) {
      if (commandOutputListener != null)       commandOutputListener.onMessage("Index " + index.getName() + " uses out of dated index format and will be updated.");
      final OIndex<OIdentifiable> recordKeyValueIndex=(OIndex<OIdentifiable>)database.getMetadata().getIndexManager().createIndex("__@recordmap@___" + index.getName(),OClass.INDEX_TYPE.DICTIONARY.toString(),new OSimpleKeyIndexDefinition(OType.LINK,OType.STRING),null,null,null);
      OIndexCursor cursor=index.cursor();
      Map.Entry<Object,OIdentifiable> entry=cursor.nextEntry();
      while (entry != null) {
        final String keyTemp=entry.getKey().toString();
        final OIdentifiable identifiable=entry.getValue();
        recordKeyValueIndex.put(new OCompositeKey(identifiable.getIdentity(),keyTemp),identifiable.getIdentity());
        entry=cursor.nextEntry();
      }
      metadata=new ODocument();
      metadata.field(OrientIndex.CONFIG_CLASSNAME,config.field(OrientIndex.CONFIG_CLASSNAME));
      metadata.field(OrientIndex.CONFIG_RECORD_MAP_NAME,recordKeyValueIndex.getName());
      config.field("metadata",metadata);
      indexWasMigrated=true;
      if (commandOutputListener != null)       commandOutputListener.onMessage("Index " + index.getName() + " structure was updated.");
    }
  }
  if (indexWasMigrated)   indexManager.save();
  if (commandOutputListener != null)   commandOutputListener.onMessage("Graph database update is completed");
}
