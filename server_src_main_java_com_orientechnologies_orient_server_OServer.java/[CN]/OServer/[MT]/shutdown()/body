{
  if (!running)   return;
  running=false;
  shutdownHook.cancel();
  for (  OServerLifecycleListener l : lifecycleListeners)   l.onBeforeDeactivate();
  OLogManager.instance().info(this,"OrientDB Server is shutdowning...");
  try {
    Orient.instance().shutdown();
  }
 catch (  Throwable e) {
  }
  try {
    lock.lock();
    if (plugins.size() > 0) {
      OLogManager.instance().info(this,"Shutdowning plugins:");
      for (      OServerHandler h : plugins.values()) {
        OLogManager.instance().info(this,"- %s",h.getName());
        try {
          h.sendShutdown();
        }
 catch (        Throwable t) {
        }
      }
    }
    if (networkProtocols.size() > 0) {
      OLogManager.instance().info(this,"Shutdowning protocols");
      networkProtocols.clear();
    }
    if (networkListeners.size() > 0) {
      OLogManager.instance().info(this,"Shutdowning listeners:");
      for (      OServerNetworkListener l : networkListeners) {
        OLogManager.instance().info(this,"- %s",l);
        try {
          l.shutdown();
        }
 catch (        Throwable e) {
        }
      }
    }
  }
  finally {
    lock.unlock();
  }
  for (  OServerLifecycleListener l : lifecycleListeners)   try {
    l.onAfterDeactivate();
  }
 catch (  Exception e) {
  }
  OLogManager.instance().info(this,"OrientDB Server shutdown complete");
  System.out.println();
}
