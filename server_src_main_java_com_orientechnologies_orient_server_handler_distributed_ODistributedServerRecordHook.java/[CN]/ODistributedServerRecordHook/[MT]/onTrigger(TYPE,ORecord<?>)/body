{
  try {
switch (iType) {
case BEFORE_CREATE:
case BEFORE_UPDATE:
case BEFORE_DELETE:
      final String clusterName=iRecord.getDatabase().getClusterNameById(iRecord.getIdentity().getClusterId());
    if (!manager.isCurrentNodeTheClusterOwner(iRecord.getDatabase().getName(),clusterName)) {
      final ODocument servers=manager.getServersForCluster(iRecord.getDatabase().getName(),clusterName);
      throw new ODistributedException("Can't apply changes to the cluster '" + clusterName + "' because the current node is not the owner for that cluster. Please connect to the server: "+ servers.field("owner"));
    }
  break;
case AFTER_CREATE:
manager.distributeRequest(new OTransactionEntry<ORecordInternal<?>>((ORecordInternal<?>)iRecord,OTransactionEntry.CREATED,null));
break;
case AFTER_UPDATE:
manager.distributeRequest(new OTransactionEntry<ORecordInternal<?>>((ORecordInternal<?>)iRecord,OTransactionEntry.UPDATED,null));
break;
case AFTER_DELETE:
manager.distributeRequest(new OTransactionEntry<ORecordInternal<?>>((ORecordInternal<?>)iRecord,OTransactionEntry.DELETED,null));
break;
}
}
 catch (IOException e) {
throw new ODistributedSynchronizationException("Error on distribution of the record to the configured cluster",e);
}
return false;
}
