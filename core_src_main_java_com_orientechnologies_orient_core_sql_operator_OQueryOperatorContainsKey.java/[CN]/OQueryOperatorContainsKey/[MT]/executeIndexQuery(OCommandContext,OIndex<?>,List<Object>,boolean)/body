{
  final OIndexDefinition indexDefinition=index.getDefinition();
  OIndexCursor cursor;
  final OIndexInternal<?> internalIndex=index.getInternal();
  if (!internalIndex.canBeUsedInEqualityOperators())   return null;
  if (indexDefinition.getParamCount() == 1) {
    if (!((indexDefinition instanceof OPropertyMapIndexDefinition) && ((OPropertyMapIndexDefinition)indexDefinition).getIndexBy() == OPropertyMapIndexDefinition.INDEX_BY.KEY))     return null;
    final Object key=((OIndexDefinitionMultiValue)indexDefinition).createSingleValue(keyParams.get(0));
    if (key == null)     return null;
    final Object indexResult=index.get(key);
    if (indexResult == null || indexResult instanceof OIdentifiable)     cursor=new OIndexCursorSingleValue((OIdentifiable)indexResult,key);
 else     cursor=new OIndexCursorCollectionValue((Collection<OIdentifiable>)indexResult,key);
  }
 else {
    final OCompositeIndexDefinition compositeIndexDefinition=(OCompositeIndexDefinition)indexDefinition;
    if (!((compositeIndexDefinition.getMultiValueDefinition() instanceof OPropertyMapIndexDefinition) && ((OPropertyMapIndexDefinition)compositeIndexDefinition.getMultiValueDefinition()).getIndexBy() == OPropertyMapIndexDefinition.INDEX_BY.KEY))     return null;
    final Object keyOne=compositeIndexDefinition.createSingleValue(keyParams);
    if (keyOne == null)     return null;
    if (internalIndex.hasRangeQuerySupport()) {
      final Object keyTwo=compositeIndexDefinition.createSingleValue(keyParams);
      cursor=index.iterateEntriesBetween(keyOne,true,keyTwo,true,ascSortOrder);
    }
 else {
      if (indexDefinition.getParamCount() == keyParams.size()) {
        final Object indexResult=index.get(keyOne);
        if (indexResult == null || indexResult instanceof OIdentifiable)         cursor=new OIndexCursorSingleValue((OIdentifiable)indexResult,keyOne);
 else         cursor=new OIndexCursorCollectionValue((Collection<OIdentifiable>)indexResult,keyOne);
      }
 else       return null;
    }
  }
  updateProfiler(iContext,index,keyParams,indexDefinition);
  return cursor;
}
