{
synchronized (pendingAlignments) {
    if (pendingAlignments.remove(iNode + "/" + iDatabaseName) == null) {
      OLogManager.instance().error(this,"DISTRIBUTED -> received response for an alignment against an unknown node %s database %s",iNode,iDatabaseName);
    }
    if (pendingAlignments.isEmpty())     setStatus("online");
 else {
      for (      Entry<String,Boolean> entry : pendingAlignments.entrySet()) {
        if (entry.getValue()) {
          final String[] parts=entry.getKey().split("/");
          final String node=parts[0];
          final String databaseName=parts[1];
          final OStorageSynchronizer synch=synchronizers.get(databaseName);
          long[] lastOperationId;
          try {
            lastOperationId=synch.getLog().getLastOperationId(false);
            OLogManager.instance().info(this,"DISTRIBUTED ->[%s/%s] resend alignment request from %d:%d",node,databaseName,lastOperationId[0],lastOperationId[1]);
            sendOperation2Node(node,new OAlignRequestDistributedTask(getLocalNodeId(),databaseName,EXECUTION_MODE.ASYNCHRONOUS,lastOperationId[0],lastOperationId[1]));
          }
 catch (          IOException e) {
            OLogManager.instance().warn(this,"DISTRIBUTED -> error on retrieve last operation id from the log for db %s",databaseName);
          }
        }
      }
    }
  }
}
