{
  if (subjectName == null)   throw new OCommandExecutionException("Cannot execute the command because it has not been parsed yet");
  parameters=new OCommandParameters(iArgs);
  Map<Object,Object> queryArgs;
  if (parameters.size() > 0 && parameters.getByName(0) != null) {
    queryArgs=new HashMap<Object,Object>();
    for (int i=parameterCounter; i < parameters.size(); i++) {
      if (parameters.getByName(i) != null)       queryArgs.put(i - parameterCounter,parameters.getByName(i));
    }
  }
 else {
    queryArgs=iArgs;
  }
  query.setUseCache(false);
  query.setContext(context);
  if (!returning.equalsIgnoreCase("COUNT"))   allUpdatedRecords=new ArrayList<ORecord<?>>();
  if (lockStrategy.equals("RECORD"))   query.getContext().setVariable("$locking",OStorage.LOCKING_STRATEGY.KEEP_EXCLUSIVE_LOCK);
  for (int r=0; r < retry; ++r) {
    try {
      getDatabase().query(query,queryArgs);
      break;
    }
 catch (    OConcurrentModificationException e) {
      if (r + 1 >= retry)       throw e;
      if (wait > 0)       try {
        Thread.sleep(wait);
      }
 catch (      InterruptedException e1) {
      }
    }
  }
  if (upsertMode && recordCount == 0) {
    final ODocument doc=subjectName != null ? new ODocument(subjectName) : new ODocument();
    final String suspendedLockStrategy=lockStrategy;
    lockStrategy="NONE";
    result(doc);
    lockStrategy=suspendedLockStrategy;
  }
  if (returning.equalsIgnoreCase("COUNT"))   return recordCount;
 else   return allUpdatedRecords;
}
