{
  if (currentClusterId == -1)   return new long[]{-1,-1};
  checkOpeness();
  lock.acquireSharedLock();
  try {
    final OCluster cluster=getClusterById(currentClusterId);
    final OPhysicalPosition[] physicalPositions=cluster.getPositionsByEntryPos(entry);
    final long[] positions=new long[physicalPositions.length];
    for (int i=0; i < positions.length; i++)     positions[i]=physicalPositions[i].clusterPosition;
    return positions;
  }
 catch (  IOException ioe) {
    throw new OStorageException("Cluster Id " + currentClusterId + " is invalid in storage '"+ name+ '\'',ioe);
  }
 finally {
    lock.releaseSharedLock();
  }
}
