{
  getDatabase().checkSecurity(ORule.ResourceGeneric.COMMAND,ORole.PERMISSION_READ);
  final OCommandRequestText textRequest=(OCommandRequestText)iRequest;
  OSQLAsynchQuery<ODocument> request;
  if (iRequest instanceof OSQLSynchQuery) {
    request=(OSQLSynchQuery<ODocument>)iRequest;
  }
 else   if (iRequest instanceof OSQLAsynchQuery) {
    request=(OSQLAsynchQuery<ODocument>)iRequest;
  }
 else {
    request=new OSQLSynchQuery<ODocument>(textRequest.getText());
    if (textRequest.getResultListener() != null) {
      request.setResultListener(textRequest.getResultListener());
    }
  }
  OCommandExecutorSQLSelect result=new OCommandExecutorSQLSelect();
  result.setRequest(request);
  result.initContext();
  result.setProjections(new LinkedHashMap<String,Object>());
  result.setProjectionDefinition(new LinkedHashMap<String,String>());
  if (this.projection != null && this.projection.getItems() != null) {
    for (    OProjectionItem item : projection.getItems()) {
      result.getProjections().put(getAlias(item),item.getExpression().createExecutorFilter());
      result.getProjectionDefinition().put(getAlias(item),item.toString());
    }
  }
  return result;
}
