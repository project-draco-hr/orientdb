{
  final ODistributedConfiguration cfg=getDatabaseConfiguration(databaseName);
  final Collection<String> nodes=cfg.getServers(null,nodeName);
  getAvailableNodes(nodes,databaseName);
  ODistributedServerLog.warn(this,nodeName,nodes.toString(),DIRECTION.OUT,"requesting delta database sync for '%s' on local server...",databaseName);
  final Map<String,OLogSequenceNumber> selectedNodes=new HashMap<String,OLogSequenceNumber>(nodes.size());
  for (  String node : nodes) {
    final OLogSequenceNumber lsn=distrDatabase.getSyncConfiguration().getLSN(node);
    if (lsn != null) {
      selectedNodes.put(node,lsn);
    }
 else     ODistributedServerLog.info(this,nodeName,node,DIRECTION.OUT,"Last LSN not found for database '%s', skip delta database sync",databaseName);
  }
  if (selectedNodes.isEmpty()) {
    ODistributedServerLog.error(this,nodeName,null,DIRECTION.NONE,"No LSN found for delta sync for database %s. Asking for full database sync...",databaseName);
    throw new ODistributedDatabaseDeltaSyncException("Requested database delta sync but no LSN was found");
  }
  for (  Map.Entry<String,OLogSequenceNumber> entry : selectedNodes.entrySet()) {
    final OSyncDatabaseDeltaTask deployTask=new OSyncDatabaseDeltaTask(entry.getValue());
    final List<String> targetNodes=new ArrayList<String>(1);
    targetNodes.add(entry.getKey());
    ODistributedServerLog.info(this,nodeName,entry.getKey(),DIRECTION.OUT,"Requesting database delta sync for '%s' LSN=%s...",databaseName,entry.getValue());
    final Map<String,Object> results=(Map<String,Object>)sendRequest(databaseName,null,targetNodes,deployTask,getNextMessageIdCounter(),ODistributedRequest.EXECUTION_MODE.RESPONSE,null,null).getPayload();
    ODistributedServerLog.info(this,nodeName,entry.getKey(),DIRECTION.IN,"Receiving delta sync for '%s'...",databaseName);
    ODistributedServerLog.debug(this,nodeName,selectedNodes.toString(),DIRECTION.OUT,"Database delta sync returned: %s",results);
    final String dbPath=serverInstance.getDatabaseDirectory() + databaseName;
    for (    Map.Entry<String,Object> r : results.entrySet()) {
      final Object value=r.getValue();
      if (value instanceof Boolean)       continue;
 else       if (value instanceof ODistributedDatabaseDeltaSyncException) {
        ODistributedServerLog.error(this,nodeName,r.getKey(),DIRECTION.IN,"Error on installing database delta %s, requesting full database sync...",databaseName,dbPath);
        throw (ODistributedDatabaseDeltaSyncException)value;
      }
 else       if (value instanceof Throwable) {
        ODistributedServerLog.error(this,nodeName,r.getKey(),DIRECTION.IN,"Error on installing database delta %s in %s (%s)",(Exception)value,databaseName,dbPath,value);
      }
 else       if (value instanceof ODistributedDatabaseChunk) {
        final Set<String> toSyncClusters=installDatabaseFromNetwork(dbPath,databaseName,distrDatabase,r.getKey(),(ODistributedDatabaseChunk)value,true);
        for (        String cl : toSyncClusters) {
          OCommandExecutorSQLHASyncCluster.replaceCluster(this,serverInstance,databaseName,cl);
        }
        ODistributedServerLog.info(this,nodeName,entry.getKey(),DIRECTION.IN,"Installed delta of database '%s'...",databaseName);
      }
 else       throw new IllegalArgumentException("Type " + value + " not supported");
    }
  }
  return true;
}
