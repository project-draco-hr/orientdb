{
  lock.acquireExclusiveLock();
  try {
    final Set<ORID> nodesInMemory=getAllNodesInCache();
    if (nodesInMemory.isEmpty())     return;
    final Set<ORID> keys=new HashSet<ORID>(nodesInMemory);
    OMVRBTreeEntryPersistent<OIdentifiable,OIdentifiable> entry;
    for (    ORID rid : keys) {
      if (rid.getClusterPosition().isTemporary()) {
        entry=(OMVRBTreeEntryPersistent<OIdentifiable,OIdentifiable>)searchNodeInCache(rid);
        removeNodeFromCache(rid);
        addNodeInCache(entry);
      }
    }
  }
  finally {
    lock.releaseExclusiveLock();
  }
}
