{
  ODatabaseDocument db=new ODatabaseDocumentTx(database.getURL());
  db.open("admin","admin");
  if (!db.getMetadata().getSchema().existsClass("MyFruit")) {
    OClass fruitClass=db.getMetadata().getSchema().createClass("MyFruit");
    fruitClass.createProperty("name",OType.STRING);
    fruitClass.createProperty("color",OType.STRING);
    db.getMetadata().getSchema().getClass("MyFruit").getProperty("name").createIndex(OClass.INDEX_TYPE.UNIQUE);
    db.getMetadata().getSchema().getClass("MyFruit").getProperty("color").createIndex(OClass.INDEX_TYPE.NOTUNIQUE);
    db.getMetadata().getSchema().save();
  }
  final int passCount=10;
  final int chunkSize=1000;
  for (int pass=0; pass < passCount; pass++) {
    List<ODocument> recordsToDelete=new ArrayList<ODocument>();
    db.begin();
    for (int i=0; i < chunkSize; i++) {
      ODocument d=new ODocument("MyFruit").field("name","ABC" + pass + 'K'+ i).field("color","FOO" + pass);
      d.save();
      if (i < chunkSize / 2) {
        recordsToDelete.add(d);
      }
    }
    db.commit();
    db.begin();
    for (    final ODocument recordToDelete : recordsToDelete) {
      Assert.assertNotNull(db.delete(recordToDelete));
    }
    db.commit();
  }
  db.close();
}
