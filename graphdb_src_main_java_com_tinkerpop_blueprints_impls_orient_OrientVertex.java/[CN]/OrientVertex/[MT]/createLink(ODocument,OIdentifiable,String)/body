{
  final Object out;
  Object found=iFromVertex.field(iFieldName);
  if (found == null)   out=iTo;
 else   if (found instanceof OIdentifiable) {
    if (found.equals(iTo))     return found;
    final OProperty prop=iFromVertex.getSchemaClass().getProperty(iFieldName);
    if (prop != null && "true".equalsIgnoreCase(prop.getCustom("ordered"))) {
      final Collection coll=new OTrackedList<Object>(iFromVertex);
      coll.add(found);
      coll.add(iTo);
      out=coll;
    }
 else {
      final ORidBag bag=new ORidBag();
      bag.add((OIdentifiable)found);
      bag.add(iTo);
      out=bag;
    }
  }
 else   if (found instanceof ORidBag) {
    out=null;
    ((ORidBag)found).add(iTo);
  }
 else   if (found instanceof Collection<?>) {
    out=null;
    ((Collection<Object>)found).add(iTo);
  }
 else   throw new IllegalStateException("Relationship content is invalid on field " + iFieldName + ". Found: "+ found);
  if (out != null)   iFromVertex.field(iFieldName,out);
  return out;
}
