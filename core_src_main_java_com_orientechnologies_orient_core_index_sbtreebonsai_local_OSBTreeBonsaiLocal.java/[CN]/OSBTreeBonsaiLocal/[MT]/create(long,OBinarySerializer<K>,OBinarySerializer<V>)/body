{
  final OAtomicOperation atomicOperation;
  try {
    atomicOperation=startAtomicOperation();
  }
 catch (  IOException e) {
    throw new OSBTreeException("Error during sbtree creation.",e);
  }
  final Lock lock=fileLockManager.acquireExclusiveLock(fileId);
  try {
    this.keySerializer=keySerializer;
    this.valueSerializer=valueSerializer;
    openFile(atomicOperation,fileId);
    this.fileId=fileId;
    this.name=resolveTreeName(fileId,atomicOperation);
    initAfterCreate(atomicOperation);
    endAtomicOperation(false);
  }
 catch (  IOException e) {
    rollback();
    throw new OSBTreeException("Error creation of sbtree with name" + name,e);
  }
catch (  Exception e) {
    rollback();
    throw new OSBTreeException("Error creation of sbtree with name" + name,e);
  }
 finally {
    lock.unlock();
  }
}
