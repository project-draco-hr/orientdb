{
  List<Object> keys=null;
  if (obj instanceof OCompositeKey) {
    final OCompositeKey compositeKey=(OCompositeKey)obj;
    keys=compositeKey.getKeys();
  }
 else   if (obj instanceof List) {
    keys=(List<Object>)obj;
  }
 else {
    throw new OIndexException("Impossible add as key of a CompositeIndex a value of type " + obj.getClass());
  }
  OCompositeKey transformedKey=new OCompositeKey();
  final int size=Math.min(keys.size(),collates.size());
  for (int i=0; i < size; i++) {
    final Object key=keys.get(i);
    final OCollate collate=collates.get(i);
    transformedKey.addKey(collate.transform(key));
  }
  for (int i=size; i < keys.size(); i++)   transformedKey.addKey(keys.get(i));
  return transformedKey;
}
