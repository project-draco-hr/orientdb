{
  try {
    if (connection == null && requestType == OChannelBinaryProtocol.REQUEST_DB_CLOSE)     return null;
    if (connection != null && !Boolean.TRUE.equals(connection.getTokenBased())) {
      connection.setTokenBytes(null);
      connection.acquire();
    }
 else {
      if (!tokenConnection) {
        throw new OIOException("Found unknown session " + clientTxId);
      }
      byte[] bytes=channel.readBytes();
      if (connection == null && bytes != null && bytes.length > 0) {
        connection=server.getClientConnectionManager().connect(this);
      }
      if (connection == null) {
        throw new OTokenSecurityException("missing session and token");
      }
      connection.acquire();
      connection.validateSession(bytes,server.getTokenHandler(),this);
      waitDistribuedIsOnline(connection);
      connection.init(server);
      if (connection.getData().serverUser) {
        connection.setServerUser(server.getUser(connection.getData().serverUsername));
      }
    }
    connection.statsUpdate();
    OServerPluginHelper.invokeHandlerCallbackOnBeforeClientRequest(server,connection,(byte)requestType);
  }
 catch (  RuntimeException e) {
    if (connection != null)     server.getClientConnectionManager().disconnect(connection);
    ODatabaseRecordThreadLocal.INSTANCE.remove();
    throw e;
  }
catch (  IOException e) {
    if (connection != null)     server.getClientConnectionManager().disconnect(connection);
    ODatabaseRecordThreadLocal.INSTANCE.remove();
    throw e;
  }
  return connection;
}
