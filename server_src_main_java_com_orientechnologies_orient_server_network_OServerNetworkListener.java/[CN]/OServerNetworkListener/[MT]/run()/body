{
  try {
    while (active) {
      try {
        final Socket socket=serverSocket.accept();
        final int conns=OClientConnectionManager.instance().getTotal();
        if (conns >= OGlobalConfiguration.NETWORK_MAX_CONCURRENT_SESSIONS.getValueAsInteger()) {
          OLogManager.instance().warn(this,"Reached maximum number of concurrent connections (%d), reject incoming connection from %s",conns,socket.getRemoteSocketAddress());
          socket.close();
          Thread.sleep(100);
          continue;
        }
        socket.setPerformancePreferences(0,2,1);
        socket.setSendBufferSize(socketBufferSize);
        socket.setReceiveBufferSize(socketBufferSize);
        protocol=protocolType.newInstance();
        protocol.config(this,server,socket,configuration);
      }
 catch (      Throwable e) {
        if (active)         OLogManager.instance().error(this,"Error on client connection",e);
      }
 finally {
      }
    }
  }
  finally {
    try {
      if (serverSocket != null && !serverSocket.isClosed())       serverSocket.close();
      protocol=null;
    }
 catch (    IOException ioe) {
    }
  }
}
