{
  StringBuilder buffer=new StringBuilder();
  char stringBeginChar=' ';
  char c;
  boolean insideEmbedded=false;
  int insideCollection=0;
  int insideMap=0;
  final ArrayList<String> parts=new ArrayList<String>();
  final int max=iSource.length();
  for (int i=0; i < max; ++i) {
    c=iSource.charAt(i);
    if (stringBeginChar == ' ') {
      if (c == COLLECTION_BEGIN)       insideCollection++;
 else       if (c == MAP_BEGIN)       insideMap++;
 else       if (c == COLLECTION_END) {
        if (insideCollection == 0)         throw new OSerializationException("Found invalid " + COLLECTION_END + " character. Assure to open and close correctly.");
        insideCollection--;
      }
 else       if (c == MAP_END) {
        if (insideMap == 0)         throw new OSerializationException("Found invalid " + MAP_END + " character. Assure to open and close correctly.");
        insideMap--;
      }
 else       if (c == EMBEDDED)       insideEmbedded=!insideEmbedded;
      if (insideCollection == 0 && insideMap == 0 && !insideEmbedded) {
        if (c == '\'' || c == '"') {
          stringBeginChar=c;
        }
 else         if (c == iRecordSeparator) {
          parts.add(buffer.toString());
          buffer.setLength(0);
          continue;
        }
      }
    }
 else {
      if (c == '\'' || c == '"') {
        if (stringBeginChar == c) {
          stringBeginChar=' ';
        }
      }
    }
    buffer.append(c);
  }
  parts.add(buffer.toString());
  return parts;
}
