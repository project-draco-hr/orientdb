{
  final int consoleWidth=getConsoleWidth();
  final String newPrompt=console.getPrompt();
  final int newTotalLength=newPrompt.length() + newText.length();
  final int oldTotalLength=oldPromptLength + oldTextLength;
  hideCursor();
  outStream.print("\r");
  moveCursorVertically(-getWraps(oldPromptLength,oldCursorPosition,consoleWidth));
  outStream.print(newPrompt);
  outStream.print(newText);
  final StringBuilder spaces=new StringBuilder();
  final int promptLengthDelta=oldTotalLength - newTotalLength;
  for (int i=0; i < promptLengthDelta; i++)   spaces.append(' ');
  outStream.print(spaces);
  outStream.print("\r");
  if (newTotalLength > oldTotalLength) {
    if (newTotalLength > maxTotalLength && newTotalLength % consoleWidth == 0) {
      outStream.print('\n');
      moveCursorVertically(-1);
    }
    moveCursorVertically(-getWraps(newPrompt.length(),newText.length() - 1,consoleWidth));
  }
 else   moveCursorVertically(-getWraps(oldPromptLength,oldTextLength - 1,consoleWidth));
  moveCursorVertically((newPrompt.length() + cursorPosition) / consoleWidth);
  moveCursorHorizontally((newPrompt.length() + cursorPosition) % consoleWidth);
  oldPromptLength=newPrompt.length();
  oldTextLength=newText.length();
  oldCursorPosition=cursorPosition;
  maxTotalLength=Math.max(newTotalLength,maxTotalLength);
  showCursor();
}
