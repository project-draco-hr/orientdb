{
  pluginManager=new OServerPluginManager();
  pluginManager.config(this);
  pluginManager.startup();
  if (serverSecurity != null)   serverSecurity.onAfterDynamicPlugins();
  final OServerConfiguration configuration=serverCfg.getConfiguration();
  if (configuration.handlers != null) {
    final List<OServerPlugin> plugins=new ArrayList<OServerPlugin>();
    for (    OServerHandlerConfiguration h : configuration.handlers) {
      if (h.parameters != null) {
        boolean enabled=true;
        for (        OServerParameterConfiguration p : h.parameters) {
          if (p.name.equals("enabled")) {
            enabled=false;
            String value=OSystemVariableResolver.resolveSystemVariables(p.value);
            if (value != null) {
              value=value.trim();
              if ("true".equalsIgnoreCase(value)) {
                enabled=true;
                break;
              }
            }
          }
        }
        if (!enabled)         continue;
      }
      final OServerPlugin plugin=(OServerPlugin)loadClass(h.clazz).newInstance();
      if (plugin instanceof ODistributedServerManager)       distributedManager=(ODistributedServerManager)plugin;
      pluginManager.registerPlugin(new OServerPluginInfo(plugin.getName(),null,null,null,plugin,null,0,null));
      pluginManager.callListenerBeforeConfig(plugin,h.parameters);
      plugin.config(this,h.parameters);
      pluginManager.callListenerAfterConfig(plugin,h.parameters);
      plugins.add(plugin);
    }
    for (    OServerPlugin plugin : plugins) {
      pluginManager.callListenerBeforeStartup(plugin);
      plugin.startup();
      pluginManager.callListenerAfterStartup(plugin);
    }
  }
}
