{
  builder.append("SELECT");
  if (projection != null) {
    builder.append(" ");
    projection.toString(params,builder);
  }
  if (target != null) {
    builder.append(" FROM ");
    target.toString(params,builder);
  }
  if (letClause != null) {
    builder.append(" ");
    letClause.toString(params,builder);
  }
  if (whereClause != null) {
    builder.append(" WHERE ");
    whereClause.toString(params,builder);
  }
  if (groupBy != null) {
    builder.append(" ");
    groupBy.toString(params,builder);
  }
  if (orderBy != null) {
    builder.append(" ");
    orderBy.toString(params,builder);
  }
  if (unwind != null) {
    builder.append(" ");
    unwind.toString(params,builder);
  }
  if (skip != null) {
    skip.toString(params,builder);
  }
  if (limit != null) {
    limit.toString(params,builder);
  }
  if (lockRecord != null) {
    builder.append(" LOCK ");
switch (lockRecord) {
case DEFAULT:
      builder.append("DEFAULT");
    break;
case EXCLUSIVE_LOCK:
  builder.append("RECORD");
break;
case SHARED_LOCK:
builder.append("SHARED");
break;
case NONE:
builder.append("NONE");
break;
}
}
if (fetchPlan != null) {
builder.append(" ");
fetchPlan.toString(params,builder);
}
if (timeout != null) {
timeout.toString(params,builder);
}
if (Boolean.TRUE.equals(parallel)) {
builder.append(" PARALLEL");
}
if (Boolean.TRUE.equals(noCache)) {
builder.append(" NOCACHE");
}
}
