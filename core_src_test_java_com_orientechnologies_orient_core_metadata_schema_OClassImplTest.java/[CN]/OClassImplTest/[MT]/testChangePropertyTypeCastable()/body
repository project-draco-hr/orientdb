{
  final OSchema oSchema=db.getMetadata().getSchema();
  OClass oClass=oSchema.createClass("Test19");
  oClass.createProperty("test1",OType.SHORT);
  oClass.createProperty("test2",OType.INTEGER);
  oClass.createProperty("test3",OType.LONG);
  oClass.createProperty("test4",OType.FLOAT);
  oClass.createProperty("test5",OType.DOUBLE);
  oClass.createProperty("test6",OType.INTEGER);
  ODocument document=new ODocument("Test19");
  document.field("test1",(short)1);
  document.field("test2",1);
  document.field("test3",4L);
  document.field("test4",3.0f);
  document.field("test5",3.0D);
  document.field("test6",4);
  db.save(document);
  db.commit();
  oClass.getProperty("test1").setType(OType.INTEGER);
  oClass.getProperty("test2").setType(OType.LONG);
  oClass.getProperty("test3").setType(OType.DOUBLE);
  oClass.getProperty("test4").setType(OType.DOUBLE);
  oClass.getProperty("test5").setType(OType.DECIMAL);
  oClass.getProperty("test6").setType(OType.FLOAT);
  ODocument doc1=db.load(document.getIdentity());
  assertEquals(doc1.fieldType("test1"),OType.INTEGER);
  assertTrue(doc1.field("test1") instanceof Integer);
  assertEquals(doc1.fieldType("test2"),OType.LONG);
  assertTrue(doc1.field("test2") instanceof Long);
  assertEquals(doc1.fieldType("test3"),OType.DOUBLE);
  assertTrue(doc1.field("test3") instanceof Double);
  assertEquals(doc1.fieldType("test4"),OType.DOUBLE);
  assertTrue(doc1.field("test4") instanceof Double);
  assertEquals(doc1.fieldType("test5"),OType.DECIMAL);
  assertTrue(doc1.field("test5") instanceof BigDecimal);
  assertEquals(doc1.fieldType("test6"),OType.FLOAT);
  assertTrue(doc1.field("test6") instanceof Float);
}
