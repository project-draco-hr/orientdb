{
  final ODatabaseRecord database=getDatabase();
  database.checkSecurity(ODatabaseSecurityResources.CLASS,ORole.PERMISSION_READ,iSchemaClass.getName().toLowerCase());
  final List<OIndexSearchResult> indexSearchResults=new ArrayList<OIndexSearchResult>();
  analyzeQueryBranch(iSchemaClass,compiledFilter.getRootCondition(),indexSearchResults);
  Collections.sort(indexSearchResults,new Comparator<OIndexSearchResult>(){
    public int compare(    final OIndexSearchResult searchResultOne,    final OIndexSearchResult searchResultTwo){
      return searchResultTwo.getFieldCount() - searchResultOne.getFieldCount();
    }
  }
);
  for (  final OIndexSearchResult searchResult : indexSearchResults) {
    final List<OIndex<?>> involvedIndexes=getInvolvedIndexes(iSchemaClass,searchResult);
    Collections.sort(involvedIndexes,IndexComparator.INSTANCE);
    for (    final OIndex index : involvedIndexes) {
      final OIndexDefinition indexDefinition=index.getDefinition();
      final OQueryOperator operator=searchResult.lastOperator;
      if (!OIndexSearchResult.isIndexEqualityOperator(operator)) {
        final String lastFiled=searchResult.lastField.getItemName(searchResult.lastField.getItemCount() - 1);
        final String relatedIndexField=indexDefinition.getFields().get(searchResult.fieldValuePairs.size());
        if (!lastFiled.equals(relatedIndexField))         continue;
      }
      final int searchResultFieldsCount=searchResult.fields().size();
      final List<Object> keyParams=new ArrayList<Object>(searchResultFieldsCount);
      for (      final String fieldName : indexDefinition.getFields().subList(0,searchResultFieldsCount)) {
        final Object fieldValue=searchResult.fieldValuePairs.get(fieldName);
        if (fieldValue != null)         keyParams.add(fieldValue);
 else         keyParams.add(searchResult.lastValue);
      }
      INDEX_OPERATION_TYPE opType=null;
      if (projections != null && projections.size() == 1) {
        final Object v=projections.values().iterator().next();
        if (v instanceof OSQLFunctionRuntime && ((OSQLFunctionRuntime)v).getFunction() instanceof OSQLFunctionCount) {
          if (!(compiledFilter.getRootCondition().getLeft() instanceof OSQLFilterCondition || compiledFilter.getRootCondition().getRight() instanceof OSQLFilterCondition))           opType=INDEX_OPERATION_TYPE.COUNT;
        }
      }
      if (opType == null)       opType=INDEX_OPERATION_TYPE.GET;
      Object result=operator.executeIndexQuery(index,opType,keyParams,fetchLimit);
      if (result == null)       continue;
      if (opType == INDEX_OPERATION_TYPE.COUNT) {
        final String projName=projections.keySet().iterator().next();
        projections.clear();
        anyFunctionAggregates=false;
        addResult(new ODocument().field(projName,result));
      }
 else       fillSearchIndexResultSet(result);
      return true;
    }
  }
  return false;
}
