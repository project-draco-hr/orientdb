{
  builder.append("KEY ");
  if (operator != null) {
    builder.append(operator.toString());
    builder.append(" [");
    boolean first=true;
    for (    OExpression x : leftExpressions) {
      if (!first) {
        builder.append(", ");
      }
      x.toString(params,builder);
      first=false;
    }
    builder.append("]");
  }
 else   if (Boolean.TRUE.equals(between)) {
    builder.append(" BETWEEN [");
    boolean first=true;
    for (    OExpression x : leftExpressions) {
      if (!first) {
        builder.append(", ");
      }
      x.toString(params,builder);
      first=false;
    }
    builder.append("] AND [");
    first=true;
    for (    OExpression x : rightExpressions) {
      if (!first) {
        builder.append(", ");
      }
      x.toString(params,builder);
      first=false;
    }
    builder.append("]");
  }
}
