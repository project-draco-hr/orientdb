{
  StringBuilder buffer=new StringBuilder();
  write(buffer,CURRENT_VERSION);
  write(buffer,name);
  write(buffer,schemaRecordId);
  write(buffer,dictionaryRecordId);
  write(buffer,indexMgrRecordId);
  write(buffer,localeLanguage);
  write(buffer,localeCountry);
  write(buffer,dateFormat);
  write(buffer,dateTimeFormat);
  phySegmentToStream(buffer,fileTemplate);
  write(buffer,clusters.size());
  for (  OStorageClusterConfiguration c : clusters) {
    if (c == null) {
      write(buffer,-1);
      continue;
    }
    write(buffer,c.getId());
    write(buffer,c.getName());
    if (c instanceof OStoragePhysicalClusterConfiguration) {
      write(buffer,"p");
      phySegmentToStream(buffer,(OStoragePhysicalClusterConfiguration)c);
      fileToStream(buffer,((OStoragePhysicalClusterConfiguration)c).holeFile);
    }
 else     if (c instanceof OStorageLogicalClusterConfiguration) {
      write(buffer,"l");
      logSegmentToStream(buffer,(OStorageLogicalClusterConfiguration)c);
    }
 else {
      write(buffer,"m");
    }
  }
  write(buffer,dataSegments.size());
  for (  OStorageDataConfiguration d : dataSegments) {
    if (d == null)     continue;
    write(buffer,d.id);
    write(buffer,d.name);
    phySegmentToStream(buffer,d);
    fileToStream(buffer,d.holeFile);
  }
  fileToStream(buffer,txSegment);
  write(buffer,txSegment.isSynchRecord());
  write(buffer,txSegment.isSynchTx());
  write(buffer,properties.size());
  for (  OEntryConfiguration e : properties)   entryToStream(buffer,e);
  if (fixedSize > 0 && buffer.length() > fixedSize) {
    try {
      final ByteArrayOutputStream compressedBuffer=new ByteArrayOutputStream();
      compressedBuffer.write(1);
      GZIPOutputStream compression=new GZIPOutputStream(compressedBuffer);
      compression.write(buffer.toString().getBytes());
      compression.close();
      if (fixedSize > 0)       if (compressedBuffer.size() > fixedSize)       throw new OConfigurationException("Configuration data exceeded size limit: " + fixedSize + " bytes");
 else       if (compressedBuffer.size() < fixedSize) {
        for (int i=compressedBuffer.size(); i < fixedSize; ++i)         compressedBuffer.write(0);
      }
      return compressedBuffer.toByteArray();
    }
 catch (    IOException ex) {
      throw new OConfigurationException("Error while compressing storage configuration",ex);
    }
  }
 else {
    buffer.insert(0,0);
    buffer.append("|");
    if (fixedSize > 0)     buffer.setLength(fixedSize);
    return buffer.toString().getBytes();
  }
}
