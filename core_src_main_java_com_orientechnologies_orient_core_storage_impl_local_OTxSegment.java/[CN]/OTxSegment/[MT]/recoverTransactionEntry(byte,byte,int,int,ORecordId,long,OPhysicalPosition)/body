{
  final OCluster cluster=storage.getClusterById(iRid.clusterId);
  if (!(cluster instanceof OClusterLocal))   return;
  final OClusterLocal logCluster=(OClusterLocal)cluster;
  OLogManager.instance().info(this,"Recovering tx <%d> by req <%d>. Operation <%d> was in status <%d> on record %s in data space %d...",txId,reqId,operation,status,iRid,oldDataOffset);
switch (operation) {
case OPERATION_CREATE:
    storage.deleteRecord(iRid,-1);
  break;
case OPERATION_UPDATE:
cluster.getPhysicalPosition(iRid.clusterPosition,ppos);
long newPosition=ppos.dataPosition;
int newSize=ppos.recordSize;
ppos.dataPosition=oldDataOffset;
storage.getClusterById(iRid.clusterId).setPhysicalPosition(iRid.clusterPosition,ppos.dataSegment,oldDataOffset,ppos.type);
storage.getDataSegment(ppos.dataSegment).handleHole(newPosition,newSize);
break;
case OPERATION_DELETE:
cluster.getPhysicalPosition(iRid.clusterPosition,ppos);
cluster.updateVersion(iRid.clusterPosition,0);
logCluster.removeHole(iRid.clusterPosition);
break;
}
}
