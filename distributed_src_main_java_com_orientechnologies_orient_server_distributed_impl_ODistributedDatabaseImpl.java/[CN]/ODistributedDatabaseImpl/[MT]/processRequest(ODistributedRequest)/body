{
  final ORemoteTask task=request.getTask();
  if (task instanceof OAbstractReplicatedTask) {
    final OLogSequenceNumber taskLastLSN=((OAbstractReplicatedTask)task).getLastLSN();
    final OLogSequenceNumber lastLSN=getLastLSN(task.getNodeSource());
    if (taskLastLSN != null && lastLSN != null && taskLastLSN.compareTo(lastLSN) < 0) {
      ODistributedServerLog.debug(this,localNodeName,null,DIRECTION.NONE,"Skipped request %s on database '%s' because LSN %s < current LSN %s",request,databaseName,taskLastLSN,lastLSN);
      return;
    }
  }
  final int[] partitionKeys=task.getPartitionKey();
  ODistributedServerLog.debug(this,localNodeName,null,DIRECTION.NONE,"Request %s on database '%s' partitionKeys=%s",request,databaseName,Arrays.toString(partitionKeys));
  if (partitionKeys.length > 1 || partitionKeys[0] < 0) {
    final Set<Integer> involvedWorkerQueues;
    if (partitionKeys.length > 1)     involvedWorkerQueues=getInvolvedQueuesByPartitionKeys(partitionKeys);
 else     involvedWorkerQueues=ALL_QUEUES;
    ODistributedServerLog.debug(this,localNodeName,null,DIRECTION.NONE,"Request %s on database '%s' involvedQueues=%s",request,databaseName,involvedWorkerQueues);
    if (involvedWorkerQueues.size() == 1)     processRequest(involvedWorkerQueues.iterator().next(),request);
 else {
      ODistributedServerLog.debug(this,localNodeName,null,DIRECTION.NONE,"Request %s on database '%s' waiting for all the previous requests to be completed",request,databaseName);
      final CountDownLatch syncLatch=new CountDownLatch(involvedWorkerQueues.size());
      final ODistributedRequest syncRequest=new ODistributedRequest(manager.getTaskFactory(),request.getId().getNodeId(),-1,databaseName,new OSynchronizedTaskWrapper(syncLatch),ODistributedRequest.EXECUTION_MODE.NO_RESPONSE);
      for (      int queue : involvedWorkerQueues)       workerThreads.get(queue).processRequest(syncRequest);
      try {
        syncLatch.await();
      }
 catch (      InterruptedException e) {
      }
      final CountDownLatch queueLatch=new CountDownLatch(1);
      int i=0;
      for (      int queue : involvedWorkerQueues) {
        final ODistributedRequest req;
        if (i++ == 0) {
          final String senderNodeName=manager.getNodeNameById(request.getId().getNodeId());
          request.setTask(new OSynchronizedTaskWrapper(queueLatch,senderNodeName,task));
          req=request;
        }
 else         req=new ODistributedRequest(manager.getTaskFactory(),request.getId().getNodeId(),-1,databaseName,new OWaitForTask(queueLatch),ODistributedRequest.EXECUTION_MODE.NO_RESPONSE);
        workerThreads.get(queue).processRequest(req);
      }
    }
  }
 else {
    processRequest(partitionKeys[0],request);
  }
}
