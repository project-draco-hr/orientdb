{
  final String[] fpParts=iFieldPath.split("\\.");
  for (  Map.Entry<String,OFetchPlanLevel> fpLevel : fetchPlan.entrySet()) {
    final String fpLevelKey=fpLevel.getKey();
    final OFetchPlanLevel fpLevelValue=fpLevel.getValue();
    if (iCurrentLevel >= fpLevelValue.depthLevelFrom && (fpLevelValue.depthLevelTo == -1 || iCurrentLevel <= fpLevelValue.depthLevelTo))     if (iFieldPath.equals(fpLevelKey))     return true;
 else     if (fpLevelKey.startsWith(iFieldPath))     return true;
    for (int i=0; i < fpParts.length; ++i) {
      if (i >= fpLevelValue.depthLevelFrom && (fpLevelValue.depthLevelTo == -1 || i <= fpLevelValue.depthLevelTo)) {
        if (fpParts[i].equals(fpLevelKey))         return true;
      }
    }
  }
  if (!fetchPlanStartsWith.isEmpty()) {
    for (    Map.Entry<String,OFetchPlanLevel> fpLevel : fetchPlanStartsWith.entrySet()) {
      final String fpLevelKey=fpLevel.getKey();
      final OFetchPlanLevel fpLevelValue=fpLevel.getValue();
      if (iCurrentLevel >= fpLevelValue.depthLevelFrom && (fpLevelValue.depthLevelTo == -1 || iCurrentLevel <= fpLevelValue.depthLevelTo)) {
        for (int i=0; i < fpParts.length; ++i) {
          if (fpParts[i].startsWith(fpLevelKey))           return true;
        }
      }
    }
  }
  return false;
}
