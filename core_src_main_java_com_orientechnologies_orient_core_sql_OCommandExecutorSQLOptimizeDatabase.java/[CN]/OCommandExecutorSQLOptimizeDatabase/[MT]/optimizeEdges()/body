{
  final ODatabaseDocumentInternal db=getDatabase();
  db.declareIntent(new OIntentMassiveInsert());
  try {
    long transformed=0;
    if (db.getTransaction().isActive())     db.commit();
    db.begin();
    try {
      final long totalEdges=db.countClass("E");
      long browsedEdges=0;
      long lastLapBrowsed=0;
      long lastLapTime=System.currentTimeMillis();
      for (      ODocument doc : db.browseClass("E")) {
        if (Thread.currentThread().isInterrupted())         break;
        browsedEdges++;
        if (doc != null) {
          if (doc.fields() == 2) {
            final ORID edgeIdentity=doc.getIdentity();
            final ODocument outV=doc.field("out");
            final ODocument inV=doc.field("in");
            final Object outField=outV.field("out_" + doc.getClassName());
            if (outField instanceof ORidBag) {
              final Iterator<OIdentifiable> it=((ORidBag)outField).iterator();
              while (it.hasNext()) {
                OIdentifiable v=it.next();
                if (edgeIdentity.equals(v)) {
                  it.remove();
                  ((ORidBag)outField).add(inV.getIdentity());
                  break;
                }
              }
            }
            outV.save();
            final Object inField=inV.field("in_" + doc.getClassName());
            if (outField instanceof ORidBag) {
              final Iterator<OIdentifiable> it=((ORidBag)inField).iterator();
              while (it.hasNext()) {
                OIdentifiable v=it.next();
                if (edgeIdentity.equals(v)) {
                  it.remove();
                  ((ORidBag)inField).add(outV.getIdentity());
                  break;
                }
              }
            }
            inV.save();
            doc.delete();
            if (++transformed % batch == 0) {
              db.commit();
              db.begin();
            }
            final long now=System.currentTimeMillis();
            if (verbose && (now - lastLapTime > 2000)) {
              final long elapsed=now - lastLapTime;
              OLogManager.instance().info(this,"Browsed %,d of %,d edges, transformed %,d so far (%,d edges/sec)",browsedEdges,totalEdges,transformed,(((browsedEdges - lastLapBrowsed) * 1000 / elapsed)));
              lastLapTime=System.currentTimeMillis();
              lastLapBrowsed=browsedEdges;
            }
          }
        }
      }
      db.commit();
    }
  finally {
      if (db.getTransaction().isActive())       db.rollback();
    }
    return "Transformed " + transformed + " regular edges in lightweight edges";
  }
  finally {
    db.declareIntent(null);
  }
}
