{
  final List<Object> keys=compositeKey.getKeys();
  final int keysSize=keys.size();
  final long oldStartPointer=pointer;
  pointer+=OIntegerSerializer.INT_SIZE;
  memory.setInt(pointer,keysSize);
  pointer+=OIntegerSerializer.INT_SIZE;
  final OBinarySerializerFactory factory=OBinarySerializerFactory.INSTANCE;
  for (  final Object key : keys) {
    final OType type=OType.getTypeByClass(key.getClass());
    @SuppressWarnings("unchecked") OBinarySerializer<Object> binarySerializer=(OBinarySerializer<Object>)factory.getObjectSerializer(type);
    memory.setByte(pointer,binarySerializer.getId());
    pointer+=OBinarySerializerFactory.TYPE_IDENTIFIER_SIZE;
    binarySerializer.serializeInDirectMemory(key,memory,pointer);
    pointer+=binarySerializer.getObjectSize(key);
  }
  memory.setInt(oldStartPointer,(int)(pointer - oldStartPointer));
}
