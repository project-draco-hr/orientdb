{
  for (  OIdentifiable identifiable : entries.keySet()) {
    if (identifiable instanceof ORecord) {
      ORecord record=(ORecord)identifiable;
      if (record.getIdentity().isNew() || record.isDirty()) {
        record.save();
      }
    }
  }
  for (  OIdentifiable identifiable : newEntries.keySet()) {
    if (identifiable instanceof ORecord) {
      ORecord record=(ORecord)identifiable;
      record.removeIdentityChangeListener(this);
      record.save();
      record.addIdentityChangeListener(this);
      entries.put(identifiable,new OModifiableInteger(1));
    }
 else     entries.put(identifiable,new OModifiableInteger(1));
  }
  newEntries.clear();
  OIntegerSerializer.INSTANCE.serialize(entries.size(),stream,offset);
  offset+=OIntegerSerializer.INT_SIZE;
  for (  Map.Entry<OIdentifiable,OModifiableInteger> entry : entries.entrySet()) {
    OLinkSerializer.INSTANCE.serialize(entry.getKey(),stream,offset);
    offset+=OLinkSerializer.RID_SIZE;
    OIntegerSerializer.INSTANCE.serialize(entry.getValue().intValue(),stream,offset);
    offset+=OIntegerSerializer.INT_SIZE;
  }
  return offset;
}
