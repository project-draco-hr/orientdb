{
  OLogManager.instance().debug(this,"Orient Server migration completed for partition %d from %s to %s",iEvent.getPartitionId(),iEvent.getOldOwner(),iEvent.getNewOwner());
  final int partitionId=iEvent.getPartitionId();
  if (!iEvent.getNewOwner().equals(Hazelcast.getCluster().getLocalMember()))   return;
  ORawBuffer buffer;
  for (  Instance instance : Hazelcast.getInstances()) {
    if (instance.getInstanceType() == InstanceType.MAP) {
      IMap<ODistributedRecordId,ORawBuffer> map=(IMap<ODistributedRecordId,ORawBuffer>)instance;
      PartitionService partitionService=Hazelcast.getPartitionService();
      Set<ODistributedRecordId> localKeys=map.localKeySet();
      for (      ODistributedRecordId localKey : localKeys) {
        if (partitionService.getPartition(localKey).getPartitionId() == partitionId) {
          buffer=(ORawBuffer)map.get(localKey);
          try {
            OStorage storage=OMapLoaderStore.getLocalStorage(localKey.dbName);
            if (localKey.rid.isValid())             storage.updateRecord(0,localKey.rid,buffer.buffer,buffer.version,buffer.recordType);
 else             storage.createRecord(0,buffer.buffer,buffer.recordType);
            OLogManager.instance().config(this,"Catched node failure, saving record on this node: " + localKey.rid,iEvent);
          }
 catch (          Exception e) {
            throw new ODistributedException("Error on saving record: " + localKey,e);
          }
        }
      }
    }
  }
}
