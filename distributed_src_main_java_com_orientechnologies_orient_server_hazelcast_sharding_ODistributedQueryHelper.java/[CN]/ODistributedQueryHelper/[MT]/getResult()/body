{
  if (select) {
    final Map<String,Object> values=new HashMap<String,Object>();
    for (    OPair<String,OSQLFunction> merger : mergers) {
      final List<Object> dataToMerge=new ArrayList<Object>();
      for (      OIdentifiable o : tempResult) {
        dataToMerge.add(((ODocument)o).field(merger.getKey()));
      }
      values.put(merger.getKey(),merger.getValue().mergeDistributedResult(dataToMerge));
    }
    if (distinct != null) {
      final List<OIdentifiable> resultToMerge=new ArrayList<OIdentifiable>(tempResult);
      tempResult.clear();
      for (      OIdentifiable record : resultToMerge) {
        Object ret=distinct.getValue().execute(record,new Object[]{((ODocument)record).field(distinct.getKey())},null);
        if (ret != null) {
          final ODocument result=new ODocument().setOrdered(true);
          result.field(distinct.getKey(),ret);
          tempResult.add(result);
        }
      }
    }
    if (anyFunctionAggregate && !tempResult.isEmpty()) {
      final OIdentifiable doc=tempResult.get(0);
      tempResult.clear();
      tempResult.add(doc);
    }
    if (!values.isEmpty()) {
      for (      Map.Entry<String,Object> entry : values.entrySet()) {
        for (        OIdentifiable item : tempResult) {
          ((ODocument)item).field(entry.getKey(),entry.getValue());
        }
      }
    }
    if (order != null) {
      ODocumentHelper.sort(tempResult,order);
    }
    if (!tempResult.isEmpty() && tempResult.get(0).getIdentity().getClusterId() == -2) {
      processed=0;
      for (      OIdentifiable id : tempResult) {
        ((ORecordId)id.getIdentity()).clusterPosition=processed++;
      }
    }
    if (limit != -1 && tempResult.size() > limit) {
      do {
        tempResult.remove(tempResult.size() - 1);
      }
 while (tempResult.size() > limit);
    }
    if (resultListener != null) {
      for (      Object o : tempResult) {
        resultListener.result(o);
      }
    }
    return tempResult;
  }
 else {
    int result=0;
    for (    OIdentifiable obj : tempResult) {
      result+=((ODocument)obj).<Integer>field(RESULT_FIELD);
    }
    return result;
  }
}
