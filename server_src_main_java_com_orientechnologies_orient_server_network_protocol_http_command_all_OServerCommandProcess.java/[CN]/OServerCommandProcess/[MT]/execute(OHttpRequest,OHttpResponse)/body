{
  final String[] parts=checkSyntax(iRequest.url,3,"Syntax error: process/<database>/<template-name>[/param]*");
  iRequest.data.commandInfo="Processes a transformation returning a JSON";
  ODatabaseDocumentTx db=null;
  try {
    db=getProfiledDatabaseInstance(iRequest);
    final String name=parts[2];
    final Object[] args=new String[parts.length - 3];
    for (int i=3; i < parts.length; ++i)     args[i - 3]=parts[i];
    final ODocument context=new ODocument();
    context.field("request",new OHttpRequestWrapper(iRequest,(String[])args));
    context.field("response",new OHttpResponseWrapper(iResponse));
    final String templateContent=loadTemplate(name);
    final ODocument template=new ODocument();
    template.fromJSON(templateContent,"noMap");
    final Object result=OProcessorManager.getInstance().process("configurable",template,context,iRequest.httpMethod.equals("GET"));
    iResponse.writeResult(result,"");
  }
 catch (  OCommandScriptException e) {
    final StringBuilder msg=new StringBuilder();
    for (Exception currentException=e; currentException != null; currentException=(Exception)currentException.getCause()) {
      if (msg.length() > 0)       msg.append("\n");
      msg.append(currentException.getMessage());
    }
    iResponse.send(OHttpUtils.STATUS_BADREQ_CODE,OHttpUtils.STATUS_BADREQ_DESCRIPTION,OHttpUtils.CONTENT_TEXT_PLAIN,msg.toString(),null,true);
  }
 finally {
    if (db != null)     OSharedDocumentDatabase.release(db);
  }
  return false;
}
