{
  if (database.getURL().startsWith("remote:"))   return;
  if (database.exists())   ODatabaseHelper.deleteDatabase(database,getStorageType());
  database.registerListener(new DbListener());
  final int baseOnClose=onClose;
  final int baseOnCreate=onCreate;
  final int baseOnDelete=onDelete;
  ODatabaseHelper.createDatabase(database,url,getStorageType());
  final int baseOnBeforeTxBegin=onBeforeTxBegin;
  final int baseOnBeforeTxCommit=onBeforeTxCommit;
  final int baseOnAfterTxCommit=onAfterTxCommit;
  Assert.assertEquals(onCreate,baseOnCreate + 1);
  database.open("admin","admin");
  Assert.assertEquals(onOpen,1);
  database.begin(TXTYPE.OPTIMISTIC);
  Assert.assertEquals(onBeforeTxBegin,baseOnBeforeTxBegin + 1);
  database.newInstance().save();
  database.commit();
  Assert.assertEquals(onBeforeTxCommit,baseOnBeforeTxCommit + 1);
  Assert.assertEquals(onAfterTxCommit,baseOnAfterTxCommit + 1);
  database.begin(TXTYPE.OPTIMISTIC);
  Assert.assertEquals(onBeforeTxBegin,baseOnBeforeTxBegin + 2);
  database.newInstance().save();
  database.rollback();
  Assert.assertEquals(onBeforeTxRollback,1);
  Assert.assertEquals(onAfterTxRollback,1);
  ODatabaseHelper.deleteDatabase(database,getStorageType());
  Assert.assertEquals(onClose,baseOnClose + 1);
  Assert.assertEquals(onDelete,baseOnDelete + 1);
  ODatabaseHelper.createDatabase(database,url,getStorageType());
}
