{
  setDataCommandInfo("Replication command");
  final ODocument request=new ODocument(channel.readBytes());
  final ODistributedServerManager manager=OServerMain.server().getHandler(ODistributedServerManager.class);
  ODocument response=null;
  final String operation=request.field("operation");
  if (operation.equals("start")) {
    checkServerAccess("server.replication.start");
    final ODistributedNode node=manager.getReplicator().getOrCreateDistributedNode((String)request.field("node"));
    final ODistributedDatabaseInfo db=node.getOrCreateDatabaseEntry((String)request.field("db"));
    node.startDatabaseReplication(db);
  }
 else   if (operation.equals("stop")) {
    checkServerAccess("server.replication.stop");
    final ODistributedNode node=manager.getReplicator().getOrCreateDistributedNode((String)request.field("node"));
    final ODistributedDatabaseInfo db=node.getOrCreateDatabaseEntry((String)request.field("db"));
    node.stopDatabaseReplication(db);
  }
 else   if (operation.equals("align")) {
    checkServerAccess("server.replication.align");
    final ODistributedNode node=manager.getReplicator().getOrCreateDistributedNode((String)request.field("node"));
    final ODistributedDatabaseInfo db=node.getOrCreateDatabaseEntry((String)request.field("db"));
    node.startDatabaseAlignment(node.getOrCreateDatabaseEntry(db.databaseName),(String)request.field("options"));
  }
 else   if (operation.equals("getJournal")) {
    checkServerAccess("server.replication.getJournal");
    response=new ODocument();
    final ORecordOperation op=new ORecordOperation();
    final OOperationLog log=manager.getReplicator().getOperationLog((String)request.field("node"),(String)request.field("db"));
    final int tot=log.totalEntries();
    for (int i=0; i < tot; ++i) {
      log.getEntry(i,op);
      final String value=String.valueOf(op.type) + '-' + op.record.getIdentity()+ '-'+ op.date;
      response.field(String.valueOf(op.serial),value);
    }
  }
 else   if (operation.equals("resetJournal")) {
    checkServerAccess("server.replication.resetJournal");
    response=new ODocument();
    final OOperationLog log=manager.getReplicator().getOperationLog((String)request.field("node"),(String)request.field("db"));
    response.field("removedEntries",log.totalEntries());
    log.reset();
  }
  sendResponse(response);
}
