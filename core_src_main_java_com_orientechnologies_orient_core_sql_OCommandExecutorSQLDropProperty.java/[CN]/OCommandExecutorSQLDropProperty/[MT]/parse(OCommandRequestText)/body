{
  iRequest.getDatabase().checkSecurity(ODatabaseSecurityResources.COMMAND,ORole.PERMISSION_DELETE);
  init(iRequest.getDatabase(),iRequest.getText());
  final StringBuilder word=new StringBuilder();
  int oldPos=0;
  int pos=OSQLHelper.nextWord(text,textUpperCase,oldPos,word,true);
  if (pos == -1 || !word.toString().equals(KEYWORD_DROP))   throw new OCommandSQLParsingException("Keyword " + KEYWORD_DROP + " not found",text,oldPos);
  pos=OSQLHelper.nextWord(text,textUpperCase,pos,word,true);
  if (pos == -1 || !word.toString().equals(KEYWORD_PROPERTY))   throw new OCommandSQLParsingException("Keyword " + KEYWORD_PROPERTY + " not found",text,oldPos);
  pos=OSQLHelper.nextWord(text,textUpperCase,pos,word,false);
  if (pos == -1)   throw new OCommandSQLParsingException("Expected <class>.<property>",text,pos);
  String[] parts=word.toString().split("\\.");
  if (parts.length != 2)   throw new OCommandSQLParsingException("Expected <class>.<property>",text,pos);
  className=parts[0];
  if (className == null)   throw new OCommandSQLParsingException("Class not found",text,pos);
  fieldName=parts[1];
  return this;
}
