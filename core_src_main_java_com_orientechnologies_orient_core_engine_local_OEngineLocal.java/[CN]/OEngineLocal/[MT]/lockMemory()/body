{
  if (!OGlobalConfiguration.FILE_MMAP_USE_OLD_MANAGER.getValueAsBoolean() && OGlobalConfiguration.FILE_MMAP_LOCK_MEMORY.getValueAsBoolean()) {
    try {
      Class<?> MemoryLocker=ClassLoader.getSystemClassLoader().loadClass("com.orientechnologies.nio.MemoryLocker");
      Method lockMemory=MemoryLocker.getMethod("lockMemory",boolean.class);
      lockMemory.invoke(null,OGlobalConfiguration.JNA_DISABLE_USE_SYSTEM_LIBRARY.getValueAsBoolean());
    }
 catch (    ClassNotFoundException e) {
      OLogManager.instance().config(null,"[OEngineLocal.createStorage] Cannot lock virtual memory, the orientdb-nativeos.jar is not in classpath or there is not a native implementation for the current OS: " + System.getProperty("os.name") + " v."+ System.getProperty("os.name"));
    }
catch (    InvocationTargetException e) {
      OLogManager.instance().config(null,"[OEngineLocal.createStorage] Cannot lock virtual memory, the orientdb-nativeos.jar is not in classpath or there is not a native implementation for the current OS: " + System.getProperty("os.name") + " v."+ System.getProperty("os.name"));
    }
catch (    NoSuchMethodException e) {
      throw new OMemoryLockException("Error while locking memory",e);
    }
catch (    IllegalAccessException e) {
      throw new OMemoryLockException("Error while locking memory",e);
    }
  }
}
