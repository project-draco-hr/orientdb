{
  final AtomicInteger atomicInteger=new AtomicInteger(0);
  final OProgressListener progressListener=new OProgressListener(){
    @Override public void onBegin(    final Object iTask,    final long iTotal,    Object metadata){
      atomicInteger.incrementAndGet();
    }
    @Override public boolean onProgress(    final Object iTask,    final long iCounter,    final float iPercent){
      return true;
    }
    @Override public void onCompletition(    final Object iTask,    final boolean iSucceed){
      atomicInteger.incrementAndGet();
    }
  }
;
  final OIndexManagerProxy indexManager=database.getMetadata().getIndexManager();
  final OIndex result=indexManager.createIndex("compositetwo",OClass.INDEX_TYPE.NOTUNIQUE.toString(),new OCompositeIndexDefinition(CLASS_NAME,Arrays.asList(new OPropertyIndexDefinition(CLASS_NAME,"fOne",OType.INTEGER),new OPropertyIndexDefinition(CLASS_NAME,"fTwo",OType.STRING),new OPropertyIndexDefinition(CLASS_NAME,"fThree",OType.BOOLEAN)),-1),new int[]{database.getClusterIdByName(CLASS_NAME)},progressListener,null);
  assertEquals(result.getName(),"compositetwo");
  assertEquals(atomicInteger.get(),2);
  indexManager.reload();
  assertEquals(database.getMetadata().getIndexManager().getClassIndex(CLASS_NAME,"compositetwo").getName(),result.getName());
}
