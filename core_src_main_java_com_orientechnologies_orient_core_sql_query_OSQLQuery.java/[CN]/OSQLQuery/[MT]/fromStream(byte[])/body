{
  final OMemoryInputStream buffer=new OMemoryInputStream(iStream);
  try {
    if (!OFetchHelper.isFetchPlanValid(fetchPlan)) {
      throw new OSerializationException("Fetch plan '" + fetchPlan + "' is invalid");
    }
    text=buffer.getAsString();
    limit=buffer.getAsInteger();
    beginRange=new ORecordId().fromStream(buffer.getAsByteArrayFixed(ORecordId.PERSISTENT_SIZE));
    endRange=new ORecordId().fromStream(buffer.getAsByteArrayFixed(ORecordId.PERSISTENT_SIZE));
    fetchPlan=buffer.getAsString();
    if (fetchPlan.length() == 0)     fetchPlan=null;
    byte[] paramBuffer=buffer.getAsByteArray();
    if (paramBuffer.length == 0)     parameters=null;
 else {
      final ODocument param=new ODocument();
      param.fromStream(paramBuffer);
      Map<String,Object> params=param.rawField("params");
      parameters=new HashMap<Object,Object>();
      for (      Entry<String,Object> p : params.entrySet()) {
        if (Character.isDigit(p.getKey().charAt(0)))         parameters.put(Integer.parseInt(p.getKey()),p.getValue());
 else         parameters.put(p.getKey(),p.getValue());
      }
    }
  }
 catch (  IOException e) {
    throw new OSerializationException("Error while unmarshalling OSQLQuery",e);
  }
  return this;
}
