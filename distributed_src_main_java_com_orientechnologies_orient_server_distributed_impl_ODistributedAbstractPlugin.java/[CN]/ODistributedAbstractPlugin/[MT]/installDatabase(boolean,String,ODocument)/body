{
  final ODistributedConfiguration cfg=new ODistributedConfiguration(config);
  final Collection<String> nodes=cfg.getServers(null,nodeName);
  getAvailableNodes(nodes,databaseName);
  if (nodes.size() == 0) {
    ODistributedServerLog.info(this,nodeName,null,DIRECTION.NONE,"Cannot install database '%s' on local node, because no servers are ONLINE",databaseName);
    return false;
  }
  ODistributedServerLog.info(this,nodeName,null,DIRECTION.NONE,"Current node started as %s for database '%s'",cfg.getServerRole(nodeName),databaseName);
  final Set<String> configuredDatabases=serverInstance.getAvailableStorageNames().keySet();
  if (!iStartup && configuredDatabases.contains(databaseName))   return false;
  removeStorage(databaseName);
  getStorage(databaseName);
  updateCachedDatabaseConfiguration(databaseName,config,true,false);
  final ODistributedDatabaseImpl distrDatabase=messageService.registerDatabase(databaseName);
  final Boolean autoDeploy=config.field("autoDeploy");
  if (autoDeploy == null || !autoDeploy) {
    setDatabaseStatus(nodeName,databaseName,DB_STATUS.ONLINE);
    return false;
  }
  boolean databaseInstalled;
  if (!distrDatabase.exists() || distrDatabase.getSyncConfiguration().isEmpty()) {
    databaseInstalled=requestFullDatabase(distrDatabase,databaseName,iStartup);
  }
 else {
    try {
      databaseInstalled=requestDatabaseDelta(distrDatabase,databaseName);
    }
 catch (    ODistributedDatabaseDeltaSyncException e) {
      removeStorage(databaseName);
      databaseInstalled=requestFullDatabase(distrDatabase,databaseName,iStartup);
    }
  }
  return databaseInstalled;
}
