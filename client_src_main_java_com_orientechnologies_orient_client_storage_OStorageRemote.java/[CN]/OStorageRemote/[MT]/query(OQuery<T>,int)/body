{
  checkConnection();
  if (!(iQuery instanceof OSerializableStream))   throw new OQueryExecutionException("Can't serialize the query to being executed to the server side.");
  OSerializableStream query=(OSerializableStream)iQuery;
  final List<T> result=new ArrayList<T>();
  do {
    boolean locked=acquireExclusiveLock();
    OStorageRemoteThreadLocal.INSTANCE.set(Boolean.TRUE);
    try {
      OAsynchQuery<ORecordSchemaAware<?>> aquery=(OAsynchQuery<ORecordSchemaAware<?>>)iQuery;
      network.writeByte(OChannelBinaryProtocol.QUERY);
      network.writeInt(iLimit);
      network.writeBytes(OStreamSerializerAnyStreamable.INSTANCE.toStream(query));
      network.flush();
      readStatus();
      while (network.readByte() == 1) {
        ORecordSchemaAware<?> record=(ORecordSchemaAware<?>)readRecordFromNetwork(iQuery.getDatabase());
        if (record == null)         break;
        try {
          if (!aquery.getResultListener().result(record)) {
            while (network.in.available() > 0)             network.in.read();
            break;
          }
        }
 catch (        Throwable t) {
        }
      }
      break;
    }
 catch (    Exception e) {
      if (handleException("Error on executing query: " + ((OSQLQuery<?>)iQuery).text(),e))       break;
    }
 finally {
      OStorageRemoteThreadLocal.INSTANCE.set(Boolean.FALSE);
      releaseExclusiveLock(locked);
    }
  }
 while (true);
  return result;
}
