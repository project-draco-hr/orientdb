{
  if (iRecord == null)   return true;
  if (projections != null || groupByFields != null && !groupByFields.isEmpty()) {
    if (groupedResult == null) {
      iRecord=ORuntimeResult.getProjectionResult(getTemporaryRIDCounter(),projections,context,iRecord);
      if (iRecord == null)       return true;
    }
 else {
      Object fieldValue=null;
      if (groupByFields != null && !groupByFields.isEmpty()) {
        if (groupByFields.size() > 1) {
          final ODocument doc=iRecord.getRecord();
          final Object[] fields=new Object[groupByFields.size()];
          for (int i=0; i < groupByFields.size(); ++i) {
            final String field=groupByFields.get(i);
            if (field.startsWith("$"))             fields[i]=context.getVariable(field);
 else             fields[i]=doc.field(field);
          }
          fieldValue=fields;
        }
 else {
          final String field=groupByFields.get(0);
          if (field != null) {
            if (field.startsWith("$"))             fieldValue=context.getVariable(field);
 else             fieldValue=((ODocument)iRecord.getRecord()).field(field);
          }
        }
      }
      getProjectionGroup(fieldValue).applyRecord(iRecord);
      return true;
    }
  }
  if (tipLimitThreshold > 0 && resultCount > tipLimitThreshold) {
    reportTip(String.format("Query '%s' returned a result set with more than %d records. Reduce it to improve performance and reduce RAM used",parserText,tipLimitThreshold));
    tipLimitThreshold=0;
  }
  boolean result=true;
  if ((fullySortedByIndex || orderedFields.isEmpty()) && expandTarget == null) {
    if (request.getResultListener() != null)     result=request.getResultListener().result(iRecord);
  }
 else {
    if (tempResult == null)     tempResult=new ArrayList<OIdentifiable>();
    ((Collection<OIdentifiable>)tempResult).add(iRecord);
  }
  return result;
}
