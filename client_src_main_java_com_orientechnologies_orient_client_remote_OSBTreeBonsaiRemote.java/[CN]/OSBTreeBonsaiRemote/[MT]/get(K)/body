{
  final OStorageRemote storage=(OStorageRemote)ODatabaseRecordThreadLocal.INSTANCE.get().getStorage().getUnderlying();
  final byte[] keyStream=new byte[keySerializer.getObjectSize(key)];
  keySerializer.serialize(key,keyStream,0);
  return storage.networkOperation(new OStorageRemoteOperation<V>(){
    @Override public V execute(    final OChannelBinaryAsynchClient client,    OStorageRemoteSession session) throws IOException {
      storage.beginRequest(client,OChannelBinaryProtocol.REQUEST_SBTREE_BONSAI_GET,session);
      OCollectionNetworkSerializer.INSTANCE.writeCollectionPointer(client,getCollectionPointer());
      client.writeBytes(keyStream);
      storage.endRequest(client);
      byte[] stream;
      try {
        storage.beginResponse(client,session);
        stream=client.readBytes();
      }
  finally {
        storage.endResponse(client);
      }
      final byte serializerId=OByteSerializer.INSTANCE.deserializeLiteral(stream,0);
      final OBinarySerializer<V> serializer=(OBinarySerializer<V>)OBinarySerializerFactory.getInstance().getObjectSerializer(serializerId);
      return serializer.deserialize(stream,OByteSerializer.BYTE_SIZE);
    }
  }
,"Cannot get by key from sb-tree bonsai");
}
