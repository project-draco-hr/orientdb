{
  if (iValue == null)   return;
  if (iType == null)   iType=OType.EMBEDDED;
switch (iType) {
case STRING:
    iBuffer.append('"');
  iBuffer.append(OStringSerializerHelper.encode(iValue.toString()));
iBuffer.append('"');
break;
case BOOLEAN:
case INTEGER:
iBuffer.append(String.valueOf(iValue));
break;
case FLOAT:
iBuffer.append(String.valueOf(iValue));
iBuffer.append('f');
break;
case LONG:
iBuffer.append(String.valueOf(iValue));
iBuffer.append('l');
break;
case DOUBLE:
iBuffer.append(String.valueOf(iValue));
iBuffer.append('d');
break;
case SHORT:
iBuffer.append(String.valueOf(iValue));
iBuffer.append('s');
break;
case BYTE:
if (iValue instanceof Character) iBuffer.append((int)((Character)iValue).charValue());
 else if (iValue instanceof String) iBuffer.append(String.valueOf((int)((String)iValue).charAt(0)));
 else iBuffer.append(String.valueOf(iValue));
iBuffer.append('b');
break;
case BINARY:
iBuffer.append('"');
if (iValue instanceof Byte) iBuffer.append(new String(new byte[]{((Byte)iValue).byteValue()}));
 else iBuffer.append(OBase64Utils.encodeBytes((byte[])iValue));
iBuffer.append('"');
break;
case DATE:
if (iValue instanceof Date) iBuffer.append(((Date)iValue).getTime());
 else iBuffer.append(iValue);
iBuffer.append('t');
break;
case LINK:
iBuffer.append('#');
if (iValue instanceof ORecordId) ((ORecordId)iValue).toString(iBuffer);
 else ((ORecord<?>)iValue).getIdentity().toString(iBuffer);
break;
case EMBEDDEDMAP:
iBuffer.append(ORecordSerializerSchemaAware2CSV.INSTANCE.embeddedMapToStream(iDatabase,null,null,null,iValue,null,true));
break;
case EMBEDDED:
iBuffer.append(OStringSerializerAnyStreamable.INSTANCE.toStream(iDatabase,iValue));
break;
default :
throw new IllegalArgumentException("Type " + iType + " not supported to convert value: "+ iValue);
}
}
