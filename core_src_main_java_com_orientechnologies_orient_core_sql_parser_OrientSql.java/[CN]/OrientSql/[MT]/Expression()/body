{
  OExpression jjtn000=new OExpression(JJTEXPRESSION);
  boolean jjtc000=true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
  Token token;
  try {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case NULL:
      jj_consume_token(NULL);
    jjtn000.value=null;
  break;
default :
jj_la1[104]=jj_gen;
if (jj_2_48(2)) {
token=jj_consume_token(STRING_LITERAL);
jjtn000.value=token.image.substring(1,token.image.length() - 1);
}
 else {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case CHARACTER_LITERAL:
  token=jj_consume_token(CHARACTER_LITERAL);
jjtn000.value=token.image.substring(1,token.image.length() - 1);
break;
default :
jj_la1[105]=jj_gen;
if (jj_2_49(2147483647)) {
jjtn000.value=Rid();
}
 else if (jj_2_50(2147483647)) {
jjtn000.value=InputParameter();
}
 else {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case TO:
case VALUES:
case SET:
case ADD:
case PUT:
case MERGE:
case CONTENT:
case REMOVE:
case ORDER:
case GROUP:
case OFFSET:
case RECORD:
case THIS:
case RECORD_ATTRIBUTE:
case INTEGER_LITERAL:
case FLOATING_POINT_LITERAL:
case LPAREN:
case LBRACKET:
case HOOK:
case COLON:
case MINUS:
case IN:
case KEY:
case IDENTIFIER:
jjtn000.value=MathExpression();
break;
case LBRACE:
jjtn000.value=Json();
break;
case TRUE:
jj_consume_token(TRUE);
jjtn000.value=true;
break;
case FALSE:
jj_consume_token(FALSE);
jjtn000.value=false;
break;
default :
jj_la1[106]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
}
}
}
}
jjtree.closeNodeScope(jjtn000,true);
jjtc000=false;
jjtn000.jjtSetLastToken(getToken(0));
{
if (true) return jjtn000;
}
}
 catch (Throwable jjte000) {
if (jjtc000) {
jjtree.clearNodeScope(jjtn000);
jjtc000=false;
}
 else {
jjtree.popNode();
}
if (jjte000 instanceof RuntimeException) {
{
if (true) throw (RuntimeException)jjte000;
}
}
if (jjte000 instanceof ParseException) {
{
if (true) throw (ParseException)jjte000;
}
}
{
if (true) throw (Error)jjte000;
}
}
 finally {
if (jjtc000) {
jjtree.closeNodeScope(jjtn000,true);
jjtn000.jjtSetLastToken(getToken(0));
}
}
throw new Error("Missing return statement in function");
}
