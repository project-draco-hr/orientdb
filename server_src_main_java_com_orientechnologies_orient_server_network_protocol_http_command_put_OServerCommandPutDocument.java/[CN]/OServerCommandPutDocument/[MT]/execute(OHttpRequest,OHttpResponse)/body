{
  final String[] urlParts=checkSyntax(iRequest.url,2,"Syntax error: document/<database>[/<record-id>]");
  iRequest.data.commandInfo="Edit Document";
  ODatabaseDocumentTx db=null;
  ORecordId recordId=null;
  final ODocument doc;
  try {
    db=getProfiledDatabaseInstance(iRequest);
    if (urlParts.length > 2) {
      final int parametersPos=urlParts[2].indexOf('?');
      final String rid=parametersPos > -1 ? urlParts[2].substring(0,parametersPos) : urlParts[2];
      recordId=new ORecordId(rid);
      if (!recordId.isValid())       throw new IllegalArgumentException("Invalid Record ID in request: " + recordId);
    }
 else     recordId=new ORecordId();
    doc=new ODocument();
    doc.fromJSON(iRequest.content);
    if (!recordId.isValid())     recordId=(ORecordId)doc.getIdentity();
 else     doc.setIdentity(recordId);
    if (!recordId.isValid())     throw new IllegalArgumentException("Invalid Record ID in request: " + recordId);
    final ODocument currentDocument=db.load(recordId);
    if (currentDocument == null) {
      iResponse.send(OHttpUtils.STATUS_NOTFOUND_CODE,OHttpUtils.STATUS_NOTFOUND_DESCRIPTION,OHttpUtils.CONTENT_TEXT_PLAIN,"Record " + recordId + " was not found.",null);
      return false;
    }
    currentDocument.merge(doc,false,false);
    currentDocument.setVersion(doc.getVersion());
    currentDocument.save();
  }
  finally {
    if (db != null)     OSharedDocumentDatabase.release(db);
  }
  iResponse.send(OHttpUtils.STATUS_OK_CODE,"OK",OHttpUtils.CONTENT_TEXT_PLAIN,"Record " + recordId + " updated successfully.",null);
  return false;
}
