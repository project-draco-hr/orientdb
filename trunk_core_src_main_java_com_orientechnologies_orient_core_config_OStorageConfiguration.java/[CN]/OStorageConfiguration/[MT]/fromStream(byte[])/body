{
  String[] values=new String(iStream).split("\\|");
  int index=0;
  version=Integer.parseInt(read(values[index++]));
  name=read(values[index++]);
  dateFormat=read(values[index++]);
  dateTimeFormat=read(values[index++]);
  int size=Integer.parseInt(read(values[index++]));
  physicalClusters=new ArrayList<OStoragePhysicalClusterConfiguration>(size);
  OStoragePhysicalClusterConfiguration phyCluster;
  for (int i=0; i < size; ++i) {
    phyCluster=new OStoragePhysicalClusterConfiguration();
    index=phySegmentFromStream(values,index,phyCluster);
    phyCluster.holeFile=new OStorageClusterHoleConfiguration(phyCluster,read(values[index++]),read(values[index++]),read(values[index++]));
    physicalClusters.add(phyCluster);
  }
  size=Integer.parseInt(read(values[index++]));
  logicalClusters=new ArrayList<OStorageLogicalClusterConfiguration>(size);
  OStorageLogicalClusterConfiguration logCluster;
  for (int i=0; i < size; ++i) {
    logCluster=new OStorageLogicalClusterConfiguration(read(values[index++]),Integer.parseInt(read(values[index++])),new ORecordId(values[index++]));
    logicalClusters.add(logCluster);
  }
  size=Integer.parseInt(read(values[index++]));
  dataSegments=new ArrayList<OStorageDataConfiguration>(size);
  OStorageDataConfiguration data;
  for (int i=0; i < size; ++i) {
    data=new OStorageDataConfiguration();
    index=phySegmentFromStream(values,index,data);
    data.holeFile=new OStorageDataHoleConfiguration(data,read(values[index++]),read(values[index++]),read(values[index++]));
    dataSegments.add(data);
  }
  txSegment=new OStorageTxConfiguration(read(values[index++]),read(values[index++]),read(values[index++]),read(values[index++]),read(values[index++]));
  size=Integer.parseInt(read(values[index++]));
  properties=new ArrayList<OStorageEntryConfiguration>(size);
  for (int i=0; i < size; ++i) {
    properties.add(new OStorageEntryConfiguration(read(values[index++]),read(values[index++])));
  }
  return this;
}
