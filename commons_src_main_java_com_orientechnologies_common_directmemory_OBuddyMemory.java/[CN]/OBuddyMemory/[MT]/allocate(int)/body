{
  int level=Integer.SIZE - Integer.numberOfLeadingZeros((size + SYSTEM_INFO_SIZE - 1) / minChunkSize);
  if (level > maxLevel) {
    return NULL_POINTER;
  }
  int pointer=freeListHeader[level];
  if (pointer != NULL_POINTER) {
    removeNodeFromHead(level);
    buffer[pointer]=TAG_ALLOCATED;
  }
 else {
    int currentLevel=level + 1;
    while (freeListHeader[currentLevel] == NULL_POINTER) {
      currentLevel++;
      if (currentLevel > maxLevel) {
        return NULL_POINTER;
      }
    }
    pointer=removeNodeFromHead(currentLevel);
    do {
      pointer=split(pointer);
      currentLevel--;
      buffer[pointer + TAG_OFFSET]=(currentLevel == level) ? TAG_ALLOCATED : TAG_FREE;
      buffer[pointer + SIZE_OFFSET]=(byte)(currentLevel & 0xFF);
    }
 while (currentLevel > level);
  }
  return pointer;
}
