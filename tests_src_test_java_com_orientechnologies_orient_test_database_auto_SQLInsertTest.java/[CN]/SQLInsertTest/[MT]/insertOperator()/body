{
  if (database.getURL().startsWith("local:"))   return;
  database.open("admin","admin");
  final int clId=database.addCluster("anotherdefault",OStorage.CLUSTER_TYPE.PHYSICAL);
  final OClass profileClass=database.getMetadata().getSchema().getClass("Account");
  profileClass.addClusterId(clId);
  int addressId=database.getMetadata().getSchema().getClass("Address").getDefaultClusterId();
  List<OClusterPosition> positions=getValidPositions(addressId);
  ODocument doc=(ODocument)database.command(new OCommandSQL("insert into Profile (name, surname, salary, location, dummy) values ('Luca','Smith', 109.9, #" + addressId + ":"+ positions.get(3)+ ", 'hooray')")).execute();
  Assert.assertTrue(doc != null);
  Assert.assertEquals(doc.field("name"),"Luca");
  Assert.assertEquals(doc.field("surname"),"Smith");
  Assert.assertEquals(((Number)doc.field("salary")).floatValue(),109.9f);
  Assert.assertEquals(doc.field("location",OType.LINK),new ORecordId(addressId,positions.get(3)));
  Assert.assertEquals(doc.field("dummy"),"hooray");
  doc=(ODocument)database.command(new OCommandSQL("insert into Profile SET name = 'Luca', surname = 'Smith', salary = 109.9, location = #" + addressId + ":"+ positions.get(3)+ ", dummy =  'hooray'")).execute();
  database.delete(doc);
  Assert.assertTrue(doc != null);
  Assert.assertEquals(doc.field("name"),"Luca");
  Assert.assertEquals(doc.field("surname"),"Smith");
  Assert.assertEquals(((Number)doc.field("salary")).floatValue(),109.9f);
  Assert.assertEquals(doc.field("location",OType.LINK),new ORecordId(addressId,positions.get(3)));
  Assert.assertEquals(doc.field("dummy"),"hooray");
  database.close();
}
