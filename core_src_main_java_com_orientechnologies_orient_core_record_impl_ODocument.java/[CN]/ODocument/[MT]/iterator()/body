{
  checkForLoading();
  checkForFields();
  if (_fieldValues == null)   return OEmptyIterator.INSTANCE;
  final Iterator<Entry<String,Object>> iterator=_fieldValues.entrySet().iterator();
  return new Iterator<Entry<String,Object>>(){
    private Entry<String,Object> current;
    public boolean hasNext(){
      return iterator.hasNext();
    }
    public Entry<String,Object> next(){
      current=iterator.next();
      return current;
    }
    public void remove(){
      iterator.remove();
      if (_trackingChanges) {
        if (_fieldOriginalValues == null)         _fieldOriginalValues=new HashMap<String,Object>();
        if (!_fieldOriginalValues.containsKey(current.getKey())) {
          _fieldOriginalValues.put(current.getKey(),current.getValue());
        }
      }
      removeCollectionChangeListener(current.getKey());
      removeCollectionTimeLine(current.getKey());
    }
  }
;
}
