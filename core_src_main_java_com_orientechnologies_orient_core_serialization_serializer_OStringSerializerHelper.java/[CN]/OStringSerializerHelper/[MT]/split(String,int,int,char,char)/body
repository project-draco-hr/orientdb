{
  final ArrayList<String> parts=new ArrayList<String>();
  final StringBuilder buffer=new StringBuilder();
  for (int i=iStartPosition; i < iEndPosition; ++i) {
    char c=iSource.charAt(i);
    if (c == iRecordSeparator) {
      parts.add(buffer.toString());
      buffer.setLength(0);
    }
 else {
      if (iJumpCharacters.length > 0 && buffer.length() == 0) {
        if (!isCharPresent(c,iJumpCharacters)) {
          buffer.append(c);
        }
      }
 else       buffer.append(c);
    }
  }
  if (iJumpCharacters.length > 0 && buffer.length() > 0) {
    char b;
    int newSize=0;
    boolean found;
    for (int i=buffer.length() - 1; i >= 0; --i) {
      b=buffer.charAt(i);
      found=false;
      for (      char j : iJumpCharacters) {
        if (j == b) {
          found=true;
          ++newSize;
          break;
        }
      }
      if (!found)       break;
    }
    if (newSize > 0)     buffer.setLength(buffer.length() - newSize);
  }
  parts.add(buffer.toString());
  return parts;
}
