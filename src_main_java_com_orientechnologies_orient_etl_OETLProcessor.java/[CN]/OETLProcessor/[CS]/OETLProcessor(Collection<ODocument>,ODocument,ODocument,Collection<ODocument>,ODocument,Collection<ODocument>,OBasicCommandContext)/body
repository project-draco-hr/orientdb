{
  context=iContext;
  try {
    String name;
    beginBlocks=new ArrayList<OBlock>();
    if (iBeginBlocks != null)     for (    ODocument block : iBeginBlocks) {
      name=block.fieldNames()[0];
      final OBlock b=factory.getBlock(name);
      beginBlocks.add(b);
      configureComponent(b,(ODocument)block.field(name),iContext);
      b.execute();
    }
    if (iSource != null) {
      name=iSource.fieldNames()[0];
      source=factory.getSource(name);
      configureComponent(source,(ODocument)iSource.field(name),iContext);
    }
 else     source=factory.getSource("input");
    name=iExtractor.fieldNames()[0];
    extractor=factory.getExtractor(name);
    configureComponent(extractor,(ODocument)iExtractor.field(name),iContext);
    if (iLoader != null) {
      name=iLoader.fieldNames()[0];
      loader=factory.getLoader(name);
      configureComponent(loader,(ODocument)iLoader.field(name),iContext);
    }
 else     loader=factory.getLoader("output");
    transformers=new ArrayList<OTransformer>();
    if (iTransformers != null)     for (    ODocument t : iTransformers) {
      name=t.fieldNames()[0];
      final OTransformer tr=factory.getTransformer(name);
      transformers.add(tr);
      configureComponent(tr,(ODocument)t.field(name),iContext);
    }
    endBlocks=new ArrayList<OBlock>();
    if (iEndBlocks != null)     for (    ODocument block : iEndBlocks) {
      name=block.fieldNames()[0];
      final OBlock b=factory.getBlock(name);
      endBlocks.add(b);
      configureComponent(b,(ODocument)block.field(name),iContext);
    }
  }
 catch (  Exception e) {
    throw new OConfigurationException("Error on creating ETL processor",e);
  }
}
