{
  if (enginePool != null)   throw new IllegalStateException("OGremlinHelper instance already created");
  enginePool=new OResourcePool<Object,GremlinScriptEngine>(maxEngines,new OResourcePoolListener<Object,GremlinScriptEngine>(){
    @Override public GremlinScriptEngine createNewResource(    Object iKey,    Object... iAdditionalArgs){
      try {
        return new GremlinScriptEngine();
      }
 catch (      Throwable e) {
        throw new OConfigurationException("Error on loading Gremlin engine",e);
      }
    }
    @Override public GremlinScriptEngine reuseResource(    Object iKey,    Object[] iAdditionalArgs,    GremlinScriptEngine iReusedEngine){
      iReusedEngine.getBindings(ScriptContext.ENGINE_SCOPE).clear();
      return iReusedEngine;
    }
  }
);
  graphPool=new OResourcePool<String,OrientGraph>(maxGraphs,new OResourcePoolListener<String,OrientGraph>(){
    @Override public OrientGraph createNewResource(    final String iKey,    final Object... iAdditionalArgs){
      final String[] parts=iKey.split(",");
      return new OrientGraph(parts[1]);
    }
    @Override public OrientGraph reuseResource(    final String iKey,    final Object[] iAdditionalArgs,    final OrientGraph iReusedGraph){
      return iReusedGraph;
    }
  }
);
}
