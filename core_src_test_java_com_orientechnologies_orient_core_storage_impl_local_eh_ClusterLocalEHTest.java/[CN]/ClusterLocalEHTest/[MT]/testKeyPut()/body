{
  for (int i=0; i < KEYS_COUNT; i++) {
    final ONodeId nodeId=ONodeId.valueOf(i).shiftLeft(128);
    final OPhysicalPosition position=new OPhysicalPosition(new OClusterPositionNodeId(nodeId));
    Assert.assertTrue(extendibleHashingCluster.addPhysicalPosition(position),"i " + i);
    Assert.assertNotNull(extendibleHashingCluster.getPhysicalPosition(position));
  }
  for (int i=0; i < KEYS_COUNT; i++) {
    final ONodeId nodeId=ONodeId.valueOf(i).shiftLeft(128);
    final OPhysicalPosition position=new OPhysicalPosition(new OClusterPositionNodeId(nodeId));
    Assert.assertNotNull(extendibleHashingCluster.getPhysicalPosition(position),i + " key is absent");
  }
  for (int i=KEYS_COUNT; i < 2 * KEYS_COUNT; i++) {
    final ONodeId nodeId=ONodeId.valueOf(i).shiftLeft(128);
    final OPhysicalPosition position=new OPhysicalPosition(new OClusterPositionNodeId(nodeId));
    Assert.assertNull(extendibleHashingCluster.getPhysicalPosition(position));
  }
}
