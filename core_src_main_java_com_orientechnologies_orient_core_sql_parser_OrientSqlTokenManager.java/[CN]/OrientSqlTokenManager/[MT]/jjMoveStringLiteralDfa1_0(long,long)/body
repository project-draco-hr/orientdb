{
  try {
    curChar=input_stream.readChar();
  }
 catch (  java.io.IOException e) {
    jjStopStringLiteralDfa_0(0,0L,active1,active2);
    return 1;
  }
switch (curChar) {
case 38:
    if ((active1 & 0x1000000000000L) != 0L)     return jjStopAtPos(1,112);
  break;
case 43:
if ((active1 & 0x2000000000000L) != 0L) return jjStopAtPos(1,113);
break;
case 45:
if ((active1 & 0x4000000000000L) != 0L) return jjStopAtPos(1,114);
break;
case 46:
if ((active2 & 0x100L) != 0L) {
jjmatchedKind=136;
jjmatchedPos=1;
}
return jjMoveStringLiteralDfa2_0(active1,0L,active2,0x80L);
case 60:
if ((active1 & 0x800000000000000L) != 0L) {
jjmatchedKind=123;
jjmatchedPos=1;
}
return jjMoveStringLiteralDfa2_0(active1,0L,active2,0x10L);
case 61:
if ((active1 & 0x1000000000L) != 0L) return jjStopAtPos(1,100);
 else if ((active1 & 0x80000000000L) != 0L) return jjStopAtPos(1,107);
 else if ((active1 & 0x100000000000L) != 0L) return jjStopAtPos(1,108);
 else if ((active1 & 0x200000000000L) != 0L) return jjStopAtPos(1,109);
 else if ((active1 & 0x1000000000000000L) != 0L) return jjStopAtPos(1,124);
 else if ((active1 & 0x2000000000000000L) != 0L) return jjStopAtPos(1,125);
 else if ((active1 & 0x4000000000000000L) != 0L) return jjStopAtPos(1,126);
 else if ((active1 & 0x8000000000000000L) != 0L) return jjStopAtPos(1,127);
 else if ((active2 & 0x1L) != 0L) return jjStopAtPos(1,128);
 else if ((active2 & 0x2L) != 0L) return jjStopAtPos(1,129);
 else if ((active2 & 0x4L) != 0L) return jjStopAtPos(1,130);
 else if ((active2 & 0x8L) != 0L) return jjStopAtPos(1,131);
break;
case 62:
if ((active1 & 0x400000000000L) != 0L) return jjStopAtPos(1,110);
return jjMoveStringLiteralDfa2_0(active1,0L,active2,0x60L);
case 97:
return jjMoveStringLiteralDfa2_0(active1,0x400000L,active2,0L);
case 114:
return jjMoveStringLiteralDfa2_0(active1,0x200000L,active2,0L);
case 124:
if ((active1 & 0x800000000000L) != 0L) return jjStopAtPos(1,111);
break;
default :
break;
}
return jjStartNfa_0(0,0L,active1,active2);
}
