{
  if (currentClusterId == -1)   return null;
  checkOpeness();
  lock.acquireSharedLock();
  try {
    checkOpeness();
    final OCluster cluster=getClusterById(currentClusterId);
    return cluster.higherPositions(physicalPosition);
  }
 catch (  IOException ioe) {
    throw new OStorageException("Cluster Id " + currentClusterId + " is invalid in storage '"+ name+ '\'',ioe);
  }
 finally {
    lock.releaseSharedLock();
  }
}
