{
  try {
    curChar=input_stream.readChar();
  }
 catch (  java.io.IOException e) {
    jjStopStringLiteralDfa_0(0,active0,active1);
    return 1;
  }
switch (curChar) {
case 38:
    if ((active1 & 0x20L) != 0L)     return jjStopAtPos(1,69);
  break;
case 43:
if ((active1 & 0x40L) != 0L) return jjStopAtPos(1,70);
break;
case 45:
if ((active1 & 0x80L) != 0L) return jjStopAtPos(1,71);
break;
case 46:
return jjMoveStringLiteralDfa2_0(active0,0L,active1,0x10000000L);
case 60:
if ((active1 & 0x10000L) != 0L) {
jjmatchedKind=80;
jjmatchedPos=1;
}
return jjMoveStringLiteralDfa2_0(active0,0L,active1,0x2000000L);
case 61:
if ((active1 & 0x1L) != 0L) return jjStopAtPos(1,64);
 else if ((active1 & 0x2L) != 0L) return jjStopAtPos(1,65);
 else if ((active1 & 0x4L) != 0L) return jjStopAtPos(1,66);
 else if ((active1 & 0x20000L) != 0L) return jjStopAtPos(1,81);
 else if ((active1 & 0x40000L) != 0L) return jjStopAtPos(1,82);
 else if ((active1 & 0x80000L) != 0L) return jjStopAtPos(1,83);
 else if ((active1 & 0x100000L) != 0L) return jjStopAtPos(1,84);
 else if ((active1 & 0x200000L) != 0L) return jjStopAtPos(1,85);
 else if ((active1 & 0x400000L) != 0L) return jjStopAtPos(1,86);
 else if ((active1 & 0x800000L) != 0L) return jjStopAtPos(1,87);
 else if ((active1 & 0x1000000L) != 0L) return jjStopAtPos(1,88);
break;
case 62:
if ((active1 & 0x8L) != 0L) return jjStopAtPos(1,67);
return jjMoveStringLiteralDfa2_0(active0,0L,active1,0xc000000L);
case 108:
return jjMoveStringLiteralDfa2_0(active0,0L,active1,0x600000000000L);
case 110:
return jjMoveStringLiteralDfa2_0(active0,0L,active1,0x900000000000L);
case 116:
return jjMoveStringLiteralDfa2_0(active0,0x20000000L,active1,0L);
case 124:
if ((active1 & 0x10L) != 0L) return jjStopAtPos(1,68);
break;
default :
break;
}
return jjStartNfa_0(0,active0,active1);
}
