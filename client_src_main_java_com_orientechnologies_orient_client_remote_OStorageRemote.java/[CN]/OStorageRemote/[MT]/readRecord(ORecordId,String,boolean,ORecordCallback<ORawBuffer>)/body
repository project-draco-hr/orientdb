{
  if (getCurrentSession().commandExecuting)   return new OStorageOperationResult<ORawBuffer>(null);
  return networkOperation(new OStorageRemoteOperation<OStorageOperationResult<ORawBuffer>>(){
    @Override public OStorageOperationResult<ORawBuffer> execute(    OChannelBinaryAsynchClient network,    OStorageRemoteSession session) throws IOException {
      try {
        beginRequest(network,OChannelBinaryProtocol.REQUEST_RECORD_LOAD,session);
        network.writeRID(iRid);
        network.writeString(iFetchPlan != null ? iFetchPlan : "");
        if (network.getSrvProtocolVersion() >= 9)         network.writeByte((byte)(iIgnoreCache ? 1 : 0));
        if (network.getSrvProtocolVersion() >= 13)         network.writeByte((byte)0);
      }
  finally {
        endRequest(network);
      }
      try {
        beginResponse(network,session);
        if (network.readByte() == 0)         return new OStorageOperationResult<ORawBuffer>(null);
        final ORawBuffer buffer;
        if (network.getSrvProtocolVersion() <= 27)         buffer=new ORawBuffer(network.readBytes(),network.readVersion(),network.readByte());
 else {
          final byte type=network.readByte();
          final int recVersion=network.readVersion();
          final byte[] bytes=network.readBytes();
          buffer=new ORawBuffer(bytes,recVersion,type);
        }
        final ODatabaseDocument database=ODatabaseRecordThreadLocal.INSTANCE.getIfDefined();
        ORecord record;
        while (network.readByte() == 2) {
          record=(ORecord)OChannelBinaryProtocol.readIdentifiable(network);
          if (database != null)           database.getLocalCache().updateRecord(record);
        }
        return new OStorageOperationResult<ORawBuffer>(buffer);
      }
  finally {
        endResponse(network);
      }
    }
  }
,"Error on read record " + iRid);
}
