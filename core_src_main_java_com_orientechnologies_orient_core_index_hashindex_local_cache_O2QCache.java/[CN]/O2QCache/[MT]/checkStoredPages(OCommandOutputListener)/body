{
synchronized (syncObject) {
    boolean correct=true;
    for (    long fileId : files.keySet()) {
      OMultiFileSegment multiFileSegment=files.get(fileId);
      if (commandOutputListener != null)       commandOutputListener.onMessage("Start verification of content of " + multiFileSegment.getName() + "file ...");
      boolean fileIsCorrect;
      try {
        flushFile(fileId);
        long filledUpTo=multiFileSegment.getFilledUpTo();
        fileIsCorrect=true;
        for (long pos=0; pos < filledUpTo; pos+=pageSize) {
          byte[] data=new byte[pageSize];
          multiFileSegment.readContinuously(pos,data,data.length);
          long magicNumber=OLongSerializer.INSTANCE.deserializeNative(data,0);
          if (magicNumber != MAGIC_NUMBER) {
            if (commandOutputListener != null)             commandOutputListener.onMessage("Error: Magic number for page " + (pos / pageSize) + " in file "+ multiFileSegment.getName()+ " does not much !!!");
            fileIsCorrect=false;
          }
          final int storedCRC32=OIntegerSerializer.INSTANCE.deserializeNative(data,OLongSerializer.LONG_SIZE);
          final int calculatedCRC32=calculatePageCrc(data);
          if (storedCRC32 != calculatedCRC32) {
            if (commandOutputListener != null)             commandOutputListener.onMessage("Error: Checksum for page " + (pos / pageSize) + " in file "+ multiFileSegment.getName()+ " is incorrect !!!");
            fileIsCorrect=false;
          }
        }
      }
 catch (      IOException ioe) {
        if (commandOutputListener != null)         commandOutputListener.onMessage("Error: Error during processing of file " + multiFileSegment.getName() + ". "+ ioe.getMessage());
        fileIsCorrect=false;
      }
      if (!fileIsCorrect) {
        correct=false;
        if (commandOutputListener != null)         commandOutputListener.onMessage("Verification of file " + multiFileSegment.getName() + " is finished with errors.");
      }
 else {
        if (commandOutputListener != null)         commandOutputListener.onMessage("Verification of file " + multiFileSegment.getName() + " is successfully finished.");
      }
    }
    return correct;
  }
}
