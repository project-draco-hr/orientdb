{
  final Map<K,OSBTreeRidBag.Change> notAppliedChanges=new HashMap<K,OSBTreeRidBag.Change>(changes);
  final OModifiableInteger size=new OModifiableInteger(0);
  loadEntriesMajor(firstKey(),true,true,new RangeResultListener<K,V>(){
    @Override public boolean addResult(    Map.Entry<K,V> entry){
      final OSBTreeRidBag.Change change=notAppliedChanges.remove(entry.getKey());
      final int result;
      final Integer treeValue=(Integer)entry.getValue();
      if (change == null)       result=treeValue;
 else       result=change.applyTo(treeValue);
      size.increment(result);
      return true;
    }
  }
);
  for (  OSBTreeRidBag.Change change : notAppliedChanges.values()) {
    size.increment(change.applyTo(0));
  }
  return size.intValue();
}
