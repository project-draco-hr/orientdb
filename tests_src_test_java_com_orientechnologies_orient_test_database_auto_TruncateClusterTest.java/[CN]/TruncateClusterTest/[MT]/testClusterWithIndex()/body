{
  final String clusterName="TruncateClusterWithIndex";
  final int clusterId=database.addCluster(clusterName);
  final String className="TruncateClusterClass";
  final OSchema schema=database.getMetadata().getSchema();
  final OClass clazz=schema.createClass(className);
  clazz.addClusterId(clusterId);
  clazz.createProperty("value",OType.STRING);
  clazz.createIndex("TruncateClusterIndex",OClass.INDEX_TYPE.UNIQUE,"value");
  final ODocument document=new ODocument();
  document.field("value","val");
  document.save(clusterName);
  Assert.assertEquals(database.countClass(className),1);
  Assert.assertEquals(database.countClusterElements(clusterId),1);
  List<ODocument> indexQuery=database.query(new OSQLSynchQuery<ODocument>("select from TruncateClusterClass where value='val'"));
  Assert.assertEquals(indexQuery.size(),1);
  database.truncateCluster(clusterName);
  Assert.assertEquals(database.countClass(className),0);
  Assert.assertEquals(database.countClusterElements(clusterId),0);
  indexQuery=database.query(new OSQLSynchQuery<ODocument>("select from TruncateClusterClass where value='val'"));
  Assert.assertEquals(indexQuery.size(),0);
}
