{
  final StringBuilder buffer=new StringBuilder();
  buffer.append("\n\nLEGEND: X = Owner, o = Copy");
  final OTableFormatter table=new OTableFormatter(new OTableFormatter.OTableOutput(){
    @Override public void onMessage(    final String text,    final Object... args){
      buffer.append(String.format(text,args));
    }
  }
);
  ODatabaseDocumentInternal db=ODatabaseRecordThreadLocal.INSTANCE.getIfDefined();
  if (db != null && db.isClosed())   db=null;
  table.setColumnSorting("CLUSTER",true);
  table.setColumnHidden("#");
  if (db != null)   table.setColumnAlignment("id",OTableFormatter.ALIGNMENT.RIGHT);
  table.setColumnAlignment("writeQuorum",OTableFormatter.ALIGNMENT.CENTER);
  table.setColumnAlignment("readQuorum",OTableFormatter.ALIGNMENT.CENTER);
  final String localNodeName=manager.getLocalNodeName();
  final int defaultWQ=cfg.getWriteQuorum(ODistributedConfiguration.ALL_WILDCARD,availableNodes,localNodeName);
  final int defaultRQ=cfg.getReadQuorum(ODistributedConfiguration.ALL_WILDCARD,availableNodes,localNodeName);
  final String defaultOwner="" + cfg.getClusterOwner(ODistributedConfiguration.ALL_WILDCARD);
  final List<String> defaultServers=cfg.getServers(ODistributedConfiguration.ALL_WILDCARD);
  final List<OIdentifiable> rows=new ArrayList<OIdentifiable>();
  final Set<String> allServers=new HashSet<String>();
  for (  String cluster : cfg.getClusterNames()) {
    final int wQ=cfg.getWriteQuorum(cluster,availableNodes,localNodeName);
    final int rQ=cfg.getReadQuorum(cluster,availableNodes,localNodeName);
    final String owner=cfg.getClusterOwner(cluster);
    final List<String> servers=cfg.getServers(cluster);
    if (!cluster.equals(ODistributedConfiguration.ALL_WILDCARD) && defaultWQ == wQ && defaultRQ == rQ && defaultOwner.equals(owner) && defaultServers.size() == servers.size() && defaultServers.containsAll(servers))     continue;
    final ODocument row=new ODocument();
    rows.add(row);
    row.field("CLUSTER",cluster);
    if (db != null) {
      final int clId=db.getClusterIdByName(cluster);
      row.field("id",clId > -1 ? clId : "");
    }
    row.field("writeQuorum",wQ);
    row.field("readQuorum",rQ);
    if (servers != null)     for (    String server : servers) {
      if (server.equalsIgnoreCase("<NEW_NODE>"))       continue;
      allServers.add(server);
      row.field(server,OAnsiCode.format(server.equals(owner) ? "X" : "o"));
      table.setColumnAlignment(server,OTableFormatter.ALIGNMENT.CENTER);
    }
  }
  for (  String server : allServers) {
    table.setColumnMetadata(server,"ROLE",cfg.getServerRole(server).toString());
    table.setColumnMetadata(server,"STATUS",manager.getDatabaseStatus(server,databaseName).toString());
  }
  table.writeRecords(rows,-1);
  buffer.append("\n");
  return buffer.toString();
}
