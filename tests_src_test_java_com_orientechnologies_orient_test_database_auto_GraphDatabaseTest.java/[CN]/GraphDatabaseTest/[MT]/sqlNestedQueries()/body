{
  Vertex vertex1=database.addVertex(null,"driver","John");
  Vertex vertex2=database.addVertex(null,"car","ford");
  Vertex targetVertex=database.addVertex(null,"car","audi");
  Edge edge=database.addEdge(null,vertex1,vertex2,"E");
  edge.setProperty("color","red");
  edge.setProperty("action","owns");
  edge=database.addEdge(null,vertex1,targetVertex,"E");
  edge.setProperty("color","red");
  edge.setProperty("action","wants");
  database.commit();
  String query1="select driver from V where out().car in 'ford'";
  List<ODocument> result=database.getRawGraph().query(new OSQLSynchQuery<ODocument>(query1));
  Assert.assertEquals(result.size(),1);
  String query2="select driver from V where outE()[color='red'].inV().car in 'ford'";
  result=database.getRawGraph().query(new OSQLSynchQuery<ODocument>(query2));
  Assert.assertEquals(result.size(),1);
  String query3="select driver from V where outE()[action='owns'].inV().car in 'ford'";
  result=database.getRawGraph().query(new OSQLSynchQuery<ODocument>(query3));
  Assert.assertEquals(result.size(),1);
  String query4="select driver from V where outE()[color='red'][action='owns'].inV().car in 'ford'";
  result=database.getRawGraph().query(new OSQLSynchQuery<ODocument>(query4));
  Assert.assertEquals(result.size(),1);
}
