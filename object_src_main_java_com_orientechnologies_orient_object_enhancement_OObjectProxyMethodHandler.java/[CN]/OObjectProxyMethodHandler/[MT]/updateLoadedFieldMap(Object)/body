{
  final Set<String> fields=new HashSet<String>(loadedFields.keySet());
  for (  String key : fields) {
    try {
      Object value=getValue(proxiedObject,key,false,null);
      if (value instanceof OObjectLazyMultivalueElement) {
        if (((OObjectLazyMultivalueElement<?>)value).getUnderlying() != doc.field(key))         loadedFields.remove(key);
      }
 else {
        loadedFields.put(key,doc.getRecordVersion().copy());
      }
    }
 catch (    IllegalArgumentException e) {
      throw new OSerializationException("Error updating object after save of class " + proxiedObject.getClass(),e);
    }
catch (    IllegalAccessException e) {
      throw new OSerializationException("Error updating object after save of class " + proxiedObject.getClass(),e);
    }
catch (    NoSuchMethodException e) {
      throw new OSerializationException("Error updating object after save of class " + proxiedObject.getClass(),e);
    }
catch (    InvocationTargetException e) {
      throw new OSerializationException("Error updating object after save of class " + proxiedObject.getClass(),e);
    }
  }
}
