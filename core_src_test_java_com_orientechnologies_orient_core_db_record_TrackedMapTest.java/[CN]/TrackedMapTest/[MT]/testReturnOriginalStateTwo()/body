{
  final ODocument doc=new ODocument();
  final OTrackedMap<String> trackedMap=new OTrackedMap<String>(doc);
  trackedMap.put("key1","value1");
  trackedMap.put("key2","value2");
  trackedMap.put("key3","value3");
  trackedMap.put("key4","value4");
  trackedMap.put("key5","value5");
  trackedMap.put("key6","value6");
  trackedMap.put("key7","value7");
  final Map<Object,String> original=new HashMap<Object,String>(trackedMap);
  final List<OMultiValueChangeEvent<Object,String>> firedEvents=new ArrayList<OMultiValueChangeEvent<Object,String>>();
  trackedMap.addChangeListener(new OMultiValueChangeListener<Object,String>(){
    public void onAfterRecordChanged(    final OMultiValueChangeEvent<Object,String> event){
      firedEvents.add(event);
    }
  }
);
  trackedMap.put("key8","value8");
  trackedMap.put("key9","value9");
  trackedMap.put("key2","value10");
  trackedMap.put("key11","value11");
  trackedMap.remove("key5");
  trackedMap.remove("key5");
  trackedMap.clear();
  trackedMap.put("key3","value12");
  trackedMap.remove("key8");
  trackedMap.remove("key3");
  Assert.assertEquals(trackedMap.returnOriginalState(firedEvents),original);
}
