{
  checkTransaction();
  if ((status == OTransaction.TXSTATUS.COMMITTING) && database.getStorage() instanceof OStorageEmbedded) {
switch (iStatus) {
case OTransactionRecordEntry.CREATED:
case OTransactionRecordEntry.UPDATED:
      database.executeSaveRecord(iRecord,iClusterName,iRecord.getVersion(),iRecord.getRecordType());
    break;
case OTransactionRecordEntry.DELETED:
  database.executeDeleteRecord(iRecord,iRecord.getVersion());
break;
}
}
 else {
final ORecordId rid=(ORecordId)iRecord.getIdentity();
if (!rid.isValid()) {
iRecord.onBeforeIdentityChanged(rid);
if (rid.clusterId == ORID.CLUSTER_ID_INVALID) rid.clusterId=iClusterName != null ? database.getClusterIdByName(iClusterName) : database.getDefaultClusterId();
rid.clusterPosition=newObjectCounter--;
iRecord.onAfterIdentityChanged(iRecord);
}
 else database.getLevel1Cache().freeRecord(rid);
OTransactionRecordEntry txEntry=getRecordEntry(rid);
if (txEntry == null) {
txEntry=new OTransactionRecordEntry(iRecord,iStatus,iClusterName);
recordEntries.put(rid,txEntry);
}
 else {
txEntry.setRecord(iRecord);
switch (txEntry.status) {
case OTransactionRecordEntry.LOADED:
switch (iStatus) {
case OTransactionRecordEntry.UPDATED:
  txEntry.status=OTransactionRecordEntry.UPDATED;
break;
case OTransactionRecordEntry.DELETED:
txEntry.status=OTransactionRecordEntry.DELETED;
break;
}
break;
case OTransactionRecordEntry.UPDATED:
switch (iStatus) {
case OTransactionRecordEntry.DELETED:
txEntry.status=OTransactionRecordEntry.DELETED;
break;
}
break;
case OTransactionRecordEntry.DELETED:
break;
case OTransactionRecordEntry.CREATED:
switch (iStatus) {
case OTransactionRecordEntry.DELETED:
recordEntries.remove(rid);
break;
}
break;
}
}
}
}
