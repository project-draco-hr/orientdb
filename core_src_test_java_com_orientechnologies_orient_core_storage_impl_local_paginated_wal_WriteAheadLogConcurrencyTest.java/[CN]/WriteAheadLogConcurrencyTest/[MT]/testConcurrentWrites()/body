{
  CountDownLatch startLatch=new CountDownLatch(1);
  List<Future> futures=new ArrayList<Future>();
  Random random=new Random();
  List<Long> seeds=new ArrayList<Long>();
  for (int i=0; i < 8; i++)   seeds.add(random.nextLong());
  System.out.println("Seeds");
  for (  long seed : seeds)   System.out.println(seed);
  for (int i=0; i < 8; i++)   futures.add(writerExecutor.submit(new ConcurrentWriter(seeds.get(i),startLatch,writeAheadLog,recordConcurrentMap,lastCheckpoint)));
  startLatch.countDown();
  for (  Future future : futures)   future.get();
  OLogSequenceNumber lsn=writeAheadLog.begin();
  int recordsCount=0;
  while (lsn != null) {
    WriteAheadLogTest.TestRecord testRecord=(WriteAheadLogTest.TestRecord)writeAheadLog.read(lsn);
    Assert.assertEquals(testRecord,recordConcurrentMap.get(lsn));
    lsn=writeAheadLog.next(lsn);
    recordsCount++;
  }
  Assert.assertEquals(recordsCount,recordConcurrentMap.size());
  Assert.assertEquals(lastCheckpoint.get(),writeAheadLog.getLastCheckpoint());
}
