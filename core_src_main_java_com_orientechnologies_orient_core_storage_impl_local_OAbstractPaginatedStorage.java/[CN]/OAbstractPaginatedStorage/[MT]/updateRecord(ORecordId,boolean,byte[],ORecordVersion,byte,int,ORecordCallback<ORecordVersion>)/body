{
  checkOpeness();
  checkLowDiskSpaceAndFullCheckpointRequests();
  final OCluster cluster=getClusterById(rid.clusterId);
  if (transaction.get() != null) {
    final long timer=Orient.instance().getProfiler().startChrono();
    try {
      return doUpdateRecord(rid,updateContent,content,version,recordType,callback,cluster);
    }
  finally {
      Orient.instance().getProfiler().stopChrono(PROFILER_UPDATE_RECORD,"Update a record to database",timer,"db.*.updateRecord");
    }
  }
  final long timer=Orient.instance().getProfiler().startChrono();
  cluster.getExternalModificationLock().requestModificationLock();
  try {
    modificationLock.requestModificationLock();
    try {
      lockManager.acquireLock(rid,OLockManager.LOCK.EXCLUSIVE);
      try {
        lock.acquireSharedLock();
        try {
          checkOpeness();
          return doUpdateRecord(rid,updateContent,content,version,recordType,callback,cluster);
        }
  finally {
          lock.releaseSharedLock();
        }
      }
  finally {
        lockManager.releaseLock(this,rid,OLockManager.LOCK.EXCLUSIVE);
      }
    }
  finally {
      modificationLock.releaseModificationLock();
    }
  }
  finally {
    cluster.getExternalModificationLock().releaseModificationLock();
    Orient.instance().getProfiler().stopChrono(PROFILER_UPDATE_RECORD,"Update a record to database",timer,"db.*.updateRecord");
  }
}
