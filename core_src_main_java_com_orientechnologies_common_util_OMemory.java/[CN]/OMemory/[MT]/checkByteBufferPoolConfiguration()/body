{
  final long maxDirectMemory=OMemory.getConfiguredMaxDirectMemory();
  final long memoryChunkSize=OGlobalConfiguration.MEMORY_CHUNK_SIZE.getValueAsLong();
  final long maxCacheSize=getMaxCacheMemorySize();
  if (maxDirectMemory != -1 && memoryChunkSize > maxDirectMemory)   OLogManager.instance().warn(OMemory.class,"The configured memory chunk size (" + memoryChunkSize + " bytes) is larger than the configured maximum amount of "+ "JVM direct memory ("+ maxDirectMemory+ " bytes). That may cause out of memory errors, please tune the "+ "configuration up. Use the -XX:MaxDirectMemorySize JVM option to raise the JVM maximum direct memory size "+ "or memory.chunk.size OrientDB option to lower memory chunk size.");
  if (memoryChunkSize > maxCacheSize)   OLogManager.instance().warn(OMemory.class,"The configured memory chunk size (" + memoryChunkSize + " bytes) is larger than the configured maximum cache size ("+ maxCacheSize+ " bytes). That may cause overallocation of a memory which will be wasted, please tune the "+ "configuration up. Use the storage.diskCache.bufferSize OrientDB option to raise the cache memory size "+ "or memory.chunk.size OrientDB option to lower memory chunk size.");
}
