{
  System.out.println("Starting test between " + serverInstance.size() + " servers executing "+ count+ " operations...");
  for (  ServerRun server : serverInstance) {
    server.startServer("orientdb-dserver-config-" + server.getServerId() + ".xml");
    try {
      Thread.sleep(DELAY_SERVER_STARTUP * serverInstance.size());
    }
 catch (    InterruptedException e) {
    }
  }
  try {
    System.out.println("Server started, waiting for synchronization (" + (DELAY_SERVER_ALIGNING * serverInstance.size() / 1000) + "secs)...");
    Thread.sleep(DELAY_SERVER_ALIGNING * serverInstance.size());
  }
 catch (  InterruptedException e) {
  }
  for (  ServerRun server : serverInstance) {
    final ODocument cfg=server.getServerInstance().getDistributedManager().getClusterConfiguration();
    Assert.assertNotNull(cfg);
    Assert.assertEquals(((Collection<?>)cfg.field("members")).size(),serverInstance.size());
  }
  System.out.println("Creating Writers and Readers threads...");
  final ExecutorService writerExecutor=Executors.newCachedThreadPool();
  final ExecutorService readerExecutor=Executors.newCachedThreadPool();
  for (  ServerRun server : serverInstance) {
    Writer writer=new Writer("local:" + server.getDatabasePath(DBNAME));
    writerExecutor.submit(writer);
    Reader reader=new Reader("local:" + server.getDatabasePath(DBNAME));
    readerExecutor.submit(reader);
  }
  System.out.println("Threads started, waiting for the end");
  writerExecutor.shutdown();
  Assert.assertTrue(writerExecutor.awaitTermination(3,TimeUnit.MINUTES));
  System.out.println("Writer threads finished, shutting down Reader threads...");
  readerExecutor.shutdown();
  Assert.assertTrue(readerExecutor.awaitTermination(10,TimeUnit.SECONDS));
  System.out.println("All threads have finished, shutting down server instances");
  for (  ServerRun server : serverInstance)   server.shutdownServer();
  Hazelcast.shutdownAll();
  System.out.println("Execution termined");
}
