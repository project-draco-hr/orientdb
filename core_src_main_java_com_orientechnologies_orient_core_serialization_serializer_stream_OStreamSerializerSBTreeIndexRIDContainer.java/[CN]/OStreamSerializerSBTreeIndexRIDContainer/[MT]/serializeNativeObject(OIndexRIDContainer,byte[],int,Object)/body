{
  LONG_SERIALIZER.serializeNative(object.getFileId(),stream,offset + FILE_ID_OFFSET);
  final boolean embedded=object.isEmbedded();
  BOOLEAN_SERIALIZER.serializeNative(embedded,stream,offset + EMBEDDED_OFFSET);
  if (embedded) {
    INT_SERIALIZER.serializeNative(object.size(),stream,offset + EMBEDDED_SIZE_OFFSET);
    int p=offset + EMBEDDED_VALUES_OFFSET;
    for (    OIdentifiable ids : object) {
      LINK_SERIALIZER.serializeNativeObject(ids,stream,p);
      p+=RID_SIZE;
    }
  }
 else {
    final OIndexRIDContainerSBTree underlying=(OIndexRIDContainerSBTree)object.getUnderlying();
    final OBonsaiBucketPointer rootPointer=underlying.getRootPointer();
    LONG_SERIALIZER.serializeNative(rootPointer.getPageIndex(),stream,offset + SBTREE_ROOTINDEX_OFFSET);
    INT_SERIALIZER.serializeNative(rootPointer.getPageOffset(),stream,offset + SBTREE_ROOTOFFSET_OFFSET);
  }
}
