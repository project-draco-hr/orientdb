{
  OProfiler.getInstance().updateCounter("LockMgr.tryToAcquire",+1);
  REQUESTER_TYPE client=exclusiveLocks.get(iResourceId);
  if (client != null) {
    OProfiler.getInstance().updateCounter("LockMgr.tryToAcquire.locked",+1);
    return false;
  }
  final Object sharedLock=sharedLocks.get(iResourceId);
  List<REQUESTER_TYPE> clients;
  if (iLockType == LOCK.SHARED) {
    if (sharedLock == null) {
      sharedLocks.put(iResourceId,iRequester);
      return true;
    }
    if (sharedLock instanceof List<?>) {
      clients=(List<REQUESTER_TYPE>)sharedLock;
    }
 else {
      clients=new ArrayList<REQUESTER_TYPE>(concurrencyLevel);
      sharedLocks.put(iResourceId,clients);
      clients.add((REQUESTER_TYPE)sharedLock);
    }
    clients.add(iRequester);
  }
 else {
    if (sharedLock == null) {
      exclusiveLocks.put(iResourceId,iRequester);
      return true;
    }
    if (sharedLock instanceof List<?>) {
      clients=(List<REQUESTER_TYPE>)sharedLock;
      if (clients.size() == 1 && clients.get(0).equals(iRequester)) {
        promoteLock(iRequester,iResourceId,sharedLock);
        return true;
      }
    }
 else {
      if (sharedLock.equals(iRequester)) {
        promoteLock(iRequester,iResourceId,sharedLock);
        return true;
      }
    }
  }
  return false;
}
