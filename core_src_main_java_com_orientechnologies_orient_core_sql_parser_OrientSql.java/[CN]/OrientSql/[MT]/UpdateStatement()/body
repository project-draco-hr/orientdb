{
  OUpdateStatement jjtn000=new OUpdateStatement(JJTUPDATESTATEMENT);
  boolean jjtc000=true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
  try {
    jj_consume_token(UPDATE);
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case SET:
case ORDER:
case GROUP:
case OFFSET:
case IN:
case KEY:
case IDENTIFIER:
      Identifier();
    break;
case CLUSTER_IDENTIFIER:
  Cluster();
break;
case INDEX_IDENTIFIER:
case INDEXVALUES_IDENTIFIER:
case INDEXVALUESASC_IDENTIFIER:
case INDEXVALUESDESC_IDENTIFIER:
IndexIdentifier();
break;
default :
jj_la1[17]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
jj_consume_token(SET);
UpdateItem();
label_2: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case COMMA:
;
break;
default :
jj_la1[18]=jj_gen;
break label_2;
}
jj_consume_token(COMMA);
UpdateItem();
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case WHERE:
jj_consume_token(WHERE);
WhereClause();
break;
default :
jj_la1[19]=jj_gen;
;
}
}
 catch (Throwable jjte000) {
if (jjtc000) {
jjtree.clearNodeScope(jjtn000);
jjtc000=false;
}
 else {
jjtree.popNode();
}
if (jjte000 instanceof RuntimeException) {
{
if (true) throw (RuntimeException)jjte000;
}
}
if (jjte000 instanceof ParseException) {
{
if (true) throw (ParseException)jjte000;
}
}
{
if (true) throw (Error)jjte000;
}
}
 finally {
if (jjtc000) {
jjtree.closeNodeScope(jjtn000,true);
jjtn000.jjtSetLastToken(getToken(0));
}
}
}
