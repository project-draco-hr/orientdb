{
  OrientGraph graph=new OrientGraph("memory:" + DirtyManagerGraph.class.getSimpleName());
  try {
    graph.createEdgeType("next");
    OrientVertex vertex=graph.addVertex(null);
    OrientVertex vertex1=graph.addVertex(null);
    OrientVertex vertex2=graph.addVertex(null);
    OrientVertex vertex3=graph.addVertex(null);
    OrientEdge edge1=(OrientEdge)vertex.addEdge("next",vertex1);
    OrientEdge edge2=(OrientEdge)vertex1.addEdge("next",vertex2);
    OrientEdge edge3=(OrientEdge)vertex2.addEdge("next",vertex3);
    OrientEdge edge4=(OrientEdge)vertex3.addEdge("next",vertex);
    ODocument rec=vertex.getRecord();
    ODirtyManager manager=ORecordInternal.getDirtyManager(rec);
    List<OIdentifiable> pointed=manager.getPointed(vertex.getRecord());
    assertEquals(2,pointed.size());
    assertTrue(pointed.contains(edge1.getRecord()));
    assertTrue(pointed.contains(edge4.getRecord()));
    pointed=manager.getPointed(vertex1.getRecord());
    assertEquals(2,pointed.size());
    assertTrue(pointed.contains(edge1.getRecord()));
    assertTrue(pointed.contains(edge2.getRecord()));
    pointed=manager.getPointed(vertex2.getRecord());
    assertEquals(2,pointed.size());
    assertTrue(pointed.contains(edge2.getRecord()));
    assertTrue(pointed.contains(edge3.getRecord()));
    pointed=manager.getPointed(vertex3.getRecord());
    assertEquals(2,pointed.size());
    assertTrue(pointed.contains(edge3.getRecord()));
    assertTrue(pointed.contains(edge4.getRecord()));
    pointed=manager.getPointed(edge1.getRecord());
    assertEquals(2,pointed.size());
    assertTrue(pointed.contains(vertex.getRecord()));
    assertTrue(pointed.contains(vertex1.getRecord()));
    pointed=manager.getPointed(edge2.getRecord());
    assertEquals(2,pointed.size());
    assertTrue(pointed.contains(vertex1.getRecord()));
    assertTrue(pointed.contains(vertex2.getRecord()));
    pointed=manager.getPointed(edge3.getRecord());
    assertEquals(2,pointed.size());
    assertTrue(pointed.contains(vertex2.getRecord()));
    assertTrue(pointed.contains(vertex3.getRecord()));
    pointed=manager.getPointed(edge4.getRecord());
    assertEquals(2,pointed.size());
    assertTrue(pointed.contains(vertex3.getRecord()));
    assertTrue(pointed.contains(vertex.getRecord()));
  }
  finally {
    graph.drop();
  }
}
