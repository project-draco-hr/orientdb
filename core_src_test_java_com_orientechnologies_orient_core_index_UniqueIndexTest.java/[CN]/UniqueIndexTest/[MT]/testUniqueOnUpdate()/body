{
  final OSchema schema=db.getMetadata().getSchema();
  OClass userClass=schema.createClass("User");
  userClass.createProperty("MailAddress",OType.STRING).createIndex(OClass.INDEX_TYPE.UNIQUE);
  ODocument john=new ODocument("User");
  john.field("MailAddress","john@doe.com");
  db.save(john);
  ODocument jane=new ODocument("User");
  jane.field("MailAddress","jane@doe.com");
  ODocument id=jane.save();
  db.save(jane);
  try {
    ODocument toUp=db.load(id.getIdentity());
    toUp.field("MailAddress","john@doe.com");
    db.save(toUp);
    Assert.fail("Expected record duplicate exception");
  }
 catch (  ORecordDuplicatedException ex) {
  }
  ODocument fromDb=db.load(id.getIdentity());
  Assert.assertEquals(fromDb.field("MailAddress"),"jane@doe.com");
}
