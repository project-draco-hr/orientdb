{
  String query="select * from OGraphVertex where description like '%Production Cell%'";
  System.out.println("Executing: " + query);
  try {
    Statement statement=conn.createStatement(ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY,ResultSet.HOLD_CURSORS_OVER_COMMIT);
    ResultSet result=statement.executeQuery(query);
    ResultSetMetaData resultMetaData=null;
    Object value=null;
    String columnName=null;
    while (result.next()) {
      resultMetaData=result.getMetaData();
      for (int i=1; i <= resultMetaData.getColumnCount(); i++) {
        columnName=resultMetaData.getColumnName(i);
        this.assertColumnType(columnName,OrientGraphJdbcCreationHelper.SQL_TYPES.get(columnName),resultMetaData.getColumnType(i));
        value=result.getObject(i);
        System.out.print(i + " - ");
        if (value instanceof Collection<?>) {
          Collection<?> list=(Collection<?>)value;
          System.out.println("----- collection");
          for (          Object obj : list)           System.out.println("\t" + obj + " class: "+ obj.getClass().getName());
          System.out.println("----- end collection");
        }
 else         System.out.println(resultMetaData.getColumnName(i) + ": " + value+ " ("+ value.getClass().getName()+ ")");
      }
      System.out.println("--------------------------------");
    }
  }
 catch (  SQLException e) {
    e.printStackTrace();
    Assert.fail("An error occured during the execution of the SQL Query.");
  }
}
