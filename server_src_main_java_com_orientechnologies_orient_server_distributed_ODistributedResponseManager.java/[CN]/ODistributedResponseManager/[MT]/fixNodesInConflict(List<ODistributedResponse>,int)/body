{
  final ODistributedResponse goodResponse=bestResponsesGroup.get(0);
  if (goodResponse.getPayload() instanceof Throwable)   return false;
  ODistributedServerLog.debug(this,dManager.getLocalNodeName(),null,DIRECTION.NONE,"Detected %d conflicts, but the quorum (%d) has been reached. Fixing remote records. Request (%s)",conflicts,quorum,request);
  for (  List<ODistributedResponse> responseGroup : responseGroups) {
    if (responseGroup != bestResponsesGroup) {
      for (      ODistributedResponse r : responseGroup) {
        if (r.getPayload() instanceof ODistributedRecordLockedException)         return false;
        final ORemoteTask fixTask=((OAbstractReplicatedTask)request.getTask()).getFixTask(request,request.getTask(),r.getPayload(),goodResponse.getPayload(),r.getExecutorNodeName(),dManager);
        if (fixTask == null)         return false;
        ODistributedServerLog.warn(this,dManager.getLocalNodeName(),r.getExecutorNodeName(),DIRECTION.OUT,"Sending fix message (%s) for response (%s) on request (%s) to be: %s",fixTask,r,request,goodResponse);
        dManager.sendRequest(request.getDatabaseName(),null,OMultiValue.getSingletonList(r.getExecutorNodeName()),fixTask,dManager.getNextMessageIdCounter(),ODistributedRequest.EXECUTION_MODE.NO_RESPONSE,null,null);
      }
    }
  }
  return true;
}
