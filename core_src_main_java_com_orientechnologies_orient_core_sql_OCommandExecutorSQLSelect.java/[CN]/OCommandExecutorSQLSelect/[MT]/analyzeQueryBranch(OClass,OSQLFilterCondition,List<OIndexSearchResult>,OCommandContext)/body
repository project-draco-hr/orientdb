{
  if (iCondition == null)   return null;
  OQueryOperator operator=iCondition.getOperator();
  while (operator == null) {
    if (iCondition.getRight() == null && iCondition.getLeft() instanceof OSQLFilterCondition) {
      iCondition=(OSQLFilterCondition)iCondition.getLeft();
      operator=iCondition.getOperator();
    }
 else {
      return null;
    }
  }
  final OIndexReuseType indexReuseType=operator.getIndexReuseType(iCondition.getLeft(),iCondition.getRight());
  if (indexReuseType.equals(OIndexReuseType.INDEX_INTERSECTION)) {
    final OIndexSearchResult leftResult=analyzeQueryBranch(iSchemaClass,(OSQLFilterCondition)iCondition.getLeft(),iIndexSearchResults,iContext);
    final OIndexSearchResult rightResult=analyzeQueryBranch(iSchemaClass,(OSQLFilterCondition)iCondition.getRight(),iIndexSearchResults,iContext);
    if (leftResult != null && rightResult != null) {
      if (leftResult.canBeMerged(rightResult)) {
        final OIndexSearchResult mergeResult=leftResult.merge(rightResult);
        if (iSchemaClass.areIndexed(mergeResult.fields()))         iIndexSearchResults.add(mergeResult);
        return leftResult.merge(rightResult);
      }
    }
    return null;
  }
 else   if (indexReuseType.equals(OIndexReuseType.INDEX_METHOD)) {
    OIndexSearchResult result=createIndexedProperty(iCondition,iCondition.getLeft());
    if (result == null)     result=createIndexedProperty(iCondition,iCondition.getRight());
    if (result == null)     return null;
    if (checkIndexExistence(iSchemaClass,result))     iIndexSearchResults.add(result);
    return result;
  }
 else   if (indexReuseType.equals(OIndexReuseType.INDEX_OPERATOR)) {
    return iCondition.getOperator().getOIndexSearchResult(iSchemaClass,iCondition,iIndexSearchResults,iContext);
  }
  return null;
}
