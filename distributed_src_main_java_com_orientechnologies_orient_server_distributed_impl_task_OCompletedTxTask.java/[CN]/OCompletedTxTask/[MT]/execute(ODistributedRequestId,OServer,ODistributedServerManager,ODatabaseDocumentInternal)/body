{
  ODistributedServerLog.debug(this,iManager.getLocalNodeName(),getNodeSource(),DIRECTION.IN,"%s transaction db=%s originalReqId=%s...",(success ? "Committing" : fixTasks.isEmpty() ? "Rolling back" : "Fixing"),database.getName(),requestId,requestId);
  ODatabaseRecordThreadLocal.INSTANCE.set(database);
  final ODistributedDatabase ddb=iManager.getMessageService().getDatabase(database.getName());
  final ODistributedTxContext pRequest=ddb.popTxContext(requestId);
  try {
    if (success) {
      if (pRequest != null)       pRequest.commit();
 else {
        ODistributedServerLog.debug(this,iManager.getLocalNodeName(),getNodeSource(),DIRECTION.IN,"Error on committing transaction %s db=%s",requestId,database.getName());
      }
    }
 else     if (fixTasks.isEmpty()) {
      if (pRequest != null)       pRequest.rollback(database);
 else {
        ODistributedServerLog.debug(this,iManager.getLocalNodeName(),getNodeSource(),DIRECTION.IN,"Error on rolling back transaction %s db=%s",requestId,database.getName());
      }
    }
 else {
      if (pRequest == null)       ODistributedServerLog.debug(this,iManager.getLocalNodeName(),getNodeSource(),DIRECTION.IN,"Tx %s db=%s was not found for fix, probably has been already fixed for timeout reason",requestId,database.getName());
 else       pRequest.fix(database,fixTasks);
    }
  }
  finally {
    if (pRequest != null)     pRequest.destroy();
  }
  return Boolean.TRUE;
}
