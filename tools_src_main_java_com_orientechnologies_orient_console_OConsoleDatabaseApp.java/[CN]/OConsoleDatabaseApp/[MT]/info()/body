{
  if (currentDatabaseName != null) {
    out.println("Current database: " + currentDatabaseName + " (url="+ currentDatabase.getURL()+ ")");
    OStorage stg=currentDatabase.getStorage();
    out.println("\nTotal size: " + OFileUtils.getSizeAsString(stg.getSize()));
    if (stg instanceof OStorageRemoteThread) {
      final ODocument clusterConfig=((OStorageRemoteThread)stg).getClusterConfiguration();
      if (clusterConfig != null)       out.println("\nCluster configuration: " + clusterConfig.toJSON("indent:2"));
 else       out.println("\nCluster configuration: none");
    }
 else     if (stg instanceof OStorageLocal) {
      final OStorageLocal localStorage=(OStorageLocal)stg;
      long holeSize=localStorage.getHoleSize();
      out.print("\nFragmented at " + (float)(holeSize * 100f / localStorage.getSize()) + "%");
      out.println(" (" + localStorage.getHoles() + " holes, total size of holes: "+ OFileUtils.getSizeAsString(holeSize)+ ")");
    }
    clusters();
    classes();
    indexes();
  }
}
