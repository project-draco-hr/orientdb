{
  for (int i=0; i < 326; i++)   sbTree.put(i,new ORecordId(i % 32000,OClusterPositionFactory.INSTANCE.valueOf(i)));
  for (int i=0; i < 60; i++)   sbTree.remove(i);
  for (int i=100; i < 220; i++)   sbTree.remove(i);
  for (int i=260; i < 326; i++)   sbTree.remove(i);
  Assert.assertEquals((int)sbTree.firstKey(),60);
  Assert.assertEquals((int)sbTree.lastKey(),259);
  Collection<OIdentifiable> result=sbTree.getValuesMinor(250,true,-1);
  Set<OIdentifiable> identifiables=new HashSet<OIdentifiable>(result);
  for (int i=250; i >= 220; i--) {
    boolean removed=identifiables.remove(new ORecordId(i % 32000,OClusterPositionFactory.INSTANCE.valueOf(i)));
    Assert.assertTrue(removed);
  }
  for (int i=99; i >= 60; i--) {
    boolean removed=identifiables.remove(new ORecordId(i % 32000,OClusterPositionFactory.INSTANCE.valueOf(i)));
    Assert.assertTrue(removed);
  }
  Assert.assertTrue(identifiables.isEmpty());
  result=sbTree.getValuesMajor(70,true,-1);
  identifiables=new HashSet<OIdentifiable>(result);
  for (int i=70; i < 100; i++) {
    boolean removed=identifiables.remove(new ORecordId(i % 32000,OClusterPositionFactory.INSTANCE.valueOf(i)));
    Assert.assertTrue(removed);
  }
  for (int i=220; i < 260; i++) {
    boolean removed=identifiables.remove(new ORecordId(i % 32000,OClusterPositionFactory.INSTANCE.valueOf(i)));
    Assert.assertTrue(removed);
  }
  Assert.assertTrue(identifiables.isEmpty());
  result=sbTree.getValuesBetween(70,true,250,true,-1);
  identifiables=new HashSet<OIdentifiable>(result);
  for (int i=70; i < 100; i++) {
    boolean removed=identifiables.remove(new ORecordId(i % 32000,OClusterPositionFactory.INSTANCE.valueOf(i)));
    Assert.assertTrue(removed);
  }
  for (int i=220; i <= 250; i++) {
    boolean removed=identifiables.remove(new ORecordId(i % 32000,OClusterPositionFactory.INSTANCE.valueOf(i)));
    Assert.assertTrue(removed);
  }
  Assert.assertTrue(identifiables.isEmpty());
}
