{
  if (!isRelatedToLocalServer(iDatabase))   return;
  final ODatabaseDocumentInternal currDb=ODatabaseRecordThreadLocal.INSTANCE.getIfDefined();
  try {
    final ODistributedConfiguration cfg=getDatabaseConfiguration(iDatabase.getName());
    if (cfg == null)     return;
    if (!(iDatabase.getStorage() instanceof ODistributedStorage) || ((ODistributedStorage)iDatabase.getStorage()).getDistributedManager().isOffline()) {
      ODistributedStorage storage=storages.get(iDatabase.getURL());
      if (storage == null) {
        storage=new ODistributedStorage(serverInstance,(OAbstractPaginatedStorage)iDatabase.getStorage().getUnderlying());
        final ODistributedStorage oldStorage=storages.putIfAbsent(iDatabase.getURL(),storage);
        if (oldStorage != null)         storage=oldStorage;
      }
      iDatabase.replaceStorage(storage);
      if (isNodeOnline(nodeName,iDatabase.getName()))       installDbClustersLocalStrategy(iDatabase);
    }
  }
 catch (  HazelcastInstanceNotActiveException e) {
    throw new OOfflineNodeException("Hazelcast instance is not available");
  }
 finally {
    ODatabaseRecordThreadLocal.INSTANCE.set(currDb);
  }
}
