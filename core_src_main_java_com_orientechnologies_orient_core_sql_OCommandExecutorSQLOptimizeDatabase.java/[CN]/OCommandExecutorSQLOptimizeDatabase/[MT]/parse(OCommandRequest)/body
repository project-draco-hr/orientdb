{
  final OCommandRequestText textRequest=(OCommandRequestText)iRequest;
  String queryText=textRequest.getText();
  String originalQuery=queryText;
  try {
    queryText=preParse(queryText,iRequest);
    textRequest.setText(queryText);
    init((OCommandRequestText)iRequest);
    StringBuilder word=new StringBuilder();
    int oldPos=0;
    int pos=nextWord(parserText,parserTextUpperCase,oldPos,word,true);
    if (pos == -1 || !word.toString().equals(KEYWORD_OPTIMIZE))     throw new OCommandSQLParsingException("Keyword " + KEYWORD_OPTIMIZE + " not found. Use "+ getSyntax(),parserText,oldPos);
    oldPos=pos;
    pos=nextWord(parserText,parserTextUpperCase,oldPos,word,true);
    if (pos == -1 || !word.toString().equals(KEYWORD_DATABASE))     throw new OCommandSQLParsingException("Keyword " + KEYWORD_DATABASE + " not found. Use "+ getSyntax(),parserText,oldPos);
    while (!parserIsEnded() && word.length() > 0) {
      oldPos=pos;
      pos=nextWord(parserText,parserTextUpperCase,oldPos,word,true);
      if (word.toString().equals(KEYWORD_EDGE))       optimizeEdges=true;
 else       if (word.toString().equals(KEYWORD_NOVERBOSE))       verbose=false;
    }
  }
  finally {
    textRequest.setText(originalQuery);
  }
  return this;
}
