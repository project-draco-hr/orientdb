{
  OCluster jjtn000=new OCluster(JJTCLUSTER);
  boolean jjtc000=true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
  Token cName;
  try {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case CLUSTER_IDENTIFIER:
      cName=jj_consume_token(CLUSTER_IDENTIFIER);
    jjtn000.clusterName=cName.image.split(":")[1];
  break;
case CLUSTER_NUMBER_IDENTIFIER:
cName=jj_consume_token(CLUSTER_NUMBER_IDENTIFIER);
jjtn000.clusterNumber=Integer.parseInt(cName.image.split(":")[1]);
break;
default :
jj_la1[176]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
jjtree.closeNodeScope(jjtn000,true);
jjtc000=false;
jjtn000.jjtSetLastToken(getToken(0));
{
if (true) return jjtn000;
}
}
  finally {
if (jjtc000) {
jjtree.closeNodeScope(jjtn000,true);
jjtn000.jjtSetLastToken(getToken(0));
}
}
throw new Error("Missing return statement in function");
}
