{
  operation.rollback(null);
  nestedCommit.rollback();
  try {
    if (useWal())     writeAheadLog.logAtomicOperationEndRecord(operation.getOperationUnitId(),true,operation.getStartLSN(),operation.getMetadata());
  }
 catch (  IOException e) {
    throw OException.wrapException(new OStorageException("Error while rollbacking an uncompleted commit."),e);
  }
  currentOperation.set(null);
  if (trackAtomicOperations)   activeAtomicOperations.remove(operation.getOperationUnitId());
  for (  String lockObject : operation.lockedObjects())   lockManager.releaseLock(this,lockObject,OOneEntryPerKeyLockManager.LOCK.EXCLUSIVE);
  atomicOperationsCount.decrement();
}
