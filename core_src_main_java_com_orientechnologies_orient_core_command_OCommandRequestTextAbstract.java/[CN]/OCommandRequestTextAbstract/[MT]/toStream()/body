{
  final OMemoryStream buffer=new OMemoryStream();
  try {
    buffer.set(text);
    if (parameters == null || parameters.size() == 0) {
      buffer.set(false);
      buffer.set(false);
    }
 else {
      final Map<Object,Object> params=new HashMap<Object,Object>();
      final Map<Object,byte[]> compositeKeyParams=new HashMap<Object,byte[]>();
      for (      final Entry<Object,Object> paramEntry : parameters.entrySet())       if (paramEntry.getValue() instanceof OCompositeKey)       compositeKeyParams.put(paramEntry.getKey(),OCompositeKeySerializer.INSTANCE.toStream(database,paramEntry.getValue()));
 else       params.put(paramEntry.getKey(),paramEntry.getValue());
      buffer.set(!params.isEmpty());
      if (!params.isEmpty()) {
        final ODocument param=new ODocument(database);
        param.field("params",params);
        buffer.set(param.toStream());
      }
      buffer.set(!compositeKeyParams.isEmpty());
      if (!compositeKeyParams.isEmpty()) {
        final ODocument compositeKey=new ODocument(database);
        compositeKey.field("compositeKeyParams",compositeKeyParams);
        buffer.set(compositeKey.toStream());
      }
    }
  }
 catch (  IOException e) {
    throw new OSerializationException("Error while marshalling OCommandRequestTextAbstract impl",e);
  }
  return buffer.toByteArray();
}
