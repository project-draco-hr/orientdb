{
  final OClass personClass=db.getMetadata().getSchema().getClass("Person");
  personClass.truncate();
  int testClusterId=db.addCluster("test");
  personClass.addClusterId(testClusterId);
  personClass.setClusterSelection(new ODefaultClusterSelectionStrategy());
  personClass.setDefaultClusterId(testClusterId);
  for (  String name : names) {
    createPerson(name);
  }
  final ORecordIteratorClass<ODocument> personIter=new ORecordIteratorClassDescendentOrder<ODocument>(db,db,"Person",true,false,LOCKING_STRATEGY.DEFAULT);
  personIter.setRange(null,null);
  int docNum=0;
  while (personIter.hasNext()) {
    final ODocument personDoc=personIter.next();
    Assert.assertTrue(names.contains(personDoc.field("First")));
    Assert.assertTrue(names.remove(personDoc.field("First")));
    System.out.printf("Doc %d: %s\n",docNum++,personDoc.toString());
  }
  Assert.assertTrue(names.isEmpty());
}
