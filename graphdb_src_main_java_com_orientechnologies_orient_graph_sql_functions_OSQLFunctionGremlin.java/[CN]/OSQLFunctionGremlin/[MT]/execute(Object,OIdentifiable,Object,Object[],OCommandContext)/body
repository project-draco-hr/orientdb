{
  final ODatabaseDocumentTx db=OGremlinHelper.getGraphDatabase(ODatabaseRecordThreadLocal.INSTANCE.get());
  result=new ArrayList<Object>();
  OGremlinHelper.execute(db,(String)iParams[0],null,(Map)iContext.getVariables(),result,new OGremlinHelper.OGremlinCallback(){
    @Override public boolean call(    final ScriptEngine iEngine,    final OrientBaseGraph iGraph){
      if (iCurrentRecord == null)       return true;
      final ODocument document=(ODocument)iCurrentRecord;
      OClass clazz=ODocumentInternal.getImmutableSchemaClass(document);
      if (clazz != null && clazz.isSubClassOf(OrientEdgeType.CLASS_NAME)) {
        OrientEdge graphElement=(OrientEdge)new OrientElementIterable<OrientEdge>(iGraph,Arrays.asList(new ODocument[]{document})).iterator().next();
        iEngine.getBindings(ScriptContext.ENGINE_SCOPE).put("current",graphElement);
        iEngine.getBindings(ScriptContext.ENGINE_SCOPE).put("it",graphElement);
      }
 else {
        OrientVertex graphElement=(OrientVertex)new OrientElementIterable<OrientVertex>(iGraph,Arrays.asList(new ODocument[]{document})).iterator().next();
        iEngine.getBindings(ScriptContext.ENGINE_SCOPE).put("current",graphElement);
        iEngine.getBindings(ScriptContext.ENGINE_SCOPE).put("it",graphElement);
      }
      return true;
    }
  }
,null);
  return result;
}
