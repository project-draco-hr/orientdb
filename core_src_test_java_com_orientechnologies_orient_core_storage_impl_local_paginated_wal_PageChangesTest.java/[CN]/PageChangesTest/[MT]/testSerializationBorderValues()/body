{
  Random random=new Random();
  byte[] firstChange=new byte[127];
  random.nextBytes(firstChange);
  byte[] secondChange=new byte[16383];
  random.nextBytes(secondChange);
  byte[] thirdChange=new byte[2097151];
  random.nextBytes(thirdChange);
  OPageChanges pageChanges=new OPageChanges();
  pageChanges.addChanges(0,firstChange,new byte[127]);
  pageChanges.addChanges(130,secondChange,new byte[16383]);
  pageChanges.addChanges(17000,thirdChange,new byte[2097151]);
  int contentSize=pageChanges.serializedSize();
  byte[] content=new byte[contentSize + 10];
  Assert.assertEquals(pageChanges.toStream(content,10),content.length);
  OPageChanges deserializedPageChanges=new OPageChanges();
  Assert.assertEquals(deserializedPageChanges.fromStream(content,10),content.length);
  ODirectMemoryPointer pointer=new ODirectMemoryPointer(4000000 + ODurablePage.PAGE_PADDING);
  deserializedPageChanges.applyChanges(pointer);
  Assert.assertEquals(pointer.get(0 + ODurablePage.PAGE_PADDING,127),firstChange);
  Assert.assertEquals(pointer.get(130 + ODurablePage.PAGE_PADDING,16383),secondChange);
  Assert.assertEquals(pointer.get(17000 + ODurablePage.PAGE_PADDING,2097151),thirdChange);
  deserializedPageChanges.revertChanges(pointer);
  Assert.assertEquals(pointer.get(0 + ODurablePage.PAGE_PADDING,127),new byte[127]);
  Assert.assertEquals(pointer.get(130 + ODurablePage.PAGE_PADDING,16383),new byte[16383]);
  Assert.assertEquals(pointer.get(17000 + ODurablePage.PAGE_PADDING,2097151),new byte[2097151]);
  pointer.free();
}
