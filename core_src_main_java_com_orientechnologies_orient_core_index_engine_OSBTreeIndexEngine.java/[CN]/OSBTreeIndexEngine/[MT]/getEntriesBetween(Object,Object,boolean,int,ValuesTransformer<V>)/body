{
  acquireSharedLock();
  try {
    final Set<ODocument> result=new ODocumentFieldsHashSet();
    sbTree.loadEntriesBetween(rangeFrom,inclusive,rangeTo,inclusive,new OSBTree.RangeResultListener<Object,V>(){
      @Override public boolean addResult(      OSBTreeBucket.SBTreeEntry<Object,V> entry){
        final Object key=entry.key;
        final V value=entry.value;
        addToEntriesResult(transformer,result,key,value,maxEntriesToFetch);
        if (maxEntriesToFetch > -1 && result.size() == maxEntriesToFetch)         return false;
        return true;
      }
    }
);
    return result;
  }
  finally {
    releaseSharedLock();
  }
}
