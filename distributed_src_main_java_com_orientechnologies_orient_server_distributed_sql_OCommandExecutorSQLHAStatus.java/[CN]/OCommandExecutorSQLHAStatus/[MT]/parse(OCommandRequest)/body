{
  init((OCommandRequestText)iRequest);
  final StringBuilder word=new StringBuilder();
  int oldPos=0;
  int pos=nextWord(parserText,parserTextUpperCase,oldPos,word,true);
  if (pos == -1 || !word.toString().equals(KEYWORD_HA))   throw new OCommandSQLParsingException("Keyword " + KEYWORD_HA + " not found. Use "+ getSyntax(),parserText,oldPos);
  pos=nextWord(parserText,parserTextUpperCase,pos,word,true);
  if (pos == -1 || !word.toString().equals(KEYWORD_STATUS))   throw new OCommandSQLParsingException("Keyword " + KEYWORD_STATUS + " not found. Use "+ getSyntax(),parserText,oldPos);
  pos=nextWord(parserText,parserTextUpperCase,pos,word,false," \r\n");
  if (pos == -1)   throw new OCommandSQLParsingException("Missing parameter. Use " + getSyntax(),parserText,oldPos);
  while (pos > -1) {
    final String option=word.toString();
    if (option.equalsIgnoreCase("-servers"))     servers=true;
 else     if (option.equalsIgnoreCase("-db"))     db=true;
 else     if (option.equalsIgnoreCase("-latency"))     latency=true;
 else     if (option.equalsIgnoreCase("-messages"))     latency=true;
 else     if (option.equalsIgnoreCase("-all"))     servers=db=latency=messages=true;
 else     if (option.equalsIgnoreCase("-output=text"))     textOutput=true;
    pos=nextWord(parserText,parserTextUpperCase,pos,word,false," \r\n");
  }
  return this;
}
