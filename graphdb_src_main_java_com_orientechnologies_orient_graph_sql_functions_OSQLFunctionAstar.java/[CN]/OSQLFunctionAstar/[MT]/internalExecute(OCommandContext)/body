{
  OrientVertex start=paramSourceVertex;
  OrientVertex goal=paramDestinationVertex;
  open.add(start);
  gScore.put(start,0.0);
  fScore.put(start,getHeuristicCost(start,null,goal));
  while (!open.isEmpty()) {
    OrientVertex current=open.poll();
    if (paramEmptyIfMaxDepth == true && currentDepth >= paramMaxDepth) {
      route.clear();
      return getPath();
    }
    if (current.getIdentity().equals(goal.getIdentity()) || currentDepth >= paramMaxDepth) {
      while (current != null) {
        route.add(0,current);
        current=cameFrom.get(current);
      }
      return getPath();
    }
    closedSet.add(current);
    for (    OrientVertex neighbor : getNeighbors(current)) {
      if (closedSet.contains(neighbor)) {
        continue;
      }
      double tentative_gScore=gScore.get(current) + getDistance(current,current,neighbor);
      boolean contains=open.contains(neighbor);
      if (!contains || tentative_gScore < gScore.get(neighbor)) {
        gScore.put(neighbor,tentative_gScore);
        fScore.put(neighbor,tentative_gScore + getHeuristicCost(neighbor,current,goal));
        if (contains) {
          open.remove(neighbor);
        }
        open.offer(neighbor);
        cameFrom.put(neighbor,current);
      }
    }
    currentDepth++;
  }
  return getPath();
}
