{
  final OIndexDefinition indexDefinition=index.getDefinition();
  final OIndexInternal<?> internalIndex=index.getInternal();
  if (!internalIndex.canBeUsedInEqualityOperators() || !internalIndex.hasRangeQuerySupport())   return false;
  if (indexDefinition.getParamCount() == 1) {
    final Object[] betweenKeys=(Object[])keyParams.get(0);
    final Object keyOne=indexDefinition.createValue(Collections.singletonList(OSQLHelper.getValue(betweenKeys[0])));
    final Object keyTwo=indexDefinition.createValue(Collections.singletonList(OSQLHelper.getValue(betweenKeys[2])));
    if (keyOne == null || keyTwo == null)     return false;
    index.getValuesBetween(keyOne,true,keyTwo,true,ascSortOrder,resultListener);
  }
 else {
    final OCompositeIndexDefinition compositeIndexDefinition=(OCompositeIndexDefinition)indexDefinition;
    final Object[] betweenKeys=(Object[])keyParams.get(keyParams.size() - 1);
    final Object betweenKeyOne=OSQLHelper.getValue(betweenKeys[0]);
    if (betweenKeyOne == null)     return false;
    final Object betweenKeyTwo=OSQLHelper.getValue(betweenKeys[2]);
    if (betweenKeyTwo == null)     return false;
    final List<Object> betweenKeyOneParams=new ArrayList<Object>(keyParams.size());
    betweenKeyOneParams.addAll(keyParams.subList(0,keyParams.size() - 1));
    betweenKeyOneParams.add(betweenKeyOne);
    final List<Object> betweenKeyTwoParams=new ArrayList<Object>(keyParams.size());
    betweenKeyTwoParams.addAll(keyParams.subList(0,keyParams.size() - 1));
    betweenKeyTwoParams.add(betweenKeyTwo);
    final Object keyOne=compositeIndexDefinition.createSingleValue(betweenKeyOneParams);
    if (keyOne == null)     return false;
    final Object keyTwo=compositeIndexDefinition.createSingleValue(betweenKeyTwoParams);
    if (keyTwo == null)     return false;
    index.getValuesBetween(keyOne,true,keyTwo,true,ascSortOrder,resultListener);
  }
  updateProfiler(iContext,index,keyParams,indexDefinition);
  return true;
}
