{
  try {
    while (commandStream.hasNext()) {
      String commandLine=commandStream.nextCommand();
      if (commandLine.isEmpty())       continue;
      if (isComment(commandLine))       continue;
      if (isCollectingCommands(commandLine)) {
        out.println("[Started multi-line command. Type just 'end' to finish and execute]");
        commandBuffer.append(commandLine);
        commandLine=null;
      }
 else       if (commandLine.startsWith("end") && commandBuffer.length() > 0) {
        commandLine=commandBuffer.toString();
        commandBuffer.setLength(0);
      }
 else       if (commandBuffer.length() > 0) {
        commandBuffer.append(' ');
        commandBuffer.append(commandLine);
        commandBuffer.append(';');
        commandLine=null;
      }
      if (commandLine != null) {
        if (iBatchMode || isEchoEnabled()) {
          out.println();
          out.print(getPrompt());
          out.print(commandLine);
          out.println();
        }
        final RESULT status=execute(commandLine);
        commandLine=null;
        if (status == RESULT.EXIT || (status == RESULT.ERROR && !Boolean.parseBoolean(properties.get("ignoreErrors"))) && iBatchMode)         return false;
      }
    }
    if (commandBuffer.length() == 0) {
      if (commandBuffer.length() > 0) {
        if (iBatchMode) {
          out.println();
          out.print(getPrompt());
          out.print(commandBuffer);
          out.println();
        }
        final RESULT status=execute(commandBuffer.toString());
        if (status == RESULT.EXIT || (status == RESULT.ERROR && !Boolean.parseBoolean(properties.get("ignoreErrors"))) && iBatchMode)         return false;
      }
    }
  }
  finally {
    commandStream.close();
  }
  return true;
}
