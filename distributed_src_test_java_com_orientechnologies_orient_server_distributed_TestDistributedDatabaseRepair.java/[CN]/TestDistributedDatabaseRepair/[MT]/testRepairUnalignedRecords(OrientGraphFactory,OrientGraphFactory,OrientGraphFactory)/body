{
  OrientBaseGraph graph=localFactory0.getTx();
  OrientVertex product;
  try {
    product=graph.addVertex("class:Product-Type");
    product.setProperty("status","ok");
  }
  finally {
    graph.shutdown();
  }
  banner("CREATE A RECORD ONLY ON SERVER 0");
  final OrientVertex productOnlyOnServer0;
  graph=localFactory0.getNoTx();
  try {
    productOnlyOnServer0=graph.addVertex("class:Product-Type");
    productOnlyOnServer0.setProperty("status","onlyServer0");
    final Object result=createRemoteRecord(0,productOnlyOnServer0.getRecord(),new String[]{serverInstance.get(0).getServerInstance().getDistributedManager().getLocalNodeName()});
    Assert.assertFalse(result instanceof Throwable);
  }
  finally {
    graph.shutdown();
  }
  serverInstance.get(0).getServerInstance().getDistributedManager().getMessageService().getDatabase(getDatabaseName()).getDatabaseRapairer().repairRecord(new ORecordId(product.getIdentity().getClusterId(),-1));
  Thread.sleep(3000);
  banner("CREATE A RECORD...");
  final OrientVertex newProduct;
  graph=localFactory0.getNoTx();
  try {
    newProduct=graph.addVertex("class:Product-Type");
    newProduct.setProperty("status","new");
    graph.commit();
  }
  finally {
    graph.shutdown();
  }
  Assert.assertFalse(newProduct.getIdentity().equals(productOnlyOnServer0.getIdentity()));
  banner("EXPECTING AUTO RECOVER ON ALL NODES...");
  graph=localFactory0.getNoTx();
  try {
    final ODocument product2=readRemoteRecord(0,(ORecordId)productOnlyOnServer0.getIdentity(),new String[]{serverInstance.get(0).getServerInstance().getDistributedManager().getLocalNodeName()});
    Assert.assertNotNull(product2);
    Assert.assertEquals("onlyServer0",product2.field("status"));
    final OrientVertex product3=graph.getVertex(newProduct.getIdentity());
    Assert.assertEquals("new",product3.getProperty("status"));
  }
  finally {
    graph.shutdown();
  }
  graph=localFactory1.getNoTx();
  try {
    final ODocument product2=readRemoteRecord(1,(ORecordId)productOnlyOnServer0.getIdentity(),new String[]{serverInstance.get(1).getServerInstance().getDistributedManager().getLocalNodeName()});
    Assert.assertNotNull(product2);
    Assert.assertEquals("onlyServer0",product2.field("status"));
    final OrientVertex product3=graph.getVertex(newProduct.getIdentity());
    Assert.assertEquals("new",product3.getProperty("status"));
  }
  finally {
    graph.shutdown();
  }
  graph=localFactory2.getNoTx();
  try {
    final ODocument product2=readRemoteRecord(2,(ORecordId)productOnlyOnServer0.getIdentity(),new String[]{serverInstance.get(2).getServerInstance().getDistributedManager().getLocalNodeName()});
    Assert.assertNotNull(product2);
    Assert.assertEquals("onlyServer0",product2.field("status"));
    final OrientVertex product3=graph.getVertex(newProduct.getIdentity());
    Assert.assertEquals("new",product3.getProperty("status"));
  }
  finally {
    graph.shutdown();
  }
}
