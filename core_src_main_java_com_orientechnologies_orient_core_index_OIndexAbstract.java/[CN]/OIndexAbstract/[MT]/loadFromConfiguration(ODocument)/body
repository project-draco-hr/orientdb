{
  acquireExclusiveLock();
  try {
    configuration=indexConfigurationInstance(config);
    clustersToIndex.clear();
    IndexMetadata indexMetadata=loadMetadata(config);
    indexDefinition=indexMetadata.getIndexDefinition();
    clustersToIndex.addAll(indexMetadata.getClustersToIndex());
    algorithm=indexMetadata.getAlgorithm();
    valueContainerAlgorithm=indexMetadata.getValueContainerAlgorithm();
    try {
      indexId=storage.loadIndexEngine(name);
      if (indexId == -1) {
        indexId=storage.loadExternalIndexEngine(name,algorithm,type,indexDefinition,determineValueSerializer(),isAutomatic(),isDurableInNonTxMode(),version,getEngineProperties());
      }
      if (indexId == -1)       return false;
      onIndexEngineChange(indexId);
    }
 catch (    Exception e) {
      OLogManager.instance().error(this,"Error during load of index '%s'",e,name != null ? name : "null");
      if (isAutomatic()) {
        OLogManager.instance().warn(this,"Cannot load index '%s' rebuilt it from scratch",getName());
        try {
          rebuild();
        }
 catch (        Throwable t) {
          OLogManager.instance().error(this,"Cannot rebuild index '%s'  BECAUSE '" + t + "'. The index will be removed in configuration",e,getName());
          return false;
        }
      }
    }
    return true;
  }
  finally {
    releaseExclusiveLock();
  }
}
