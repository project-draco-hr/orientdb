{
  if (iCommand == null || iCommand.trim().isEmpty()) {
    message("\nAVAILABLE COMMANDS:\n");
    for (    Method m : getConsoleMethods().keySet()) {
      ConsoleCommand annotation=m.getAnnotation(ConsoleCommand.class);
      if (annotation == null)       continue;
      message("* %-85s%s\n",getCorrectMethodName(m),annotation.description());
    }
    message("* %-85s%s\n",getClearName("exit"),"Close the console");
    return;
  }
  final String[] commandWords=OStringParser.getWords(iCommand,wordSeparator);
  boolean onlineMode=commandWords.length > 1 && commandWords[0].equalsIgnoreCase("-online");
  if (onlineMode)   iCommand=iCommand.substring("-online".length() + 1);
  final Method m=getMethod(iCommand);
  if (m != null) {
    final ConsoleCommand ann=m.getAnnotation(ConsoleCommand.class);
    message("\nCOMMAND: " + iCommand + "\n\n");
    if (ann != null) {
      if (onlineMode && !ann.onlineHelp().isEmpty()) {
        try {
          final String text=getOnlineHelp(ONLINE_HELP_URL + ann.onlineHelp() + ONLINE_HELP_EXT);
          if (text != null && !text.isEmpty()) {
            message(text);
            return;
          }
        }
 catch (        Exception e) {
        }
        error("!CANNOT FETCH ONLINE DOCUMENTATION, CHECK COMPUTER IS CONNECTED TO THE INTERNET.");
        return;
      }
      message(ann.description() + ".");
      final StringBuilder syntax=new StringBuilder();
      final StringBuilder notes=new StringBuilder();
      syntax.append(m.getName());
      int paramCounter=0;
      for (      Annotation[] paramAnnotations : m.getParameterAnnotations()) {
        ConsoleParameter pAnn=null;
        for (        Annotation a : paramAnnotations) {
          if (a instanceof ConsoleParameter) {
            pAnn=(ConsoleParameter)a;
            break;
          }
        }
        syntax.append(" ");
        if (pAnn != null && pAnn.optional())         syntax.append("[");
        syntax.append("<");
        notes.append("\n- <");
        if (pAnn != null) {
          syntax.append(pAnn.name());
          notes.append(pAnn.name());
        }
 else {
          syntax.append("param" + paramCounter++);
          notes.append("param" + paramCounter++);
        }
        syntax.append(">");
        notes.append(">: ");
        if (pAnn != null && pAnn.optional()) {
          syntax.append("]");
          notes.append("(optional) ");
        }
        if (pAnn != null)         notes.append(pAnn.description());
      }
      message("\n\nSYNTAX: " + syntax + "\n");
      if (notes.length() > 0)       message("\nWHERE:" + notes + "\n");
    }
 else     message("No description available");
  }
}
