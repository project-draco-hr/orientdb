{
  super.begin();
  try {
    setUsingLog(channel.readByte() == 1);
    while (channel.readByte() == 1) {
      final byte recordStatus=channel.readByte();
      final ORecordId rid=channel.readRID();
      final OTransactionEntryProxy entry=new OTransactionEntryProxy(channel.readByte());
      entry.status=recordStatus;
switch (entry.status) {
case OTransactionRecordEntry.CREATED:
        entry.clusterName=channel.readString();
      entry.getRecord().fill(database,rid,0,channel.readBytes(),true);
    if (entry.getRecord() instanceof ODocument)     ((ODocument)entry.getRecord()).deserializeFields();
  createdRecords.put(rid.copy(),entry.getRecord());
break;
case OTransactionRecordEntry.UPDATED:
entry.getRecord().fill(database,rid,channel.readInt(),channel.readBytes(),true);
if (entry.getRecord() instanceof ODocument) ((ODocument)entry.getRecord()).deserializeFields();
updatedRecords.put(rid,entry.getRecord());
break;
case OTransactionRecordEntry.DELETED:
entry.getRecord().fill(database,rid,channel.readInt(),null,false);
break;
default :
throw new OTransactionException("Unrecognized tx command: " + entry.status);
}
recordEntries.put((ORecordId)entry.getRecord().getIdentity(),entry);
}
remoteIndexEntries=new ODocument(channel.readBytes());
}
 catch (IOException e) {
rollback();
throw new OSerializationException("Can't read transaction record from the network. Transaction aborted",e);
}
}
