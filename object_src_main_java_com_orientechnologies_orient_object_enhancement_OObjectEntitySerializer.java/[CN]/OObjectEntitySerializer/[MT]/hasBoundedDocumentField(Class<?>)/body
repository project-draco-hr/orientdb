{
  OObjectEntitySerializedSchema serializedSchema=getCurrentSerializedSchema();
  if (!serializedSchema.classes.contains(iClass)) {
    registerClass(iClass);
  }
  boolean hasBoundedField=false;
  for (Class<?> currentClass=iClass; currentClass != null && currentClass != Object.class && !currentClass.equals(ODocument.class) && !hasBoundedField; ) {
    hasBoundedField=serializedSchema.boundDocumentFields.get(currentClass) != null;
    currentClass=currentClass.getSuperclass();
  }
  return hasBoundedField;
}
