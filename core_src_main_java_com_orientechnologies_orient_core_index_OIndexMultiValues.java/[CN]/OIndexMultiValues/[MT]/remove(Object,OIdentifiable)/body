{
  checkForRebuild();
  key=getCollatingValue(key);
  modificationLock.requestModificationLock();
  try {
    acquireExclusiveLock();
    startStorageAtomicOperation();
    try {
      Set<OIdentifiable> values=indexEngine.get(key);
      if (values == null) {
        commitStorageAtomicOperation();
        return false;
      }
      if (values.remove(value)) {
        if (values.isEmpty())         indexEngine.remove(key);
 else         indexEngine.put(key,values);
        commitStorageAtomicOperation();
        return true;
      }
      commitStorageAtomicOperation();
      return false;
    }
 catch (    RuntimeException e) {
      rollbackStorageAtomicOperation();
      throw new OIndexException("Error during removal of entry by key",e);
    }
 finally {
      releaseExclusiveLock();
    }
  }
  finally {
    modificationLock.releaseModificationLock();
  }
}
