{
  if (!(getStorage() instanceof OStorageEmbedded))   getStorage().commit(currentTx);
 else {
    final List<String> involvedIndexes=currentTx.getInvolvedIndexes();
    List<OIndexMVRBTreeAbstract<?>> lockedIndexes=null;
    try {
      if (involvedIndexes != null)       for (      String indexName : involvedIndexes) {
        final OIndexMVRBTreeAbstract<?> index=(OIndexMVRBTreeAbstract<?>)getMetadata().getIndexManager().getIndexInternal(indexName);
        if (lockedIndexes == null)         lockedIndexes=new ArrayList<OIndexMVRBTreeAbstract<?>>();
        index.acquireExclusiveLock();
        lockedIndexes.add(index);
      }
      getStorage().callInLock(new Callable<Void>(){
        public Void call() throws Exception {
          getStorage().commit(currentTx);
          final ODocument indexEntries=currentTx.getIndexChanges();
          if (indexEntries != null) {
            for (            Entry<String,Object> indexEntry : indexEntries) {
              final OIndex<?> index=getMetadata().getIndexManager().getIndexInternal(indexEntry.getKey());
              index.commit((ODocument)indexEntry.getValue());
            }
          }
          return null;
        }
      }
,true);
    }
  finally {
      if (lockedIndexes != null)       for (      OIndexMVRBTreeAbstract index : lockedIndexes) {
        index.releaseExclusiveLock();
      }
    }
  }
}
