{
  final OIndexDefinition indexDefinition=index.getDefinition();
  final OIndexInternal<?> internalIndex=index.getInternal();
  if (!internalIndex.canBeUsedInEqualityOperators())   return null;
  final Object result;
  if (indexDefinition.getParamCount() == 1) {
    if (!((indexDefinition instanceof OPropertyMapIndexDefinition) && ((OPropertyMapIndexDefinition)indexDefinition).getIndexBy() == OPropertyMapIndexDefinition.INDEX_BY.KEY))     return null;
    final Object key=((OIndexDefinitionMultiValue)indexDefinition).createSingleValue(keyParams.get(0));
    if (key == null)     return null;
    final Object indexResult=index.get(key);
    result=convertIndexResult(indexResult);
  }
 else {
    final OCompositeIndexDefinition compositeIndexDefinition=(OCompositeIndexDefinition)indexDefinition;
    if (!((compositeIndexDefinition.getMultiValueDefinition() instanceof OPropertyMapIndexDefinition) && ((OPropertyMapIndexDefinition)compositeIndexDefinition.getMultiValueDefinition()).getIndexBy() == OPropertyMapIndexDefinition.INDEX_BY.KEY))     return null;
    final Object keyOne=compositeIndexDefinition.createSingleValue(keyParams);
    if (keyOne == null)     return null;
    if (internalIndex.hasRangeQuerySupport()) {
      final Object keyTwo=compositeIndexDefinition.createSingleValue(keyParams);
      if (resultListener != null) {
        index.getValuesBetween(keyOne,true,keyTwo,true,resultListener);
        result=resultListener.getResult();
      }
 else       result=index.getValuesBetween(keyOne,true,keyTwo,true);
    }
 else {
      if (indexDefinition.getParamCount() == keyParams.size()) {
        final Object indexResult=index.get(keyOne);
        result=convertIndexResult(indexResult);
      }
 else       return null;
    }
  }
  updateProfiler(iContext,index,keyParams,indexDefinition);
  return result;
}
