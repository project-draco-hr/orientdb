{
  try {
    final OMemoryInputStream memoryInputStream=new OMemoryInputStream(content,offset,length);
    final GZIPInputStream gzipInputStream=new GZIPInputStream(memoryInputStream,16384);
    try {
      final byte[] buffer=new byte[1024];
      byte[] result=new byte[1024];
      int bytesRead;
      int len=0;
      while ((bytesRead=gzipInputStream.read(buffer,0,buffer.length)) > -1) {
        if (len + bytesRead > result.length) {
          int newSize=2 * result.length;
          if (newSize < len + bytesRead)           newSize=Integer.MAX_VALUE;
          final byte[] oldResult=result;
          result=new byte[newSize];
          System.arraycopy(oldResult,0,result,0,oldResult.length);
        }
        System.arraycopy(buffer,0,result,len,bytesRead);
        len+=bytesRead;
      }
      return Arrays.copyOf(result,len);
    }
  finally {
      gzipInputStream.close();
    }
  }
 catch (  IOException ioe) {
    throw new IllegalStateException("Exception during data uncompression",ioe);
  }
}
