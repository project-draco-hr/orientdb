{
  Iterator<Vertex> iterator=null;
  OrientGraphNoTx graph=new OrientGraphNoTx("memory:/TestDB","admin","admin");
  OrientVertexType personType=graph.createVertexType("Person");
  personType.createProperty("person_id",OType.STRING);
  personType.createProperty("name",OType.STRING);
  OrientVertex p1=graph.addVertex("class:Person");
  p1.setProperty("person_id","01");
  p1.setProperty("name","Gabriel");
  OrientVertex p2=graph.addVertex("class:Person");
  p2.setProperty("person_id","02");
  p2.setProperty("name","Daniel");
  OrientVertex p3=graph.addVertex("class:Person");
  p3.setProperty("person_id","03");
  p3.setProperty("name","Emanuel");
  String[] singleKey={"person_id"};
  String[] singleValue={"01"};
  iterator=graph.getVertices("Person",singleKey,singleValue).iterator();
  int resultsAmount=0;
  while (iterator.hasNext()) {
    iterator.next();
    resultsAmount++;
  }
  assertEquals(1,resultsAmount);
  iterator=graph.getVertices("Person",singleKey,singleValue).iterator();
  Vertex firstVertex=iterator.next();
  assertEquals(firstVertex.getProperty("person_id"),"01");
  assertEquals(firstVertex.getProperty("name"),"Gabriel");
  String statement="create index Person.pkey on Person (person_id) unique_hash_index";
  OCommandSQL sqlCommand=new OCommandSQL(statement);
  graph.getRawGraph().command(sqlCommand).execute();
  singleValue[0]="02";
  iterator=graph.getVertices("Person",singleKey,singleValue).iterator();
  resultsAmount=0;
  while (iterator.hasNext()) {
    iterator.next();
    resultsAmount++;
  }
  assertEquals(1,resultsAmount);
  iterator=graph.getVertices("Person",singleKey,singleValue).iterator();
  firstVertex=iterator.next();
  assertEquals(firstVertex.getProperty("person_id"),"02");
  assertEquals(firstVertex.getProperty("name"),"Daniel");
  graph.dropIndex("Person.pkey");
  statement="create index Person.pkey on Person (person_id,name) unique_hash_index";
  sqlCommand=new OCommandSQL(statement);
  graph.getRawGraph().command(sqlCommand).execute();
  String[] keys={"person_id","name"};
  String[] values={"03","Emanuel"};
  iterator=graph.getVertices("Person",keys,values).iterator();
  resultsAmount=0;
  while (iterator.hasNext()) {
    iterator.next();
    resultsAmount++;
  }
  assertEquals(1,resultsAmount);
  iterator=graph.getVertices("Person",keys,values).iterator();
  firstVertex=iterator.next();
  assertEquals(firstVertex.getProperty("person_id"),"03");
  assertEquals(firstVertex.getProperty("name"),"Emanuel");
  graph.createVertexType("PersonDummy");
  Iterator<Vertex> personDummy=graph.getVertices("PersonDummy",singleKey,singleValue).iterator();
  resultsAmount=0;
  while (personDummy.hasNext()) {
    personDummy.next();
    resultsAmount++;
  }
  assertEquals(0,resultsAmount);
}
