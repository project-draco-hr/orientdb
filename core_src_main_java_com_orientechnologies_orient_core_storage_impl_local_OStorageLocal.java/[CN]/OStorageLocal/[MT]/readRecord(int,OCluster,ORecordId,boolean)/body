{
  if (iRid.clusterPosition < 0)   throw new IllegalArgumentException("Can't read the record #" + iRid + " since the position is invalid");
  final long timer=OProfiler.getInstance().startChrono();
  final boolean locked=iAtomicLock ? lock.acquireSharedLock() : false;
  try {
    lockManager.acquireLock(Thread.currentThread(),iRid,LOCK.SHARED);
    try {
      final OPhysicalPosition ppos=iClusterSegment.getPhysicalPosition(iRid.clusterPosition,new OPhysicalPosition());
      if (ppos == null || !checkForRecordValidity(ppos))       return null;
      final ODataLocal data=getDataSegment(ppos.dataSegment);
      return new ORawBuffer(data.getRecord(ppos.dataPosition),ppos.version,ppos.type);
    }
  finally {
      lockManager.releaseLock(Thread.currentThread(),iRid,LOCK.SHARED);
    }
  }
 catch (  IOException e) {
    OLogManager.instance().error(this,"Error on reading record #" + iRid + " (cluster: "+ iClusterSegment+ ")",e);
    return null;
  }
 finally {
    lock.releaseSharedLock(locked);
    OProfiler.getInstance().stopChrono("OStorageLocal.readRecord",timer);
  }
}
