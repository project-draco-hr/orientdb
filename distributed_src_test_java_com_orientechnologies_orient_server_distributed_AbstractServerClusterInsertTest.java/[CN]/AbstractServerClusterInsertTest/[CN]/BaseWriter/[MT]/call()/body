{
  int j=0;
  String name=Integer.toString(threadId);
  for (int i=0; i < count; i++) {
    final ODatabaseDocumentTx database=new ODatabaseDocumentTx(databaseUrl).open("admin","admin");
    try {
      final int id=baseCount + i;
      final String uid=UUID.randomUUID().toString();
      int retry;
      for (retry=0; retry < maxRetries; retry++) {
        if (useTransactions)         database.begin();
        try {
          final ODocument person=createRecord(database,id,uid);
          if (!useTransactions) {
            updateRecord(database,id);
            checkRecord(database,id);
            checkIndex(database,(String)person.field("name"),person.getIdentity());
          }
          if (useTransactions)           database.commit();
          if ((i + 1) % 100 == 0)           System.out.println("\nDBStartupWriter " + database.getURL() + " managed "+ (i + 1)+ "/"+ count+ " records so far");
          if (delayWriter > 0)           Thread.sleep(delayWriter);
          break;
        }
 catch (        InterruptedException e) {
          System.out.println("DBStartupWriter received interrupt (db=" + database.getURL());
          Thread.currentThread().interrupt();
          break;
        }
catch (        ORecordDuplicatedException e) {
          System.out.println("DBStartupWriter received exception (db=" + database.getURL());
        }
catch (        ONeedRetryException e) {
          System.out.println("DBStartupWriter received exception (db=" + database.getURL());
          if (retry >= maxRetries)           e.printStackTrace();
          break;
        }
catch (        ODistributedException e) {
          if (!(e.getCause() instanceof ORecordDuplicatedException)) {
            database.rollback();
            throw e;
          }
        }
catch (        Throwable e) {
          System.out.println("DBStartupWriter received exception (db=" + database.getURL() + ")");
          e.printStackTrace();
          return null;
        }
      }
    }
  finally {
      runningWriters.countDown();
      database.close();
    }
    j++;
  }
  System.out.println("\nDBStartupWriter " + name + " END");
  return null;
}
