{
  ORecord toRet=null;
  List<ODocument> toResave=new ArrayList<ODocument>();
  LinkedList<ODocument> path=new LinkedList<ODocument>();
  ORecord next=document;
  do {
    if (next instanceof ODocument) {
      ORecord nextToInspect=null;
      List<OIdentifiable> toSave=manager.getPointed(next);
      if (toSave != null) {
        for (        OIdentifiable oIdentifiable : toSave) {
          if (oIdentifiable.getIdentity().isNew()) {
            if (oIdentifiable instanceof ORecord)             nextToInspect=(ORecord)oIdentifiable;
 else             nextToInspect=oIdentifiable.getRecord();
            break;
          }
        }
      }
      if (nextToInspect != null) {
        if (path.contains(nextToInspect)) {
          if (nextToInspect == original)           database.executeSaveEmptyRecord(nextToInspect,iClusterName);
 else           database.executeSaveEmptyRecord(nextToInspect,getClusterName(nextToInspect));
          toResave.add((ODocument)nextToInspect);
        }
 else {
          path.push((ODocument)next);
          next=nextToInspect;
        }
      }
 else {
        if (next == original)         toRet=database.executeSaveRecord(next,iClusterName,next.getRecordVersion(),iMode,iForceCreate,iRecordCreatedCallback,iRecordUpdatedCallback);
 else         database.executeSaveRecord(next,getClusterName(next),next.getRecordVersion(),OPERATION_MODE.SYNCHRONOUS,false,null,null);
        next=path.pollFirst();
      }
    }
 else {
      database.executeSaveRecord(next,null,next.getRecordVersion(),iMode,false,null,null);
      next=path.pollFirst();
    }
  }
 while (next != null);
  for (  ODocument op : toResave) {
    op.setDirty();
    if (op == original) {
      ORecord ret=database.executeSaveRecord(op,null,op.getRecordVersion(),OPERATION_MODE.SYNCHRONOUS,false,null,iRecordUpdatedCallback);
      toRet=ret;
    }
 else     database.executeSaveRecord(op,null,op.getRecordVersion(),OPERATION_MODE.SYNCHRONOUS,false,null,null);
  }
  return toRet;
}
