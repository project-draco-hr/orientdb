{
  if (database != null && !(database.getStorage() instanceof ODistributedStorage))   throw new ODistributedException("Distributed storage was not installed for database '" + database.getName() + "'. Implementation found: "+ database.getStorage().getClass().getName());
  final ODistributedAbstractPlugin manager=this;
  return (Serializable)OScenarioThreadLocal.executeAsDistributed(new Callable<Object>(){
    @Override public Object call() throws Exception {
      try {
        final Serializable result=(Serializable)task.execute(reqId,serverInstance,manager,database);
        if (result instanceof Throwable && !(result instanceof OException))         ODistributedServerLog.error(this,nodeName,getNodeNameById(reqId.getNodeId()),DIRECTION.IN,"Error on executing request %d (%s) on local node: ",(Throwable)result,reqId,task);
 else {
          final String sourceNodeName=task.getNodeSource();
          if (database != null) {
            final ODistributedDatabaseImpl ddb=getMessageService().getDatabase(database.getName());
            if (!(result instanceof Throwable) && task instanceof OAbstractReplicatedTask)             ddb.setLSN(sourceNodeName,((OAbstractReplicatedTask)task).getLastLSN());
          }
        }
        return result;
      }
 catch (      Throwable e) {
        if (!(e instanceof OException))         ODistributedServerLog.error(this,nodeName,getNodeNameById(reqId.getNodeId()),DIRECTION.IN,"error on executing distributed request %s on local node: %s",e,reqId,task);
        return e;
      }
    }
  }
);
}
