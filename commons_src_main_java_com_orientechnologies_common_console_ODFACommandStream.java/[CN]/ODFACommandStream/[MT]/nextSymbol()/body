{
  Symbol s;
  if (buffer.position() + position < buffer.limit()) {
    s=symbol(buffer.charAt(position));
  }
 else {
    buffer.compact();
    int read=reader.read(buffer);
    buffer.flip();
    if (read == 0) {
      if (state != State.S)       partialResult.append(buffer.subSequence(start,position).toString());
      start=0;
      end=end - position;
      buffer.clear();
      read=reader.read(buffer);
      buffer.flip();
      position=0;
    }
    if (read == -1) {
      s=Symbol.EOF;
    }
 else {
      s=symbol(buffer.charAt(position));
    }
  }
  return s;
}
