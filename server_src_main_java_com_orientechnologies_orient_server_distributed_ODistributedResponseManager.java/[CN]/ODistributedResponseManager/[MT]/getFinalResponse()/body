{
  synchronousResponsesLock.lock();
  try {
    manageConflicts();
    if (receivedResponses == 0) {
      if (quorum > 0)       throw new ODistributedException("No response received from any of nodes " + getExpectedNodes() + " for request "+ request);
      return null;
    }
switch (request.getTask().getResultStrategy()) {
case ANY:
      break;
case UNION:
{
      final Map<String,Object> payloads=new HashMap<String,Object>();
      for (      Map.Entry<String,Object> entry : responses.entrySet())       if (entry.getValue() != NO_RESPONSE)       payloads.put(entry.getKey(),((ODistributedResponse)entry.getValue()).getPayload());
      final ODistributedResponse response=(ODistributedResponse)getReceivedResponses().iterator().next();
      response.setExecutorNodeName(responses.keySet().toString());
      response.setPayload(payloads);
      return response;
    }
}
final int bestResponsesGroupIndex=getBestResponsesGroup();
final List<ODistributedResponse> bestResponsesGroup=responseGroups.get(bestResponsesGroupIndex);
return bestResponsesGroup.get(0);
}
  finally {
synchronousResponsesLock.unlock();
}
}
