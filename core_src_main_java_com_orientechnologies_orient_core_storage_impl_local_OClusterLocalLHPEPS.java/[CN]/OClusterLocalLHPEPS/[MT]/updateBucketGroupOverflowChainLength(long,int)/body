{
  if (diff == 0)   return;
  Integer mainBucketOverflowInfo=groupBucketOverflowInfoByIndex.get(groupIndex);
  int prevChainLength=0;
  if (mainBucketOverflowInfo == null) {
    mainBucketOverflowInfo=diff;
    groupBucketOverflowInfoByIndex.put(groupIndex,mainBucketOverflowInfo);
  }
 else {
    prevChainLength=mainBucketOverflowInfo;
    mainBucketOverflowInfo+=diff;
    if (mainBucketOverflowInfo == 0)     groupBucketOverflowInfoByIndex.remove(groupIndex);
 else     groupBucketOverflowInfoByIndex.put(groupIndex,mainBucketOverflowInfo);
  }
  Map<Long,Integer> prevChainMap=null;
  if (prevChainLength > 0)   prevChainMap=groupBucketOverflowInfoByChainLength[prevChainLength];
  if (mainBucketOverflowInfo > 0) {
    if (mainBucketOverflowInfo == groupBucketOverflowInfoByChainLength.length) {
      final Map<Long,Integer>[] newGroupBucketOverflow=new HashMap[groupBucketOverflowInfoByChainLength.length << 1];
      System.arraycopy(groupBucketOverflowInfoByChainLength,0,newGroupBucketOverflow,0,groupBucketOverflowInfoByChainLength.length);
      groupBucketOverflowInfoByChainLength=newGroupBucketOverflow;
    }
    Map<Long,Integer> nextChainMap=groupBucketOverflowInfoByChainLength[mainBucketOverflowInfo];
    if (nextChainMap == null) {
      nextChainMap=new HashMap<Long,Integer>(1024);
      groupBucketOverflowInfoByChainLength[mainBucketOverflowInfo]=nextChainMap;
    }
    nextChainMap.put(groupIndex,mainBucketOverflowInfo);
  }
  if (mainBucketOverflowInfo > maxChainIndex)   maxChainIndex=mainBucketOverflowInfo;
  if (prevChainMap != null)   prevChainMap.remove(groupIndex);
  if (prevChainLength == maxChainIndex) {
    while (maxChainIndex >= 0 && (groupBucketOverflowInfoByChainLength[maxChainIndex] == null || groupBucketOverflowInfoByChainLength[maxChainIndex].isEmpty()))     maxChainIndex--;
  }
}
