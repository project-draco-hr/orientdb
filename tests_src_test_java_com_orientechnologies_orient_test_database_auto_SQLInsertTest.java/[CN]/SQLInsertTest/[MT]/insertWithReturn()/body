{
  if (!database.getMetadata().getSchema().existsClass("actor2")) {
    database.command(new OCommandSQL("CREATE CLASS Actor2")).execute();
    database.getMetadata().getSchema().reload();
  }
  ODocument doc=database.command(new OCommandSQL("INSERT INTO Actor2 SET FirstName=\"FFFF\" RETURN $current")).execute();
  Assert.assertTrue(doc != null);
  Assert.assertEquals(doc.getClassName(),"Actor2");
  Object res1=database.command(new OCommandSQL("INSERT INTO Actor2 SET FirstName=\"Butch 1\" RETURN @rid")).execute();
  Assert.assertTrue(res1 instanceof ORecordId);
  Assert.assertTrue(((OIdentifiable)res1).getIdentity().isValid());
  Object res2=database.command(new OCommandSQL("INSERT INTO Actor2(FirstName,LastName) VALUES ('Jay','Miner'),('Frank','Hermier'),('Emily','Saut')  RETURN @rid")).execute();
  Assert.assertTrue(res2 instanceof List<?>);
  Assert.assertTrue(((List)res2).get(0) instanceof ORecordId);
  ORID another=((OIdentifiable)res1).getIdentity();
  final String sql="INSERT INTO Actor2 RETURN $current.FirstName  FROM SELECT * FROM [" + doc.getIdentity().toString() + ","+ another.toString()+ "]";
  ArrayList res3=database.command(new OCommandSQL(sql)).execute();
  Assert.assertEquals(res3.size(),2);
  Assert.assertTrue(((List)res3).get(0) instanceof ODocument);
  final ODocument res3doc=(ODocument)res3.get(0);
  Assert.assertTrue(res3doc.containsField("result"));
  Assert.assertTrue("FFFF".equalsIgnoreCase((String)res3doc.field("result")) || "Butch 1".equalsIgnoreCase((String)res3doc.field("result")));
  Assert.assertTrue(res3doc.containsField("rid"));
  Assert.assertTrue(res3doc.containsField("version"));
  final String sql2="let var1=INSERT INTO Actor2 CONTENT {Name:\"content\"} RETURN $current.@rid\n" + "let var2=UPDATE $var1 SET Bingo=1 RETURN AFTER @rid\n" + "return $var2";
  List<?> res_sql2=database.command(new OCommandScript("sql",sql2)).execute();
  Assert.assertEquals(res_sql2.size(),1);
  Assert.assertTrue(((List)res_sql2).get(0) instanceof ORecordId);
  final String sql3="let var1=INSERT INTO Actor2 CONTENT {Name:\"Bingo owner\"} RETURN @this\n" + "let var2=UPDATE $var1 SET Bingo=1 RETURN AFTER\n" + "return $var2";
  List<?> res_sql3=database.command(new OCommandScript("sql",sql3)).execute();
  Assert.assertEquals(res_sql3.size(),1);
  Assert.assertTrue(((List)res_sql3).get(0) instanceof ODocument);
  final ODocument sql3doc=(ODocument)(((List)res_sql3).get(0));
  Assert.assertEquals(sql3doc.field("Bingo"),1);
  Assert.assertEquals(sql3doc.field("Name"),"Bingo owner");
}
