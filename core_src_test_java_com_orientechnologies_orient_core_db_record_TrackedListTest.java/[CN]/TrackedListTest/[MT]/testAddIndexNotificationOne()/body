{
  final ODocument doc=new ODocument();
  doc.unsetDirty();
  Assert.assertFalse(doc.isDirty());
  final OTrackedList<String> trackedList=new OTrackedList<String>(doc);
  trackedList.add("value1");
  trackedList.add("value2");
  doc.unsetDirty();
  Assert.assertFalse(doc.isDirty());
  final ORef<Boolean> changed=new ORef<Boolean>(false);
  trackedList.addChangeListener(new OMultiValueChangeListener<Integer,String>(){
    public void onAfterRecordChanged(    final OMultiValueChangeEvent<Integer,String> event){
      Assert.assertEquals(event.getChangeType(),OMultiValueChangeEvent.OChangeType.ADD);
      Assert.assertNull(event.getOldValue());
      Assert.assertEquals(event.getKey().intValue(),1);
      Assert.assertEquals(event.getValue(),"value3");
      changed.value=true;
    }
  }
);
  trackedList.add(1,"value3");
  Assert.assertEquals(changed.value,Boolean.TRUE);
  Assert.assertTrue(doc.isDirty());
}
