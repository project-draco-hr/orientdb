{
  type=iType;
  watchDog=new Listener(){
    public void memoryUsageLow(    final TYPE iType,    final long usedMemory,    final long maxMemory){
      if (iType == TYPE.JVM) {
        if (map != null) {
          acquireExclusiveLock();
          try {
            int maxUpdates=map.getMaxUpdatesBeforeSave();
            if (maxUpdates > 10)             maxUpdates*=0.90;
            map.setMaxUpdatesBeforeSave(maxUpdates);
            optimize(false);
          }
  finally {
            releaseExclusiveLock();
          }
        }
      }
    }
    public void memoryUsageCritical(    final TYPE iType,    final long usedMemory,    final long maxMemory){
      if (iType == TYPE.JVM) {
        if (map != null) {
          acquireExclusiveLock();
          try {
            int maxUpdates=map.getMaxUpdatesBeforeSave();
            if (maxUpdates > 10)             maxUpdates*=0.50;
            map.setMaxUpdatesBeforeSave(maxUpdates);
            optimize(true);
          }
  finally {
            releaseExclusiveLock();
          }
        }
      }
    }
    private void optimize(    final boolean iHardMode){
      OLogManager.instance().debug(this,"Forcing optimization of Index %s (%d items). Found %d entries in memory...",name,map.size(),map.getInMemoryEntries());
      if (iHardMode)       map.freeInMemoryResources();
      final int saved=map.optimize(true);
      OLogManager.instance().debug(this,"Completed! Saved %d and now %d entries reside in memory",saved,map.getInMemoryEntries());
    }
  }
;
  Orient.instance().getMemoryWatchDog().addListener(watchDog);
}
