{
  final OSchema schema=database.getMetadata().getSchema();
  OClass clazz=schema.createClass("CompositeIndexQueryCSTest");
  OProperty csp=clazz.createProperty("csp",OType.STRING);
  csp.setCollate(ODefaultCollate.NAME);
  OProperty cip=clazz.createProperty("cip",OType.STRING);
  cip.setCollate(OCaseInsensitiveCollate.NAME);
  clazz.createIndex("collateCompositeIndexCS",OClass.INDEX_TYPE.NOTUNIQUE,"csp","cip");
  for (int i=0; i < 10; i++) {
    ODocument document=new ODocument("CompositeIndexQueryCSTest");
    if (i % 2 == 0) {
      document.field("csp","VAL");
      document.field("cip","VAL");
    }
 else {
      document.field("csp","val");
      document.field("cip","val");
    }
    document.save();
  }
  String query="select from CompositeIndexQueryCSTest where csp = 'VAL'";
  List<ODocument> result=database.query(new OSQLSynchQuery<ODocument>(query));
  Assert.assertEquals(result.size(),5);
  for (  ODocument document : result)   Assert.assertEquals(document.field("csp"),"VAL");
  ODocument explain=database.command(new OCommandSQL("explain " + query)).execute();
  Assert.assertTrue(explain.<Set<String>>field("involvedIndexes").contains("collateCompositeIndexCS"));
  query="select from CompositeIndexQueryCSTest where csp = 'VAL' and cip = 'VaL'";
  result=database.query(new OSQLSynchQuery<ODocument>(query));
  Assert.assertEquals(result.size(),5);
  for (  ODocument document : result) {
    Assert.assertEquals(document.field("csp"),"VAL");
    Assert.assertEquals((document.<String>field("cip")).toUpperCase(),"VAL");
  }
  explain=database.command(new OCommandSQL("explain " + query)).execute();
  Assert.assertTrue(explain.<Set<String>>field("involvedIndexes").contains("collateCompositeIndexCS"));
  result=database.query(new OSQLSynchQuery<ODocument>("select from index:collateCompositeIndexCS where key = ['VAL', 'VaL']"));
  Assert.assertEquals(result.size(),5);
  for (  ODocument document : result) {
    final OCompositeKey key=document.field("key");
    final List keys=key.getKeys();
    Assert.assertEquals(keys.get(0),"VAL");
    Assert.assertTrue("val".compareToIgnoreCase((String)keys.get(1)) == 0);
    final ODocument record=document.<OIdentifiable>field("rid").getRecord();
    Assert.assertEquals(record.field("csp"),"VAL");
    Assert.assertEquals((record.<String>field("cip")).toUpperCase(),"VAL");
  }
}
