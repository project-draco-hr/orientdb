{
  if (iPropertyName == null || iPropertyName.length() == 0)   throw new OSchemaException("Property name is null or empty");
  if (Character.isDigit(iPropertyName.charAt(0)))   throw new OSchemaException("Found invalid property name. Cannot start with numbers");
  if (getDatabase().getTransaction().isActive())   throw new OSchemaException("Cannot create a new property inside a transaction");
  getDatabase().checkSecurity(ODatabaseSecurityResources.SCHEMA,ORole.PERMISSION_UPDATE);
  final String lowerName=iPropertyName.toLowerCase();
  if (properties.containsKey(lowerName))   throw new OSchemaException("Class " + name + " already has property '"+ iPropertyName+ "'");
  if (iType == null)   throw new OSchemaException("Property type not defined.");
  final StringBuilder cmd=new StringBuilder("create property ");
  cmd.append(name);
  cmd.append('.');
  cmd.append(iPropertyName);
  cmd.append(' ');
  cmd.append(iType.name);
  if (iLinkedType != null) {
    cmd.append(' ');
    cmd.append(iLinkedType.name);
  }
 else   if (iLinkedClass != null) {
    cmd.append(' ');
    cmd.append(iLinkedClass.getName());
  }
  getDatabase().command(new OCommandSQL(cmd.toString())).execute();
  if (existsProperty(iPropertyName))   return properties.get(lowerName);
 else   return addPropertyInternal(iPropertyName,iType,iLinkedType,iLinkedClass);
}
