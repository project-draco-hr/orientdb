{
  messageManagementLock.readLock().lock();
  final AtomicBoolean acquiredMessageManagementLock=new AtomicBoolean(true);
  try {
    final int partition=clusterId % clusterLocks.length;
    clusterLocks[partition].acquire();
    final AtomicBoolean acquiredClusterLock=new AtomicBoolean(true);
    final OCallable<Void,ODistributedRequestId> unlockCallback=new OCallable<Void,ODistributedRequestId>(){
      @Override public Void call(      final ODistributedRequestId req){
        if (acquiredClusterLock.compareAndSet(true,false))         clusterLocks[partition].release();
        if (acquiredMessageManagementLock.compareAndSet(true,false))         messageManagementLock.readLock().unlock();
        return null;
      }
    }
;
    return callback.call(unlockCallback);
  }
  finally {
    if (acquiredMessageManagementLock.compareAndSet(true,false))     messageManagementLock.readLock().unlock();
  }
}
