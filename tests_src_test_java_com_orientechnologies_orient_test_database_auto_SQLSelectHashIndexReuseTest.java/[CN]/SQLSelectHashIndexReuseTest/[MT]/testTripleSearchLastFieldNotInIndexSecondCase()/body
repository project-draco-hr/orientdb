{
  long oldIndexUsage=profiler.getCounter("db.demo.query.indexUsed");
  long oldcompositeIndexUsed=profiler.getCounter("db.demo.query.compositeIndexUsed");
  long oldcompositeIndexUsed2=profiler.getCounter("db.demo.query.compositeIndexUsed.2");
  final List<ODocument> result=database.command(new OSQLSynchQuery<ODocument>("select * from sqlSelectHashIndexReuseTestClass where prop1 = 1 and prop4 >= 1")).execute();
  Assert.assertEquals(result.size(),10);
  for (int i=0; i < 10; i++) {
    final ODocument document=new ODocument();
    document.field("prop1",1);
    document.field("prop2",i);
    document.field("prop4",1);
    Assert.assertEquals(containsDocument(result,document),1);
  }
  long newIndexUsage=profiler.getCounter("db.demo.query.indexUsed");
  if (oldIndexUsage == -1) {
    Assert.assertTrue(newIndexUsage == -1 || newIndexUsage == 0);
  }
 else   Assert.assertEquals(newIndexUsage,oldIndexUsage);
  long newcompositeIndexUsed=profiler.getCounter("db.demo.query.compositeIndexUsed");
  if (oldcompositeIndexUsed == -1) {
    Assert.assertTrue(newIndexUsage == -1 || newIndexUsage == 0);
  }
 else   Assert.assertEquals(newcompositeIndexUsed,oldcompositeIndexUsed);
  long newcompositeIndexUsed2=profiler.getCounter("db.demo.query.compositeIndexUsed.2");
  if (oldcompositeIndexUsed2 == -1) {
    Assert.assertTrue(newcompositeIndexUsed2 == -1 || newcompositeIndexUsed2 == 0);
  }
 else   Assert.assertEquals(newcompositeIndexUsed2,oldcompositeIndexUsed2);
}
