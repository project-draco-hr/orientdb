{
  final ODocument doc=new ODocument();
  final Map<String,HashMap<String,Object>> nodes=new HashMap<String,HashMap<String,Object>>();
  doc.field("nodes",nodes);
  for (  Entry<String,QueueConfig> entry : hazelcastInstance.getConfig().getQueueConfigs().entrySet()) {
    final String queueName=entry.getKey();
    if (!queueName.startsWith(OHazelcastDistributedMessageService.NODE_QUEUE_PREFIX))     continue;
    final IQueue<Object> queue=hazelcastInstance.getQueue(queueName);
    final String[] names=queueName.split("\\.");
    HashMap<String,Object> node=nodes.get(names[2]);
    if (node == null) {
      node=new HashMap<String,Object>();
      nodes.put(names[2],node);
    }
    if (names[3].equals("response")) {
      node.put("responses",queue.size());
    }
 else {
      final String dbName=names[3];
      node.put(dbName + ".requests",queue.size());
    }
  }
  return doc;
}
