{
  if (!OGlobalConfiguration.STORAGE_KEEP_DISK_CACHE_STATE.getValueAsBoolean()) {
    return;
  }
  if (writeCache == null)   return;
  cacheLock.acquireWriteLock();
  try {
    final File rootDirectory=writeCache.getRootDirectory();
    final File stateFile=new File(rootDirectory,CACHE_STATE_FILE);
    if (stateFile.exists()) {
      if (!stateFile.delete()) {
        OLogManager.instance().warn(this,"Cannot delete cache state file %s",stateFile);
      }
    }
    final Set<Long> filesToStore=new HashSet<Long>(writeCache.files().values());
    final RandomAccessFile cacheState=new RandomAccessFile(stateFile,"rw");
    try {
      final FileChannel channel=cacheState.getChannel();
      final OutputStream channelStream=Channels.newOutputStream(channel);
      final BufferedOutputStream bufferedOutputStream=new BufferedOutputStream(channelStream,64 * 1024);
      final DataOutputStream dataOutputStream=new DataOutputStream(bufferedOutputStream);
      try {
        dataOutputStream.writeLong(memoryDataContainer.get().maxSize);
        storeQueueState(writeCache,filesToStore,dataOutputStream,am);
        dataOutputStream.writeInt(-1);
        storeQueueState(writeCache,filesToStore,dataOutputStream,a1in);
        dataOutputStream.writeInt(-1);
        storeQueueState(writeCache,filesToStore,dataOutputStream,a1out);
        dataOutputStream.writeInt(-1);
      }
  finally {
        dataOutputStream.close();
      }
    }
  finally {
      cacheState.close();
    }
  }
 catch (  Exception e) {
    OLogManager.instance().error(this,"Cannot store state of cache for storage placed under %s (error: %s)",writeCache.getRootDirectory(),e);
  }
 finally {
    cacheLock.releaseWriteLock();
  }
}
