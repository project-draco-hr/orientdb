{
  writeAheadLog.logRecord(new OSetPageDataRecord(20,"test"));
  writeAheadLog.logRecord(new OSetPageDataRecord(20,"test"));
  writeAheadLog.logRecord(new OSetPageDataRecord(20,"test"));
  writeAheadLog.logRecord(new OSetPageDataRecord(20,"test"));
  long logSize=writeAheadLog.size();
  writeAheadLog.close();
  RandomAccessFile walFile=new RandomAccessFile(new File(writeAheadLog.getWalLocation(),"WriteAheadLogTest.0.wal"),"rw");
  Assert.assertEquals(logSize,walFile.length());
  walFile.setLength(walFile.length() - 2);
  walFile.close();
  writeAheadLog=createWAL();
  OLogSequenceNumber lsn=writeAheadLog.begin();
  lsn=writeAheadLog.next(lsn);
  lsn=writeAheadLog.next(lsn);
  lsn=writeAheadLog.next(lsn);
  try {
    writeAheadLog.read(lsn);
    Assert.fail();
  }
 catch (  OWriteAheadLogRecordIsBrokenException e) {
  }
  writeAheadLog.restore();
  lsn=writeAheadLog.begin();
  lsn=writeAheadLog.next(lsn);
  lsn=writeAheadLog.next(lsn);
  lsn=writeAheadLog.next(lsn);
  Assert.assertNull(lsn);
  Assert.assertEquals(writeAheadLog.size(),new File(writeAheadLog.getWalLocation(),"WriteAheadLogTest.0.wal").length());
}
