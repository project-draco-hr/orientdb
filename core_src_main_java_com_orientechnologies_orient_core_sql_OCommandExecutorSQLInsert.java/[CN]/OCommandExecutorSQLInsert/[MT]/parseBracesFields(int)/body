{
  int pos;
  final int endFields=text.indexOf(')',beginFields + 1);
  if (endFields == -1)   throw new OCommandSQLParsingException("Missed closed brace. Use " + getSyntax(),text,beginFields);
  final ArrayList<String> fieldNames=new ArrayList<String>();
  OStringSerializerHelper.getParameters(text,beginFields,endFields,fieldNames);
  if (fieldNames.size() == 0)   throw new OCommandSQLParsingException("Set of fields is empty. Example: (name, surname). Use " + getSyntax(),text,endFields);
  for (int i=0; i < fieldNames.size(); ++i)   fieldNames.set(i,OStringSerializerHelper.removeQuotationMarks(fieldNames.get(i)));
  pos=OSQLHelper.nextWord(text,textUpperCase,endFields + 1,tempParseWord,true);
  if (pos == -1 || !tempParseWord.toString().equals(KEYWORD_VALUES))   throw new OCommandSQLParsingException("Missed VALUES keyword. Use " + getSyntax(),text,endFields);
  int beginValues=OStringParser.jumpWhiteSpaces(text,pos);
  if (pos == -1 || text.charAt(beginValues) != '(') {
    throw new OCommandSQLParsingException("Set of values is missed. Example: ('Bill', 'Stuart', 300). Use " + getSyntax(),text,pos);
  }
  final int textEnd=text.lastIndexOf(')');
  int blockStart=beginValues;
  int blockEnd=beginValues;
  while (blockStart != textEnd) {
    blockStart=text.indexOf('(',blockStart - 1);
    blockEnd=findRecordEnd(text,'(',')',blockStart);
    if (blockEnd == -1)     throw new OCommandSQLParsingException("Missed closed brace. Use " + getSyntax(),text,blockStart);
    final List<String> values=OStringSerializerHelper.smartSplit(text,new char[]{','},blockStart + 1,blockEnd - 1,true);
    if (values.isEmpty()) {
      throw new OCommandSQLParsingException("Set of values is empty. Example: ('Bill', 'Stuart', 300). Use " + getSyntax(),text,blockStart);
    }
    if (values.size() != fieldNames.size()) {
      throw new OCommandSQLParsingException("Fields not match with values",text,blockStart);
    }
    final Map<String,Object> fields=new LinkedHashMap<String,Object>();
    for (int i=0; i < values.size(); ++i) {
      fields.put(fieldNames.get(i),OSQLHelper.parseValue(this,OStringSerializerHelper.decode(values.get(i).trim()),context));
    }
    newRecords.add(fields);
    blockStart=blockEnd;
  }
}
