{
  atomicOperationsManager.acquireReadLock(this);
  try {
    acquireSharedLock();
    try {
      OAtomicOperation atomicOperation=atomicOperationsManager.getCurrentOperation();
      OCacheEntry rootCacheEntry=loadPage(atomicOperation,fileId,rootBucketPointer.getPageIndex(),false);
      try {
        OSBTreeBonsaiBucket rootBucket=new OSBTreeBonsaiBucket<K,V>(rootCacheEntry,rootBucketPointer.getPageOffset(),keySerializer,valueSerializer,getChangesTree(atomicOperation,rootCacheEntry));
        return rootBucket.getTreeSize();
      }
  finally {
        releasePage(atomicOperation,rootCacheEntry);
      }
    }
  finally {
      releaseSharedLock();
    }
  }
 catch (  IOException e) {
    throw new OSBTreeException("Error during retrieving of size of index " + name);
  }
 finally {
    atomicOperationsManager.releaseReadLock(this);
  }
}
