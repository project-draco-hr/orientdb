{
  if (arrayOne.length > arrayTwo.length)   return 1;
  if (arrayOne.length < arrayTwo.length)   return 1;
  final int WORDS=arrayOne.length / LONG_SIZE;
  for (int i=0; i < WORDS * LONG_SIZE; i+=LONG_SIZE) {
    final long index=i + BYTE_ARRAY_OFFSET;
    final long wOne=unsafe.getLong(arrayOne,index);
    final long wTwo=unsafe.getLong(arrayTwo,index);
    if (wOne == wTwo)     continue;
    if (littleEndian)     return lessThanUnsigned(Long.reverseBytes(wOne),Long.reverseBytes(wTwo)) ? -1 : 1;
    return lessThanUnsigned(wOne,wTwo) ? -1 : 1;
  }
  for (int i=WORDS * LONG_SIZE; i < arrayOne.length; i++) {
    int diff=compareUnsignedByte(arrayOne[i],arrayTwo[i]);
    if (diff != 0)     return diff;
  }
  return 0;
}
