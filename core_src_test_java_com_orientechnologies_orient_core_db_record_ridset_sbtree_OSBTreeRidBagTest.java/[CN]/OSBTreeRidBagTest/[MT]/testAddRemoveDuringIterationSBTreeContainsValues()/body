{
  OSBTreeRidBag bag=new OSBTreeRidBag();
  bag.setAutoConvertToRecord(false);
  bag.add(new ORecordId("#77:2"));
  bag.add(new ORecordId("#77:2"));
  bag.add(new ORecordId("#77:3"));
  bag.add(new ORecordId("#77:4"));
  bag.add(new ORecordId("#77:4"));
  bag.add(new ORecordId("#77:4"));
  bag.add(new ORecordId("#77:5"));
  bag.add(new ORecordId("#77:6"));
  ODocument doc=new ODocument();
  doc.field("ridbag",bag);
  doc.save();
  ORID rid=doc.getIdentity();
  OStorage storage=db.getStorage();
  db.close();
  storage.close(true);
  db.open("admin","admin");
  doc=db.load(rid);
  doc.setLazyLoad(false);
  bag=doc.field("ridbag");
  bag.remove(new ORecordId("#77:1"));
  bag.remove(new ORecordId("#77:2"));
  bag.remove(new ORecordId("#77:2"));
  bag.remove(new ORecordId("#77:4"));
  bag.remove(new ORecordId("#77:6"));
  final List<OIdentifiable> rids=new ArrayList<OIdentifiable>();
  rids.add(new ORecordId("#77:3"));
  rids.add(new ORecordId("#77:4"));
  rids.add(new ORecordId("#77:4"));
  rids.add(new ORecordId("#77:5"));
  for (  OIdentifiable identifiable : bag)   assertTrue(rids.remove(identifiable));
  assertTrue(rids.isEmpty());
  for (  OIdentifiable identifiable : bag)   rids.add(identifiable);
  Iterator<OIdentifiable> iterator=bag.iterator();
  while (iterator.hasNext()) {
    final OIdentifiable identifiable=iterator.next();
    if (identifiable.equals(new ORecordId("#77:4"))) {
      iterator.remove();
      assertTrue(rids.remove(identifiable));
    }
  }
  for (  OIdentifiable identifiable : bag)   assertTrue(rids.remove(identifiable));
  for (  OIdentifiable identifiable : bag)   rids.add(identifiable);
  doc=new ODocument();
  doc.field("ridbag",bag);
  doc.save();
  rid=doc.getIdentity();
  storage=db.getStorage();
  db.close();
  storage.close(true);
  db.open("admin","admin");
  doc=db.load(rid);
  doc.setLazyLoad(false);
  bag=doc.field("ridbag");
  for (  OIdentifiable identifiable : bag)   assertTrue(rids.remove(identifiable));
  assertTrue(rids.isEmpty());
}
