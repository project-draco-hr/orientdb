{
  if (parentRid == null)   return null;
  if (parent == null && parentRid.isValid()) {
    try {
      parent=pTree.loadEntry(null,parentRid);
      if (tree.isRuntimeCheckEnabled() && !parent.record.getIdentity().equals(parentRid))       OLogManager.instance().error(this,"Wrong parent node loaded: " + parentRid);
      if (parent != null) {
        if (parent.leftRid.equals(record.getIdentity()))         parent.left=this;
 else         if (parent.rightRid.equals(record.getIdentity()))         parent.right=this;
 else         OLogManager.instance().error(this,"Can't assign node %s to parent. Nodes parent-left=%s, parent-right=%s",parentRid,parent.leftRid,parent.rightRid);
      }
    }
 catch (    IOException e) {
      OLogManager.instance().error(this,"Can't load the tree. The tree could be invalid.",e,ODatabaseException.class);
    }
  }
  return parent;
}
