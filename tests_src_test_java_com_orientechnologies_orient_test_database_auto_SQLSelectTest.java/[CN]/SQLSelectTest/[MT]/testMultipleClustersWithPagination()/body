{
  final OClass cls=database.getMetadata().getSchema().createClass("PersonMultipleClusters");
  cls.addCluster("PersonMultipleClusters_1");
  cls.addCluster("PersonMultipleClusters_2");
  cls.addCluster("PersonMultipleClusters_3");
  cls.addCluster("PersonMultipleClusters_4");
  try {
    Set<String> names=new HashSet<String>(Arrays.asList(new String[]{"Luca","Jill","Sara","Tania","Gianluca","Marco"}));
    for (    String n : names) {
      new ODocument("PersonMultipleClusters").field("First",n).save();
    }
    OSQLSynchQuery<ODocument> query=new OSQLSynchQuery<ODocument>("select from PersonMultipleClusters where @rid > ? limit 2");
    List<ODocument> resultset=database.query(query,new ORecordId());
    while (!resultset.isEmpty()) {
      final ORID last=resultset.get(resultset.size() - 1).getIdentity();
      for (      ODocument personDoc : resultset) {
        Assert.assertTrue(names.contains(personDoc.field("First")));
        Assert.assertTrue(names.remove(personDoc.field("First")));
      }
      resultset=database.query(query,last);
    }
    Assert.assertTrue(names.isEmpty());
  }
  finally {
    database.getMetadata().getSchema().dropClass("PersonMultipleClusters");
  }
}
