{
  if (Thread.interrupted()) {
    throw new OCommandExecutionException("The select execution has been interrupted");
  }
  if (!context.checkTimeout()) {
    return false;
  }
  final LOCKING_STRATEGY contextLockingStrategy=context.getVariable("$locking") != null ? (LOCKING_STRATEGY)context.getVariable("$locking") : null;
  final LOCKING_STRATEGY localLockingStrategy=contextLockingStrategy != null ? contextLockingStrategy : lockingStrategy;
  ORecord record=null;
  try {
    if (id instanceof ORecord) {
      record=(ORecord)id;
      if (localLockingStrategy == LOCKING_STRATEGY.KEEP_EXCLUSIVE_LOCK) {
        LOCKING_STRATEGY strategy=record.lockingStrategy();
        if (strategy == null)         record.lock(true);
 else         if (strategy != LOCKING_STRATEGY.KEEP_EXCLUSIVE_LOCK)         throw new OCommandExecutionException("Record is locked but different locking strategy is used : " + strategy);
      }
 else       if (localLockingStrategy == LOCKING_STRATEGY.KEEP_SHARED_LOCK) {
        LOCKING_STRATEGY strategy=record.lockingStrategy();
        if (strategy == null)         record.lock(false);
 else         if (strategy != LOCKING_STRATEGY.KEEP_SHARED_LOCK)         throw new OCommandExecutionException("Record is locked but different locking strategy is used : " + strategy);
      }
    }
 else {
      boolean useNoCache=noCache;
      if (localLockingStrategy == LOCKING_STRATEGY.KEEP_EXCLUSIVE_LOCK || localLockingStrategy == LOCKING_STRATEGY.KEEP_SHARED_LOCK)       useNoCache=true;
      record=getDatabase().load(id.getIdentity(),null,useNoCache,false,localLockingStrategy);
      if (id instanceof OContextualRecordId && ((OContextualRecordId)id).getContext() != null) {
        Map<String,Object> ridContext=((OContextualRecordId)id).getContext();
        for (        String key : ridContext.keySet()) {
          context.setVariable(key,ridContext.get(key));
        }
      }
    }
    context.updateMetric("recordReads",+1);
    if (record == null || ORecordInternal.getRecordType(record) != ODocument.RECORD_TYPE) {
      return true;
    }
    context.updateMetric("documentReads",+1);
    context.setVariable("current",record);
    if (filter(record)) {
      if (!handleResult(record)) {
        return false;
      }
    }
  }
  finally {
    if (record != null && localLockingStrategy != null && record.isLocked()) {
      if (localLockingStrategy == LOCKING_STRATEGY.KEEP_EXCLUSIVE_LOCK || localLockingStrategy == LOCKING_STRATEGY.KEEP_SHARED_LOCK) {
        record.unlock();
      }
    }
  }
  return true;
}
