{
  if (Thread.interrupted())   throw new OCommandExecutionException("The select execution has been interrupted");
  if (!context.checkTimeout())   return false;
  final OStorage.LOCKING_STRATEGY contextLockingStrategy=context.getVariable("$locking") != null ? (OStorage.LOCKING_STRATEGY)context.getVariable("$locking") : null;
  final OStorage.LOCKING_STRATEGY localLockingStrategy=contextLockingStrategy != null ? contextLockingStrategy : lockingStrategy;
  ORecordInternal<?> record=null;
  try {
    if (id instanceof ORecordInternal<?>) {
      record=(ORecordInternal<?>)id;
      if (localLockingStrategy == OStorage.LOCKING_STRATEGY.KEEP_EXCLUSIVE_LOCK)       record.lock(true);
 else       if (localLockingStrategy == OStorage.LOCKING_STRATEGY.KEEP_SHARED_LOCK)       record.lock(false);
    }
 else     record=getDatabase().load(id.getIdentity(),null,false,false,localLockingStrategy);
    context.updateMetric("recordReads",+1);
    if (record == null || record.getRecordType() != ODocument.RECORD_TYPE)     return true;
    context.updateMetric("documentReads",+1);
    context.setVariable("current",record);
    assignLetClauses(record);
    if (filter(record))     if (!handleResult(record))     return false;
  }
  finally {
    if (record != null)     if (contextLockingStrategy != null)     if (contextLockingStrategy == OStorage.LOCKING_STRATEGY.KEEP_EXCLUSIVE_LOCK || contextLockingStrategy == OStorage.LOCKING_STRATEGY.KEEP_SHARED_LOCK)     record.unlock();
  }
  return true;
}
