{
  acquireExclusiveLock();
  try {
    configuration.set(config);
    clustersToIndex.clear();
    IndexMetadata indexMetadata=loadMetadata(configuration.get());
    indexDefinition=indexMetadata.getIndexDefinition();
    clustersToIndex.addAll(indexMetadata.getClustersToIndex());
    algorithm=indexMetadata.getAlgorithm();
    valueContainerAlgorithm=indexMetadata.getValueContainerAlgorithm();
    final ORID rid=config.field(CONFIG_MAP_RID,ORID.class);
    try {
      indexEngine.load(rid,name,indexDefinition,determineValueSerializer(),isAutomatic());
    }
 catch (    Exception e) {
      OLogManager.instance().error(this,"Error during load of index %s .",e,name != null ? name : "null");
      if (isAutomatic() && getStorage() instanceof OAbstractPaginatedStorage) {
        OLogManager.instance().warn(this,"Cannot load index '%s' from storage (rid=%s): rebuilt it from scratch",getName(),rid);
        try {
          rebuild();
        }
 catch (        Throwable t) {
          OLogManager.instance().error(this,"Cannot rebuild index '%s' from storage (rid=%s) because '" + t + "'. The index will be removed in configuration",e,getName(),rid);
          return false;
        }
      }
    }
    return true;
  }
  finally {
    releaseExclusiveLock();
  }
}
