{
  if (iClass != null) {
    final OProperty p=iClass.getProperty(fieldName);
    if (p != null) {
      final OClass embeddedType=p.getLinkedClass();
switch (p.getType()) {
case EMBEDDED:
        if (v instanceof Map) {
          final ODocument doc=new ODocument();
          if (embeddedType != null)           doc.setClassName(embeddedType.getName());
          doc.fromMap((Map<String,Object>)v);
          v=doc;
        }
      break;
case EMBEDDEDSET:
    if (!(v instanceof Map) && OMultiValue.isMultiValue(v)) {
      final Set set=new HashSet();
      for (      Object o : OMultiValue.getMultiValueIterable(v)) {
        if (o instanceof Map) {
          final ODocument doc=new ODocument();
          if (embeddedType != null)           doc.setClassName(embeddedType.getName());
          doc.fromMap((Map<String,Object>)o);
          set.add(doc);
        }
 else         if (o instanceof OIdentifiable)         set.add(((OIdentifiable)o).getRecord());
 else         set.add(o);
      }
      v=set;
    }
  break;
case EMBEDDEDLIST:
if (!(v instanceof Map) && OMultiValue.isMultiValue(v)) {
  final List set=new ArrayList();
  for (  Object o : OMultiValue.getMultiValueIterable(v)) {
    if (o instanceof Map) {
      final ODocument doc=new ODocument();
      if (embeddedType != null)       doc.setClassName(embeddedType.getName());
      doc.fromMap((Map<String,Object>)o);
      set.add(doc);
    }
 else     if (o instanceof OIdentifiable)     set.add(((OIdentifiable)o).getRecord());
 else     set.add(o);
  }
  v=set;
}
break;
case EMBEDDEDMAP:
if (v instanceof Map) {
final Map<String,Object> map=new HashMap<String,Object>();
for (Map.Entry<String,Object> entry : ((Map<String,Object>)v).entrySet()) {
if (entry.getValue() instanceof Map) {
  final ODocument doc=new ODocument();
  if (embeddedType != null)   doc.setClassName(embeddedType.getName());
  doc.fromMap((Map<String,Object>)entry.getValue());
  map.put(entry.getKey(),doc);
}
 else if (entry.getValue() instanceof OIdentifiable) map.put(entry.getKey(),((OIdentifiable)entry.getValue()).getRecord());
 else map.put(entry.getKey(),entry.getValue());
}
v=map;
}
break;
}
}
}
return v;
}
