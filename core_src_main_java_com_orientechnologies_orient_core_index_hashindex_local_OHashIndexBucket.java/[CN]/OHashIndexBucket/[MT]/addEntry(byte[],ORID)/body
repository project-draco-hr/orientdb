{
  if (MAX_BUCKET_SIZE - size() <= 0)   throw new IllegalArgumentException("There is no enough space in bucket.");
  final int serializedSize=keySerializer.getObjectSize(key);
  if (serializedSize > MAX_KEY_SIZE)   throw new OIndexMaximumLimitReachedException("Maximum limit " + MAX_KEY_SIZE + " for key was reached.");
  final int index=binarySearch(key);
  if (index >= 0)   throw new IllegalArgumentException("Given value is present in bucket.");
  final int insertionPoint=-index - 1;
  final int positionsOffset=insertionPoint * OIntegerSerializer.INT_SIZE + POSITIONS_ARRAY_OFFSET;
  System.arraycopy(dataBuffer,positionsOffset,dataBuffer,positionsOffset + OIntegerSerializer.INT_SIZE,size() * OIntegerSerializer.INT_SIZE - insertionPoint * OIntegerSerializer.INT_SIZE);
  OIntegerSerializer.INSTANCE.serializeNative(dataBufferLength,dataBuffer,positionsOffset);
  serializeEntry(key,rid,dataBufferLength);
  int entreeSize=keySerializer.getObjectSize(key) + ridSerializer.getObjectSize(rid);
  dataBufferLength+=entreeSize;
  size++;
}
