{
  checkTransaction();
  if (!topLevel) {
    OTransactionOptimistic.this.rollback(false,0);
    return;
  }
  status=TXSTATUS.ROLLBACKING;
  nestedCommit.rollback();
  database.getLocalCache().clear();
  for (  ORecordOperation v : allEntries.values()) {
    final ORecord rec=v.getRecord();
    if (rec.isDirty())     if (rec instanceof ODocument && ((ODocument)rec).isTrackingChanges())     ((ODocument)rec).undo();
 else     rec.unload();
  }
  close();
  status=TXSTATUS.ROLLED_BACK;
}
