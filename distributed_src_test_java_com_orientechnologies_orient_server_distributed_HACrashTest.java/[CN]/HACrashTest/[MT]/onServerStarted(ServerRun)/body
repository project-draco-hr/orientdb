{
  super.onServerStarted(server);
  if (serverStarted++ == (SERVERS - 1)) {
    lastServerOn=true;
    timer.schedule(new TimerTask(){
      @Override public void run(){
        Assert.assertTrue("Insert was too fast",inserting);
        timer.schedule(new TimerTask(){
          @Override public void run(){
            Assert.assertTrue("Insert was too fast",inserting);
            banner("RESTART SERVER " + (SERVERS - 1));
            try {
              serverInstance.get(SERVERS - 1).startServer(getDistributedServerConfiguration(serverInstance.get(SERVERS - 1)));
              lastServerOn=true;
            }
 catch (            Exception e) {
              e.printStackTrace();
            }
          }
        }
,7000);
        banner("SIMULATE FAILURE ON SERVER " + (SERVERS - 1));
        serverInstance.get(SERVERS - 1).crashServer();
        lastServerOn=false;
      }
    }
,3000);
  }
}
