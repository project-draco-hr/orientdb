{
  checkForFields();
  ODocument destination=(ODocument)iDestination;
  super.copyTo(iDestination);
  destination._ordered=_ordered;
  destination._className=_className;
  destination._immutableSchemaVersion=-1;
  destination._immutableClazz=null;
  destination._trackingChanges=_trackingChanges;
  if (_owners != null)   destination._owners=new ArrayList<WeakReference<ORecordElement>>(_owners);
 else   destination._owners=null;
  if (_fields != null) {
    destination._fields=_fields instanceof LinkedHashMap ? new LinkedHashMap<String,ODocumentEntry>() : new HashMap<String,ODocumentEntry>();
    for (    Entry<String,ODocumentEntry> entry : _fields.entrySet()) {
      ODocumentEntry docEntry=entry.getValue().clone();
      destination._fields.put(entry.getKey(),docEntry);
      docEntry.value=ODocumentHelper.cloneValue(destination,entry.getValue().value);
    }
  }
 else   destination._fields=null;
  destination._fieldSize=_fieldSize;
  destination.addAllMultiValueChangeListeners();
  destination._dirty=_dirty;
  destination._contentChanged=_contentChanged;
  return destination;
}
