{
synchronized (syncObject) {
    if (!files.containsKey(fileId))     return;
    final Set<Long> pageIndexes=filesPages.get(fileId);
    Long[] sortedPageIndexes=new Long[pageIndexes.size()];
    sortedPageIndexes=pageIndexes.toArray(sortedPageIndexes);
    Arrays.sort(sortedPageIndexes);
    for (    Long pageIndex : sortedPageIndexes) {
      lockManager.acquireLock(Thread.currentThread(),new FileLockKey(fileId,pageIndex),OLockManager.LOCK.EXCLUSIVE);
      try {
        LRUEntry lruEntry=lruList.remove(fileId,pageIndex);
        if (lruEntry != null && !lruEntry.managedExternally) {
          if (lruEntry.isDirty)           flushData(fileId,pageIndex,lruEntry.dataPointer);
          directMemory.free(lruEntry.dataPointer);
        }
      }
  finally {
        lockManager.releaseLock(Thread.currentThread(),new FileLockKey(fileId,pageIndex),OLockManager.LOCK.EXCLUSIVE);
      }
    }
    pageIndexes.clear();
    files.get(fileId).close();
  }
}
