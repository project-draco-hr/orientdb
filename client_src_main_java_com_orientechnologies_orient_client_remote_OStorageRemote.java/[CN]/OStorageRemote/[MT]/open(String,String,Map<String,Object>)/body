{
  stateLock.acquireWriteLock();
  addUser();
  try {
    OStorageRemoteSession session=getCurrentSession();
    if (status == STATUS.CLOSED || !iUserName.equals(connectionUserName) || !iUserPassword.equals(connectionUserPassword) || session.tokens.isEmpty()) {
      OCredentialInterceptor ci=OSecurityManager.instance().newCredentialInterceptor();
      if (ci != null) {
        ci.intercept(getURL(),iUserName,iUserPassword);
        connectionUserName=ci.getUsername();
        connectionUserPassword=ci.getPassword();
      }
 else {
        connectionUserName=iUserName;
        connectionUserPassword=iUserPassword;
      }
      parseOptions(iOptions);
      openRemoteDatabase();
      final OStorageConfiguration storageConfiguration=new OStorageRemoteConfiguration(this,recordFormat);
      storageConfiguration.load(iOptions);
      configuration=storageConfiguration;
      componentsFactory=new OCurrentStorageComponentsFactory(configuration);
    }
 else {
      reopenRemoteDatabase();
    }
  }
 catch (  Exception e) {
    removeUser();
    if (e instanceof RuntimeException)     throw (RuntimeException)e;
 else     throw OException.wrapException(new OStorageException("Cannot open the remote storage: " + name),e);
  }
 finally {
    stateLock.releaseWriteLock();
  }
}
