{
  this.strategy=new OAutoShardingMurmurStrategy(keySerializer);
  final OStorage storage=getDatabase().getStorage().getUnderlying();
  if (storage instanceof OLocalPaginatedStorage) {
    final String path=((OLocalPaginatedStorage)storage).getStoragePath();
    final File fileMetadata=new File(path + "/" + name+ METADATA_FILE_EXTENSION);
    if (!fileMetadata.exists())     throw new OConfigurationException("Cannot find sharded index metadata file '" + fileMetadata + "'");
    try {
      final ODocument metadata=new ODocument();
      metadata.fromJSON(OIOUtils.readFileAsString(fileMetadata));
      partitionSize=metadata.field("partitions");
      init();
    }
 catch (    IOException e1) {
      throw new OConfigurationException("Cannot load sharded index metadata file '" + fileMetadata + "'");
    }
  }
  int i=0;
  for (  OHashTable<Object,Object> p : partitions)   p.load(indexName + "_" + (i++),keyTypes,nullPointerSupport);
  hashFunction.setValueSerializer(keySerializer);
}
