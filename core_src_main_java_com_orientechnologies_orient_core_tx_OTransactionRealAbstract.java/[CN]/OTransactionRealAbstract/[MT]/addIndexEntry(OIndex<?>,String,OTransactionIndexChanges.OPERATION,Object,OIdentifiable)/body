{
  OTransactionIndexChanges indexEntry=indexEntries.get(iIndexName);
  if (indexEntry == null) {
    indexEntry=new OTransactionIndexChanges();
    indexEntries.put(iIndexName,indexEntry);
  }
  if (iOperation == OPERATION.CLEAR)   indexEntry.setCleared();
 else {
    if (iOperation == OPERATION.REMOVE && iValue != null && iValue.getIdentity().isTemporary()) {
      for (      OTransactionIndexChangesPerKey changes : indexEntry.changesPerKey.values())       for (int i=0; i < changes.entries.size(); ++i)       if (changes.entries.get(i).value.equals(iValue)) {
        changes.entries.remove(i);
        break;
      }
      OTransactionIndexChangesPerKey changes=indexEntry.getChangesCrossKey();
      for (int i=0; i < changes.entries.size(); ++i)       if (changes.entries.get(i).value.equals(iValue)) {
        changes.entries.remove(i);
        break;
      }
    }
    OTransactionIndexChangesPerKey changes=iKey != null ? indexEntry.getChangesPerKey(iKey) : indexEntry.getChangesCrossKey();
    changes.add(iValue,iOperation);
    if (iValue == null)     return;
    List<OTransactionRecordIndexOperation> transactionIndexOperations=recordIndexOperations.get(iValue.getIdentity());
    if (transactionIndexOperations == null) {
      transactionIndexOperations=new ArrayList<OTransactionRecordIndexOperation>();
      recordIndexOperations.put(iValue.getIdentity().copy(),transactionIndexOperations);
    }
    transactionIndexOperations.add(new OTransactionRecordIndexOperation(iIndexName,iKey,iOperation));
  }
}
