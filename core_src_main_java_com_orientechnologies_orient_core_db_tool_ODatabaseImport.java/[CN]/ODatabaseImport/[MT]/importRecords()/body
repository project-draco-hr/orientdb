{
  long total=0;
  database.getMetadata().getIndexManager().dropIndex(EXPORT_IMPORT_MAP_NAME);
  exportImportHashTable=(OIndex<OIdentifiable>)database.getMetadata().getIndexManager().createIndex(EXPORT_IMPORT_MAP_NAME,OClass.INDEX_TYPE.DICTIONARY_HASH_INDEX.toString(),new OSimpleKeyIndexDefinition(OType.LINK),null,null,null);
  jsonReader.readNext(OJSONReader.BEGIN_COLLECTION);
  long totalRecords=0;
  System.out.print("\n\nImporting records...");
  ORID rid;
  ORID lastRid=new ORecordId();
  final long begin=System.currentTimeMillis();
  long lastLapRecords=0;
  long last=begin;
  Set<String> involvedClusters=new HashSet<String>();
  while (jsonReader.lastChar() != ']') {
    rid=importRecord();
    if (rid != null) {
      ++lastLapRecords;
      ++totalRecords;
      if (rid.getClusterId() != lastRid.getClusterId())       involvedClusters.add(database.getClusterNameById(rid.getClusterId()));
      final long now=System.currentTimeMillis();
      if (now - last > IMPORT_RECORD_DUMP_LAP_EVERY_MS) {
        final List<String> sortedClusters=new ArrayList<String>(involvedClusters);
        Collections.sort(sortedClusters);
        listener.onMessage(String.format("\n- Imported %,d records into clusters: %s. Total records imported so far: %,d (%,.2f/sec)",lastLapRecords,sortedClusters,totalRecords,(float)lastLapRecords * 1000 / (float)IMPORT_RECORD_DUMP_LAP_EVERY_MS));
        last=now;
        lastLapRecords=0;
        involvedClusters.clear();
      }
      lastRid=rid;
    }
    record=null;
  }
  if (migrateLinks)   migrateLinksInImportedDocuments();
  listener.onMessage(String.format("\n\nDone. Imported %,d records in %,.2f secs\n",totalRecords,((float)(System.currentTimeMillis() - begin)) / 1000));
  jsonReader.readNext(OJSONReader.COMMA_SEPARATOR);
  return total;
}
