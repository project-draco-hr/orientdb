{
  int entryPosition=getIntValue(index * OIntegerSerializer.INT_SIZE + POSITIONS_ARRAY_OFFSET);
  entryPosition+=getObjectSizeInDirectMemory(keySerializer,entryPosition);
  boolean isLinkValue=getByteValue(entryPosition) > 0;
  entryPosition+=OByteSerializer.BYTE_SIZE;
  int newSize=0;
  if (value.isLink())   newSize=OLongSerializer.LONG_SIZE;
 else   newSize=valueSerializer.getObjectSize(value.getValue());
  final int oldSize;
  if (isLinkValue)   oldSize=OLongSerializer.LONG_SIZE;
 else   oldSize=getObjectSizeInDirectMemory(valueSerializer,entryPosition);
  if (newSize != oldSize)   return -1;
  byte[] serializedValue=new byte[newSize];
  if (value.isLink())   OLongSerializer.INSTANCE.serializeNative(value.getLink(),serializedValue,0);
 else   valueSerializer.serializeNativeObject(value.getValue(),serializedValue,0);
  byte[] oldSerializedValue=getBinaryValue(entryPosition,oldSize);
  if (ODefaultComparator.INSTANCE.compare(oldSerializedValue,serializedValue) == 0)   return 0;
  setBinaryValue(entryPosition,serializedValue);
  return 1;
}
