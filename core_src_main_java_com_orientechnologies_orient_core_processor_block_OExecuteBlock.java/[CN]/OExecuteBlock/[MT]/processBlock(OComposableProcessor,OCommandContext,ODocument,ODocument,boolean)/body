{
  final ODocument foreach=getFieldOfClass(iContext,iConfig,"foreach",ODocument.class);
  final Object doClause=getRequiredField(iContext,iConfig,"do");
  String returnType=(String)getFieldOfClass(iContext,iConfig,"returnType",String.class);
  Object returnValue=null;
  if (returnType == null)   returnType="last";
 else   if ("list".equalsIgnoreCase(returnType))   returnValue=new ArrayList<Object>();
 else   if ("set".equalsIgnoreCase(returnType))   returnValue=new HashSet<Object>();
  int iterated=0;
  if (foreach != null) {
    final Object result=delegate("foreach",iManager,(ODocument)foreach,iContext,iOutput,iReadOnly);
    if (!OMultiValue.isIterable(result))     throw new OProcessException("Result of 'foreach' block (" + foreach + ") must be iterable but found "+ result.getClass());
    for (    Object current : OMultiValue.getMultiValueIterable(result)) {
      if (current instanceof Map.Entry)       current=((Entry<?,?>)current).getValue();
      assignVariable(iContext,"current",current);
      debug(iContext,"Executing...");
      returnValue=executeDo(iManager,iContext,doClause,returnType,returnValue,iOutput,iReadOnly);
      debug(iContext,"Done");
      iterated++;
    }
  }
 else {
    debug(iContext,"Executing...");
    returnValue=executeDo(iManager,iContext,doClause,returnType,returnValue,iOutput,iReadOnly);
    debug(iContext,"Done");
  }
  debug(iContext,"Executed %d iteration and returned type %s",iterated,returnType);
  return returnValue;
}
