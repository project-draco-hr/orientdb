{
  final OStorageRemote storage=(OStorageRemote)ODatabaseRecordThreadLocal.INSTANCE.get().getStorage().getUnderlying();
  return storage.networkOperation(new OStorageRemoteOperation<Integer>(){
    @Override public Integer execute(    OChannelBinaryAsynchClient client) throws IOException {
      try {
        storage.beginRequest(client,OChannelBinaryProtocol.REQUEST_RIDBAG_GET_SIZE);
        OCollectionNetworkSerializer.INSTANCE.writeCollectionPointer(client,getCollectionPointer());
        final OSBTreeRidBag.ChangeSerializationHelper changeSerializer=OSBTreeRidBag.ChangeSerializationHelper.INSTANCE;
        final byte[] stream=new byte[OIntegerSerializer.INT_SIZE + changeSerializer.getChangesSerializedSize(changes.size())];
        changeSerializer.serializeChanges(changes,keySerializer,stream,0);
        client.writeBytes(stream);
      }
  finally {
        storage.endRequest(client);
      }
      int result;
      try {
        storage.beginResponse(client);
        result=client.readInt();
      }
  finally {
        storage.endResponse(client);
      }
      return result;
    }
  }
,"Cannot get by real bag size sb-tree bonsai");
}
