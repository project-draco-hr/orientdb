{
  checkConnection();
  final long time=System.currentTimeMillis();
  OLogManager.instance().info(this,"Starting synchronization of database '%s'. Storing delta of updates...",getName());
  try {
    final OChannelBinaryClient network=beginRequest(OChannelDistributedProtocol.REQUEST_DISTRIBUTED_SYNCHRONIZE);
    for (    ODocument node : iDbCfg) {
      final String nodeId=(String)node.field("node");
      try {
        network.writeBytes(node.toStream());
      }
  finally {
        endRequest(network);
      }
      beginResponse(network);
      try {
        int ops=0;
        final ORecordOperation opLog=new ORecordOperation();
        while (network.readByte() == 1) {
          opLog.fromStream(network.readBytes());
          ops++;
          OLogManager.instance().info(this,"%d: received record %s",ops,opLog.record);
          replicator.getOperationLog(nodeId,getName()).appendLog(opLog.serial,opLog.type,(ORecordId)opLog.record.getIdentity());
        }
        if (OLogManager.instance().isInfoEnabled())         OLogManager.instance().info(this,"Synchronization of database '%s' completed: received %d operations from remote node. Total time: %dms",getName(),ops,(System.currentTimeMillis() - time));
      }
  finally {
        endResponse(network);
      }
    }
  }
 catch (  OException e) {
    throw e;
  }
catch (  Exception e) {
    handleException("Error on synchronization of database '" + getName() + "'",e);
  }
}
