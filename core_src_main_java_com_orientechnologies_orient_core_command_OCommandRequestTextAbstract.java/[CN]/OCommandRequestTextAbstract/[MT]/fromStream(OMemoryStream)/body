{
  text=buffer.getAsString();
  parameters=null;
  final boolean simpleParams=buffer.getAsBoolean();
  if (simpleParams) {
    final byte[] paramBuffer=buffer.getAsByteArray();
    final ODocument param=new ODocument();
    param.fromStream(paramBuffer);
    Map<String,Object> params=param.field("params");
    parameters=new HashMap<Object,Object>();
    for (    Entry<String,Object> p : params.entrySet()) {
      final Object value;
      if (p.getValue() instanceof String)       value=ORecordSerializerStringAbstract.getTypeValue((String)p.getValue());
 else       value=p.getValue();
      if (Character.isDigit(p.getKey().charAt(0)))       parameters.put(Integer.parseInt(p.getKey()),value);
 else       parameters.put(p.getKey(),value);
    }
  }
  final boolean compositeKeyParamsPresent=buffer.getAsBoolean();
  if (compositeKeyParamsPresent) {
    final byte[] paramBuffer=buffer.getAsByteArray();
    final ODocument param=new ODocument();
    param.fromStream(paramBuffer);
    final Map<String,Object> compositeKeyParams=param.field("compositeKeyParams");
    if (parameters == null)     parameters=new HashMap<Object,Object>();
    for (    final Entry<String,Object> p : compositeKeyParams.entrySet()) {
      final Object value=OCompositeKeySerializer.INSTANCE.deserialize(OStringSerializerHelper.getBinaryContent(p.getValue()),0);
      if (Character.isDigit(p.getKey().charAt(0)))       parameters.put(Integer.parseInt(p.getKey()),value);
 else       parameters.put(p.getKey(),value);
    }
  }
}
