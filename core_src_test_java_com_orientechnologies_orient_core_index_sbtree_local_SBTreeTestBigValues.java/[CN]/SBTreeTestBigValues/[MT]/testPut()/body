{
  for (int i=0; i < KEYS_COUNT; i++) {
    sbTree.put(i,createValue(i,OSBTreeValuePage.MAX_BINARY_VALUE_SIZE + i));
  }
  for (int i=0; i < KEYS_COUNT; i++) {
    Assert.assertEquals(sbTree.get(i),createValue(i,OSBTreeValuePage.MAX_BINARY_VALUE_SIZE + i),i + " key is absent");
  }
  Assert.assertEquals(0,(int)sbTree.firstKey());
  Assert.assertEquals(KEYS_COUNT - 1,(int)sbTree.lastKey());
  for (int i=KEYS_COUNT; i < 2 * KEYS_COUNT; i++) {
    Assert.assertNull(sbTree.get(i));
  }
}
