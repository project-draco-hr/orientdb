{
  final OConflictResult result=new OConflictResult();
  if (!candidates.isEmpty()) {
    int maxVersion=-1;
    for (    Object v : candidates.keySet()) {
      if (v instanceof ORawBuffer) {
        if (((ORawBuffer)v).version > maxVersion) {
          maxVersion=((ORawBuffer)v).version;
        }
      }
    }
    final List<Object> winners=new ArrayList<Object>();
    for (    Object v : candidates.keySet()) {
      if (v instanceof ORawBuffer) {
        if (((ORawBuffer)v).version == maxVersion) {
          winners.add(v);
        }
      }
    }
    if (winners.size() == 1) {
      result.winner=winners.get(0);
      OLogManager.instance().info(this,"Version Conflict Resolver decided the value '%s' is the winner for record %s, because its version (%d) is the highest. Servers ok=%s",result.winner,rid,maxVersion,candidates.get(result.winner));
    }
 else {
      for (      Object winner : winners) {
        result.candidates.put(winner,candidates.get(winner));
      }
      OLogManager.instance().info(this,"Version Conflict Resolver cannot decided the winner for record %s, because %d records have the highest version %d",rid,winners.size(),maxVersion);
    }
  }
  return result;
}
