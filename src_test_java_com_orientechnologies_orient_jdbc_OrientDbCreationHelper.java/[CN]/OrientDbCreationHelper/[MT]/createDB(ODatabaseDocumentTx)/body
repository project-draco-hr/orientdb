{
  if (db.exists())   db.delete();
  db.create();
  OSchema schema=db.getMetadata().getSchema();
  OClass item=schema.createClass("Item");
  item.createProperty("stringKey",OType.STRING);
  item.createIndex("stringKey",INDEX_TYPE.UNIQUE,"stringKey");
  item.createProperty("intKey",OType.INTEGER);
  item.createIndex("intKey",INDEX_TYPE.UNIQUE,"intKey");
  item.createProperty("date",OType.DATE);
  item.createIndex("date",INDEX_TYPE.NOTUNIQUE,"date");
  item.createProperty("time",OType.DATETIME);
  item.createIndex("time",INDEX_TYPE.NOTUNIQUE,"time");
  item.createProperty("text",OType.STRING);
  item.createProperty("length",OType.LONG);
  item.createProperty("published",OType.BOOLEAN);
  item.createIndex("published",INDEX_TYPE.NOTUNIQUE,"published");
  item.createProperty("title",OType.STRING);
  item.createProperty("author",OType.STRING);
  item.createIndex("author",INDEX_TYPE.NOTUNIQUE,"author");
  item.createProperty("tags",OType.EMBEDDEDLIST);
  OClass article=schema.createClass("Article");
  article.createProperty("uuid",OType.INTEGER);
  article.createIndex("uuid",INDEX_TYPE.UNIQUE,"uuid");
  article.createProperty("date",OType.DATE);
  article.createIndex("date",INDEX_TYPE.NOTUNIQUE,"date");
  article.createProperty("title",OType.STRING);
  article.createProperty("content",OType.STRING);
  OClass author=schema.createClass("Author");
  author.createProperty("uuid",OType.INTEGER);
  author.createIndex("uuid",INDEX_TYPE.UNIQUE,"uuid");
  author.createProperty("name",OType.STRING).setMin("3");
  author.createProperty("articles",OType.LINKLIST,article);
  article.createProperty("author",OType.LINK,author);
  schema.save();
  schema.reload();
}
