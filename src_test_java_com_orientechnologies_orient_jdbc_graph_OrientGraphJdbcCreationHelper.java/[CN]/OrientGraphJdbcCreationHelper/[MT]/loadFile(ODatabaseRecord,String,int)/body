{
  if (bufferSize > 0) {
    File binaryFile=new File(filePath);
    long binaryFileLength=binaryFile.length();
    int numberOfRecords=(int)(binaryFileLength / bufferSize);
    int remainder=(int)(binaryFileLength % bufferSize);
    if (remainder > 0)     numberOfRecords++;
    List<ORecordBytes> binaryChuncks=new ArrayList<ORecordBytes>(numberOfRecords);
    BufferedInputStream binaryStream=new BufferedInputStream(new FileInputStream(binaryFile));
    byte[] chunk;
    ORecordBytes recordChunck;
    for (int i=0; i < numberOfRecords; i++) {
      if (i == numberOfRecords - 1)       chunk=new byte[remainder];
 else       chunk=new byte[bufferSize];
      binaryStream.read(chunk);
      recordChunck=new ORecordBytes(database,chunk);
      recordChunck.save();
      binaryChuncks.add(recordChunck);
    }
    return binaryChuncks;
  }
  return asList(loadFile(database,filePath));
}
