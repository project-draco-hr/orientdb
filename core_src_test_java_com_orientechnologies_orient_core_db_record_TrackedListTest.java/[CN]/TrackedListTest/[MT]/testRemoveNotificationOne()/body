{
  final ODocument doc=new ODocument();
  doc.unsetDirty();
  Assert.assertFalse(doc.isDirty());
  final OTrackedList<String> trackedList=new OTrackedList<String>(doc);
  trackedList.add("value1");
  trackedList.add("value2");
  trackedList.add("value3");
  doc.unsetDirty();
  Assert.assertFalse(doc.isDirty());
  final ORef<Boolean> changed=new ORef<Boolean>(false);
  trackedList.addChangeListener(new OMultiValueChangeListener<Integer,String>(){
    public void onAfterRecordChanged(    final OMultiValueChangeEvent<Integer,String> event){
      Assert.assertEquals(event.getChangeType(),OMultiValueChangeEvent.OChangeType.REMOVE);
      Assert.assertEquals(event.getOldValue(),"value2");
      Assert.assertEquals(event.getKey().intValue(),1);
      Assert.assertNull(event.getValue());
      changed.value=true;
    }
  }
);
  trackedList.remove("value2");
  Assert.assertTrue(changed.value);
  Assert.assertTrue(doc.isDirty());
}
