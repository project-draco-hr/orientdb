{
  final OrientGraph graph=new OrientGraph(url);
  if (graph.getVertexType("Foo") == null)   graph.createVertexType("Foo");
  try {
    graph.addVertex("class:Foo","address","test1");
    graph.addVertex("class:Foo","address","test2");
    graph.addVertex("class:Foo","address","test3");
    graph.commit();
    List<ODocument> result=graph.getRawGraph().query(new OSQLSynchQuery<ODocument>("select * from Foo"));
    for (    ODocument d : result) {
      System.out.println("Vertex: " + d);
    }
    result=graph.getRawGraph().query(new OSQLSynchQuery<ODocument>("select * from Foo where address = 'test1'"));
    Assert.assertEquals(result.size(),1);
    graph.removeVertex(graph.getVertex(result.get(0)));
    result=graph.getRawGraph().query(new OSQLSynchQuery<ODocument>("select * from Foo where address = 'test2'"));
    Assert.assertEquals(result.size(),1);
    graph.removeVertex(graph.getVertex(result.get(0)));
    result=graph.getRawGraph().query(new OSQLSynchQuery<ODocument>("select * from Foo where address = 'test3'"));
    Assert.assertEquals(result.size(),1);
    graph.removeVertex(graph.getVertex(result.get(0)));
    graph.commit();
    result=graph.getRawGraph().query(new OSQLSynchQuery<ODocument>("select * from Foo"));
    for (    ODocument d : result) {
      System.out.println("Vertex: " + d);
    }
  }
  finally {
    graph.shutdown();
  }
}
