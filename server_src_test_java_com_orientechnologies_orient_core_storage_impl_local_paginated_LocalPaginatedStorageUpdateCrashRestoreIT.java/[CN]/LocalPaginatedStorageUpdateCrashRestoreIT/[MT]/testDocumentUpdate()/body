{
  createSchema(baseDocumentTx);
  createSchema(testDocumentTx);
  System.out.println("Schema was created.");
  System.out.println("Document creation was started.");
  createDocuments();
  System.out.println("Document creation was finished.");
  System.out.println("Start documents update.");
  List<Future> futures=new ArrayList<Future>();
  for (int i=0; i < 8; i++) {
    futures.add(executorService.submit(new DataUpdateTask(baseDocumentTx,testDocumentTx)));
  }
  System.out.println("Wait for 5 minutes");
  TimeUnit.MINUTES.sleep(5);
  long lastTs=System.currentTimeMillis();
  System.out.println("Wait for process to destroy");
  process.destroy();
  process.waitFor();
  System.out.println("Process was destroyed");
  for (  Future future : futures) {
    try {
      future.get();
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
  }
  System.out.println("Documents update was stopped.");
  testDocumentTx=new ODatabaseDocumentTx("plocal:" + buildDir.getAbsolutePath() + "/testLocalPaginatedStorageUpdateCrashRestore");
  long startRestoreTime=System.currentTimeMillis();
  testDocumentTx.open("admin","admin");
  long endRestoreTime=System.currentTimeMillis();
  System.out.println("Restore time : " + (endRestoreTime - startRestoreTime));
  testDocumentTx.close();
  testDocumentTx.open("admin","admin");
  System.out.println("Start documents comparison.");
  compareDocuments(lastTs);
}
