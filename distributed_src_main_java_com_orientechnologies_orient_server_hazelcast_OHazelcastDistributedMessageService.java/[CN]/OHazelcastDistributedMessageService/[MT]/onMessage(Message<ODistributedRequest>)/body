{
  final ODistributedRequest req=message.getMessageObject();
  final IQueue<ODistributedResponse> queue=getNodeQueue(req.getSenderNodeName());
  ODistributedThreadLocal.INSTANCE.set("local");
  try {
    ODistributedServerLog.debug(this,manager.getLocalNodeName(),req.getSenderNodeName() + ":" + req.getSenderThreadId(),DIRECTION.IN,"request %s",req.getPayload());
    final Serializable responsePayload=manager.executeOnLocalNode(req);
    ODistributedServerLog.debug(this,manager.getLocalNodeName(),req.getSenderNodeName() + ":" + req.getSenderThreadId(),DIRECTION.OUT,"response to request %s: %s",req.getPayload(),responsePayload);
    final OHazelcastDistributedResponse response=new OHazelcastDistributedResponse(req.getSenderNodeName(),req.getSenderThreadId(),responsePayload);
    try {
      if (!queue.offer(response,MAX_PUSH_TIMEOUT,TimeUnit.MILLISECONDS))       throw new ODistributedException("Timeout on dispatching response to the thread queue " + req.getSenderNodeName() + ":"+ req.getSenderThreadId());
    }
 catch (    Exception e) {
      throw new ODistributedException("Cannot dispatch response to the thread queue " + req.getSenderNodeName() + ":"+ req.getSenderThreadId(),e);
    }
  }
  finally {
    ODistributedThreadLocal.INSTANCE.set(null);
  }
}
