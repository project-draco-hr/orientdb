{
  ODatabaseDocument db=new ODatabaseDocumentTx("memory:" + ODocumentValidationTest.class.getSimpleName());
  db.create();
  try {
    OClass clazz=db.getMetadata().getSchema().createClass("Validation");
    OClass clazz1=db.getMetadata().getSchema().createClass("Validation1");
    clazz.createProperty("linkList",OType.LINKLIST).setLinkedClass(clazz1);
    clazz.createProperty("linkSet",OType.LINKSET).setLinkedClass(clazz1);
    clazz.createProperty("linkMap",OType.LINKMAP).setLinkedClass(clazz1);
    clazz.createProperty("linkBag",OType.LINKBAG).setLinkedClass(clazz1);
    ODocument d=new ODocument(clazz);
    d.field("link",new ODocument(clazz1));
    d.field("embedded",new ODocument(clazz1));
    List<ODocument> list=Arrays.asList(new ODocument(clazz1));
    d.field("linkList",list);
    Set<ODocument> set=new HashSet<ODocument>(list);
    d.field("linkSet",set);
    d.field("linkBag",new ORidBag());
    Map<String,ODocument> map=new HashMap<String,ODocument>();
    map.put("a",new ODocument(clazz1));
    d.field("linkMap",map);
    db.save(d);
    try {
      ODocument newD=d.copy();
      ((Collection)newD.field("linkList")).add(new ODocument(clazz));
      newD.validate();
      AssertJUnit.fail();
    }
 catch (    OValidationException v) {
    }
    try {
      ODocument newD=d.copy();
      ((Collection)newD.field("linkSet")).add(new ODocument(clazz));
      newD.validate();
      AssertJUnit.fail();
    }
 catch (    OValidationException v) {
    }
    try {
      ODocument newD=d.copy();
      ((ORidBag)newD.field("linkBag")).add(new ODocument(clazz));
      newD.validate();
      AssertJUnit.fail();
    }
 catch (    OValidationException v) {
    }
    try {
      ODocument newD=d.copy();
      ((Map<String,ODocument>)newD.field("linkMap")).put("a",new ODocument(clazz));
      newD.validate();
      AssertJUnit.fail();
    }
 catch (    OValidationException v) {
    }
  }
  finally {
    db.drop();
  }
}
