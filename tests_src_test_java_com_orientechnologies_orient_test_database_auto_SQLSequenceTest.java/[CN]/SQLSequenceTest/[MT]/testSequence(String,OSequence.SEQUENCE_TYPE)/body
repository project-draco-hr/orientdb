{
  OSequenceLibrary sequenceLibrary=database.getMetadata().getSequenceLibrary();
  database.command(new OCommandSQL("CREATE SEQUENCE " + sequenceName + " TYPE "+ sequenceType)).execute();
  OSequenceException err=null;
  try {
    database.command(new OCommandSQL("CREATE SEQUENCE " + sequenceName + " TYPE "+ sequenceType)).execute();
  }
 catch (  OSequenceException se) {
    err=se;
  }
  Assert.assertTrue(err == null || err.getMessage().toLowerCase().contains("already exists"),"Creating a second " + sequenceType.toString() + " sequences with same name doesn't throw an exception");
  for (int i=0; i < 2; ++i) {
    Assert.assertEquals(sequenceCurrent(sequenceName),0L);
    Assert.assertEquals(sequenceNext(sequenceName),1L);
    Assert.assertEquals(sequenceCurrent(sequenceName),1L);
    Assert.assertEquals(sequenceNext(sequenceName),2L);
    Assert.assertEquals(sequenceNext(sequenceName),3L);
    Assert.assertEquals(sequenceNext(sequenceName),4L);
    Assert.assertEquals(sequenceCurrent(sequenceName),4L);
    Assert.assertEquals(sequenceReset(sequenceName),0L);
  }
}
