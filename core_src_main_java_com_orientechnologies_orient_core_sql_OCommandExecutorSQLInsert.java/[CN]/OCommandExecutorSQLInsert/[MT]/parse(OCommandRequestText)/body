{
  iRequest.getDatabase().checkSecurity(ODatabaseSecurityResources.COMMAND,ORole.PERMISSION_CREATE);
  init(iRequest.getDatabase(),iRequest.getText());
  className=null;
  fieldNames=null;
  fieldValues=null;
  StringBuilder word=new StringBuilder();
  int pos=OSQLHelper.nextWord(text,textUpperCase,0,word,true);
  if (pos == -1 || !word.toString().equals(OCommandExecutorSQLInsert.KEYWORD_INSERT))   throw new OCommandSQLParsingException("Keyword " + OCommandExecutorSQLInsert.KEYWORD_INSERT + " not found",text,0);
  pos=OSQLHelper.nextWord(text,textUpperCase,pos,word,true);
  if (pos == -1 || !word.toString().equals(KEYWORD_INTO))   throw new OCommandSQLParsingException("Keyword " + KEYWORD_INTO + " not found",text,0);
  pos=OSQLHelper.nextWord(text,textUpperCase,pos,word,true);
  if (pos == -1)   throw new OCommandSQLParsingException("Invalid class name",text,pos);
  String subjectName=word.toString();
  if (subjectName.startsWith(OCommandExecutorSQLAbstract.CLASS_PREFIX))   subjectName=subjectName.substring(OCommandExecutorSQLAbstract.CLASS_PREFIX.length());
  final OClass cls=database.getMetadata().getSchema().getClass(subjectName);
  if (cls == null)   throw new OCommandSQLParsingException("Class " + subjectName + " not found in database",text,pos);
  className=cls.getName();
  final int beginFields=OStringParser.jumpWhiteSpaces(text,pos);
  if (beginFields == -1 || text.charAt(beginFields) != '(')   throw new OCommandSQLParsingException("Set of fields is missed. Example: (name, surname)",text,pos);
  final int endFields=text.indexOf(")",beginFields + 1);
  if (endFields == -1)   throw new OCommandSQLParsingException("Missed closed brace",text,beginFields);
  fieldNames=OStringSerializerHelper.getParameters(text,beginFields);
  if (fieldNames.size() == 0)   throw new OCommandSQLParsingException("Set of fields is empty. Example: (name, surname)",text,endFields);
  pos=OSQLHelper.nextWord(text,textUpperCase,endFields + 1,word,true);
  if (pos == -1 || !word.toString().equals(KEYWORD_VALUES))   throw new OCommandSQLParsingException("Missed VALUES keyword",text,endFields);
  final int beginValues=OStringParser.jumpWhiteSpaces(text,pos + 1);
  if (pos == -1 || text.charAt(beginValues) != '(')   throw new OCommandSQLParsingException("Set of values is missed. Example: ('Bill', 'Stuart', 300)",text,pos);
  final int endValues=text.indexOf(")",beginValues + 1);
  if (endValues == -1)   throw new OCommandSQLParsingException("Missed closed brace",text,beginValues);
  final List<String> values=OStringSerializerHelper.smartSplit(text.substring(beginValues + 1,endValues),',');
  if (values.size() == 0)   throw new OCommandSQLParsingException("Set of values is empty. Example: ('Bill', 'Stuart', 300)",text,beginValues);
  if (values.size() != fieldNames.size())   throw new OCommandSQLParsingException("Fields not match with values",text,beginValues);
  fieldValues=new Object[values.size()];
  for (int i=0; i < values.size(); ++i)   fieldValues[i]=OSQLHelper.parseValue(database,this,values.get(i));
  return this;
}
