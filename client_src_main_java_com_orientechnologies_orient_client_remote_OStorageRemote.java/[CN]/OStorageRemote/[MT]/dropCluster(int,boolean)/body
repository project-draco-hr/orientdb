{
  checkConnection();
  OChannelBinaryAsynchClient network=null;
  do {
    try {
      try {
        network=beginRequest(OChannelBinaryProtocol.REQUEST_DATACLUSTER_DROP);
        network.writeShort((short)iClusterId);
      }
  finally {
        endRequest(network);
      }
      byte result=0;
      try {
        beginResponse(network);
        result=network.readByte();
      }
  finally {
        endResponse(network);
      }
      if (result == 1) {
        final OCluster cluster=clusters[iClusterId];
        clusters[iClusterId]=null;
        clusterMap.remove(cluster.getName());
        if (configuration.clusters.size() > iClusterId)         configuration.dropCluster(iClusterId);
        getLevel2Cache().freeCluster(iClusterId);
        return true;
      }
      return false;
    }
 catch (    OModificationOperationProhibitedException mope) {
      handleDBFreeze();
    }
catch (    Exception e) {
      handleException(network,"Error on removing of cluster",e);
    }
  }
 while (true);
}
