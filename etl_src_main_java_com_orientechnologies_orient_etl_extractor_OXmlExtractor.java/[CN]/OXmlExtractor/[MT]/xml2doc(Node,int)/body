{
  final ODocument doc=new ODocument();
  final NamedNodeMap attrs=xmlDocument.getAttributes();
  if (attrs != null)   for (int i=0; i < attrs.getLength(); ++i) {
    final Node item=attrs.item(i);
switch (item.getNodeType()) {
case Node.ATTRIBUTE_NODE:
{
        final Attr attr=(Attr)item;
        doc.field(attr.getName(),attr.getValue());
        break;
      }
  }
}
final NodeList children=xmlDocument.getChildNodes();
if (children != null) for (int i=0; i < children.getLength(); ++i) {
  final Node child=children.item(i);
switch (child.getNodeType()) {
case Node.ELEMENT_NODE:
{
      final Element element=(Element)child;
      ODocument linked=xml2doc(element,iLevel + 1);
      final Object previous=doc.field(element.getNodeName());
      if (previous != null) {
        List list;
        if (previous instanceof List) {
          list=(List)previous;
        }
 else {
          list=new ArrayList();
          list.add(previous);
          doc.field(element.getNodeName(),list,OType.EMBEDDEDLIST);
        }
        list.add(linked);
      }
 else       doc.field(element.getNodeName(),linked,OType.EMBEDDED);
      break;
    }
}
}
return doc;
}
