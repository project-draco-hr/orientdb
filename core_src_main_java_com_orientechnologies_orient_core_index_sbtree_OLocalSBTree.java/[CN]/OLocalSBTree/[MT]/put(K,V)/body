{
  acquireExclusiveLock();
  try {
    BucketSearchResult bucketSearchResult=findBucket(key);
    long keyBucketPointer=diskCache.load(fileId,bucketSearchResult.pageIndex);
    OSBTreeBucket<K,V> keyBucket=new OSBTreeBucket<K,V>(keyBucketPointer,keySerializer,valueSerializer);
    if (bucketSearchResult.index >= 0) {
      keyBucket.remove(bucketSearchResult.index);
      diskCache.markDirty(fileId,bucketSearchResult.pageIndex);
    }
    while (!keyBucket.put(bucketSearchResult.index,key,value)) {
      if (keyBucket.size() == 0) {
        diskCache.release(fileId,bucketSearchResult.pageIndex);
        throw new OIndexException("Key value pair can not be added in index because their serialized presentation exceed index page size");
      }
      diskCache.release(fileId,bucketSearchResult.pageIndex);
      bucketSearchResult=splitBucket(bucketSearchResult.pageIndex,bucketSearchResult.index);
      keyBucketPointer=diskCache.load(fileId,bucketSearchResult.pageIndex);
      keyBucket=new OSBTreeBucket<K,V>(keyBucketPointer,keySerializer,valueSerializer);
    }
    diskCache.markDirty(fileId,bucketSearchResult.pageIndex);
    diskCache.release(fileId,bucketSearchResult.pageIndex);
  }
 catch (  IOException e) {
    throw new OIndexException("Error during index update",e);
  }
 finally {
    releaseExclusiveLock();
  }
}
