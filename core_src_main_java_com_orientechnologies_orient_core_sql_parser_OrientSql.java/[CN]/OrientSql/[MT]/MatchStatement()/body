{
  OMatchStatement jjtn000=new OMatchStatement(JJTMATCHSTATEMENT);
  boolean jjtc000=true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
  OMatchExpression lastMatchExpr=null;
  OExpression lastReturn=null;
  OIdentifier lastReturnAlias=null;
  try {
    jj_consume_token(MATCH);
    lastMatchExpr=MatchExpression();
    jjtn000.matchExpressions.add(lastMatchExpr);
    label_2:     while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case COMMA:
        ;
      break;
default :
    jj_la1[42]=jj_gen;
  break label_2;
}
jj_consume_token(COMMA);
lastMatchExpr=MatchExpression();
jjtn000.matchExpressions.add(lastMatchExpr);
}
jj_consume_token(RETURN);
lastReturn=Expression();
lastReturnAlias=null;
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case AS:
jj_consume_token(AS);
lastReturnAlias=Identifier();
break;
default :
jj_la1[43]=jj_gen;
;
}
jjtn000.returnAliases.add(lastReturnAlias);
jjtn000.returnItems.add(lastReturn);
label_3: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case COMMA:
;
break;
default :
jj_la1[44]=jj_gen;
break label_3;
}
jj_consume_token(COMMA);
lastReturn=Expression();
lastReturnAlias=null;
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case AS:
jj_consume_token(AS);
lastReturnAlias=Identifier();
break;
default :
jj_la1[45]=jj_gen;
;
}
jjtn000.returnAliases.add(lastReturnAlias);
jjtn000.returnItems.add(lastReturn);
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case LIMIT:
jjtn000.limit=Limit();
break;
default :
jj_la1[46]=jj_gen;
;
}
jjtree.closeNodeScope(jjtn000,true);
jjtc000=false;
jjtn000.jjtSetLastToken(getToken(0));
{
if (true) return jjtn000;
}
}
 catch (Throwable jjte000) {
if (jjtc000) {
jjtree.clearNodeScope(jjtn000);
jjtc000=false;
}
 else {
jjtree.popNode();
}
if (jjte000 instanceof RuntimeException) {
{
if (true) throw (RuntimeException)jjte000;
}
}
if (jjte000 instanceof ParseException) {
{
if (true) throw (ParseException)jjte000;
}
}
{
if (true) throw (Error)jjte000;
}
}
 finally {
if (jjtc000) {
jjtree.closeNodeScope(jjtn000,true);
jjtn000.jjtSetLastToken(getToken(0));
}
}
throw new Error("Missing return statement in function");
}
