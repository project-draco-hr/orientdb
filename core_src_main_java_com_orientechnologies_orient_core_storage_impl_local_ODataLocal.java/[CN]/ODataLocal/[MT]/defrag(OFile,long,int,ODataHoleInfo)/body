{
  final long timer=OProfiler.getInstance().startChrono();
  int holeSize=iRecordSize + RECORD_FIX_SIZE;
  long closestHoleOffset;
  if (iRecordOffset > closestHole.dataOffset)   closestHoleOffset=(closestHole.dataOffset + closestHole.size) - iRecordOffset;
 else   closestHoleOffset=closestHole.dataOffset - (iRecordOffset + iRecordSize);
  long holePositionOffset;
  if (closestHoleOffset < 0) {
    closestHoleOffset*=-1;
    long moveFrom=closestHole.dataOffset + closestHole.size;
    int recordSize;
    final long offsetLimit=iRecordOffset;
    final List<long[]> segmentPositions=new ArrayList<long[]>();
    while (moveFrom < offsetLimit) {
      final long[] pos=getRelativePosition(moveFrom);
      if (pos[1] >= file.getFilledUpTo())       break;
      int recordContentSize=file.readInt(pos[1]);
      if (recordContentSize < 0)       break;
      recordSize=recordContentSize + RECORD_FIX_SIZE;
      segmentPositions.add(0,new long[]{moveFrom,recordSize});
      moveFrom+=recordSize;
    }
    long gap=offsetLimit + holeSize;
    for (    long[] item : segmentPositions) {
      final int sizeMoved=moveRecord(item[0],gap - item[1]);
      if (sizeMoved < 0)       throw new IllegalStateException("Cannot move record at position " + moveFrom + ": found hole");
 else       if (sizeMoved != item[1])       throw new IllegalStateException("Corrupted hole at position " + item[0] + ": found size "+ sizeMoved+ " instead of "+ item[1]);
      gap-=sizeMoved;
    }
    holePositionOffset=closestHole.dataOffset;
    holeSize+=closestHole.size;
  }
 else {
    long moveFrom=iRecordOffset + holeSize;
    long moveTo=iRecordOffset;
    final long moveUpTo=closestHole.dataOffset;
    while (moveFrom < moveUpTo) {
      final int sizeMoved=moveRecord(moveFrom,moveTo);
      if (sizeMoved < 0)       throw new IllegalStateException("Cannot move record at position " + moveFrom + ": found hole");
      moveFrom+=sizeMoved;
      moveTo+=sizeMoved;
    }
    if (moveFrom != moveUpTo)     throw new IllegalStateException("Corrupted holes: found offset " + moveFrom + " instead of "+ moveUpTo+ " while creating a new hole on position "+ iRecordOffset+ ", size "+ iRecordSize+ ". The closest hole "+ closestHole.holeOffset+ " points to position "+ closestHole.dataOffset+ ", size "+ closestHole.size);
    holePositionOffset=moveTo;
    holeSize+=closestHole.size;
  }
  holeSegment.updateHole(closestHole,holePositionOffset,holeSize);
  final long[] pos=getRelativePosition(holePositionOffset);
  files[(int)pos[0]].writeInt(pos[1],holeSize * -1);
  OProfiler.getInstance().stopChrono(PROFILER_HOLE_CREATE,timer);
}
