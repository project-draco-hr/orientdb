{
  final OrientBaseGraph graph=getGraph();
  final OrientVertex toAdd;
  final ODocument fieldRecord=((OIdentifiable)fieldValue).getRecord();
  OImmutableClass immutableClass=ODocumentInternal.getImmutableSchemaClass(fieldRecord);
  if (immutableClass.isVertexType()) {
    toAdd=new OrientVertex(graph,fieldRecord);
  }
 else   if (immutableClass.isEdgeType()) {
    if (settings.isUseVertexFieldsForEdgeLabels() || OrientEdge.isLabeled(OrientEdge.getRecordLabel(fieldRecord),iLabels)) {
      final OIdentifiable vertexDoc=OrientEdge.getConnection(fieldRecord,connection.getKey().opposite());
      if (vertexDoc == null) {
        fieldRecord.reload();
        if (vertexDoc == null) {
          OLogManager.instance().warn(this,"Cannot load edge " + fieldRecord + " to get the "+ connection.getKey().opposite()+ " vertex");
          return;
        }
      }
      toAdd=new OrientVertex(graph,vertexDoc);
    }
 else     toAdd=null;
  }
 else   throw new IllegalStateException("Invalid content found in " + fieldName + " field: "+ fieldRecord);
  if (toAdd != null)   iterable.add(toAdd);
}
