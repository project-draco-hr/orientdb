{
  if (iMaxFetch > -1 && iCurrentLevel >= iMaxFetch)   return;
  Object fieldValue;
  final StringBuilder types=new StringBuilder();
  if (record instanceof ODocument) {
    ODocument doc=(ODocument)record;
    for (    String fieldName : doc.fieldNames()) {
      final int depthLevel=getDepthLevel(doc,iFetchPlan,fieldName);
      if (depthLevel == 0)       continue;
      if (depthLevel > -1 && iCurrentLevel > depthLevel) {
        continue;
      }
      fieldValue=doc.field(fieldName);
      if (fieldValue == null || !(fieldValue instanceof OIdentifiable) && (!(fieldValue instanceof Collection<?>) || ((Collection<?>)fieldValue).size() == 0 || !(((Collection<?>)fieldValue).iterator().next() instanceof OIdentifiable)) && (!(fieldValue instanceof Map<?,?>) || ((Map<?,?>)fieldValue).size() == 0 || !(((Map<?,?>)fieldValue).values().iterator().next() instanceof OIdentifiable))) {
        if (keepTypes) {
          if (fieldValue instanceof Long)           appendType(types,fieldName,'l');
 else           if (fieldValue instanceof Float)           appendType(types,fieldName,'f');
 else           if (fieldValue instanceof Short)           appendType(types,fieldName,'s');
 else           if (fieldValue instanceof Double)           appendType(types,fieldName,'d');
 else           if (fieldValue instanceof Date)           appendType(types,fieldName,'t');
 else           if (fieldValue instanceof Byte)           appendType(types,fieldName,'b');
        }
        json.writeAttribute(indentLevel + 1,true,fieldName,OJSONWriter.encode(fieldValue));
      }
 else {
        try {
          fetch(doc,iFetchPlan,fieldValue,fieldName,iCurrentLevel,iMaxFetch,json,indentLevel,includeType,includeId,includeVer,includeClazz,attribSameRow,keepTypes,parsedRecords,depthLevel);
        }
 catch (        Exception e) {
          e.printStackTrace();
          OLogManager.instance().error(null,"Fetching error on record %s",e,record.getIdentity());
        }
      }
    }
  }
 else   if (record instanceof ORecordBytes) {
    final ORecordBytes recBytes=(ORecordBytes)record;
    json.writeAttribute(indentLevel + 1,true,"value",OBase64Utils.encodeBytes(recBytes.toStream()));
  }
  if (keepTypes && types.length() > 0)   json.writeAttribute(indentLevel + 1,true,ATTRIBUTE_FIELD_TYPES,types.toString());
}
