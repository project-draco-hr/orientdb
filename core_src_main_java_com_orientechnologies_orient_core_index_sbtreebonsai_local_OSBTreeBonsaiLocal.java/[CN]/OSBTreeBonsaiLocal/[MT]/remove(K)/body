{
  acquireExclusiveLock();
  try {
    OAtomicOperation atomicOperation=storage.getAtomicOperationsManager().getCurrentOperation();
    BucketSearchResult bucketSearchResult=findBucket(key,atomicOperation);
    if (bucketSearchResult.itemIndex < 0)     return null;
    OBonsaiBucketPointer bucketPointer=bucketSearchResult.getLastPathItem();
    OCacheEntry keyBucketCacheEntry=loadPage(atomicOperation,fileId,bucketPointer.getPageIndex(),false,diskCache);
    final V removed;
    keyBucketCacheEntry.acquireExclusiveLock();
    try {
      atomicOperation=startAtomicOperation();
      OSBTreeBonsaiBucket<K,V> keyBucket=new OSBTreeBonsaiBucket<K,V>(keyBucketCacheEntry,bucketPointer.getPageOffset(),keySerializer,valueSerializer,getChangesTree(atomicOperation,keyBucketCacheEntry));
      removed=keyBucket.getEntry(bucketSearchResult.itemIndex).value;
      keyBucket.remove(bucketSearchResult.itemIndex);
    }
  finally {
      keyBucketCacheEntry.releaseExclusiveLock();
      releasePage(atomicOperation,keyBucketCacheEntry,diskCache);
    }
    setSize(size() - 1,atomicOperation);
    endAtomicOperation(false);
    return removed;
  }
 catch (  Throwable e) {
    rollback();
    throw new OSBTreeException("Error during removing key " + key + " from sbtree "+ name,e);
  }
 finally {
    releaseExclusiveLock();
  }
}
