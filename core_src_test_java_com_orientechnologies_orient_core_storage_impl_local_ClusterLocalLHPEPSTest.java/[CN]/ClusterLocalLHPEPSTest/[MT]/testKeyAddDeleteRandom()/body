{
  OCluster localCluster=getCluster();
  List<Long> longs=getUniqueRandomValuesArray(2 * KEYS_COUNT);
  for (int i=0; i < KEYS_COUNT; i++) {
    localCluster.addPhysicalPosition(new OPhysicalPosition(OClusterPositionFactory.INSTANCE.valueOf(longs.get(i))));
  }
  for (int i=0; i < KEYS_COUNT; i++) {
    if (i % 3 == 0) {
      localCluster.removePhysicalPosition(OClusterPositionFactory.INSTANCE.valueOf(longs.get(i)));
    }
    if (i % 2 == 0) {
      localCluster.addPhysicalPosition(new OPhysicalPosition(OClusterPositionFactory.INSTANCE.valueOf(longs.get(i + KEYS_COUNT))));
    }
  }
  for (int i=0; i < KEYS_COUNT; i++) {
    if (i % 3 == 0)     Assert.assertNull(localCluster.getPhysicalPosition(new OPhysicalPosition(OClusterPositionFactory.INSTANCE.valueOf(longs.get(i)))));
 else     Assert.assertNotNull(localCluster.addPhysicalPosition(new OPhysicalPosition(OClusterPositionFactory.INSTANCE.valueOf(longs.get(i)))));
    if (i % 2 == 0)     Assert.assertNotNull(localCluster.getPhysicalPosition(new OPhysicalPosition(OClusterPositionFactory.INSTANCE.valueOf(longs.get(KEYS_COUNT + i)))));
  }
}
