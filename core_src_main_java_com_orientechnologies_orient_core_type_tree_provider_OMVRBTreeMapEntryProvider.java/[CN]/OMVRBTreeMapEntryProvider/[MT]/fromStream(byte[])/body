{
  final long timer=OProfiler.getInstance().startChrono();
  stream.setSource(iStream);
  try {
    pageSize=stream.getAsInteger();
    parentRid=new ORecordId().fromStream(stream.getAsByteArrayFixed(ORecordId.PERSISTENT_SIZE));
    leftRid=new ORecordId().fromStream(stream.getAsByteArrayFixed(ORecordId.PERSISTENT_SIZE));
    rightRid=new ORecordId().fromStream(stream.getAsByteArrayFixed(ORecordId.PERSISTENT_SIZE));
    color=stream.getAsBoolean();
    size=stream.getAsInteger();
    if (size > pageSize)     throw new OConfigurationException("Loaded index with page size setted to " + pageSize + " while the loaded was built with: "+ size);
    serializedKeys=new int[pageSize];
    for (int i=0; i < size; ++i) {
      serializedKeys[i]=stream.getAsByteArrayOffset();
    }
    keys=(K[])new Object[pageSize];
    serializedValues=new int[pageSize];
    for (int i=0; i < size; ++i) {
      serializedValues[i]=stream.getAsByteArrayOffset();
    }
    values=(V[])new Object[pageSize];
    return this;
  }
  finally {
    OProfiler.getInstance().stopChrono("OMVRBTreeMapEntry.fromStream",timer);
  }
}
