{
  final OClusterPosition position=iPPosition.clusterPosition;
  final long filePosition=position.longValue() * RECORD_SIZE;
  acquireSharedLock();
  try {
    if (position.isNew() || position.compareTo(getLastIdentity()) > 0)     return null;
    final long[] pos=fileSegment.getRelativePosition(filePosition);
    final OFile f=fileSegment.files[(int)pos[0]];
    long p=pos[1];
    iPPosition.dataSegmentId=f.readShort(p);
    iPPosition.dataSegmentPos=f.readLong(p+=OBinaryProtocol.SIZE_SHORT);
    iPPosition.recordType=f.readByte(p+=OBinaryProtocol.SIZE_LONG);
    p+=OBinaryProtocol.SIZE_BYTE;
    iPPosition.recordVersion.getSerializer().readFrom(f,p,iPPosition.recordVersion);
    return iPPosition;
  }
  finally {
    releaseSharedLock();
  }
}
