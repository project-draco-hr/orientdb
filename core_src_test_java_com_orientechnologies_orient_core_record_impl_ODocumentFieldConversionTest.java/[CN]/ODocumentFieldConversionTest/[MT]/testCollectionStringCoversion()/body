{
  ODatabaseRecordThreadLocal.INSTANCE.set((ODatabaseRecordInternal)((ODatabaseDocumentTx)db).getUnderlying());
  List values=new ArrayList();
  ODocument doc=new ODocument(clazz);
  doc.field("stringList",values);
  values.add((byte)1);
  values.add(1L);
  values.add(1);
  values.add((short)1);
  values.add(1f);
  values.add(1d);
  values.add(BigDecimal.ONE);
  Set set=new HashSet();
  doc.field("stringSet",set);
  fillSet(set);
  doc.autoConvertValues();
  values=doc.field("stringList");
  for (  Object val : values) {
    assertTrue(val instanceof String);
    assertTrue(((String)val).contains("1"));
  }
  set=doc.field("stringSet");
  for (  Object val : set) {
    assertTrue(val instanceof String);
  }
  for (int i=1; i < 7; i++) {
    boolean contain=false;
    for (    Object object : set) {
      if (object.toString().contains(((Integer)i).toString()))       contain=true;
    }
    assertTrue(contain);
  }
  ODatabaseRecordThreadLocal.INSTANCE.remove();
}
