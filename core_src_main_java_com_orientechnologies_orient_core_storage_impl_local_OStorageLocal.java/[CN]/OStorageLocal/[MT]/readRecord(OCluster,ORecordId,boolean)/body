{
  if (!iRid.isPersistent())   throw new IllegalArgumentException("Cannot read record " + iRid + " since the position is invalid in database '"+ name+ '\'');
  final long timer=Orient.instance().getProfiler().startChrono();
  if (iAtomicLock)   lock.acquireSharedLock();
  try {
    lockManager.acquireLock(Thread.currentThread(),iRid,LOCK.SHARED);
    try {
      final OPhysicalPosition ppos=iClusterSegment.getPhysicalPosition(new OPhysicalPosition(iRid.clusterPosition));
      if (ppos == null || !checkForRecordValidity(ppos))       return null;
      final ODataLocal data=getDataSegmentById(ppos.dataSegmentId);
      return new ORawBuffer(data.getRecord(ppos.dataSegmentPos),ppos.recordVersion,ppos.recordType);
    }
  finally {
      lockManager.releaseLock(Thread.currentThread(),iRid,LOCK.SHARED);
    }
  }
 catch (  IOException e) {
    OLogManager.instance().error(this,"Error on reading record " + iRid + " (cluster: "+ iClusterSegment+ ')',e);
    return null;
  }
 finally {
    if (iAtomicLock)     lock.releaseSharedLock();
    Orient.instance().getProfiler().stopChrono(PROFILER_READ_RECORD,"Read a record from local database",timer,"db.*.readRecord");
  }
}
