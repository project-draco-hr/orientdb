{
  acquireExclusiveLock();
  try {
    OAtomicOperation atomicOperation=storage.getAtomicOperationsManager().getCurrentOperation();
    diskCache.loadPinnedPage(hashStateEntry);
    try {
      for (int i=0; i < HASH_CODE_SIZE; i++) {
        OHashIndexFileLevelMetadataPage metadataPage=new OHashIndexFileLevelMetadataPage(hashStateEntry,getChangesTree(atomicOperation,hashStateEntry),false);
        if (!metadataPage.isRemoved(i))         diskCache.flushFile(metadataPage.getFileId(i));
      }
    }
  finally {
      diskCache.release(hashStateEntry);
    }
    diskCache.flushFile(fileStateId);
    directory.flush();
    if (nullKeyIsSupported)     diskCache.flushFile(nullBucketFileId);
  }
 catch (  IOException e) {
    throw new OIndexException("Error during hash table flush",e);
  }
 finally {
    releaseExclusiveLock();
  }
}
