{
  if (from == null && to == null && rid == null && query == null && compiledFilter == null)   throw new OCommandExecutionException("Cannot execute the command because it has not been parsed yet");
  database=getDatabase();
  if (!(database instanceof OGraphDatabase))   database=new OGraphDatabase((ODatabaseRecordTx)database);
  if (rid != null) {
    if (((OGraphDatabase)database).removeEdge(rid))     removed=1;
  }
 else {
    final Set<OIdentifiable> edges;
    if (query == null) {
      if (from != null && to != null)       edges=((OGraphDatabase)database).getEdgesBetweenVertexes(from,to);
 else       if (from != null)       edges=new HashSet<OIdentifiable>(((OGraphDatabase)database).getOutEdges(from));
 else       if (to != null)       edges=new HashSet<OIdentifiable>(((OGraphDatabase)database).getInEdges(to));
 else       throw new OCommandExecutionException("Invalid target");
      if (compiledFilter != null) {
        for (Iterator<OIdentifiable> it=edges.iterator(); it.hasNext(); ) {
          final OIdentifiable edge=it.next();
          if (!(Boolean)compiledFilter.evaluate((ODocument)edge.getRecord(),null,context))           it.remove();
        }
      }
      removed=edges.size();
      for (      OIdentifiable edge : edges)       ((OGraphDatabase)database).removeEdge(edge);
    }
 else     if (query != null)     query.execute(iArgs);
 else     throw new OCommandExecutionException("Invalid target");
  }
  return removed;
}
