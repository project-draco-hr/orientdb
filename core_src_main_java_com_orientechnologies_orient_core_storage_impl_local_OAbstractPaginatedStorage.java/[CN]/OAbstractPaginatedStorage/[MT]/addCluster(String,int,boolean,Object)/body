{
  checkOpeness();
  checkLowDiskSpaceFullCheckpointRequestsAndBackgroundDataFlushExceptions();
  stateLock.acquireWriteLock();
  try {
    checkOpeness();
    if (requestedId < 0) {
      throw new OConfigurationException("Cluster id must be positive!");
    }
    if (requestedId < clusters.size() && clusters.get(requestedId) != null) {
      throw new OConfigurationException("Requested cluster ID [" + requestedId + "] is occupied by cluster with name ["+ clusters.get(requestedId).getName()+ "]");
    }
    makeStorageDirty();
    return addClusterInternal(clusterName,requestedId,parameters);
  }
 catch (  IOException e) {
    throw OException.wrapException(new OStorageException("Error in creation of new cluster '" + clusterName + "'"),e);
  }
 finally {
    stateLock.releaseWriteLock();
  }
}
