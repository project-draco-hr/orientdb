{
  if (concurrent)   if (timeout > 0) {
    try {
      if (lock.writeLock().tryLock(timeout,TimeUnit.MILLISECONDS))       return;
    }
 catch (    InterruptedException e) {
      if (ignoreThreadInterruption) {
        try {
          if (lock.writeLock().tryLock(timeout,TimeUnit.MILLISECONDS)) {
            Thread.currentThread().interrupt();
            return;
          }
        }
 catch (        InterruptedException e2) {
          Thread.currentThread().interrupt();
        }
      }
      final OLockException exception=new OLockException("Thread interrupted while waiting for resource of class '" + getClass() + "' with timeout="+ timeout);
      throw OException.wrapException(exception,e);
    }
    throwTimeoutException(lock.writeLock());
  }
 else {
    lock.writeLock().lock();
  }
}
