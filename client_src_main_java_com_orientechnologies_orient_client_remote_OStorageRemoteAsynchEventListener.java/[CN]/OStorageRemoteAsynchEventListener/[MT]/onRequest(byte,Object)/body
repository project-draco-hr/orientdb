{
  if (iRequestCode == OChannelBinaryProtocol.REQUEST_PUSH_DISTRIB_CONFIG) {
    storage.updateClusterConfiguration(storage.getCurrentServerURL(),(byte[])obj);
    if (OLogManager.instance().isDebugEnabled()) {
synchronized (storage.getClusterConfiguration()) {
        OLogManager.instance().debug(this,"Received new cluster configuration: %s",storage.getClusterConfiguration().toJSON("prettyPrint"));
      }
    }
  }
 else   if (iRequestCode == OChannelBinaryProtocol.REQUEST_PUSH_LIVE_QUERY) {
    byte[] bytes=(byte[])obj;
    DataInputStream dis=new DataInputStream(new ByteArrayInputStream(bytes));
    Integer id=null;
    try {
      byte what=dis.readByte();
      if (what == 'r') {
        byte op=dis.readByte();
        id=dis.readInt();
        final ORecord record=Orient.instance().getRecordFactoryManager().newInstance(dis.readByte());
        final int version=readVersion(dis);
        final ORecordId rid=readRID(dis);
        final byte[] content=readBytes(dis);
        ORecordInternal.fill(record,rid,version,content,false);
        OLiveResultListener listener=liveQueryListeners.get(id);
        if (listener != null) {
          listener.onLiveResult(id,new ORecordOperation(record,op));
        }
 else {
          OLogManager.instance().warn(this,"Receiving invalid LiveQuery token: " + id);
        }
      }
 else       if (what == 'u') {
        id=dis.readInt();
        OLiveResultListener listener=liveQueryListeners.get(id);
        listener.onUnsubscribe(id);
      }
    }
 catch (    IOException e) {
      if (id != null) {
        OLiveResultListener listener=liveQueryListeners.get(id);
        if (listener != null) {
          listener.onError(id);
        }
      }
      e.printStackTrace();
    }
  }
  byte op;
}
