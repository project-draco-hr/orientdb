{
  if (iLeft instanceof OBinaryField && iRight instanceof OBinaryField)   return evaluate((OBinaryField)iLeft,(OBinaryField)iRight,iContext);
 else   if (iLeft instanceof OQueryRuntimeValueMulti) {
    final OQueryRuntimeValueMulti left=(OQueryRuntimeValueMulti)iLeft;
    if (left.getValues().length == 0)     return false;
    if (left.getDefinition().getRoot().startsWith(OSQLFilterItemFieldAll.NAME)) {
      for (int i=0; i < left.getValues().length; ++i) {
        Object v=left.getValues()[i];
        Object r=iRight;
        final OCollate collate=left.getCollate(i);
        if (collate != null) {
          v=collate.transform(v);
          r=collate.transform(iRight);
        }
        if (v == null || !evaluateExpression(iRecord,iCondition,v,r,iContext))         return false;
      }
      return true;
    }
 else {
      for (int i=0; i < left.getValues().length; ++i) {
        Object v=left.getValues()[i];
        Object r=iRight;
        final OCollate collate=left.getCollate(i);
        if (collate != null) {
          v=collate.transform(v);
          r=collate.transform(iRight);
        }
        if (v != null && evaluateExpression(iRecord,iCondition,v,r,iContext))         return true;
      }
      return false;
    }
  }
 else   if (iRight instanceof OQueryRuntimeValueMulti) {
    final OQueryRuntimeValueMulti right=(OQueryRuntimeValueMulti)iRight;
    if (right.getValues().length == 0)     return false;
    if (right.getDefinition().getRoot().startsWith(OSQLFilterItemFieldAll.NAME)) {
      for (int i=0; i < right.getValues().length; ++i) {
        Object v=right.getValues()[i];
        Object l=iLeft;
        final OCollate collate=right.getCollate(i);
        if (collate != null) {
          v=collate.transform(v);
          l=collate.transform(iLeft);
        }
        if (v == null || !evaluateExpression(iRecord,iCondition,l,v,iContext))         return false;
      }
      return true;
    }
 else {
      for (int i=0; i < right.getValues().length; ++i) {
        Object v=right.getValues()[i];
        Object l=iLeft;
        final OCollate collate=right.getCollate(i);
        if (collate != null) {
          v=collate.transform(v);
          l=collate.transform(iLeft);
        }
        if (v != null && evaluateExpression(iRecord,iCondition,l,v,iContext))         return true;
      }
      return false;
    }
  }
 else {
    return evaluateExpression(iRecord,iCondition,iLeft,iRight,iContext);
  }
}
