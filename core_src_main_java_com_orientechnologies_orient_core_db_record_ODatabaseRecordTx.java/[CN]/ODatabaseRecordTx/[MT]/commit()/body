{
  for (  ODatabaseListener listener : underlying.getListeners())   try {
    listener.onBeforeTxCommit(underlying);
  }
 catch (  Throwable t) {
    try {
      rollback();
    }
 catch (    Exception e) {
    }
    OLogManager.instance().debug(this,"Can't commit the transaction: caught exception on execution of %s.onBeforeTxCommit()",t,OTransactionException.class,listener.getClass());
  }
  try {
    currentTx.commit();
  }
 catch (  RuntimeException e) {
    getLevel1Cache().clear();
    throw e;
  }
 finally {
    setDefaultTransactionMode();
  }
  for (  ODatabaseListener listener : underlying.getListeners())   try {
    listener.onAfterTxCommit(underlying);
  }
 catch (  Throwable t) {
    OLogManager.instance().debug(this,"Error after the transaction has been committed. The transaction remains valid. The exception caught was on execution of %s.onAfterTxCommit()",t,OTransactionException.class,listener.getClass());
  }
  return this;
}
