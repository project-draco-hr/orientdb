{
  final ORID rid=iRecord.getIdentity();
  if (!rid.isPersistent())   return null;
  final ODistributedRequestId oldReqId=lockManager.putIfAbsent(rid,iRequestId);
  final boolean locked=oldReqId == null;
  if (!locked) {
    if (iRequestId.equals(oldReqId)) {
      ODistributedServerLog.debug(this,localNodeName,null,DIRECTION.NONE,"Distributed transaction: %s locked record %s in database '%s' owned by %s",iRequestId,iRecord,databaseName,iRequestId);
      return null;
    }
    final String lockingNodeName=manager.getNodeNameById(oldReqId.getNodeId());
    if (lockingNodeName == null || !manager.isNodeAvailable(lockingNodeName)) {
      ODistributedServerLog.info(this,localNodeName,null,DIRECTION.NONE,"Distributed transaction: forcing unlock of record %s in database '%s' because the owner server '%s' is offline (reqId=%s ownerReqId=%s)",iRecord.getIdentity(),databaseName,iRequestId,oldReqId);
      lockManager.put(rid,iRequestId);
      return null;
    }
  }
  if (ODistributedServerLog.isDebugEnabled())   if (locked)   ODistributedServerLog.debug(this,localNodeName,null,DIRECTION.NONE,"Distributed transaction: %s locked record %s in database '%s'",iRequestId,iRecord,databaseName);
 else   ODistributedServerLog.debug(this,localNodeName,null,DIRECTION.NONE,"Distributed transaction: %s cannot lock record %s in database '%s' owned by %s",iRequestId,iRecord,databaseName,oldReqId);
  return oldReqId;
}
