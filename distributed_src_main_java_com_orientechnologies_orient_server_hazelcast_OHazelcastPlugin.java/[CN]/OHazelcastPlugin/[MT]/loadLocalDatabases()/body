{
  for (  Map.Entry<String,String> storageEntry : serverInstance.getAvailableStorageNames().entrySet()) {
    final String databaseName=storageEntry.getKey();
    if (messageService.getDatabase(databaseName) == null) {
      ODistributedServerLog.info(this,nodeName,null,DIRECTION.NONE,"Opening database '%s'...",databaseName);
      executeInDistributedDatabaseLock(databaseName,new OCallable<Object,ODistributedConfiguration>(){
        @Override public Object call(        ODistributedConfiguration cfg){
          ODistributedServerLog.info(this,nodeName,null,DIRECTION.NONE,"Current node started as %s for database '%s'",cfg.getServerRole(nodeName),databaseName);
          if (!configurationMap.containsKey(CONFIG_DATABASE_PREFIX + databaseName))           updateCachedDatabaseConfiguration(databaseName,cfg.getDocument(),false,true);
          final ODistributedDatabaseImpl ddb=messageService.registerDatabase(databaseName);
          cfg.addNewNodeInServerList(nodeName);
          final String coordinator=getCoordinatorServer(cfg);
          if (!nodeName.equals(coordinator)) {
            ODistributedServerLog.info(this,nodeName,null,DIRECTION.NONE,"First load of database '%s' in the cluster, set local node as coordinator (was '%s')",databaseName,coordinator);
            electCurrentNodeAsNewCoordinator(cfg,coordinator,databaseName);
          }
          ddb.setOnline();
          return null;
        }
      }
);
    }
  }
}
