{
  for (  Object o : OMultiValue.getMultiValueIterable(input)) {
    final OrientVertex vertex;
    if (o instanceof OrientVertex)     vertex=(OrientVertex)o;
 else     if (o instanceof OIdentifiable)     vertex=pipeline.getGraphDatabase().getVertex(o);
 else     throw new OTransformException(getName() + ": input type '" + o+ "' is not supported");
    final Object joinCurrentValue=joinValue != null ? joinValue : vertex.getProperty(joinFieldName);
    if (OMultiValue.isMultiValue(joinCurrentValue)) {
      for (      Object ob : OMultiValue.getMultiValueIterable(joinCurrentValue)) {
        final Object r=lookup(ob,true);
        if (createEdge(vertex,ob,r) == null) {
          if (unresolvedLinkAction == ACTION.SKIP)           return null;
        }
      }
    }
 else {
      final Object result=lookup(joinCurrentValue,true);
      if (createEdge(vertex,joinCurrentValue,result) == null) {
        if (unresolvedLinkAction == ACTION.SKIP)         return null;
      }
    }
  }
  return input;
}
