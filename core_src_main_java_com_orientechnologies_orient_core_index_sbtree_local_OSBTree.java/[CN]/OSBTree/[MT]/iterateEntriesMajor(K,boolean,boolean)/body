{
  startOperation();
  try {
    atomicOperationsManager.acquireReadLock(this);
    try {
      acquireSharedLock();
      try {
        OAtomicOperation atomicOperation=atomicOperationsManager.getCurrentOperation();
        if (ascSortOrder)         return iterateEntriesMajorAsc(key,inclusive,atomicOperation);
        return iterateEntriesMajorDesc(key,inclusive,atomicOperation);
      }
  finally {
        releaseSharedLock();
      }
    }
 catch (    IOException ioe) {
      throw OException.wrapException(new OSBTreeException("Error during iteration of major values for key " + key + " in sbtree "+ getName(),this),ioe);
    }
 finally {
      atomicOperationsManager.releaseReadLock(this);
    }
  }
  finally {
    completeOperation();
  }
}
