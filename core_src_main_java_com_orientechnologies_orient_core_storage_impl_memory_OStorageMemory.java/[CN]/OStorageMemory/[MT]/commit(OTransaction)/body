{
  lock.acquireExclusiveLock();
  try {
    final List<OTransactionRecordEntry> allEntries=new ArrayList<OTransactionRecordEntry>();
    final List<OTransactionRecordEntry> tmpEntries=new ArrayList<OTransactionRecordEntry>();
    while (iTx.getRecordEntries().iterator().hasNext()) {
      for (      OTransactionRecordEntry txEntry : iTx.getRecordEntries())       tmpEntries.add(txEntry);
      iTx.clearRecordEntries();
      for (      OTransactionRecordEntry txEntry : tmpEntries)       commitEntry(((OTransaction)iTx).getId(),txEntry);
      allEntries.addAll(tmpEntries);
      tmpEntries.clear();
    }
    OTransactionAbstract.updateCacheFromEntries(this,iTx,allEntries,true);
    allEntries.clear();
  }
 catch (  IOException e) {
    rollback(iTx);
  }
 finally {
    lock.releaseExclusiveLock();
  }
}
