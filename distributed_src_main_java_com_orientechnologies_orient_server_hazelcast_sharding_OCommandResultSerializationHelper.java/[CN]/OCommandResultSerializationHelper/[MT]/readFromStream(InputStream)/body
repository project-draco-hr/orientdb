{
  final byte type=(byte)stream.read();
switch (type) {
case 'n':
{
      return null;
    }
case 'r':
{
    return readIdentifiable(stream);
  }
case 'l':
{
  final int size=OBinaryProtocol.bytes2int(stream);
  final List<OIdentifiable> result=new ArrayList<OIdentifiable>(size);
  for (int i=0; i < size; i++) {
    result.add(readIdentifiable(stream));
  }
  return result;
}
case 'i':
{
return OBinaryProtocol.bytes2int(stream);
}
case 'a':
{
final int len=OBinaryProtocol.bytes2int(stream);
final byte[] bytes=readFully(stream,0,len);
final String value=new String(bytes);
return ORecordSerializerStringAbstract.fieldTypeFromStream(null,ORecordSerializerStringAbstract.getType(value),value);
}
}
return null;
}
