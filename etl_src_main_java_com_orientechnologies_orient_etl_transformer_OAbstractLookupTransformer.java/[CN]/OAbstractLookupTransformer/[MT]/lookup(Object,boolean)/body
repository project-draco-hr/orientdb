{
  Object result=null;
  if (joinValue != null) {
    if (sqlQuery == null && index == null) {
      if (lookup.toUpperCase().startsWith("SELECT"))       sqlQuery=new OSQLSynchQuery<ODocument>(lookup);
 else {
        index=pipeline.getDocumentDatabase().getMetadata().getIndexManager().getIndex(lookup);
        if (index == null) {
          log(OETLProcessor.LOG_LEVELS.DEBUG,"WARNING: index %s not found. Lookups could be really slow",lookup);
          final String[] parts=lookup.split("\\.");
          sqlQuery=new OSQLSynchQuery<ODocument>("SELECT FROM " + parts[0] + " WHERE "+ parts[1]+ " = ?");
        }
      }
    }
    if (index != null) {
      final OType idxFieldType=index.getDefinition().getTypes()[0];
      joinValue=OType.convert(joinValue,idxFieldType.getDefaultJavaType());
      result=index.get(joinValue);
    }
 else {
      if (sqlQuery instanceof OSQLSynchQuery)       ((OSQLSynchQuery)sqlQuery).resetPagination();
      result=pipeline.getDocumentDatabase().query(sqlQuery,joinValue);
    }
    if (result != null && result instanceof Collection) {
      final Collection coll=(Collection)result;
      if (!coll.isEmpty()) {
        if (iReturnRIDS) {
          final List<ORID> resultRIDs=new ArrayList<ORID>(coll.size());
          for (          Object o : coll) {
            if (o instanceof OIdentifiable)             resultRIDs.add(((OIdentifiable)o).getIdentity());
          }
          result=resultRIDs;
        }
      }
 else       result=null;
    }
 else     if (result instanceof OIdentifiable) {
      if (iReturnRIDS)       result=((OIdentifiable)result).getIdentity();
 else       result=((OIdentifiable)result).getRecord();
    }
  }
  return result;
}
