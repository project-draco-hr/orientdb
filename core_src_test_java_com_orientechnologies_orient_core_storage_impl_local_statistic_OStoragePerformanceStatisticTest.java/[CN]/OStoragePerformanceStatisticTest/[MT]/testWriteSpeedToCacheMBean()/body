{
  final OStoragePerformanceStatistic storagePerformanceStatistic=new OStoragePerformanceStatistic(1024,"test",1,new OStoragePerformanceStatistic.NanoTimer(){
    private long counter=0;
    @Override public long getNano(){
      return counter+=100;
    }
  }
);
  storagePerformanceStatistic.registerMBean();
  final MBeanServer mbs=ManagementFactory.getPlatformMBeanServer();
  final ObjectName objectName=new ObjectName("com.orientechnologies.orient.core.storage.impl.local." + "statistic:type=OStoragePerformanceStatisticMXBean,name=test,id=1");
  Assert.assertTrue(mbs.isRegistered(objectName));
  storagePerformanceStatistic.registerMBean();
  final OStoragePerformanceStatisticMXBean mxBean=MBeanServerInvocationHandler.newProxyInstance(mbs,objectName,OStoragePerformanceStatisticMXBean.class,false);
  Assert.assertFalse(mxBean.isMeasurementEnabled());
  Assert.assertEquals(mxBean.getWriteSpeedInCacheInPages(),-1);
  Assert.assertEquals(mxBean.getWriteSpeedInCacheInMB(),-1);
  Assert.assertEquals(mxBean.getAmountOfPagesWrittenToCache(),0);
  mxBean.startMeasurement();
  storagePerformanceStatistic.startCommitTimer();
  for (int i=0; i < 100; i++) {
    storagePerformanceStatistic.startPageWriteToCacheTimer();
    storagePerformanceStatistic.stopPageWriteToCacheTimer();
  }
  storagePerformanceStatistic.stopCommitTimer();
  Thread.sleep(2000);
  Assert.assertEquals(mxBean.getWriteSpeedInCacheInPages(),10000000);
  Assert.assertEquals(mxBean.getWriteSpeedInCacheInMB(),10000000 / 1024);
  Assert.assertEquals(mxBean.getAmountOfPagesWrittenToCache(),100);
  mxBean.stopMeasurement();
  for (int i=0; i < 100; i++) {
    storagePerformanceStatistic.startPageWriteToCacheTimer();
    storagePerformanceStatistic.stopPageWriteToCacheTimer();
  }
  Thread.sleep(2000);
  Assert.assertEquals(mxBean.getWriteSpeedInCacheInPages(),10000000);
  Assert.assertEquals(mxBean.getWriteSpeedInCacheInMB(),10000000 / 1024);
  Assert.assertEquals(mxBean.getAmountOfPagesWrittenToCache(),100);
  Assert.assertFalse(mxBean.isMeasurementEnabled());
  storagePerformanceStatistic.unregisterMBean();
  Assert.assertFalse(mbs.isRegistered(objectName));
  storagePerformanceStatistic.unregisterMBean();
}
