{
  if (!enabled)   return;
  OLogManager.instance().warn(this,"Shutting down node %s...",nodeName);
  super.shutdown();
  setNodeStatus(NODE_STATUS.SHUTTINGDOWN);
  try {
    final Set<String> databases=new HashSet<String>();
    for (    Map.Entry<String,Object> entry : getConfigurationMap().entrySet()) {
      if (entry.getKey().toString().startsWith(CONFIG_DBSTATUS_PREFIX)) {
        final String nodeDb=entry.getKey().toString().substring(CONFIG_DBSTATUS_PREFIX.length());
        if (nodeDb.startsWith(nodeName))         databases.add(entry.getKey());
      }
    }
    for (    String k : databases)     getConfigurationMap().put(k,DB_STATUS.OFFLINE);
  }
 catch (  HazelcastInstanceNotActiveException e) {
  }
  for (  ORemoteServerController server : remoteServers.values())   server.close();
  remoteServers.clear();
  if (publishLocalNodeConfigurationTask != null)   publishLocalNodeConfigurationTask.cancel();
  if (messageService != null)   messageService.shutdown();
  activeNodes.clear();
  if (membershipListenerRegistration != null) {
    try {
      hazelcastInstance.getCluster().removeMembershipListener(membershipListenerRegistration);
    }
 catch (    HazelcastInstanceNotActiveException e) {
    }
  }
  if (hazelcastInstance != null)   try {
    hazelcastInstance.shutdown();
  }
 catch (  Exception e) {
    OLogManager.instance().error(this,"Error on shutting down Hazelcast instance",e);
  }
 finally {
    hazelcastInstance=null;
  }
  setNodeStatus(NODE_STATUS.OFFLINE);
}
