{
  if (oldRid.equals(newRid))   return;
  final ORecordOperation rec=getRecordEntry(oldRid);
  if (rec != null) {
    if (allEntries.remove(oldRid) != null)     allEntries.put(newRid,rec);
    if (recordEntries.remove(oldRid) != null)     recordEntries.put(newRid,rec);
    if (!rec.getRecord().getIdentity().equals(newRid)) {
      ORecordInternal.onBeforeIdentityChanged(rec.getRecord());
      final ORecordId recordId=(ORecordId)rec.getRecord().getIdentity();
      if (recordId == null) {
        ORecordInternal.setIdentity(rec.getRecord(),new ORecordId(newRid));
      }
 else {
        recordId.clusterPosition=newRid.getClusterPosition();
        recordId.clusterId=newRid.getClusterId();
      }
      ORecordInternal.onAfterIdentityChanged(rec.getRecord());
    }
  }
  final List<OTransactionRecordIndexOperation> transactionIndexOperations=recordIndexOperations.get(oldRid);
  if (transactionIndexOperations != null) {
    for (    final OTransactionRecordIndexOperation indexOperation : transactionIndexOperations) {
      OTransactionIndexChanges indexEntryChanges=indexEntries.get(indexOperation.index);
      if (indexEntryChanges == null)       continue;
      final OTransactionIndexChangesPerKey changesPerKey=indexEntryChanges.getChangesPerKey(indexOperation.key);
      updateChangesIdentity(oldRid,newRid,changesPerKey);
    }
  }
}
