{
  checkOpeness();
  if (!(iRecord instanceof ODocument)) {
    int clusterId=iRecord.getIdentity().getClusterId();
    if (iRecord instanceof OBlob) {
      if (clusterId == ORID.CLUSTER_ID_INVALID && iClusterName != null) {
        clusterId=getClusterIdByName(iClusterName);
      }
      if (clusterId == ORID.CLUSTER_ID_INVALID && storage.isAssigningClusterIds()) {
        clusterId=getClusterIdByName("blob");
      }
      if (clusterId != ORID.CLUSTER_ID_INVALID) {
        Set<Integer> blobClusters=getMetadata().getSchema().getBlobClusters();
        if (!blobClusters.contains(clusterId) && clusterId != 0) {
          if (iClusterName == null)           iClusterName=getClusterNameById(clusterId);
          throw new IllegalArgumentException("Cluster name '" + iClusterName + "' (id="+ clusterId+ ") is not configured to store blobs, valid are "+ blobClusters.toString());
        }
        ((ORecordId)iRecord.getIdentity()).clusterId=clusterId;
      }
    }
    return (RET)currentTx.saveRecord(iRecord,iClusterName,iMode,iForceCreate,iRecordCreatedCallback,iRecordUpdatedCallback);
  }
  ODocument doc=(ODocument)iRecord;
  ODocumentInternal.checkClass(doc,this);
  if (!getTransaction().isActive() && !storage.isRemote())   doc.validate();
  ODocumentInternal.convertAllMultiValuesToTrackedVersions(doc);
  if (iForceCreate || !doc.getIdentity().isValid()) {
    if (doc.getClassName() != null)     checkSecurity(ORule.ResourceGeneric.CLASS,ORole.PERMISSION_CREATE,doc.getClassName());
    assignAndCheckCluster(doc,iClusterName);
  }
 else {
    if (doc.getClassName() != null)     checkSecurity(ORule.ResourceGeneric.CLASS,ORole.PERMISSION_UPDATE,doc.getClassName());
  }
  doc=(ODocument)currentTx.saveRecord(iRecord,iClusterName,iMode,iForceCreate,iRecordCreatedCallback,iRecordUpdatedCallback);
  return (RET)doc;
}
