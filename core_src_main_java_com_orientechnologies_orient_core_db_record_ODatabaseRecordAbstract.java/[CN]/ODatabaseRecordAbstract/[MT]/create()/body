{
  setCurrentDatabaseinThreadLocal();
  try {
    super.create();
    sbTreeCollectionManager.startup();
    level1Cache.startup();
    getStorage().getConfiguration().update();
    if (!(getStorage() instanceof OStorageProxy)) {
      registerHook(new OClassTrigger(),ORecordHook.HOOK_POSITION.FIRST);
      registerHook(new ORestrictedAccessHook(),ORecordHook.HOOK_POSITION.FIRST);
      registerHook(new OUserTrigger(),ORecordHook.HOOK_POSITION.EARLY);
      registerHook(new OFunctionTrigger(),ORecordHook.HOOK_POSITION.REGULAR);
      registerHook(new OClassIndexManager(),ORecordHook.HOOK_POSITION.LAST);
      registerHook(new OSchedulerTrigger(),ORecordHook.HOOK_POSITION.LAST);
    }
    metadata=new OMetadataDefault();
    metadata.create();
    user=getMetadata().getSecurity().getUser(OUser.ADMIN);
    if (!metadata.getSchema().existsClass(OMVRBTreeRIDProvider.PERSISTENT_CLASS_NAME))     metadata.getSchema().createClass(OMVRBTreeRIDProvider.PERSISTENT_CLASS_NAME);
  }
 catch (  Exception e) {
    throw new ODatabaseException("Cannot create database",e);
  }
  return (DB)this;
}
