{
  for (Class<?> currentClass=iClass; currentClass != Object.class; ) {
    for (    Field f : currentClass.getDeclaredFields()) {
      if (f.getName().equals("this$0"))       continue;
      if (!f.isAccessible()) {
        f.setAccessible(true);
      }
      Object o=f.get(iInstance);
      if (o != null) {
        if (OObjectEntitySerializer.isSerializedType(f)) {
          if (o instanceof List<?>) {
            List<?> list=new ArrayList();
            iDocument.field(f.getName(),list);
            o=new OObjectCustomSerializerList(OObjectEntitySerializer.getSerializedType(f),iDocument,list,(List<?>)o);
            f.set(iInstance,o);
          }
 else           if (o instanceof Set<?>) {
            Set<?> set=new HashSet();
            iDocument.field(f.getName(),set);
            o=new OObjectCustomSerializerSet(OObjectEntitySerializer.getSerializedType(f),iDocument,set,(Set<?>)o);
            f.set(iInstance,o);
          }
 else           if (o instanceof Map<?,?>) {
            Map<?,?> map=new HashMap();
            iDocument.field(f.getName(),map);
            o=new OObjectCustomSerializerMap(OObjectEntitySerializer.getSerializedType(f),iDocument,map,(Map<?,?>)o);
            f.set(iInstance,o);
          }
 else {
            o=OObjectEntitySerializer.serializeFieldValue(o.getClass(),o);
            iDocument.field(f.getName(),o);
          }
        }
 else {
          iDocument.field(f.getName(),OObjectEntitySerializer.typeToStream(o,OType.getTypeByClass(f.getType()),db,iDocument));
        }
      }
    }
    currentClass=currentClass.getSuperclass();
  }
}
