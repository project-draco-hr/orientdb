{
  if (!getNodeSource().equals(iManager.getLocalNodeName())) {
    if (database == null)     throw new ODistributedException("Database instance is null");
    final String databaseName=database.getName();
    final ODistributedConfiguration dCfg=iManager.getDatabaseConfiguration(databaseName);
    if (!clusterName.equalsIgnoreCase(dCfg.getMasterServer(clusterName)))     return Boolean.FALSE;
    final Long lastDeployment=(Long)iManager.getConfigurationMap().get(DEPLOYCLUSTER + databaseName + "."+ clusterName);
    if (lastDeployment != null && lastDeployment.longValue() == random) {
      ODistributedServerLog.debug(this,iManager.getLocalNodeName(),getNodeSource(),DIRECTION.NONE,"skip deploying cluster '%s' because already executed",clusterName);
      return Boolean.FALSE;
    }
    iManager.getConfigurationMap().put(DEPLOYCLUSTER + databaseName + "."+ clusterName,random);
    ODistributedServerLog.warn(this,iManager.getLocalNodeName(),getNodeSource(),DIRECTION.OUT,"deploying cluster %s...",databaseName);
    final File f=new File(Orient.getTempPath() + "/backup_" + database.getName()+ "_"+ clusterName+ ".zip");
    if (f.exists())     f.delete();
 else     f.getParentFile().mkdirs();
    f.createNewFile();
    ODistributedServerLog.info(this,iManager.getLocalNodeName(),getNodeSource(),DIRECTION.OUT,"creating backup of cluster '%s' in directory: %s...",databaseName,f.getAbsolutePath());
    final AtomicLong lastOperationId=new AtomicLong(-1);
    FileOutputStream fileOutputStream=new FileOutputStream(f);
    try {
      final OCluster cluster=database.getStorage().getClusterByName(clusterName);
      final long fileSize=f.length();
      ODistributedServerLog.info(this,iManager.getLocalNodeName(),getNodeSource(),DIRECTION.OUT,"sending the compressed cluster '%s.%s' over the NETWORK to node '%s', size=%s, lastOperationId=%d...",databaseName,clusterName,getNodeSource(),OFileUtils.getSizeAsString(fileSize),lastOperationId.get());
      final ODistributedDatabaseChunk chunk=new ODistributedDatabaseChunk(lastOperationId.get(),f,0,CHUNK_MAX_SIZE);
      ODistributedServerLog.info(this,iManager.getLocalNodeName(),getNodeSource(),DIRECTION.OUT,"- transferring chunk #%d offset=%d size=%s...",1,0,OFileUtils.getSizeAsNumber(chunk.buffer.length));
      if (chunk.last)       iManager.setDatabaseStatus(iManager.getLocalNodeName(),databaseName,ODistributedServerManager.DB_STATUS.ONLINE);
      return chunk;
    }
  finally {
      fileOutputStream.close();
    }
  }
 else   ODistributedServerLog.debug(this,iManager.getLocalNodeName(),getNodeSource(),DIRECTION.NONE,"skip deploying cluster %s.%s from the same node");
  return Boolean.FALSE;
}
