{
  List<MatchContext> childContexts=new ArrayList<MatchContext>();
  if (pattern.getNumOfEdges() == matchContext.matchedEdges.size()) {
    addResult(matchContext,result);
    return;
  }
  PatternNode rootNode=pattern.get(matchContext.root);
  Iterator<PatternEdge> edgeIterator=rootNode.out.iterator();
  if (edgeIterator.hasNext()) {
    PatternEdge outEdge=edgeIterator.next();
    edgeIterator.remove();
    if (!matchContext.matchedEdges.containsKey(outEdge)) {
      Object rightValues=executeTraversal(matchContext,iCommandContext,outEdge);
      if (!(rightValues instanceof Iterable)) {
        rightValues=Collections.singleton(rightValues);
      }
      for (      OIdentifiable rightValue : (Iterable<OIdentifiable>)rightValues) {
        Iterable<OIdentifiable> prevMatchedRightValues=matchContext.candidates.get(outEdge.in.alias);
        if (prevMatchedRightValues.iterator().hasNext()) {
          for (          OIdentifiable id : prevMatchedRightValues) {
            if (id.getIdentity().equals(rightValue.getIdentity())) {
              MatchContext childContext=matchContext.copy(outEdge.in.alias,id);
              if (edgeIterator.hasNext()) {
                childContext.root=rootNode.alias;
              }
              childContext.matchedEdges.put(outEdge,true);
              childContexts.add(childContext);
            }
          }
        }
 else {
          OWhereClause where=aliasFilters.get(outEdge.in.alias);
          if (where == null || where.matchesFilters(rightValue)) {
            MatchContext childContext=matchContext.copy(outEdge.in.alias,rightValue.getIdentity());
            if (edgeIterator.hasNext()) {
              childContext.root=rootNode.alias;
            }
            childContext.matchedEdges.put(outEdge,true);
            childContexts.add(childContext);
          }
        }
      }
    }
  }
 else {
    edgeIterator=rootNode.in.iterator();
    while (edgeIterator.hasNext()) {
      PatternEdge inEdge=edgeIterator.next();
      while (!inEdge.item.isBidirectional()) {
        continue;
      }
      edgeIterator.remove();
      if (!matchContext.matchedEdges.containsKey(inEdge)) {
        Object leftValues=inEdge.item.method.executeReverse(matchContext.matched.get(matchContext.root),iCommandContext);
        if (!(leftValues instanceof Iterable)) {
          leftValues=Collections.singleton(leftValues);
        }
        for (        OIdentifiable leftValue : (Iterable<OIdentifiable>)leftValues) {
          Iterable<OIdentifiable> prevMatchedRightValues=matchContext.candidates.get(inEdge.out.alias);
          if (prevMatchedRightValues.iterator().hasNext()) {
            for (            OIdentifiable id : prevMatchedRightValues) {
              if (id.getIdentity().equals(leftValue.getIdentity())) {
                MatchContext childContext=matchContext.copy(inEdge.out.alias,id);
                if (edgeIterator.hasNext()) {
                  childContext.root=rootNode.alias;
                }
                childContext.matchedEdges.put(inEdge,true);
                childContexts.add(childContext);
              }
            }
          }
 else {
            OWhereClause where=aliasFilters.get(inEdge.out.alias);
            if (where == null || where.matchesFilters(leftValue)) {
              MatchContext childContext=matchContext.copy(inEdge.out.alias,leftValue.getIdentity());
              if (edgeIterator.hasNext()) {
                childContext.root=rootNode.alias;
              }
              childContext.matchedEdges.put(inEdge,true);
              childContexts.add(childContext);
            }
          }
        }
      }
      break;
    }
  }
  while (!childContexts.isEmpty()) {
    processContext(pattern,estimatedRootEntries,childContexts.remove(0),aliasClasses,aliasFilters,result,iCommandContext);
  }
}
