{
  ORemoteServerController remoteServer=remoteServers.get(rNodeName);
  if (remoteServer == null) {
    final Member member=activeNodes.get(rNodeName);
    if (member == null)     throw new ODistributedException("Cannot find node '" + rNodeName + "'");
    final ODocument cfg=getNodeConfigurationByUuid(member.getUuid());
    final Collection<Map<String,Object>> listeners=(Collection<Map<String,Object>>)cfg.field("listeners");
    if (listeners == null)     throw new ODatabaseException("Cannot connect to a remote node because bad distributed configuration: missing 'listeners' array field");
    String url=null;
    for (    Map<String,Object> listener : listeners) {
      if (((String)listener.get("protocol")).equals("ONetworkProtocolBinary")) {
        url=(String)listener.get("listen");
        break;
      }
    }
    if (url == null)     throw new ODatabaseException("Cannot connect to a remote node because the url was not found");
    final String userPassword=cfg.field("user_replicator");
    remoteServer=new ORemoteServerController(this,rNodeName,url,REPLICATOR_USER,userPassword);
    final ORemoteServerController old=remoteServers.putIfAbsent(rNodeName,remoteServer);
    if (old != null) {
      remoteServer.close();
      remoteServer=old;
    }
  }
  return remoteServer;
}
