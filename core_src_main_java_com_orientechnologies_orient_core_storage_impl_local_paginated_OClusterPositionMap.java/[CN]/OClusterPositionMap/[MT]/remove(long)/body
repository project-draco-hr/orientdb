{
  OAtomicOperation atomicOperation=startAtomicOperation();
  acquireExclusiveLock();
  try {
    long pageIndex=clusterPosition / OClusterPositionMapBucket.MAX_ENTRIES;
    int index=(int)(clusterPosition % OClusterPositionMapBucket.MAX_ENTRIES);
    final OCacheEntry cacheEntry=loadPage(atomicOperation,fileId,pageIndex,false,1);
    cacheEntry.acquireExclusiveLock();
    try {
      final OClusterPositionMapBucket bucket=new OClusterPositionMapBucket(cacheEntry,getChangesTree(atomicOperation,cacheEntry));
      OClusterPositionMapBucket.PositionEntry positionEntry=bucket.remove(index);
      if (positionEntry == null) {
        endAtomicOperation(false,null);
        return null;
      }
      endAtomicOperation(false,null);
      return positionEntry;
    }
 catch (    Exception e) {
      endAtomicOperation(true,e);
      throw OException.wrapException(new OClusterPositionMapException("Error during removal of mapping between logical and physical record position",this),e);
    }
 finally {
      cacheEntry.releaseExclusiveLock();
      releasePage(atomicOperation,cacheEntry);
    }
  }
  finally {
    releaseExclusiveLock();
  }
}
