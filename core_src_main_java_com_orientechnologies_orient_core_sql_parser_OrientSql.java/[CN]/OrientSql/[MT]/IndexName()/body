{
  OIndexName jjtn000=new OIndexName(JJTINDEXNAME);
  boolean jjtc000=true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
  StringBuilder builder=new StringBuilder();
  Token token;
  OIdentifier lastIdentifier;
  try {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case 201:
      jj_consume_token(201);
    builder.append("__@recordmap@___");
  break;
default :
jj_la1[174]=jj_gen;
;
}
lastIdentifier=Identifier();
builder.append(lastIdentifier.getValue());
label_30: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case DOT:
case MINUS:
;
break;
default :
jj_la1[175]=jj_gen;
break label_30;
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case DOT:
jj_consume_token(DOT);
builder.append(".");
break;
case MINUS:
jj_consume_token(MINUS);
builder.append("-");
break;
default :
jj_la1[176]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
lastIdentifier=Identifier();
builder.append(lastIdentifier.getValue());
}
jjtree.closeNodeScope(jjtn000,true);
jjtc000=false;
jjtn000.jjtSetLastToken(getToken(0));
jjtn000.value=builder.toString();
{
if (true) return jjtn000;
}
}
 catch (Throwable jjte000) {
if (jjtc000) {
jjtree.clearNodeScope(jjtn000);
jjtc000=false;
}
 else {
jjtree.popNode();
}
if (jjte000 instanceof RuntimeException) {
{
if (true) throw (RuntimeException)jjte000;
}
}
if (jjte000 instanceof ParseException) {
{
if (true) throw (ParseException)jjte000;
}
}
{
if (true) throw (Error)jjte000;
}
}
 finally {
if (jjtc000) {
jjtree.closeNodeScope(jjtn000,true);
jjtn000.jjtSetLastToken(getToken(0));
}
}
throw new Error("Missing return statement in function");
}
