{
  previousPos=currentPos;
  parserLastWord.setLength(0);
  parserSkipWhiteSpaces();
  if (currentPos == -1)   return;
  char stringBeginChar=' ';
  final String text2Use=iForceUpperCase ? textUpperCase : text;
  while (currentPos < text2Use.length()) {
    final char c=text2Use.charAt(currentPos);
    boolean found=false;
    for (int sepIndex=0; sepIndex < iSeparatorChars.length(); ++sepIndex) {
      if (iSeparatorChars.charAt(sepIndex) == c) {
        found=true;
        break;
      }
    }
    if (!found)     break;
    currentPos++;
  }
  try {
    while (currentPos < text2Use.length()) {
      final char c=text2Use.charAt(currentPos);
      if (c == '\'' || c == '"') {
        if (stringBeginChar != ' ') {
          if (stringBeginChar == c) {
            stringBeginChar=' ';
          }
        }
 else {
          stringBeginChar=c;
        }
      }
 else       if (stringBeginChar == ' ') {
        for (int sepIndex=0; sepIndex < iSeparatorChars.length(); ++sepIndex) {
          if (iSeparatorChars.charAt(sepIndex) == c && parserLastWord.length() > 0) {
            parserLastSeparator=c;
            return;
          }
        }
      }
      parserLastWord.append(c);
      currentPos++;
    }
    parserLastSeparator=' ';
  }
  finally {
    if (currentPos >= text2Use.length())     currentPos=-1;
  }
}
