{
  if (_source == null)   return true;
  if (iFields != null && iFields.length > 0) {
    for (int i=0; i < iFields.length; ++i) {
      final String f=iFields[i];
      if (f != null && !f.startsWith("@")) {
        int pos1=f.indexOf('[');
        int pos2=f.indexOf('.');
        if (pos1 > -1 || pos2 > -1) {
          int pos=pos1 > -1 ? pos1 : pos2;
          if (pos2 > -1 && pos2 < pos)           pos=pos2;
          iFields[i]=f.substring(0,pos);
        }
      }
    }
    if (_fields != null && !_fields.isEmpty()) {
      boolean allFound=true;
      for (      String f : iFields)       if (!f.startsWith("@") && !_fields.containsKey(f)) {
        allFound=false;
        break;
      }
      if (allFound)       return true;
    }
  }
  if (_recordFormat == null)   setup();
  _status=ORecordElement.STATUS.UNMARSHALLING;
  try {
    _recordFormat.fromStream(_source,this,iFields);
  }
  finally {
    _status=ORecordElement.STATUS.LOADED;
  }
  if (iFields != null && iFields.length > 0) {
    for (    String field : iFields) {
      if (field != null && field.startsWith("@"))       return true;
    }
    if (_fields != null && !_fields.isEmpty())     for (    String f : iFields)     if (f != null && _fields.containsKey(f))     return true;
    return false;
  }
 else   if (_source != null)   _source=null;
  return true;
}
