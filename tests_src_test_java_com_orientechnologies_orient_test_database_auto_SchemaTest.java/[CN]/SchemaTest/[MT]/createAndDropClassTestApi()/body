{
  database=new ODatabaseFlat(url);
  database.open("admin","admin");
  final String testClassName="dropTestClass";
  final int clusterId;
  OClass dropTestClass=database.getMetadata().getSchema().createClass(testClassName);
  clusterId=dropTestClass.getDefaultClusterId();
  database.getMetadata().getSchema().reload();
  dropTestClass=database.getMetadata().getSchema().getClass(testClassName);
  Assert.assertNotNull(dropTestClass);
  Assert.assertEquals(database.getStorage().getClusterIdByName(testClassName),clusterId);
  Assert.assertNotNull(database.getClusterNameById(clusterId));
  database.close();
  database=null;
  database=new ODatabaseFlat(url);
  database.open("admin","admin");
  dropTestClass=database.getMetadata().getSchema().getClass(testClassName);
  Assert.assertNotNull(dropTestClass);
  Assert.assertEquals(database.getStorage().getClusterIdByName(testClassName),clusterId);
  Assert.assertNotNull(database.getClusterNameById(clusterId));
  database.getMetadata().getSchema().dropClass(testClassName);
  database.getMetadata().getSchema().reload();
  dropTestClass=database.getMetadata().getSchema().getClass(testClassName);
  Assert.assertNull(dropTestClass);
  Assert.assertEquals(database.getStorage().getClusterIdByName(testClassName),-1);
  Assert.assertNull(database.getClusterNameById(clusterId));
  database.close();
  database=new ODatabaseFlat(url);
  database.open("admin","admin");
  dropTestClass=database.getMetadata().getSchema().getClass(testClassName);
  Assert.assertNull(dropTestClass);
  Assert.assertEquals(database.getStorage().getClusterIdByName(testClassName),-1);
  Assert.assertNull(database.getClusterNameById(clusterId));
  database.close();
}
