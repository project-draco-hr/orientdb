{
  final List<Object> keys=compositeKey.getKeys();
  final int keysSize=keys.size();
  final long oldStartOffset=offset;
  offset+=OIntegerSerializer.INT_SIZE;
  pointer.setInt(offset,keysSize);
  offset+=OIntegerSerializer.INT_SIZE;
  final OBinarySerializerFactory factory=OBinarySerializerFactory.INSTANCE;
  for (  final Object key : keys) {
    final OType type=OType.getTypeByClass(key.getClass());
    @SuppressWarnings("unchecked") OBinarySerializer<Object> binarySerializer=(OBinarySerializer<Object>)factory.getObjectSerializer(type);
    pointer.setByte(offset,binarySerializer.getId());
    offset+=OBinarySerializerFactory.TYPE_IDENTIFIER_SIZE;
    binarySerializer.serializeInDirectMemory(key,pointer,offset);
    offset+=binarySerializer.getObjectSize(key);
  }
  pointer.setInt(oldStartOffset,(int)(offset - oldStartOffset));
}
