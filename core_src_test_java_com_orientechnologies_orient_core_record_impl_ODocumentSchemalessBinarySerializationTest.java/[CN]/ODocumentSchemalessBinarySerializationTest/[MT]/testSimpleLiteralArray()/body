{
  ODocument document=new ODocument();
  String[] strings=new String[3];
  strings[0]="a";
  strings[1]="b";
  strings[2]="c";
  document.field("listStrings",strings);
  Short[] shorts=new Short[3];
  shorts[0]=(short)1;
  shorts[1]=(short)2;
  shorts[2]=(short)3;
  document.field("shorts",shorts);
  Long[] longs=new Long[3];
  longs[0]=(long)1;
  longs[1]=(long)2;
  longs[2]=(long)3;
  document.field("longs",longs);
  Integer[] ints=new Integer[3];
  ints[0]=1;
  ints[1]=2;
  ints[2]=3;
  document.field("integers",ints);
  Float[] floats=new Float[3];
  floats[0]=1.1f;
  floats[1]=2.2f;
  floats[2]=3.3f;
  document.field("floats",floats);
  Double[] doubles=new Double[3];
  doubles[0]=1.1d;
  doubles[1]=2.2d;
  doubles[2]=3.3d;
  document.field("doubles",doubles);
  Date[] dates=new Date[3];
  dates[0]=new Date();
  dates[1]=new Date();
  dates[2]=new Date();
  document.field("dates",dates);
  Byte[] bytes=new Byte[3];
  bytes[0]=(byte)0;
  bytes[1]=(byte)1;
  bytes[2]=(byte)3;
  document.field("bytes",bytes);
  Character[] chars=new Character[3];
  chars[0]='A';
  chars[1]='B';
  chars[2]='C';
  Boolean[] booleans=new Boolean[3];
  booleans[0]=true;
  booleans[1]=false;
  booleans[2]=false;
  document.field("booleans",booleans);
  Object[] arrayNulls=new Object[3];
  byte[] res=serializer.toStream(document,false);
  ODocument extr=(ODocument)serializer.fromStream(res,new ODocument(),new String[]{});
  assertEquals(extr.fields(),document.fields());
  assertEquals(((List)extr.field("listStrings")).toArray(),document.field("listStrings"));
  assertEquals(((List)extr.field("integers")).toArray(),document.field("integers"));
  assertEquals(((List)extr.field("doubles")).toArray(),document.field("doubles"));
  assertEquals(((List)extr.field("dates")).toArray(),document.field("dates"));
  assertEquals(((List)extr.field("bytes")).toArray(),document.field("bytes"));
  assertEquals(((List)extr.field("booleans")).toArray(),document.field("booleans"));
}
