{
  if (iAttribute == null)   throw new IllegalArgumentException("attribute is null");
  final String stringValue=iValue != null ? iValue.toString() : null;
switch (iAttribute) {
case STATUS:
    setStatus(STATUS.valueOf(stringValue.toUpperCase(Locale.ENGLISH)));
  break;
case DEFAULTCLUSTERID:
if (iValue != null) {
  if (iValue instanceof Number)   storage.setDefaultClusterId(((Number)iValue).intValue());
 else   storage.setDefaultClusterId(storage.getClusterIdByName(iValue.toString()));
}
break;
case TYPE:
if (stringValue.equalsIgnoreCase("graph")) {
if (getDatabaseOwner() instanceof OGraphDatabase) ((OGraphDatabase)getDatabaseOwner()).checkForGraphSchema();
 else if (getDatabaseOwner() instanceof ODatabaseRecordTx) new OGraphDatabase((ODatabaseRecordTx)getDatabaseOwner()).checkForGraphSchema();
 else new OGraphDatabase(url).checkForGraphSchema();
}
 else throw new IllegalArgumentException("Database type '" + stringValue + "' is not supported");
break;
case DATEFORMAT:
storage.getConfiguration().dateFormat=stringValue;
storage.getConfiguration().update();
break;
case DATETIMEFORMAT:
storage.getConfiguration().dateTimeFormat=stringValue;
storage.getConfiguration().update();
break;
case TIMEZONE:
storage.getConfiguration().setTimeZone(TimeZone.getTimeZone(stringValue.toUpperCase()));
storage.getConfiguration().update();
break;
case LOCALECOUNTRY:
storage.getConfiguration().setLocaleCountry(stringValue);
storage.getConfiguration().update();
break;
case LOCALELANGUAGE:
storage.getConfiguration().setLocaleLanguage(stringValue);
storage.getConfiguration().update();
break;
case CHARSET:
storage.getConfiguration().setCharset(stringValue);
storage.getConfiguration().update();
break;
default :
throw new IllegalArgumentException("Option '" + iAttribute + "' not supported on alter database");
}
return (DB)this;
}
