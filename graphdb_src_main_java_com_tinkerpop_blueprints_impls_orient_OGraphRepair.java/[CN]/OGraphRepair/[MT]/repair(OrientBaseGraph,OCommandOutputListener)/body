{
  message(outputListener,"Repair of graph '" + graph.getRawGraph().getURL() + "' is started ...\n");
  final long beginTime=System.currentTimeMillis();
  final ORepairStats stats=new ORepairStats();
  repairEdges(graph,stats,outputListener);
  repairVertices(graph,stats,outputListener);
  message(outputListener,"Repair of graph '" + graph.getRawGraph().getURL() + "' completed in "+ (System.currentTimeMillis() - beginTime / 1000)+ " secs\n");
  message(outputListener," scannedEdges.....: " + stats.scannedEdges + "\n");
  message(outputListener," removedEdges.....: " + stats.removedEdges + "\n");
  message(outputListener," scannedVertices..: " + stats.scannedVertices + "\n");
  message(outputListener," scannedLinks.....: " + stats.scannedLinks + "\n");
  message(outputListener," removedLinks.....: " + stats.removedLinks + "\n");
  message(outputListener," repairedVertices.: " + stats.repairedVertices + "\n");
}
