{
  final ORID rid=iRecord.getIdentity();
  final ODistributedLock lock=new ODistributedLock(iRequestId);
  ODistributedLock currentLock=lockManager.putIfAbsent(rid,lock);
  if (currentLock != null) {
    if (iRequestId.equals(currentLock.reqId)) {
      ODistributedServerLog.debug(this,localNodeName,null,DIRECTION.NONE,"Distributed transaction: %s locked record %s in database '%s' owned by %s (thread=%d)",iRequestId,iRecord,databaseName,currentLock.reqId,Thread.currentThread().getId());
      currentLock=null;
    }
 else     if (timeout > 0) {
      final long startTime=System.currentTimeMillis();
      do {
        try {
          if (timeout > 0)           currentLock.lock.await(timeout,TimeUnit.MILLISECONDS);
 else           currentLock.lock.await();
          currentLock=lockManager.putIfAbsent(rid,lock);
        }
 catch (        InterruptedException e) {
          Thread.currentThread().interrupt();
          break;
        }
      }
 while (currentLock != null && System.currentTimeMillis() - startTime < timeout);
    }
  }
  if (currentLock != null) {
    final String lockingNodeName=manager.getNodeNameById(currentLock.reqId.getNodeId());
    if (lockingNodeName == null || !manager.isNodeAvailable(lockingNodeName)) {
      ODistributedServerLog.info(this,localNodeName,null,DIRECTION.NONE,"Distributed transaction: forcing unlock of record %s in database '%s' because the owner server '%s' is offline (reqId=%s ownerReqId=%s, thread=%d)",iRecord.getIdentity(),databaseName,iRequestId,currentLock.reqId,Thread.currentThread().getId());
      lockManager.put(rid,lock);
      currentLock=null;
    }
  }
  if (ODistributedServerLog.isDebugEnabled())   if (currentLock == null) {
    ODistributedServerLog.debug(this,localNodeName,null,DIRECTION.NONE,"Distributed transaction: %s locked record %s in database '%s' (thread=%d)",iRequestId,iRecord,databaseName,Thread.currentThread().getId());
  }
 else {
    ODistributedServerLog.debug(this,localNodeName,null,DIRECTION.NONE,"Distributed transaction: %s cannot lock record %s in database '%s' owned by %s (thread=%d)",iRequestId,iRecord,databaseName,currentLock.reqId,Thread.currentThread().getId());
  }
  if (currentLock != null)   throw new ODistributedRecordLockedException(rid,currentLock.reqId,timeout);
}
