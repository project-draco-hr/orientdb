{
synchronized (this) {
    databases.remove(iDatabase.databaseName);
    OLogManager.instance().warn(this,"<-> DB %s: starting replication against distributed node %s:%d",iDatabase.databaseName,networkAddress,networkPort);
    try {
      iDatabase.storage=new ODistributedStorage(replicator,replicator.getManager().getId(),id + "/" + iDatabase.databaseName,"rw",replicator.getConflictResolver());
      iDatabase.storage.open(iDatabase.userName,iDatabase.userPassword,null);
      iDatabase.sessionId=iDatabase.storage.getSessionId();
      databases.put(iDatabase.databaseName,iDatabase);
      status=STATUS.SYNCHRONIZING;
      iDatabase.storage.synchronize(replicator.getDatabaseConfiguration(iDatabase.databaseName));
      status=STATUS.ONLINE;
    }
 catch (    Exception e) {
      databases.remove(iDatabase.databaseName);
      OLogManager.instance().warn(this,"<> DB %s: cannot find database on remote server. Removing it from shared list.",e,iDatabase.databaseName);
    }
  }
}
