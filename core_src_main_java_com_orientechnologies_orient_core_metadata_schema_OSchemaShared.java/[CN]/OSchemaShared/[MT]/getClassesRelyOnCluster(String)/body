{
  getDatabase().checkSecurity(ODatabaseSecurityResources.SCHEMA,ORole.PERMISSION_READ);
  return getDatabase().getStorage().callInLock(new Callable<Set<OClass>>(){
    @Override public Set<OClass> call() throws Exception {
      final int clusterId=getDatabase().getClusterIdByName(iClusterName);
      final Set<OClass> result=new HashSet<OClass>();
      for (      OClass c : classes.values()) {
        if (OArrays.contains(c.getPolymorphicClusterIds(),clusterId))         result.add(c);
      }
      return result;
    }
  }
,false);
}
