{
  final ByteArrayOutputStream tokenByteOS=new ByteArrayOutputStream(1024);
  final OrientJwtHeader header=new OrientJwtHeader();
  header.setAlgorithm("HS256");
  header.setKeyId("");
  final OJwtPayload payload=createPayload(db,user);
  header.setType(getPayloadType(payload));
  try {
    byte[] bytes=serializeWebHeader(header);
    tokenByteOS.write(OBase64Utils.encodeBytesToBytes(bytes,0,bytes.length,OBase64Utils.URL_SAFE));
    tokenByteOS.write(JWT_DELIMITER);
    bytes=serializeWebPayload(payload);
    tokenByteOS.write(OBase64Utils.encodeBytesToBytes(bytes,0,bytes.length,OBase64Utils.URL_SAFE));
    byte[] unsignedToken=tokenByteOS.toByteArray();
    tokenByteOS.write(JWT_DELIMITER);
    bytes=signToken(header,unsignedToken);
    tokenByteOS.write(OBase64Utils.encodeBytesToBytes(bytes,0,bytes.length,OBase64Utils.URL_SAFE));
  }
 catch (  Exception ex) {
    throw new OException("Error on token parsing",ex);
  }
  return tokenByteOS.toByteArray();
}
