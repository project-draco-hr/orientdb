{
  databaseDocumentTx.getMetadata().reload();
  OSchema schema=databaseDocumentTx.getMetadata().getSchema();
  ODocument doc=new ODocument("City");
  doc.field("name","Rome");
  databaseDocumentTx.begin();
  databaseDocumentTx.save(doc);
  databaseDocumentTx.commit();
  OIndex idx=schema.getClass("City").getClassIndex("City.name");
  Collection<?> coll=(Collection<?>)idx.get("Rome");
  Assert.assertEquals(coll.size(),1);
  doc=databaseDocumentTx.load((ORID)coll.iterator().next());
  Assert.assertEquals(doc.field("name"),"Rome");
  databaseDocumentTx.begin();
  doc.field("name","London");
  databaseDocumentTx.save(doc);
  databaseDocumentTx.commit();
  coll=(Collection<?>)idx.get("Rome");
  Assert.assertEquals(coll.size(),0);
  coll=(Collection<?>)idx.get("London");
  Assert.assertEquals(coll.size(),1);
  doc=databaseDocumentTx.load((ORID)coll.iterator().next());
  Assert.assertEquals(doc.field("name"),"London");
  databaseDocumentTx.begin();
  doc.field("name","Berlin");
  databaseDocumentTx.save(doc);
  databaseDocumentTx.commit();
  doc=databaseDocumentTx.load(doc.getIdentity(),null,true);
  Assert.assertEquals(doc.field("name"),"Berlin");
  coll=(Collection<?>)idx.get("Rome");
  Assert.assertEquals(coll.size(),0);
  coll=(Collection<?>)idx.get("London");
  Assert.assertEquals(coll.size(),0);
  coll=(Collection<?>)idx.get("Berlin");
  Assert.assertEquals(idx.getSize(),1);
  Assert.assertEquals(coll.size(),1);
  Thread.sleep(1000);
  kill(false);
  initDB(false);
  doc=databaseDocumentTx.load(doc.getIdentity(),null,true);
  Assert.assertEquals(doc.field("name"),"Berlin");
  schema=databaseDocumentTx.getMetadata().getSchema();
  idx=schema.getClass("City").getClassIndex("City.name");
  Assert.assertEquals(idx.getSize(),1);
  coll=(Collection<?>)idx.get("Rome");
  Assert.assertEquals(coll.size(),0);
  coll=(Collection<?>)idx.get("London");
  Assert.assertEquals(coll.size(),0);
  coll=(Collection<?>)idx.get("Berlin");
  Assert.assertEquals(coll.size(),1);
}
