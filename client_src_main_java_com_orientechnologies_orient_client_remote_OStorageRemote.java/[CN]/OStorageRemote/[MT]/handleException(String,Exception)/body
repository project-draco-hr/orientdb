{
  if (!(iException instanceof IOException))   throw new OStorageException(iMessage,iException);
  if (retry < clientConfiguration.connectionRetry) {
    try {
      Thread.sleep(clientConfiguration.connectionRetryDelay);
    }
 catch (    InterruptedException e) {
    }
    try {
      if (OLogManager.instance().isDebugEnabled())       OLogManager.instance().debug(this,"Retrying to connect to remote server #" + retry + "/"+ clientConfiguration.connectionRetry+ "...");
      openRemoteDatabase();
      retry=0;
      OLogManager.instance().info(this,"Connection re-acquired in transparent way: no errors will be thrown at application level");
      return true;
    }
 catch (    Throwable t) {
      ++retry;
    }
  }
 else {
    retry=0;
    throw new OStorageException(iMessage,iException);
  }
  return false;
}
