{
  final long timer=OProfiler.getInstance().startChrono();
  final Integer identityRecord=System.identityHashCode(record);
  final Set<Integer> marshalledRecords=OSerializationThreadLocal.INSTANCE.get();
  if (marshalledRecords.contains(identityRecord)) {
    return new byte[]{};
  }
 else   marshalledRecords.add(identityRecord);
  try {
    OMemoryOutputStream stream=entryRecordBuffer;
    stream.add(CURRENT_PROTOCOL_VERSION);
    stream.addAsFixed(root != null ? root.toStream() : ORecordId.EMPTY_RECORD_ID_STREAM);
    stream.add(size);
    stream.add(defaultPageSize);
    stream.add(keySerializer.getName());
    stream.add(valueSerializer.getName());
    byte[] result=stream.getByteArray();
    record.fromStream(result);
    return result;
  }
 catch (  IOException e) {
    throw new OSerializationException("Error on marshalling RB+Tree",e);
  }
 finally {
    marshalledRecords.remove(identityRecord);
    OProfiler.getInstance().stopChrono("OMVRBTreePersistent.toStream",timer);
  }
}
