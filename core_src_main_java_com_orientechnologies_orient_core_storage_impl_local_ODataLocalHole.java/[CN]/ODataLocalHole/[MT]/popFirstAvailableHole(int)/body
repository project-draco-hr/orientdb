{
  if (maxHoleSize > -1 && iRecordSize + ODataLocal.RECORD_FIX_SIZE + 50 > maxHoleSize)   return -1;
  final long timer=OProfiler.getInstance().startChrono();
  if (availableHoles.size() > 0) {
    cursor.size=iRecordSize;
    ODataHoleInfo hole=availableHoles.get(cursor);
    if (hole != null && hole.size == iRecordSize) {
      OProfiler.getInstance().stopChrono("Storage.data.recycled.complete",timer);
      final long pos=hole.dataOffset;
      deleteHole(hole.holeOffset);
      return pos;
    }
    hole=availableHoles.lastKey();
    if (hole.size > iRecordSize + ODataLocal.RECORD_FIX_SIZE + 50) {
      final long pos=hole.dataOffset;
      OProfiler.getInstance().stopChrono("Storage.data.recycled.partial",timer);
      updateHole(hole.holeOffset,hole.dataOffset + iRecordSize,hole.size - iRecordSize);
      return pos;
    }
  }
  OProfiler.getInstance().stopChrono("Storage.data.recycled.notfound",timer);
  return -1;
}
