{
  if (iStream == null || iStream.length == 0)   return null;
  Constructor<? extends ORecordInternal<?>> constructor=null;
  try {
    Constructor<?>[] constructors=iDatabase.getRecordType().getConstructors();
    for (    Constructor<?> c : constructors) {
      if (c.getParameterTypes().length > 0 && ODatabaseRecord.class.isAssignableFrom(c.getParameterTypes()[0])) {
        constructor=(Constructor<? extends ORecordInternal<?>>)c;
        break;
      }
    }
    final ORecordInternal<?> obj=constructor.newInstance(iDatabase);
    final ORID rid=new ORecordId().fromStream(iStream);
    obj.setIdentity(rid.getClusterId(),rid.getClusterPosition());
    return obj;
  }
 catch (  Exception e) {
    if (constructor == null)     OLogManager.instance().error(this,"Constructor not found for record class '%s'",e,OSerializationException.class,iDatabase.getRecordType());
 else     OLogManager.instance().error(this,"Error on unmarshalling record class: " + constructor.getDeclaringClass(),e,OSerializationException.class);
  }
  return null;
}
