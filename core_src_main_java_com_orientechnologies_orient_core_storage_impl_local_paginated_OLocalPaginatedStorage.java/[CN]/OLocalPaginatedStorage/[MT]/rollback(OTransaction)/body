{
  checkOpeness();
  modificationLock.requestModificationLock();
  try {
    lock.acquireExclusiveLock();
    try {
      if (transaction == null)       return;
      if (writeAheadLog == null)       throw new OStorageException("WAL mode is not active. Transactions are not supported in given mode");
      if (transaction.getClientTx().getId() != clientTx.getId())       throw new OStorageException("Passed in and active transaction are different transactions. Passed in transaction can not be rolled back.");
      writeAheadLog.log(new OAtomicUnitEndRecord(transaction.getOperationUnitId(),true));
      final List<OWALRecord> operationUnit=readOperationUnit(transaction.getStartLSN(),transaction.getOperationUnitId());
      undoOperation(operationUnit);
      OTransactionAbstract.updateCacheFromEntries(clientTx,clientTx.getAllRecordEntries(),true);
      transaction=null;
    }
 catch (    IOException e) {
      throw new OStorageException("Error during transaction rollback.",e);
    }
 finally {
      lock.releaseExclusiveLock();
    }
  }
  finally {
    modificationLock.releaseModificationLock();
  }
}
