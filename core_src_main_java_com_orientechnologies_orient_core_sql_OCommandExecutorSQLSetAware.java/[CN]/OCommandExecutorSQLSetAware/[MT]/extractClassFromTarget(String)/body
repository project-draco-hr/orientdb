{
  if (!iTarget.toUpperCase().startsWith(OCommandExecutorSQLAbstract.CLUSTER_PREFIX) && !iTarget.startsWith(OCommandExecutorSQLAbstract.INDEX_PREFIX)) {
    if (iTarget.toUpperCase().startsWith(OCommandExecutorSQLAbstract.CLASS_PREFIX))     iTarget=iTarget.substring(OCommandExecutorSQLAbstract.CLASS_PREFIX.length());
    if (iTarget.charAt(0) == ORID.PREFIX)     return getDatabase().getMetadata().getSchema().getClassByClusterId(new ORecordId(iTarget).clusterId);
    return getDatabase().getMetadata().getSchema().getClass(iTarget);
  }
  if (iTarget.toUpperCase().startsWith(OCommandExecutorSQLAbstract.CLUSTER_PREFIX)) {
    String clusterName=iTarget.substring(OCommandExecutorSQLAbstract.CLUSTER_PREFIX.length()).trim();
    ODatabaseDocumentInternal db=getDatabase();
    if (clusterName.startsWith("[") && clusterName.endsWith("]")) {
      String[] clusterNames=clusterName.substring(1,clusterName.length() - 1).split(",");
      OClass candidateClass=null;
      for (      String cName : clusterNames) {
        OCluster aCluster=db.getStorage().getClusterByName(cName.trim());
        if (aCluster == null) {
          return null;
        }
        OClass aClass=db.getMetadata().getSchema().getClassByClusterId(aCluster.getId());
        if (aClass == null) {
          return null;
        }
        if (candidateClass == null || candidateClass.equals(aClass) || candidateClass.isSubClassOf(aClass)) {
          candidateClass=aClass;
        }
 else         if (!candidateClass.isSuperClassOf(aClass)) {
          return null;
        }
      }
      return candidateClass;
    }
 else {
      OCluster cluster=db.getStorage().getClusterByName(clusterName);
      if (cluster != null) {
        return db.getMetadata().getSchema().getClassByClusterId(cluster.getId());
      }
    }
  }
  return null;
}
