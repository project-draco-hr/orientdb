{
  engineLock.writeLock().lock();
  try {
    if (active)     return this;
    if (timer == null)     timer=new Timer();
    shutdownHook=new OrientShutdownHook();
    if (signalHandler == null) {
      signalHandler=new OSignalHandler();
      signalHandler.installDefaultSignals();
    }
    final int cores=Runtime.getRuntime().availableProcessors();
    workers=new ThreadPoolExecutor(cores,cores * 3,10,TimeUnit.SECONDS,new LinkedBlockingQueue<Runnable>(cores * 500){
      @Override public boolean offer(      Runnable e){
        try {
          put(e);
          return true;
        }
 catch (        InterruptedException ie) {
          Thread.currentThread().interrupt();
        }
        return false;
      }
    }
);
    registerEngine(new OEngineLocalPaginated());
    registerEngine(new OEngineMemory());
    registerEngine("com.orientechnologies.orient.client.remote.OEngineRemote");
    if (OGlobalConfiguration.PROFILER_ENABLED.getValueAsBoolean())     profiler.startRecording();
    if (OGlobalConfiguration.ENVIRONMENT_DUMP_CFG_AT_STARTUP.getValueAsBoolean())     OGlobalConfiguration.dumpConfiguration(System.out);
    active=true;
  }
  finally {
    engineLock.writeLock().unlock();
  }
  for (  OOrientStartupListener l : startupListeners)   try {
    if (l != null)     l.onStartup();
  }
 catch (  Exception e) {
    OLogManager.instance().error(this,"Error on startup",e);
  }
  purgeWeakStartupListeners();
  for (  final WeakHashSetValueHolder<OOrientStartupListener> wl : weakStartupListeners)   try {
    if (wl != null) {
      final OOrientStartupListener l=wl.get();
      if (l != null)       l.onStartup();
    }
  }
 catch (  Exception e) {
    OLogManager.instance().error(this,"Error on startup",e);
  }
  return this;
}
