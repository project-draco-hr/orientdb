{
  ONotBlock jjtn000=new ONotBlock(JJTNOTBLOCK);
  boolean jjtc000=true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
  try {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case NOT:
      jj_consume_token(NOT);
    jjtn000.negate=true;
  if (jj_2_68(2147483647)) {
    jjtn000.sub=ConditionBlock();
  }
 else   if (jj_2_69(2147483647)) {
    jjtn000.sub=ParenthesisBlock();
  }
 else {
    jj_consume_token(-1);
    throw new ParseException();
  }
break;
case TO:
case VALUES:
case SET:
case ADD:
case PUT:
case MERGE:
case CONTENT:
case REMOVE:
case NULL:
case ORDER:
case GROUP:
case OFFSET:
case RECORD:
case LUCENE:
case NEAR:
case WITHIN:
case THIS:
case RECORD_ATTRIBUTE:
case INTEGER_LITERAL:
case FLOATING_POINT_LITERAL:
case CHARACTER_LITERAL:
case STRING_LITERAL:
case TRUE:
case FALSE:
case LPAREN:
case LBRACE:
case LBRACKET:
case BACKTICK:
case HOOK:
case COLON:
case MINUS:
case STAR:
case IN:
case KEY:
case IDENTIFIER:
case 158:
if (jj_2_70(2147483647)) {
jjtn000.sub=ConditionBlock();
}
 else if (jj_2_71(2147483647)) {
jjtn000.sub=ParenthesisBlock();
}
 else {
jj_consume_token(-1);
throw new ParseException();
}
break;
default :
jj_la1[149]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
jjtree.closeNodeScope(jjtn000,true);
jjtc000=false;
jjtn000.jjtSetLastToken(getToken(0));
{
if (true) return jjtn000;
}
}
 catch (Throwable jjte000) {
if (jjtc000) {
jjtree.clearNodeScope(jjtn000);
jjtc000=false;
}
 else {
jjtree.popNode();
}
if (jjte000 instanceof RuntimeException) {
{
if (true) throw (RuntimeException)jjte000;
}
}
if (jjte000 instanceof ParseException) {
{
if (true) throw (ParseException)jjte000;
}
}
{
if (true) throw (Error)jjte000;
}
}
 finally {
if (jjtc000) {
jjtree.closeNodeScope(jjtn000,true);
jjtn000.jjtSetLastToken(getToken(0));
}
}
throw new Error("Missing return statement in function");
}
