{
  getDatabase().checkSecurity(ORule.ResourceGeneric.SCHEMA,ORole.PERMISSION_UPDATE);
  acquireSchemaWriteLock();
  try {
    checkEmbedded();
    final String oldName=this.name;
    owner.changeClassName(this.name,name,this);
    this.name=name;
    ODatabaseDocumentInternal database=getDatabase();
    final OStorage storage=database.getStorage();
    if (!database.getStorageVersions().classesAreDetectedByClusterId()) {
      for (      int clusterId : clusterIds) {
        long[] range=storage.getClusterDataRange(clusterId);
        OPhysicalPosition[] positions=storage.ceilingPhysicalPositions(clusterId,new OPhysicalPosition(range[0]));
        do {
          for (          OPhysicalPosition position : positions) {
            final ORecordId identity=new ORecordId(clusterId,position.clusterPosition);
            final ORawBuffer record=storage.readRecord(identity,null,true,null).getResult();
            if (record.recordType == ODocument.RECORD_TYPE) {
              final ORecordSerializerSchemaAware2CSV serializer=(ORecordSerializerSchemaAware2CSV)ORecordSerializerFactory.instance().getFormat(ORecordSerializerSchemaAware2CSV.NAME);
              String persName=new String(record.buffer,"UTF-8");
              if (serializer.getClassName(persName).equalsIgnoreCase(name)) {
                final ODocument document=new ODocument();
                document.setLazyLoad(false);
                document.fromStream(record.buffer);
                ORecordInternal.setVersion(document,record.version);
                ORecordInternal.setIdentity(document,identity);
                document.setClassName(name);
                document.setDirty();
                document.save();
              }
            }
            if (positions.length > 0)             positions=storage.higherPhysicalPositions(clusterId,positions[positions.length - 1]);
          }
        }
 while (positions.length > 0);
      }
    }
    renameCluster(oldName,this.name);
  }
 catch (  UnsupportedEncodingException e) {
    throw OException.wrapException(new OSchemaException("Error reading schema"),e);
  }
 finally {
    releaseSchemaWriteLock();
  }
}
