{
  assertEquals(OType.BOOLEAN,OType.getTypeByValue(true));
  assertEquals(OType.LONG,OType.getTypeByValue(2L));
  assertEquals(OType.INTEGER,OType.getTypeByValue(2));
  assertEquals(OType.SHORT,OType.getTypeByValue((short)4));
  assertEquals(OType.FLOAT,OType.getTypeByValue(0.5f));
  assertEquals(OType.DOUBLE,OType.getTypeByValue(0.7d));
  assertEquals(OType.BYTE,OType.getTypeByValue((byte)10));
  assertEquals(OType.STRING,OType.getTypeByValue('a'));
  assertEquals(OType.STRING,OType.getTypeByValue("yaaahooooo"));
  assertEquals(OType.BINARY,OType.getTypeByValue(new byte[]{0,1,2}));
  assertEquals(OType.DATETIME,OType.getTypeByValue(new Date()));
  assertEquals(OType.DECIMAL,OType.getTypeByValue(new BigDecimal(10)));
  assertEquals(OType.INTEGER,OType.getTypeByValue(new BigInteger("20")));
  assertEquals(OType.LINK,OType.getTypeByValue(new ODocument()));
  assertEquals(OType.LINK,OType.getTypeByValue(new ORecordId()));
  assertEquals(OType.EMBEDDEDLIST,OType.getTypeByValue(new ArrayList<Object>()));
  assertEquals(OType.EMBEDDEDLIST,OType.getTypeByValue(new OTrackedList<Object>(new ODocument())));
  assertEquals(OType.EMBEDDEDSET,OType.getTypeByValue(new HashSet<Object>()));
  assertEquals(OType.EMBEDDEDMAP,OType.getTypeByValue(new HashMap<Object,Object>()));
  assertEquals(OType.LINKSET,OType.getTypeByValue(new ORecordLazySet(new ODocument())));
  assertEquals(OType.LINKLIST,OType.getTypeByValue(new ORecordLazyList(new ODocument())));
  assertEquals(OType.LINKMAP,OType.getTypeByValue(new ORecordLazyMap(new ODocument())));
  assertEquals(OType.LINKBAG,OType.getTypeByValue(new ORidBag()));
  assertEquals(OType.CUSTOM,OType.getTypeByValue(new CustomClass()));
  assertEquals(OType.EMBEDDEDLIST,OType.getTypeByValue(new Object[]{}));
  assertEquals(OType.EMBEDDEDLIST,OType.getTypeByValue(new String[]{}));
  assertEquals(OType.EMBEDDED,OType.getTypeByValue(new DocumentSer()));
  assertEquals(OType.CUSTOM,OType.getTypeByValue(new ClassSerializable()));
}
