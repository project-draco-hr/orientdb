{
  long pages=rndFile.length() / OWALPage.PAGE_SIZE;
  if (pages == 0)   return null;
  long pageIndex=pages - 1;
  while (true) {
    rndFile.seek(pageIndex * OWALPage.PAGE_SIZE);
    byte[] pageContent=new byte[OWALPage.PAGE_SIZE];
    rndFile.readFully(pageContent);
    long pointer=directMemory.allocate(pageContent);
    try {
      OWALPage page=new OWALPage(pointer,false);
      int prevOffset=OWALPage.RECORDS_OFFSET;
      int pageOffset=OWALPage.RECORDS_OFFSET;
      int maxOffset=OWALPage.PAGE_SIZE - page.getFreeSpace();
      while (pageOffset < maxOffset) {
        prevOffset=pageOffset;
        pageOffset+=page.getSerializedRecordSize(pageOffset);
      }
      if (page.recordTail(prevOffset)) {
        pageIndex--;
        if (pageIndex < 0)         return null;
        continue;
      }
      return new OLogSequenceNumber(order,(pages - 1) * OWALPage.PAGE_SIZE + prevOffset);
    }
  finally {
      directMemory.free(pointer);
    }
  }
}
