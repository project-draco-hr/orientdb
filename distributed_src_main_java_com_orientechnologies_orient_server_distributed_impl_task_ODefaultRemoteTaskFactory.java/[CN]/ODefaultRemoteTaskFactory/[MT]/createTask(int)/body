{
switch (code) {
case OCreateRecordTask.FACTORYID:
    return new OCreateRecordTask();
case OReadRecordTask.FACTORYID:
  return new OReadRecordTask();
case OReadRecordIfNotLatestTask.FACTORYID:
return new OReadRecordIfNotLatestTask();
case OUpdateRecordTask.FACTORYID:
return new OUpdateRecordTask();
case ODeleteRecordTask.FACTORYID:
return new ODeleteRecordTask();
case OSQLCommandTask.FACTORYID:
return new OSQLCommandTask();
case OScriptTask.FACTORYID:
return new OScriptTask();
case OTxTask.FACTORYID:
return new OTxTask();
case OCompleted2pcTask.FACTORYID:
return new OCompleted2pcTask();
case OStopServerTask.FACTORYID:
return new OStopServerTask();
case ORestartServerTask.FACTORYID:
return new ORestartServerTask();
case OResurrectRecordTask.FACTORYID:
return new OResurrectRecordTask();
case OSyncClusterTask.FACTORYID:
return new OSyncClusterTask();
case OSyncDatabaseDeltaTask.FACTORYID:
return new OSyncDatabaseDeltaTask();
case OSyncDatabaseTask.FACTORYID:
return new OSyncDatabaseTask();
case OCopyDatabaseChunkTask.FACTORYID:
return new OCopyDatabaseChunkTask();
case OHeartbeatTask.FACTORYID:
return new OHeartbeatTask();
case ORepairRecordsTask.FACTORYID:
return new ORepairRecordsTask();
case ORepairClusterTask.FACTORYID:
return new ORepairClusterTask();
case OClusterRepairInfoTask.FACTORYID:
return new OClusterRepairInfoTask();
}
throw new IllegalArgumentException("Task with code " + code + " is not supported");
}
