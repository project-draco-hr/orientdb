{
  final int len=file.readInt(0);
  final OEHFileMetadata[] metadata=new OEHFileMetadata[len];
  final int bufferSize=file.readInt(OIntegerSerializer.INT_SIZE);
  final byte[] buffer=new byte[bufferSize];
  int offset=0;
  for (int i=0; i < len; i++) {
    final String incrementSize=OStringSerializer.INSTANCE.deserializeNative(buffer,offset);
    offset+=OStringSerializer.INSTANCE.getObjectSize(incrementSize);
    final String path=OStringSerializer.INSTANCE.deserializeNative(buffer,offset);
    offset+=OStringSerializer.INSTANCE.getObjectSize(path);
    final String type=OStringSerializer.INSTANCE.deserializeNative(buffer,offset);
    offset+=OStringSerializer.INSTANCE.getObjectSize(type);
    final long bucketsCount=OIntegerSerializer.INSTANCE.deserializeNative(buffer,offset);
    offset+=OIntegerSerializer.INT_SIZE;
    final long tombstone=OLongSerializer.INSTANCE.deserializeNative(buffer,offset);
    final OStorageFileConfiguration fileConfiguration=new OStorageFileConfiguration(null,path,type,"0",incrementSize);
    final OSingleFileSegment singleFileSegment=new OSingleFileSegment(storage,fileConfiguration);
    final OEHFileMetadata bucketFile=new OEHFileMetadata();
    bucketFile.setFile(singleFileSegment);
    bucketFile.setBucketsCount(bucketsCount);
    bucketFile.setTombstonePosition(tombstone);
    metadata[i]=bucketFile;
  }
  return metadata;
}
