{
  if (!in.ready())   return this;
  jump(iJumpChars);
  if (!in.ready())   return this;
  int openBrackets=0;
  char beginStringChar=' ';
  boolean encodeMode=false;
  boolean found;
  do {
    found=false;
    if (beginStringChar == ' ') {
      if (openBrackets == 0) {
        for (        char u : iUntil) {
          if (u == c) {
            found=true;
            break;
          }
        }
      }
      if (c == '\'' || c == '"' && !encodeMode)       beginStringChar=c;
 else       if (c == '{')       openBrackets++;
 else       if (c == '}' && openBrackets > 0)       openBrackets--;
      if (!found && openBrackets == 0) {
        for (        char u : iUntil) {
          if (u == c) {
            found=true;
            break;
          }
        }
      }
    }
 else     if (beginStringChar == c && !encodeMode)     beginStringChar=' ';
    if (c == '\\' && !encodeMode)     encodeMode=true;
 else     encodeMode=false;
    if (!found) {
      c=nextChar();
      boolean skip=false;
      if (iSkipChars != null)       for (      char j : iSkipChars) {
        if (j == c) {
          skip=true;
          break;
        }
      }
      if (!skip)       buffer.append(c);
    }
  }
 while (!found && in.ready());
  if (buffer.length() == 0)   throw new ParseException("Expected characters '" + Arrays.toString(iUntil) + "' not found",cursor);
  if (!iInclude)   buffer.setLength(buffer.length() - 1);
  value=buffer.toString();
  return this;
}
