{
  final ODatabaseRecord database=getDatabase();
  database.checkSecurity(ODatabaseSecurityResources.COMMAND,ORole.PERMISSION_READ);
  init((OCommandRequestText)iRequest);
  StringBuilder word=new StringBuilder();
  int oldPos=0;
  int pos=nextWord(parserText,parserTextUpperCase,oldPos,word,true);
  if (pos == -1 || !word.toString().equals(KEYWORD_ALTER))   throw new OCommandSQLParsingException("Keyword " + KEYWORD_ALTER + " not found",parserText,oldPos);
  oldPos=pos;
  pos=nextWord(parserText,parserTextUpperCase,oldPos,word,true);
  if (pos == -1 || !word.toString().equals(KEYWORD_CLASS))   throw new OCommandSQLParsingException("Keyword " + KEYWORD_CLASS + " not found",parserText,oldPos);
  oldPos=pos;
  pos=nextWord(parserText,parserTextUpperCase,oldPos,word,false);
  if (pos == -1)   throw new OCommandSQLParsingException("Expected <class>",parserText,oldPos);
  className=word.toString();
  oldPos=pos;
  pos=nextWord(parserText,parserTextUpperCase,oldPos,word,true);
  if (pos == -1)   throw new OCommandSQLParsingException("Missed the class's attribute to change",parserText,oldPos);
  final String attributeAsString=word.toString();
  try {
    attribute=OClass.ATTRIBUTES.valueOf(attributeAsString.toUpperCase(Locale.ENGLISH));
  }
 catch (  IllegalArgumentException e) {
    throw new OCommandSQLParsingException("Unknown class's attribute '" + attributeAsString + "'. Supported attributes are: "+ Arrays.toString(OClass.ATTRIBUTES.values()),parserText,oldPos);
  }
  value=parserText.substring(pos + 1).trim();
  if (value.length() == 0)   throw new OCommandSQLParsingException("Missed the property's value to change for attribute '" + attribute + "'",parserText,oldPos);
  if (value.equalsIgnoreCase("null"))   value=null;
  return this;
}
