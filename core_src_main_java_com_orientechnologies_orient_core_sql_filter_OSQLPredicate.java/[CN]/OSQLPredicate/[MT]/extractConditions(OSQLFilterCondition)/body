{
  final int oldPosition=parserGetCurrentPosition();
  parserNextWord(true," )=><,\r\n");
  final String word=parserGetLastWord();
  if (word.length() > 0 && (word.equalsIgnoreCase("SELECT") || word.equalsIgnoreCase("TRAVERSE"))) {
    final StringBuilder embedded=new StringBuilder(256);
    OStringSerializerHelper.getEmbedded(parserText,oldPosition - 1,-1,embedded);
    parserSetCurrentPosition(oldPosition + embedded.length() + 1);
    return new OSQLSynchQuery<Object>(embedded.toString());
  }
  parserSetCurrentPosition(oldPosition);
  OSQLFilterCondition currentCondition=extractCondition();
  while (parserSkipWhiteSpaces()) {
    if (!parserIsEnded() && parserGetCurrentChar() == ')')     return currentCondition;
    final OQueryOperator nextOperator=extractConditionOperator();
    if (nextOperator == null)     return currentCondition;
    if (nextOperator.precedence > currentCondition.getOperator().precedence) {
      final OSQLFilterCondition subCondition=new OSQLFilterCondition(currentCondition.right,nextOperator);
      currentCondition.right=subCondition;
      subCondition.right=extractConditionItem(false,1);
    }
 else {
      final OSQLFilterCondition parentCondition=new OSQLFilterCondition(currentCondition,nextOperator);
      parentCondition.right=extractConditions(parentCondition);
      currentCondition=parentCondition;
    }
  }
  return currentCondition;
}
