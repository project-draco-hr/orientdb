{
  long currentCount=((OBasicCommandContext)ctx).getResultsProcessed().incrementAndGet();
  if (limit != null) {
    long limitValue=limit.num.getValue().longValue();
    if (limitValue > -1 && limitValue < currentCount) {
      return false;
    }
  }
  if (returnsMatches()) {
    ODocument doc=getDatabase().newInstance();
    for (    Map.Entry<String,OIdentifiable> entry : matchContext.matched.entrySet()) {
      if (isExplicitAlias(entry.getKey())) {
        doc.field(entry.getKey(),entry.getValue());
      }
    }
    if (request.getResultListener() != null) {
      request.getResultListener().result(doc);
    }
  }
 else   if (returnsPaths()) {
    ODocument doc=getDatabase().newInstance();
    for (    Map.Entry<String,OIdentifiable> entry : matchContext.matched.entrySet()) {
      doc.field(entry.getKey(),entry.getValue());
    }
    if (request.getResultListener() != null) {
      request.getResultListener().result(doc);
    }
  }
 else   if (returnsJson()) {
    if (request.getResultListener() != null) {
      request.getResultListener().result(jsonToMap(matchContext,ctx));
    }
  }
 else {
    ODocument doc=getDatabase().newInstance();
    int i=0;
    for (    OExpression item : returnItems) {
      OIdentifier returnAliasIdentifier=returnAliases.get(i);
      String returnAlias;
      if (returnAliasIdentifier == null) {
        returnAlias=item.getDefaultAlias();
      }
 else {
        returnAlias=returnAliasIdentifier.getValue();
      }
      ODocument mapDoc=new ODocument();
      mapDoc.fromMap((Map)matchContext.matched);
      doc.field(returnAlias,item.execute(mapDoc,ctx));
      i++;
    }
    if (request.getResultListener() != null) {
      request.getResultListener().result(doc);
    }
  }
  return true;
}
