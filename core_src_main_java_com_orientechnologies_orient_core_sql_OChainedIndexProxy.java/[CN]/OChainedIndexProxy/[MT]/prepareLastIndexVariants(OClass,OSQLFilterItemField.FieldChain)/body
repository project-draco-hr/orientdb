{
  OClass oClass=iSchemaClass;
  final Collection<OIndex<?>> result=new ArrayList<OIndex<?>>();
  for (int i=0; i < fieldChain.getItemCount() - 1; i++) {
    oClass=oClass.getProperty(fieldChain.getItemName(i)).getLinkedClass();
    if (oClass == null) {
      return result;
    }
  }
  final Set<OIndex<?>> involvedIndexes=new TreeSet<OIndex<?>>(new Comparator<OIndex<?>>(){
    public int compare(    OIndex<?> o1,    OIndex<?> o2){
      return o1.getDefinition().getParamCount() - o2.getDefinition().getParamCount();
    }
  }
);
  involvedIndexes.addAll(oClass.getInvolvedIndexes(fieldChain.getItemName(fieldChain.getItemCount() - 1)));
  final Collection<Class<? extends OIndex>> indexTypes=new HashSet<Class<? extends OIndex>>(3);
  for (  OIndex<?> involvedIndex : involvedIndexes) {
    if (!indexTypes.contains(involvedIndex.getInternal().getClass())) {
      result.add(involvedIndex);
      indexTypes.add(involvedIndex.getInternal().getClass());
    }
  }
  return result;
}
