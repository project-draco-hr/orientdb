{
  json.beginObject(2,true,null);
  json.writeAttribute(3,true,"name",cls.getName());
  json.writeAttribute(3,true,"superClass",cls.getSuperClass() != null ? cls.getSuperClass().getName() : "");
  json.writeAttribute(3,true,"alias",cls.getShortName());
  json.writeAttribute(3,true,"clusters",cls.getClusterIds());
  json.writeAttribute(3,true,"defaultCluster",cls.getDefaultClusterId());
  try {
    json.writeAttribute(3,false,"records",db.countClass(cls.getName()));
  }
 catch (  OSecurityAccessException e) {
    json.writeAttribute(3,false,"records","? (Unauthorized)");
  }
  if (cls.properties() != null && cls.properties().size() > 0) {
    json.beginCollection(3,true,"properties");
    for (    OProperty prop : cls.properties()) {
      json.beginObject(4,true,null);
      json.writeAttribute(4,true,"name",prop.getName());
      if (prop.getLinkedClass() != null)       json.writeAttribute(4,true,"linkedClass",prop.getLinkedClass().getName());
      if (prop.getLinkedType() != null)       json.writeAttribute(4,true,"linkedType",prop.getLinkedType().toString());
      json.writeAttribute(4,true,"type",prop.getType().toString());
      json.writeAttribute(4,true,"mandatory",prop.isMandatory());
      json.writeAttribute(4,true,"notNull",prop.isNotNull());
      json.writeAttribute(4,true,"min",prop.getMin());
      json.writeAttribute(4,true,"max",prop.getMax());
      json.writeAttribute(4,true,"indexed",prop.isIndexed());
      json.endObject(3,true);
    }
    json.endCollection(1,true);
  }
  json.endObject(1,false);
}
