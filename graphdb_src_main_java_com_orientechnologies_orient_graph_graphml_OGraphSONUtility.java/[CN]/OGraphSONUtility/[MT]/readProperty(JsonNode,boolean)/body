{
  final Object propertyValue;
  if (hasEmbeddedTypes) {
    if (node.get(GraphSONTokens.TYPE).textValue().equals(GraphSONTokens.TYPE_UNKNOWN)) {
      propertyValue=null;
    }
 else     if (node.get(GraphSONTokens.TYPE).textValue().equals(GraphSONTokens.TYPE_BOOLEAN)) {
      propertyValue=node.get(GraphSONTokens.VALUE).booleanValue();
    }
 else     if (node.get(GraphSONTokens.TYPE).textValue().equals(GraphSONTokens.TYPE_FLOAT)) {
      propertyValue=Float.parseFloat(node.get(GraphSONTokens.VALUE).asText());
    }
 else     if (node.get(GraphSONTokens.TYPE).textValue().equals(GraphSONTokens.TYPE_BYTE)) {
      propertyValue=Byte.parseByte(node.get(GraphSONTokens.VALUE).asText());
    }
 else     if (node.get(GraphSONTokens.TYPE).textValue().equals(GraphSONTokens.TYPE_SHORT)) {
      propertyValue=Short.parseShort(node.get(GraphSONTokens.VALUE).asText());
    }
 else     if (node.get(GraphSONTokens.TYPE).textValue().equals(GraphSONTokens.TYPE_DOUBLE)) {
      propertyValue=node.get(GraphSONTokens.VALUE).doubleValue();
    }
 else     if (node.get(GraphSONTokens.TYPE).textValue().equals(GraphSONTokens.TYPE_INTEGER)) {
      propertyValue=node.get(GraphSONTokens.VALUE).intValue();
    }
 else     if (node.get(GraphSONTokens.TYPE).textValue().equals(GraphSONTokens.TYPE_LONG)) {
      propertyValue=node.get(GraphSONTokens.VALUE).longValue();
    }
 else     if (node.get(GraphSONTokens.TYPE).textValue().equals(GraphSONTokens.TYPE_STRING)) {
      propertyValue=node.get(GraphSONTokens.VALUE).textValue();
    }
 else     if (node.get(GraphSONTokens.TYPE).textValue().equals(GraphSONTokens.TYPE_LIST)) {
      propertyValue=readProperties(node.get(GraphSONTokens.VALUE).elements(),hasEmbeddedTypes);
    }
 else     if (node.get(GraphSONTokens.TYPE).textValue().equals(GraphSONTokens.TYPE_MAP)) {
      propertyValue=readProperties(node.get(GraphSONTokens.VALUE),false,hasEmbeddedTypes);
    }
 else {
      propertyValue=node.textValue();
    }
  }
 else {
    if (node.isNull()) {
      propertyValue=null;
    }
 else     if (node.isBoolean()) {
      propertyValue=node.booleanValue();
    }
 else     if (node.isDouble()) {
      propertyValue=node.doubleValue();
    }
 else     if (node.isInt()) {
      propertyValue=node.intValue();
    }
 else     if (node.isLong()) {
      propertyValue=node.longValue();
    }
 else     if (node.isTextual()) {
      propertyValue=node.textValue();
    }
 else     if (node.isArray()) {
      propertyValue=readProperties(node.elements(),hasEmbeddedTypes);
    }
 else     if (node.isObject()) {
      propertyValue=readProperties(node,false,hasEmbeddedTypes);
    }
 else {
      propertyValue=node.textValue();
    }
  }
  return propertyValue;
}
