{
  if (!(iRecord instanceof ORecordSchemaAware<?>))   return null;
  final ORecordSchemaAware<?> record=(ORecordSchemaAware<?>)iRecord;
  final OClass cls=record.getSchemaClass();
  if (cls == null)   return null;
  OTreeMapDatabase<String,ODocument> index;
  Object fieldValue;
  String fieldValueString;
  Map<OProperty,String> indexedProperties=null;
  ORecord<?> indexedRecord;
  for (  OProperty prop : cls.properties()) {
    index=prop.getIndex();
    if (index != null) {
      fieldValue=record.field(prop.getName());
      if (fieldValue != null) {
        fieldValueString=fieldValue.toString();
        indexedRecord=index.get(fieldValueString);
        if (indexedRecord != null && !indexedRecord.equals(iRecord))         OLogManager.instance().exception("Found duplicated key '%s' for property '%s'",null,OIndexException.class,fieldValueString,prop);
        if (indexedProperties == null)         indexedProperties=new HashMap<OProperty,String>();
        indexedProperties.put(prop,fieldValueString);
      }
    }
  }
  return indexedProperties;
}
