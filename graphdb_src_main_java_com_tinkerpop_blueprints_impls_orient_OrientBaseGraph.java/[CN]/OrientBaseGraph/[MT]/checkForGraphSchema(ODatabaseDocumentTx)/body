{
  final OSchema schema=iDatabase.getMetadata().getSchema();
  schema.getOrCreateClass(OMVRBTreeRIDProvider.PERSISTENT_CLASS_NAME);
  final OClass vertexBaseClass=schema.getClass(OrientVertexType.CLASS_NAME);
  final OClass edgeBaseClass=schema.getClass(OrientEdgeType.CLASS_NAME);
  if (vertexBaseClass == null)   schema.createClass(OrientVertexType.CLASS_NAME).setOverSize(2);
  if (edgeBaseClass == null)   schema.createClass(OrientEdgeType.CLASS_NAME);
  boolean warn=false;
  final String MSG_SUFFIX=". Probably you are using a database created with a previous version of OrientDB. Export in graphml format and reimport it";
  if (vertexBaseClass != null) {
    if (!vertexBaseClass.getName().equals(OrientVertexType.CLASS_NAME)) {
      OLogManager.instance().warn(this,"Found Vertex class %s" + MSG_SUFFIX,vertexBaseClass.getName());
      warn=true;
    }
    if (vertexBaseClass.existsProperty(CONNECTION_OUT) || vertexBaseClass.existsProperty(CONNECTION_IN)) {
      OLogManager.instance().warn(this,"Found property in/out against V");
      warn=true;
    }
  }
  if (edgeBaseClass != null) {
    if (!warn && !edgeBaseClass.getName().equals(OrientEdgeType.CLASS_NAME)) {
      OLogManager.instance().warn(this,"Found Edge class %s" + MSG_SUFFIX,edgeBaseClass.getName());
      warn=true;
    }
    if (edgeBaseClass.existsProperty(CONNECTION_OUT) || edgeBaseClass.existsProperty(CONNECTION_IN)) {
      OLogManager.instance().warn(this,"Found property in/out against E");
      warn=true;
    }
  }
}
