{
  File binaryFile=new File(filePath);
  long binaryFileLength=binaryFile.length();
  int numberOfRecords=(int)(binaryFileLength / bufferSize);
  int remainder=(int)(binaryFileLength % bufferSize);
  if (remainder > 0)   numberOfRecords++;
  List<ORID> binaryChuncks=new ArrayList<ORID>(numberOfRecords);
  BufferedInputStream binaryStream=new BufferedInputStream(new FileInputStream(binaryFile));
  byte[] chunk;
  database.declareIntent(new OIntentMassiveInsert());
  ORecordBytes recordChunk;
  for (int i=0; i < numberOfRecords; i++) {
    if (i == numberOfRecords - 1)     chunk=new byte[remainder];
 else     chunk=new byte[bufferSize];
    binaryStream.read(chunk);
    recordChunk=new ORecordBytes(database,chunk);
    database.save(recordChunk);
    binaryChuncks.add(recordChunk.getIdentity());
  }
  database.declareIntent(null);
  return binaryChuncks;
}
