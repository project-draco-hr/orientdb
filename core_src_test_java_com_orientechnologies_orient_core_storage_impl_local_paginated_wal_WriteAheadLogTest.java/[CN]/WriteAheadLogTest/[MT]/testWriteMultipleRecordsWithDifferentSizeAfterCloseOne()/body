{
  List<OWALRecord> writtenRecords=new ArrayList<OWALRecord>();
  OWALRecord walRecord=new TestRecord(ONE_KB,false);
  writeAheadLog.log(walRecord);
  writtenRecords.add(walRecord);
  walRecord=new TestRecord(ONE_KB,false);
  writeAheadLog.log(walRecord);
  writtenRecords.add(walRecord);
  assertLogContent(writeAheadLog,writtenRecords);
  writeAheadLog.close();
  long seed=System.currentTimeMillis();
  System.out.println("seed of testWriteMultipleRecordsWithDifferentSizeAfterCloseOne " + seed);
  Random random=new Random(seed);
  writeAheadLog=createWAL();
  OLogSequenceNumber end=null;
  for (int writtenSize=0; writtenSize < 4 * OWALPage.PAGE_SIZE; ) {
    int contentSize=random.nextInt(2 * OWALPage.PAGE_SIZE - 1) + 1;
    walRecord=new TestRecord(contentSize,false);
    end=writeAheadLog.log(walRecord);
    writtenRecords.add(walRecord);
    writtenSize+=contentSize;
  }
  Assert.assertEquals(writeAheadLog.end(),end);
  assertLogContent(writeAheadLog,writtenRecords);
  writeAheadLog.close();
  writeAheadLog=createWAL();
  Assert.assertEquals(writeAheadLog.end(),end);
  assertLogContent(writeAheadLog,writtenRecords);
}
