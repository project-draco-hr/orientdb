{
  ODatabaseRecordThreadLocal.INSTANCE.set(databaseDocument);
  ODocument document=new ODocument(embMapSimple);
  Map<String,String> mapString=new HashMap<String,String>();
  mapString.put("key","value");
  mapString.put("key1","value1");
  document.field(MAP_STRING,mapString);
  Map<String,Integer> mapInt=new HashMap<String,Integer>();
  mapInt.put("key",2);
  mapInt.put("key1",3);
  document.field(MAP_INT,mapInt);
  Map<String,Long> mapLong=new HashMap<String,Long>();
  mapLong.put("key",2L);
  mapLong.put("key1",3L);
  document.field(MAP_LONG,mapLong);
  Map<String,Short> shortMap=new HashMap<String,Short>();
  shortMap.put("key",(short)2);
  shortMap.put("key1",(short)3);
  document.field(MAP_SHORT,shortMap);
  Map<String,Date> dateMap=new HashMap<String,Date>();
  dateMap.put("key",new Date());
  dateMap.put("key1",new Date());
  document.field(MAP_DATE,dateMap);
  Map<String,Float> floatMap=new HashMap<String,Float>();
  floatMap.put("key",10f);
  floatMap.put("key1",11f);
  document.field(MAP_FLOAT,floatMap);
  Map<String,Double> doubleMap=new HashMap<String,Double>();
  doubleMap.put("key",10d);
  doubleMap.put("key1",11d);
  document.field(MAP_DOUBLE,doubleMap);
  Map<String,Byte> bytesMap=new HashMap<String,Byte>();
  bytesMap.put("key",(byte)10);
  bytesMap.put("key1",(byte)11);
  document.field(MAP_BYTES,bytesMap);
  byte[] res=serializer.toStream(document,false);
  ODocument extr=(ODocument)serializer.fromStream(res,new ODocument(),new String[]{});
  assertEquals(extr.fields(),document.fields());
  assertEquals(extr.field(MAP_STRING),document.field(MAP_STRING));
  assertEquals(extr.field(MAP_LONG),document.field(MAP_LONG));
  assertEquals(extr.field(MAP_SHORT),document.field(MAP_SHORT));
  assertEquals(extr.field(MAP_DATE),document.field(MAP_DATE));
  assertEquals(extr.field(MAP_DOUBLE),document.field(MAP_DOUBLE));
  assertEquals(extr.field(MAP_BYTES),document.field(MAP_BYTES));
}
