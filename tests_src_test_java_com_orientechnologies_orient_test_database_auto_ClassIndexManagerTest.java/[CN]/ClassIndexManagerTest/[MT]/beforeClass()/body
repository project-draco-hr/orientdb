{
  super.beforeClass();
  final OSchema schema=database.getMetadata().getSchema();
  final OClass superClass=schema.createClass("classIndexManagerTestSuperClass");
  final OProperty propertyZero=superClass.createProperty("prop0",OType.STRING);
  propertyZero.createIndex(OClass.INDEX_TYPE.UNIQUE);
  final OClass oClass=schema.createClass("classIndexManagerTestClass",superClass);
  final OProperty propOne=oClass.createProperty("prop1",OType.STRING);
  propOne.createIndex(OClass.INDEX_TYPE.UNIQUE);
  final OProperty propTwo=oClass.createProperty("prop2",OType.INTEGER);
  propTwo.createIndex(OClass.INDEX_TYPE.NOTUNIQUE);
  oClass.createProperty("prop3",OType.BOOLEAN);
  final OProperty propFour=oClass.createProperty("prop4",OType.EMBEDDEDLIST,OType.STRING);
  propFour.createIndex(OClass.INDEX_TYPE.NOTUNIQUE);
  oClass.createProperty("prop5",OType.EMBEDDEDMAP,OType.STRING);
  oClass.createIndex("classIndexManagerTestIndexByKey",OClass.INDEX_TYPE.NOTUNIQUE,"prop5");
  oClass.createIndex("classIndexManagerTestIndexByValue",OClass.INDEX_TYPE.NOTUNIQUE,"prop5 by value");
  final OProperty propSix=oClass.createProperty("prop6",OType.EMBEDDEDSET,OType.STRING);
  propSix.createIndex(OClass.INDEX_TYPE.NOTUNIQUE);
  oClass.createIndex("classIndexManagerComposite",OClass.INDEX_TYPE.UNIQUE,"prop1","prop2");
  final OClass oClassTwo=schema.createClass("classIndexManagerTestClassTwo");
  oClassTwo.createProperty("prop1",OType.STRING);
  oClassTwo.createProperty("prop2",OType.INTEGER);
  final OClass compositeCollectionClass=schema.createClass("classIndexManagerTestCompositeCollectionClass");
  compositeCollectionClass.createProperty("prop1",OType.STRING);
  compositeCollectionClass.createProperty("prop2",OType.EMBEDDEDLIST,OType.INTEGER);
  compositeCollectionClass.createIndex("classIndexManagerTestIndexValueAndCollection",OClass.INDEX_TYPE.UNIQUE,"prop1","prop2");
  oClass.createIndex("classIndexManagerTestIndexOnPropertiesFromClassAndSuperclass",OClass.INDEX_TYPE.UNIQUE,"prop0","prop1");
  schema.save();
  database.close();
}
