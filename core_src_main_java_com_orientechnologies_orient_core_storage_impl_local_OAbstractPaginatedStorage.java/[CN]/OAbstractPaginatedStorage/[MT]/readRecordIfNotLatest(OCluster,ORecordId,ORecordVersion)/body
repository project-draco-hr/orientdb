{
  checkOpeness();
  if (!rid.isPersistent())   throw new IllegalArgumentException("Cannot read record " + rid + " since the position is invalid in database '"+ name+ '\'');
  if (transaction.get() != null) {
    final long timer=Orient.instance().getProfiler().startChrono();
    try {
      return doReadRecordIfNotLatest(cluster,rid,recordVersion);
    }
  finally {
      Orient.instance().getProfiler().stopChrono(PROFILER_READ_RECORD,"Read a record from database",timer,"db.*.readRecord");
    }
  }
  final long timer=Orient.instance().getProfiler().startChrono();
  cluster.getExternalModificationLock().requestModificationLock();
  try {
    lockManager.acquireLock(this,rid,OLockManager.LOCK.SHARED);
    try {
      ORawBuffer buff;
      lock.acquireSharedLock();
      try {
        buff=doReadRecordIfNotLatest(cluster,rid,recordVersion);
        return buff;
      }
  finally {
        lock.releaseSharedLock();
      }
    }
  finally {
      lockManager.releaseLock(this,rid,OLockManager.LOCK.SHARED);
    }
  }
  finally {
    cluster.getExternalModificationLock().releaseModificationLock();
    Orient.instance().getProfiler().stopChrono(PROFILER_READ_RECORD,"Read a record from database",timer,"db.*.readRecord");
  }
}
