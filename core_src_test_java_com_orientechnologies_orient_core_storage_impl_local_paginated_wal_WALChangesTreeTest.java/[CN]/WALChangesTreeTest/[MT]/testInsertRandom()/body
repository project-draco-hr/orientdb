{
  final OWALChangesTree tree=new OWALChangesTree();
  tree.setDebug(true);
  final byte[] data=new byte[30];
  final long ts=System.currentTimeMillis();
  System.out.println("TestInsertRandom seed : " + ts);
  final Random rnd=new Random(ts);
  for (int i=0; i < 100; i++) {
    final int start=rnd.nextInt(data.length) - 3;
    final int length=rnd.nextInt(3) + 4;
    int cend=start + length;
    if (cend > data.length)     cend=data.length;
    int cstart=start;
    if (cstart < 0)     cstart=0;
    byte[] value=new byte[cend - cstart];
    rnd.nextBytes(value);
    System.arraycopy(value,0,data,cstart,cend - cstart);
    tree.add(value,cstart);
  }
  byte[] result=new byte[30];
  tree.applyChanges(result,0);
  Assert.assertEquals(result,data);
  for (int i=-5; i < result.length; i++) {
    int start=i;
    int end=start + 5;
    if (start < 0)     start=0;
    if (end > data.length)     end=data.length;
    result=new byte[end - start];
    System.arraycopy(data,start,result,0,end - start);
    byte[] cresult=new byte[result.length];
    tree.applyChanges(cresult,start);
    Assert.assertEquals(cresult,result);
  }
}
