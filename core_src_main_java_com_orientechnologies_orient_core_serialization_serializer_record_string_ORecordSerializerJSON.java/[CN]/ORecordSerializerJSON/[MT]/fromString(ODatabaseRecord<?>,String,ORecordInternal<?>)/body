{
  try {
    iSource=iSource.trim();
    if (iRecord instanceof ODocument) {
      if (!iSource.startsWith("{") || !iSource.endsWith("}"))       throw new OSerializationException("Error on unmarshalling JSON content: content must be embraced by { }");
      iSource=iSource.substring(1,iSource.length() - 1).trim();
      String[] fields=OStringParser.getWords(iSource,":,");
      if (fields != null && fields.length > 0) {
        ODocument doc=(ODocument)iRecord;
        boolean isNew=!doc.getIdentity().isValid();
        String fieldName;
        String fieldValue;
        for (int i=0; i < fields.length; i+=2) {
          fieldName=fields[i];
          fieldValue=fields[i + 1];
          if (fieldName.equals(ATTRIBUTE_CLASS))           doc.setClassName(fields[i + 1]);
 else           if (fieldName.equals(ATTRIBUTE_ID)) {
            if (isNew) {
              ORecordId rid=new ORecordId(fieldValue);
              doc.setIdentity(rid.clusterId,rid.clusterPosition);
            }
          }
 else           if (fieldName.equals(ATTRIBUTE_VERSION)) {
            if (!isNew) {
              doc.setVersion(Integer.parseInt(fieldValue));
            }
          }
 else {
            if (fieldValue.equals("null"))             doc.field(fieldName,null);
 else             if (fieldValue.startsWith("{") && fieldValue.endsWith("}")) {
              Map<String,String> map=OStringSerializerHelper.getMap(fieldValue);
              doc.field(fieldName,map);
            }
 else             doc.field(fieldName,fieldValue);
          }
        }
      }
    }
 else     if (iRecord instanceof ORecordColumn) {
    }
 else     if (iRecord instanceof ORecordStringable) {
      ((ORecordStringable)iRecord).value(iSource);
    }
 else     if (iRecord instanceof ORecordBytes) {
      int b;
      int offset;
      byte[] buffer=new byte[iSource.length() / 3];
      for (int i=0; i < buffer.length; ++i) {
        offset=i * 3;
        b=Integer.parseInt(iSource.substring(offset,offset + 3));
        buffer[i]=(byte)b;
      }
      iRecord.fromStream(buffer);
    }
  }
 catch (  Exception e) {
    throw new OSerializationException("Error on unmarshalling JSON content",e);
  }
  return iRecord;
}
