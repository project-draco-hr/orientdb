{
  return networkOperation(new OStorageRemoteOperation<OStorageOperationResult<OPhysicalPosition>>(){
    @Override public OStorageOperationResult<OPhysicalPosition> execute(    final OChannelBinaryAsynchClient network) throws IOException {
      int mode;
      if (iMode == 1 && iCallback == null)       mode=2;
 else       mode=iMode;
      final OPhysicalPosition ppos=new OPhysicalPosition(iRecordType);
      try {
        beginRequest(network,OChannelBinaryProtocol.REQUEST_RECORD_CREATE);
        network.writeShort((short)iRid.clusterId);
        network.writeBytes(iContent);
        network.writeByte(iRecordType);
        network.writeByte((byte)mode);
      }
  finally {
        endRequest(network);
      }
switch (mode) {
case 0:
        try {
          beginResponse(network);
          if (network.getSrvProtocolVersion() > OChannelBinaryProtocol.PROTOCOL_VERSION_25)           iRid.clusterId=network.readShort();
          iRid.clusterPosition=network.readLong();
          ppos.clusterPosition=iRid.clusterPosition;
          if (network.getSrvProtocolVersion() >= 11) {
            ppos.recordVersion=network.readVersion();
          }
 else           ppos.recordVersion=0;
          if (network.getSrvProtocolVersion() >= 20)           readCollectionChanges(network,ODatabaseRecordThreadLocal.INSTANCE.get().getSbTreeCollectionManager());
          return new OStorageOperationResult<OPhysicalPosition>(ppos);
        }
  finally {
          endResponse(network);
        }
case 1:
      if (iCallback != null) {
        final OStorageRemoteSession session=getCurrentSession();
        final OSBTreeCollectionManager collectionManager=ODatabaseRecordThreadLocal.INSTANCE.get().getSbTreeCollectionManager();
        Callable<Object> response=new Callable<Object>(){
          public Object call() throws Exception {
            final long result;
            try {
              beginResponse(network,session);
              if (network.getSrvProtocolVersion() > OChannelBinaryProtocol.PROTOCOL_VERSION_25)               iRid.clusterId=network.readShort();
              result=network.readLong();
              if (network.getSrvProtocolVersion() >= 11)               network.readVersion();
              if (network.getSrvProtocolVersion() >= 20)               readCollectionChanges(network,collectionManager);
            }
 catch (            Exception e) {
              OLogManager.instance().error(this,"Exception on async query",e);
              throw e;
            }
 finally {
              endResponse(network);
            }
            iCallback.call(iRid,result);
            return null;
          }
        }
;
        asynchExecutor.submit(new FutureTask<Object>(response));
      }
    break;
case 2:
  engine.getConnectionManager().release(network);
break;
}
return new OStorageOperationResult<OPhysicalPosition>(ppos);
}
}
,"Error on create record in cluster " + iRid.clusterId);
}
