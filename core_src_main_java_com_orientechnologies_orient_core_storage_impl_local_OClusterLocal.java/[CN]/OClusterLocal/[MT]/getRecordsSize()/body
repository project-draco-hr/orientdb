{
  acquireSharedLock();
  try {
    long size=fileSegment.getFilledUpTo();
    final OClusterPositionIterator it=absoluteIterator();
    final OPhysicalPosition pos=new OPhysicalPosition();
    while (it.hasNext()) {
      final Long position=it.next();
      getPhysicalPosition(position.longValue(),pos);
      if (pos.dataChunkPosition > -1)       size+=storage.getDataSegmentById(pos.dataSegmentId).getRecordSize(pos.dataChunkPosition);
    }
    return size;
  }
 catch (  IOException e) {
    throw new OIOException("Error on calculating cluster size for: " + getName(),e);
  }
 finally {
    releaseSharedLock();
  }
}
