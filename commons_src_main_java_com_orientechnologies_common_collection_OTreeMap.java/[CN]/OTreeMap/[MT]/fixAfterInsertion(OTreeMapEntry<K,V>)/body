{
  x.setColor(RED);
  while (x != null && x != root && x.getParent() != null && x.getParent().getColor() == RED) {
    if (parentOf(x) == leftOf(parentOf(parentOf(x)))) {
      OTreeMapEntry<K,V> y=rightOf(parentOf(parentOf(x)));
      if (colorOf(y) == RED) {
        setColor(parentOf(x),BLACK);
        setColor(y,BLACK);
        setColor(parentOf(parentOf(x)),RED);
        x=parentOf(parentOf(x));
      }
 else {
        if (x == rightOf(parentOf(x))) {
          x=parentOf(x);
          rotateLeft(x);
        }
        setColor(parentOf(x),BLACK);
        setColor(parentOf(parentOf(x)),RED);
        rotateRight(parentOf(parentOf(x)));
      }
    }
 else {
      OTreeMapEntry<K,V> y=leftOf(parentOf(parentOf(x)));
      if (colorOf(y) == RED) {
        setColor(parentOf(x),BLACK);
        setColor(y,BLACK);
        setColor(parentOf(parentOf(x)),RED);
        x=parentOf(parentOf(x));
      }
 else {
        if (x == leftOf(parentOf(x))) {
          x=parentOf(x);
          rotateRight(x);
        }
        setColor(parentOf(x),BLACK);
        setColor(parentOf(parentOf(x)),RED);
        rotateLeft(parentOf(parentOf(x)));
      }
    }
  }
  root.setColor(BLACK);
}
