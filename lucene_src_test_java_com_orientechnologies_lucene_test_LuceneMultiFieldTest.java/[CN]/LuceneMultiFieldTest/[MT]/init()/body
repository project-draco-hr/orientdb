{
  initDB();
  OSchema schema=databaseDocumentTx.getMetadata().getSchema();
  OClass v=schema.getClass("V");
  OClass song=schema.createClass("Song");
  song.setSuperClass(v);
  song.createProperty("title",OType.STRING);
  song.createProperty("author",OType.STRING);
  databaseDocumentTx.command(new OCommandSQL("create index Song.title_author on Song (title,author) FULLTEXT ENGINE LUCENE METADATA {" + "\"title_index_analyzer\":\"" + EnglishAnalyzer.class.getName() + "\" , "+ "\"title_query_analyzer\":\""+ EnglishAnalyzer.class.getName()+ "\" , "+ "\"author_index_analyzer\":\""+ StandardAnalyzer.class.getName()+ "\"}")).execute();
  final ODocument index=databaseDocumentTx.getMetadata().getIndexManager().getIndex("Song.title_author").getMetadata();
  assertThat(index.field("author_index_analyzer")).isEqualTo(StandardAnalyzer.class.getName());
  assertThat(index.field("title_index_analyzer")).isEqualTo(EnglishAnalyzer.class.getName());
  InputStream stream=ClassLoader.getSystemResourceAsStream("testLuceneIndex.sql");
  databaseDocumentTx.command(new OCommandScript("sql",getScriptFromStream(stream))).execute();
}
