{
  return new Iterator<OClosableEntry<K,E>>(){
    private OClosableEntry<K,E> next=tail;
    @Override public boolean hasNext(){
      return next != null;
    }
    @Override public OClosableEntry<K,E> next(){
      if (next == null) {
        throw new NoSuchElementException();
      }
      OClosableEntry<K,E> result=next;
      next=next.getPrev();
      return result;
    }
    @Override public void remove(){
      throw new UnsupportedOperationException();
    }
  }
;
}
