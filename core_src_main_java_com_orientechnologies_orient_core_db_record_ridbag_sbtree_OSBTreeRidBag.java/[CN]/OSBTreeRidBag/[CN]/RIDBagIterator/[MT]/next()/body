{
  currentRemoved=false;
  if (currentCounter < currentFinalCounter) {
    currentCounter++;
    return currentValue;
  }
  if (newEntryIterator.hasNext()) {
    Map.Entry<OIdentifiable,OModifiableInteger> entry=newEntryIterator.next();
    currentValue=entry.getKey();
    currentFinalCounter=entry.getValue().intValue();
    currentCounter=1;
    return currentValue;
  }
  if (nextChange != null && nextSBTreeEntry != null) {
    if (nextChange.getKey().compareTo(nextSBTreeEntry.getKey()) < 0) {
      currentValue=nextChange.getKey();
      currentFinalCounter=nextChange.getValue().applyTo(0);
      currentCounter=1;
      nextChange=nextChangedNotRemovedEntry(changedValuesIterator);
    }
 else     if (nextChange.getKey().compareTo(nextSBTreeEntry.getKey()) >= 0) {
      currentValue=nextSBTreeEntry.getKey();
      currentFinalCounter=nextSBTreeEntry.getValue();
      currentCounter=1;
      nextSBTreeEntry=nextChangedNotRemovedSBTreeEntry(sbTreeIterator);
      if (nextChange != null && nextChange.getKey().equals(currentValue))       nextChange=nextChangedNotRemovedEntry(changedValuesIterator);
    }
  }
 else   if (nextChange != null) {
    currentValue=nextChange.getKey();
    currentFinalCounter=nextChange.getValue().applyTo(0);
    currentCounter=1;
    nextChange=nextChangedNotRemovedEntry(changedValuesIterator);
  }
 else   if (nextSBTreeEntry != null) {
    currentValue=nextSBTreeEntry.getKey();
    currentFinalCounter=nextSBTreeEntry.getValue();
    currentCounter=1;
    nextSBTreeEntry=nextChangedNotRemovedSBTreeEntry(sbTreeIterator);
  }
 else   throw new NoSuchElementException();
  if (convertToRecord)   return currentValue.getRecord();
  return currentValue;
}
