{
  if (!(iRecord instanceof ODocument))   throw new OSerializationException("Can't marshall a record of type " + iRecord.getClass().getSimpleName() + " to CSV");
  final ODocument record=(ODocument)iRecord;
  final Integer identityRecord=System.identityHashCode(record);
  if (iMarshalledRecords != null)   if (iMarshalledRecords.contains(identityRecord)) {
    return "";
  }
 else   iMarshalledRecords.add(identityRecord);
  ODatabaseRecord database=record.getDatabase();
  final StringBuilder buffer=new StringBuilder();
  if (record.getClassName() != null) {
    buffer.append(record.getClassName());
    buffer.append(OStringSerializerHelper.CLASS_SEPARATOR);
  }
  OProperty prop;
  Object fieldValue;
  OType type;
  OClass linkedClass;
  OType linkedType;
  String fieldClassName;
  int i=0;
  for (  Entry<String,Object> f : record) {
    if (i > 0)     buffer.append(OStringSerializerHelper.RECORD_SEPARATOR);
    prop=record.getSchemaClass() != null ? record.getSchemaClass().getProperty(f.getKey()) : null;
    fieldValue=f.getValue();
    fieldClassName=getClassName(fieldValue);
    type=record.fieldType(f.getKey());
    linkedClass=null;
    linkedType=null;
    if (prop != null) {
      type=prop.getType();
      linkedClass=prop.getLinkedClass();
      linkedType=prop.getLinkedType();
    }
 else     if (fieldValue != null) {
      if (fieldValue.getClass() == byte[].class) {
        type=OType.BINARY;
      }
 else       if (fieldValue instanceof Collection<?> || fieldValue.getClass().isArray()) {
        int size=OMultiValue.getSize(fieldValue);
        if (size > 0) {
          Object firstValue=OMultiValue.getFirstValue(fieldValue);
          if (firstValue != null) {
            if (database != null && (firstValue instanceof ORID || firstValue instanceof ORecordSchemaAware<?> || (database.getDatabaseOwner() instanceof ODatabaseObject && ((ODatabaseObject)database.getDatabaseOwner()).getEntityManager().getEntityClass(getClassName(firstValue)) != null))) {
              linkedClass=getLinkInfo(database,getClassName(firstValue));
              if (type == null) {
                linkedType=OType.LINK;
                if (fieldValue instanceof Set<?>)                 type=OType.LINKSET;
 else                 type=OType.LINKLIST;
              }
 else               linkedType=OType.EMBEDDED;
            }
 else {
              linkedType=OType.getTypeByClass(firstValue.getClass());
              if (linkedType != OType.LINK) {
                if (linkedType == null) {
                  linkedType=OType.EMBEDDED;
                }
                if (type == null)                 if (fieldValue instanceof Set<?>)                 type=OType.EMBEDDEDSET;
 else                 type=OType.EMBEDDEDLIST;
              }
            }
          }
        }
 else         if (type == null)         type=OType.EMBEDDEDLIST;
      }
 else       if (fieldValue instanceof Map<?,?>) {
        if (type == null)         type=OType.EMBEDDEDMAP;
        if (OMultiValue.getSize(fieldValue) > 0) {
          Object firstValue=OMultiValue.getFirstValue(fieldValue);
          if (database != null && (firstValue instanceof ORecordSchemaAware<?> || (database.getDatabaseOwner() instanceof ODatabaseObject && ((ODatabaseObject)database.getDatabaseOwner()).getEntityManager().getEntityClass(getClassName(firstValue)) != null))) {
            if (((ORecordInternal<?>)firstValue).getIdentity().isValid())             type=OType.LINKMAP;
            linkedType=type == OType.EMBEDDEDLIST || type == OType.EMBEDDEDSET || type == OType.EMBEDDEDMAP ? OType.EMBEDDED : OType.LINK;
            linkedClass=getLinkInfo(database,getClassName(firstValue));
          }
 else {
            linkedType=OType.getTypeByClass(firstValue.getClass());
            if (linkedType == OType.LINK && type == OType.EMBEDDEDMAP)             type=OType.LINKMAP;
          }
        }
      }
 else       if (database != null && fieldValue instanceof ORecord<?>) {
        if (type == null)         if (fieldValue instanceof ODocument && ((ODocument)fieldValue).hasOwners())         type=OType.EMBEDDED;
 else         type=OType.LINK;
        linkedClass=getLinkInfo(database,fieldClassName);
      }
 else       if (fieldValue instanceof ORID) {
        if (type == null)         type=OType.LINK;
      }
 else       if (database != null && database.getDatabaseOwner() instanceof ODatabaseObject && ((ODatabaseObject)database.getDatabaseOwner()).getEntityManager().getEntityClass(fieldClassName) != null) {
        if (type == null)         type=OType.LINK;
        linkedClass=getLinkInfo(database,fieldClassName);
      }
 else       if (fieldValue instanceof Date) {
        if (type == null)         type=OType.DATE;
      }
 else       if (fieldValue instanceof String)       type=OType.STRING;
 else       if (fieldValue instanceof Integer)       type=OType.INTEGER;
 else       if (fieldValue instanceof Long)       type=OType.LONG;
 else       if (fieldValue instanceof Float)       type=OType.FLOAT;
 else       if (fieldValue instanceof Short)       type=OType.SHORT;
 else       if (fieldValue instanceof Byte)       type=OType.BYTE;
 else       if (fieldValue instanceof Double)       type=OType.DOUBLE;
    }
    if (type == null)     type=OType.EMBEDDED;
    fieldValue=fieldToStream((ODocument)iRecord,iRecord.getDatabase(),iObjHandler,type,linkedClass,linkedType,f.getKey(),f.getValue(),iMarshalledRecords,true);
    buffer.append(f.getKey());
    buffer.append(FIELD_VALUE_SEPARATOR);
    if (fieldValue != null)     buffer.append(fieldValue);
    i++;
  }
  if (iMarshalledRecords != null)   iMarshalledRecords.remove(identityRecord);
  return buffer.toString();
}
