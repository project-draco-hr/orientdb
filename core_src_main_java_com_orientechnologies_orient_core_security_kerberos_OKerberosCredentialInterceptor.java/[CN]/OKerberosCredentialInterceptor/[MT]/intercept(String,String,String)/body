{
  if (principal == null || principal.isEmpty())   throw new OSecurityException("OKerberosCredentialInterceptor Principal cannot be null!");
  _Principal=principal;
  String actualSPN=spn;
  System.out.println("\n===== OKerberosCredentialInterceptor url = " + url);
  System.out.println("\n===== OKerberosCredentialInterceptor principal = " + principal);
  System.out.println("\n===== OKerberosCredentialInterceptor spn = " + spn);
  if (spn == null || spn.isEmpty()) {
    if (url == null || url.isEmpty())     throw new OSecurityException("OKerberosCredentialInterceptor URL and SPN cannot both be null!");
    try {
      URL remoteURL=new URL(url);
      String host=remoteURL.getHost();
      System.out.println("\n===== OKerberosCredentialInterceptor host = " + host);
      actualSPN="OrientDB/" + host;
    }
 catch (    MalformedURLException mue) {
      throw new OSecurityException("OKerberosCredentialInterceptor Could not create SPN from URL: " + url);
    }
  }
  String config=System.getenv("KRB5_CONFIG");
  String ckc=OGlobalConfiguration.CLIENT_KRB5_CONFIG.getValueAsString();
  if (ckc != null)   config=ckc;
  String ccname=System.getenv("KRB5CCNAME");
  String ccn=OGlobalConfiguration.CLIENT_KRB5_CCNAME.getValueAsString();
  if (ccn != null)   ccname=ccn;
  String ktname=System.getenv("KRB5_CLIENT_KTNAME");
  String ckn=OGlobalConfiguration.CLIENT_KRB5_KTNAME.getValueAsString();
  if (ckn != null)   ktname=ckn;
  if (config == null)   throw new OSecurityException("OKerberosCredentialInterceptor KRB5 Config cannot be null!");
  if (ccname == null && ktname == null)   throw new OSecurityException("OKerberosCredentialInterceptor KRB5 Credential Cache and KeyTab cannot both be null!");
  LoginContext lc=null;
  try {
    System.setProperty("java.security.krb5.conf",config);
    OKrb5ClientLoginModuleConfig cfg=new OKrb5ClientLoginModuleConfig(principal,ccname,ktname);
    lc=new LoginContext("ignore",null,null,cfg);
    lc.login();
  }
 catch (  LoginException lie) {
    System.out.println("OKerberosCredentialInterceptor.intercept() LoginException: " + lie);
    OLogManager.instance().debug(this,"intercept() LoginException",lie);
    throw new OSecurityException("OKerberosCredentialInterceptor Client Validation Exception!");
  }
  Subject subject=lc.getSubject();
  _ServiceTicket=getServiceTicket(subject,principal,actualSPN);
  try {
    lc.logout();
  }
 catch (  LoginException loe) {
    OLogManager.instance().debug(this,"intercept() LogoutException",loe);
  }
  if (_ServiceTicket == null)   System.out.println("OKerberosCredentialInterceptor.intercept() Cannot obtain the service ticket for: " + actualSPN);
  if (_ServiceTicket == null)   throw new OSecurityException("OKerberosCredentialInterceptor Cannot obtain the service ticket!");
}
