{
  cluster=iCluster;
  storageName=iStorageName;
  storage=openStorage(iStorageName);
  final File replicationDirectory=new File(OSystemVariableResolver.resolveSystemVariables(OSynchronizationLog.SYNCHRONIZATION_DIRECTORY + "/" + iStorageName));
  if (!replicationDirectory.exists())   replicationDirectory.mkdirs();
 else {
    if (!replicationDirectory.isDirectory()) {
      OLogManager.instance().warn(this,"DISTRIBUTED log directory is a file instead of a directory! Delete and recreate it");
      replicationDirectory.delete();
      replicationDirectory.mkdirs();
    }
 else {
      for (      File sub : replicationDirectory.listFiles()) {
        OSynchronizationLog localLog;
        try {
          localLog=new OSynchronizationLog(cluster,sub,storageName,getLogLimit().longValue());
          logs.put(localLog.getNodeId(),localLog);
        }
 catch (        IOException e) {
          OLogManager.instance().error(this,"Cannot open distributed log file: " + sub,e);
        }
      }
    }
  }
}
