{
  className=className.toLowerCase();
  final ODatabaseDocumentInternal database=getDatabase();
  int[] clusterIds;
  if (minimumClusters == 0) {
    if (internalClasses.contains(className.toLowerCase())) {
      minimumClusters=1;
    }
 else {
      final int cpus=Runtime.getRuntime().availableProcessors();
      minimumClusters=cpus > 64 ? 64 : cpus;
    }
  }
  clusterIds=new int[minimumClusters];
  clusterIds[0]=database.getClusterIdByName(className);
  if (clusterIds[0] > -1) {
    final OClass cls=clustersToClasses.get(clusterIds[0]);
    if (cls != null)     clusterIds[0]=database.addCluster(getNextAvailableClusterName(className));
  }
 else   clusterIds[0]=database.addCluster(className);
  for (int i=1; i < minimumClusters; ++i)   clusterIds[i]=database.addCluster(getNextAvailableClusterName(className));
  return clusterIds;
}
