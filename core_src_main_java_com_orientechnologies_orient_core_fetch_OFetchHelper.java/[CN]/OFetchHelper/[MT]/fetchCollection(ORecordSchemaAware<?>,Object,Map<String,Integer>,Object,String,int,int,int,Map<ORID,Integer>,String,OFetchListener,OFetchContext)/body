{
  final Collection<OIdentifiable> linked;
  if (fieldValue instanceof ODocument) {
    linked=new OMVRBTreeRIDSet().fromDocument((ODocument)fieldValue);
  }
 else {
    linked=(Collection<OIdentifiable>)fieldValue;
  }
  iContext.onBeforeCollection(iRootRecord,fieldName,iUserObject,linked);
  final Iterator<OIdentifiable> iter;
  if (linked instanceof ORecordLazyMultiValue)   iter=((ORecordLazyMultiValue)linked).rawIterator();
 else   iter=linked.iterator();
  while (iter.hasNext()) {
    OIdentifiable d=iter.next();
    if (d == null)     continue;
    final Integer fieldDepthLevel=parsedRecords.get(d.getIdentity());
    if (!d.getIdentity().isValid() || (fieldDepthLevel != null && fieldDepthLevel.intValue() == iLevelFromRoot)) {
      removeParsedFromMap(parsedRecords,d);
      d=d.getRecord();
      if (!(d instanceof ODocument)) {
        iListener.processStandardField(null,d,fieldName,iContext,iUserObject);
      }
 else {
        iContext.onBeforeDocument(iRootRecord,(ODocument)d,fieldName,iUserObject);
        final Object userObject=iListener.fetchLinkedCollectionValue(iRootRecord,iUserObject,fieldName,(ODocument)d,iContext);
        processRecord((ODocument)d,userObject,iFetchPlan,iCurrentLevel,iLevelFromRoot,iFieldDepthLevel,parsedRecords,iFieldPathFromRoot,iListener,iContext);
        iContext.onAfterDocument(iRootRecord,(ODocument)d,fieldName,iUserObject);
      }
    }
 else {
      iListener.parseLinkedCollectionValue(iRootRecord,d,iUserObject,fieldName,iContext);
    }
  }
  iContext.onAfterCollection(iRootRecord,fieldName,iUserObject);
}
