{
  super.configure(iProcessor,conf,iContext);
  if (conf.containsField("dbURL"))   dbURL=(String)resolve(conf.field("dbURL"));
  if (conf.containsField("dbUser"))   dbUser=(String)resolve(conf.field("dbUser"));
  if (conf.containsField("dbPassword"))   dbPassword=(String)resolve(conf.field("dbPassword"));
  if (conf.containsField("serverUser"))   serverUser=(String)resolve(conf.field("serverUser"));
  if (conf.containsField("serverPassword"))   serverPassword=(String)resolve(conf.field("serverPassword"));
  if (conf.containsField("dbType"))   dbType=DB_TYPE.valueOf(conf.field("dbType").toString().toUpperCase());
  if (conf.containsField("tx"))   tx=conf.<Boolean>field("tx");
  if (conf.containsField("wal"))   wal=conf.<Boolean>field("wal");
  if (conf.containsField("txUseLog"))   txUseLog=conf.<Boolean>field("txUseLog");
  if (conf.containsField("batchCommit"))   batchCommitSize=conf.<Integer>field("batchCommit");
  if (conf.containsField("dbAutoCreate"))   dbAutoCreate=conf.<Boolean>field("dbAutoCreate");
  if (conf.containsField("dbAutoDropIfExists"))   dbAutoDropIfExists=conf.<Boolean>field("dbAutoDropIfExists");
  if (conf.containsField("dbAutoCreateProperties"))   dbAutoCreateProperties=conf.<Boolean>field("dbAutoCreateProperties");
  if (conf.containsField("useLightweightEdges"))   useLightweightEdges=conf.<Boolean>field("useLightweightEdges");
  if (conf.containsField("standardElementConstraints"))   standardElementConstraints=conf.<Boolean>field("standardElementConstraints");
  clusterName=conf.field("cluster");
  className=conf.field("class");
  indexes=conf.field("indexes");
  classes=conf.field("classes");
  if (conf.containsField("settings")) {
    final ODocument settings=conf.field("settings");
    settings.setAllowChainedAccess(false);
    for (    String s : settings.fieldNames()) {
      final OGlobalConfiguration v=OGlobalConfiguration.findByKey(s);
      if (v != null)       v.setValue(settings.field(s));
    }
  }
  OGlobalConfiguration.USE_WAL.setValue(wal);
  if (dbURL.startsWith("remote")) {
    manageRemoteDatabase();
  }
 else {
switch (dbType) {
case DOCUMENT:
      configureDocumentDB();
    break;
case GRAPH:
  configureGraphDB();
break;
}
}
}
