{
  final Boolean copy=getFieldOfClass(iConfig,"copy",Boolean.class);
  Object values=getField(iConfig,"values");
  if (values != null) {
    if (values instanceof ODocument) {
      final ODocument doc=((ODocument)values);
      for (      String fieldName : doc.fieldNames())       assignVariable(iContext,resolve(fieldName,iContext).toString(),resolve(doc.field(fieldName),iContext));
    }
 else     if (values instanceof Map<?,?>) {
      for (      Entry<Object,Object> entry : ((Map<Object,Object>)values).entrySet()) {
        assignVariable(iContext,resolve(entry.getKey(),iContext).toString(),getValue(resolve(entry.getValue(),iContext),copy));
      }
    }
 else     throw new OProcessException("Field 'values' in not a multi-value (collection, array, map). Found type '" + values.getClass() + "'");
  }
 else {
    final String name=getRequiredFieldOfClass(iConfig,"name",String.class);
    Object value=getRequiredField(iConfig,"value");
    if (value instanceof String)     value=resolve(value,iContext);
 else     if (value instanceof List<?>) {
      List<Object> list=(List<Object>)value;
      for (int i=0; i < list.size(); ++i)       list.set(i,resolve(list.get(i),iContext));
    }
    assignVariable(iContext,name,getValue(value,copy));
  }
  return null;
}
