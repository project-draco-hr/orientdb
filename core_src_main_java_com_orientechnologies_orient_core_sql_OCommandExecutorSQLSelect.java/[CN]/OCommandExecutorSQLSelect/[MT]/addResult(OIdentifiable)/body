{
  if (iRecord == null)   return;
  if (projections != null || groupByFields != null && !groupByFields.isEmpty()) {
    if (groupedResult == null) {
      iRecord=ORuntimeResult.getProjectionResult(resultCount,projections,context,iRecord);
      if (iRecord == null)       return;
    }
 else {
      final ODocument doc=(ODocument)iRecord.getRecord();
      Object fieldValue=null;
      if (groupByFields != null && !groupByFields.isEmpty()) {
        if (groupByFields.size() > 1) {
          final Object[] fields=new Object[groupByFields.size()];
          for (int i=0; i < groupByFields.size(); ++i)           fields[i]=doc.field(groupByFields.get(i));
          fieldValue=fields;
        }
 else         fieldValue=doc.field(groupByFields.get(0));
      }
      getProjectionGroup(fieldValue).applyRecord(iRecord);
      return;
    }
  }
  if (orderedFields == null && flattenTarget == null) {
    if (request.getResultListener() != null)     request.getResultListener().result(iRecord);
  }
 else {
    if (tempResult == null)     tempResult=new ArrayList<OIdentifiable>();
    tempResult.add(iRecord);
  }
}
