{
  OSQLAsynchQuery<ORecordSchemaAware<?>> query=(OSQLAsynchQuery<ORecordSchemaAware<?>>)iQuery;
  query.parse();
  String firstClass=query.compiledFilter.getClasses().size() > 0 ? query.compiledFilter.getClasses().keySet().iterator().next() : null;
  final int[] clusterIds;
  if (firstClass != null) {
    OClass cls=query.getDatabase().getMetadata().getSchema().getClass(firstClass.toLowerCase());
    if (cls == null)     throw new OQueryExecutionException("Class " + firstClass + " was not found");
    if (query.getRecord() instanceof ORecordSchemaAware<?>)     ((ORecordSchemaAware<?>)query.getRecord()).setClassName(cls.getName());
    clusterIds=cls.getClusterIds();
  }
 else {
    String firstCluster=query.compiledFilter.getClusters().size() > 0 ? query.compiledFilter.getClusters().keySet().iterator().next() : null;
    if (firstCluster == null || firstCluster.length() == 0)     throw new OQueryExecutionException("No cluster or schema class selected in query");
    if (Character.isDigit(firstCluster.charAt(0)))     clusterIds=OStringSerializerHelper.splitIntArray(firstCluster);
 else {
      clusterIds=new int[]{query.getDatabase().getClusterIdByName(firstCluster.toLowerCase())};
    }
  }
  ((OStorageLocal)query.getDatabase().getStorage()).browse(query.getDatabase().getId(),clusterIds,query,query.getRecord());
  return null;
}
