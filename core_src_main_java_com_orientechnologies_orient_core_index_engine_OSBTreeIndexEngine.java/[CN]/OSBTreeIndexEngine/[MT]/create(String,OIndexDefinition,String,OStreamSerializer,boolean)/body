{
  acquireExclusiveLock();
  try {
    final OBinarySerializer keySerializer=determineKeySerializer(indexDefinition);
    final int keySize=determineKeySize(indexDefinition);
    sbTree=new OSBTree<Object,V>(DATA_FILE_EXTENSION,keySize,OGlobalConfiguration.INDEX_DURABLE_IN_NON_TX_MODE.getValueAsBoolean(),NULL_BUCKET_FILE_EXTENSION);
    final ORecordBytes identityRecord=new ORecordBytes();
    ODatabaseRecord database=getDatabase();
    final OStorageLocalAbstract storageLocalAbstract=(OStorageLocalAbstract)database.getStorage().getUnderlying();
    database.save(identityRecord,clusterIndexName);
    identity=identityRecord.getIdentity();
    sbTree.create(indexName,keySerializer,(OBinarySerializer<V>)valueSerializer,indexDefinition != null ? indexDefinition.getTypes() : null,storageLocalAbstract,indexDefinition != null && !indexDefinition.isNullValuesIgnored());
  }
  finally {
    releaseExclusiveLock();
  }
}
