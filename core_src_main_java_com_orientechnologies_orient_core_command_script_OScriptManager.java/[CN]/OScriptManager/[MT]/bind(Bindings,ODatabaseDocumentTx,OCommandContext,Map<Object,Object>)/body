{
  if (db != null) {
    binding.put("db",new OScriptDocumentDatabaseWrapper(db));
    binding.put("orient",new OScriptOrientWrapper(db));
  }
  binding.put("util",new OFunctionUtilWrapper());
  for (  OScriptInjection i : injections)   i.bind(binding);
  if (iContext != null) {
    binding.put("ctx",iContext);
    for (    Entry<String,Object> a : iContext.getVariables().entrySet()) {
      final Object prev=binding.get(a.getKey());
      if (prev != null && a.getValue() != null && !prev.getClass().equals(a.getValue().getClass()))       throw new OCommandScriptException("Cannot bind context variable '" + a.getKey() + "' because engine already contains it as: "+ prev+ ". Rename variable to avoid this conflict");
      binding.put(a.getKey(),a.getValue());
    }
  }
  if (iArgs != null) {
    for (    Entry<Object,Object> a : iArgs.entrySet()) {
      final Object prev=binding.get(a.getKey());
      if (prev != null && a.getValue() != null && !prev.getClass().equals(a.getValue().getClass()))       throw new OCommandScriptException("Cannot bind parameter '" + a.getKey() + "' because engine already contains it as: "+ prev+ ". Rename parameter to avoid this conflict");
      binding.put(a.getKey().toString(),a.getValue());
    }
    binding.put("params",iArgs.values().toArray());
  }
 else   binding.put("params",EMPTY_PARAMS);
  return binding;
}
