{
  scriptEngineManager=new ScriptEngineManager();
  registerEngine(OSQLScriptEngine.NAME,new OSQLScriptEngineFactory());
  for (  ScriptEngineFactory f : scriptEngineManager.getEngineFactories()) {
    registerEngine(f.getLanguageName().toLowerCase(),f);
    if (defaultLanguage == null)     defaultLanguage=f.getLanguageName();
  }
  if (!existsEngine(DEF_LANGUAGE)) {
    final ScriptEngine defEngine=scriptEngineManager.getEngineByName(DEF_LANGUAGE);
    if (defEngine == null) {
      OLogManager.instance().warn(this,"Cannot find default script language for %s",DEF_LANGUAGE);
    }
 else {
      registerEngine(DEF_LANGUAGE,defEngine.getFactory());
      defaultLanguage=DEF_LANGUAGE;
    }
  }
  registerFormatter(OSQLScriptEngine.NAME,new OSQLScriptFormatter());
  registerFormatter(DEF_LANGUAGE,new OJSScriptFormatter());
  registerFormatter("ruby",new ORubyScriptFormatter());
  registerFormatter("groovy",new OGroovyScriptFormatter());
}
