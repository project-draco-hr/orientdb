{
  int contentSize=walRecord.serializedSize() + 1;
  byte[] content=new byte[contentSize];
  if (walRecord instanceof OUpdatePageRecord)   content[0]=0;
 else   if (walRecord instanceof OFuzzyCheckpointStartRecord)   content[0]=1;
 else   if (walRecord instanceof OFuzzyCheckpointEndRecord)   content[0]=2;
 else   if (walRecord instanceof ODirtyPagesRecord)   content[0]=3;
 else   if (walRecord instanceof OFullCheckpointStartRecord)   content[0]=4;
 else   if (walRecord instanceof OCheckpointEndRecord)   content[0]=5;
 else   if (walRecord instanceof OAtomicUnitStartRecord)   content[0]=8;
 else   if (walRecord instanceof OAtomicUnitEndRecord)   content[0]=9;
 else   if (walRecord instanceof OFileCreatedCreatedWALRecord)   content[0]=10;
 else   if (typeToIdMap.containsKey(walRecord.getClass())) {
    content[0]=typeToIdMap.get(walRecord.getClass());
  }
 else   throw new IllegalArgumentException(walRecord.getClass().getName() + " class can not be serialized.");
  walRecord.toStream(content,1);
  return content;
}
