{
  final Map<Object,T> origValues;
  if (changeListeners == null)   origValues=null;
 else   origValues=new HashMap<Object,T>(this);
  if (origValues == null) {
    for (    T value : super.values())     if (value instanceof ODocument) {
      ODocumentInternal.removeOwner((ODocument)value,this);
    }
  }
  super.clear();
  if (origValues != null) {
    for (    Map.Entry<Object,T> entry : origValues.entrySet()) {
      if (entry.getValue() instanceof ODocument) {
        ODocumentInternal.removeOwner((ODocument)entry.getValue(),this);
      }
      fireCollectionChangedEvent(new OMultiValueChangeEvent<Object,T>(OMultiValueChangeEvent.OChangeType.REMOVE,entry.getKey(),null,entry.getValue()));
      removeNested(entry.getValue());
    }
  }
 else   setDirty();
}
