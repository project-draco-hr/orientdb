{
  OClass roleClass=database.getMetadata().getSchema().getClass("ORole");
  boolean unsafe=false;
  if (roleClass == null) {
    roleClass=database.getMetadata().getSchema().createClass("ORole",identityClass);
    unsafe=true;
  }
 else   if (!roleClass.getSuperClasses().contains(identityClass))   roleClass.setSuperClasses(Arrays.asList(identityClass));
  if (!roleClass.existsProperty("name")) {
    roleClass.createProperty("name",OType.STRING,(OType)null,unsafe).setMandatory(true).setNotNull(true).setCollate("ci");
    roleClass.createIndex("ORole.name",INDEX_TYPE.UNIQUE,ONullOutputListener.INSTANCE,"name");
  }
 else {
    final OProperty name=roleClass.getProperty("name");
    if (name.getAllIndexes().isEmpty())     roleClass.createIndex("ORole.name",INDEX_TYPE.UNIQUE,ONullOutputListener.INSTANCE,"name");
  }
  if (!roleClass.existsProperty("mode"))   roleClass.createProperty("mode",OType.BYTE,(OType)null,unsafe);
  if (!roleClass.existsProperty("rules"))   roleClass.createProperty("rules",OType.EMBEDDEDMAP,OType.BYTE,unsafe);
  if (!roleClass.existsProperty("inheritedRole"))   roleClass.createProperty("inheritedRole",OType.LINK,roleClass,unsafe);
  return roleClass;
}
