{
  checkSyntax(iRequest.url,1,"Syntax error: server");
  try {
    StringWriter jsonBuffer=new StringWriter();
    OJSONWriter json=new OJSONWriter(jsonBuffer);
    json.beginObject();
    json.beginCollection(1,true,"connections");
    OClientConnection[] conns=OServerMain.server().getManagedServer().getConnections();
    for (    OClientConnection c : conns) {
      json.beginObject();
      json.writeAttribute(2,true,"id",c.id);
      json.writeAttribute(2,true,"db",c.database != null ? c.database.getName() : null);
      json.writeAttribute(2,true,"protocol",c.protocol.getName());
      json.writeAttribute(2,true,"totalRequests",c.protocol.getData().totalRequests);
      json.writeAttribute(2,true,"commandType",c.protocol.getData().commandType);
      json.writeAttribute(2,true,"lastCommandType",c.protocol.getData().lastCommandType);
      json.writeAttribute(2,true,"lastCommandDetail",c.protocol.getData().lastCommandDetail);
      json.writeAttribute(2,true,"lastExecutionTime",c.protocol.getData().lastCommandExecutionTime);
      json.writeAttribute(2,true,"totalWorkingTime",c.protocol.getData().totalCommandExecutionTime);
      json.writeAttribute(2,true,"connectedOn",dateTimeFormat.format(new Date(c.since)));
      json.endObject();
    }
    json.endCollection(1,false);
    json.endObject();
    sendTextContent(iRequest,OHttpUtils.STATUS_OK_CODE,"OK",OHttpUtils.CONTENT_TEXT_PLAIN,jsonBuffer.toString());
  }
  finally {
  }
}
