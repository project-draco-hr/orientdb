{
  final int oldPosition=currentPos;
  final String[] words=nextValue(true);
  if (words != null && words.length > 0 && (words[0].equalsIgnoreCase("SELECT") || words[0].equalsIgnoreCase("TRAVERSE"))) {
    final StringBuilder embedded=new StringBuilder();
    OStringSerializerHelper.getEmbedded(text,oldPosition - 1,-1,embedded);
    currentPos+=embedded.length() + 1;
    return new OSQLSynchQuery<Object>(embedded.toString());
  }
  currentPos=oldPosition;
  final OSQLFilterCondition currentCondition=extractCondition();
  if (!jumpWhiteSpaces())   return currentCondition;
  if (currentPos > -1 && text.charAt(currentPos) == ')')   return currentCondition;
  final OQueryOperator nextOperator=extractConditionOperator();
  if (nextOperator == null)   return currentCondition;
  if (nextOperator.precedence > currentCondition.getOperator().precedence) {
    final OSQLFilterCondition subCondition=new OSQLFilterCondition(currentCondition.right,nextOperator);
    currentCondition.right=subCondition;
    subCondition.right=extractConditions(subCondition);
    return currentCondition;
  }
 else {
    final OSQLFilterCondition parentCondition=new OSQLFilterCondition(currentCondition,nextOperator);
    parentCondition.right=extractConditions(parentCondition);
    return parentCondition;
  }
}
