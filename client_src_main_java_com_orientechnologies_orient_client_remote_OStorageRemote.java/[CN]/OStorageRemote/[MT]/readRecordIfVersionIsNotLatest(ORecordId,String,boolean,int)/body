{
  if (OStorageRemoteThreadLocal.INSTANCE.get().commandExecuting)   return new OStorageOperationResult<ORawBuffer>(null);
  return networkOperation(new OStorageRemoteOperation<OStorageOperationResult<ORawBuffer>>(){
    @Override public OStorageOperationResult<ORawBuffer> execute(    OChannelBinaryAsynchClient network) throws IOException {
      try {
        beginRequest(network,OChannelBinaryProtocol.REQUEST_RECORD_LOAD_IF_VERSION_NOT_LATEST);
        network.writeRID(rid);
        network.writeVersion(recordVersion);
        network.writeString(fetchPlan != null ? fetchPlan : "");
        network.writeByte((byte)(ignoreCache ? 1 : 0));
      }
  finally {
        endRequest(network);
      }
      try {
        beginResponse(network);
        if (network.readByte() == 0)         return new OStorageOperationResult<ORawBuffer>(null);
        byte type=network.readByte();
        int recVersion=network.readVersion();
        byte[] bytes=network.readBytes();
        ORawBuffer buffer=new ORawBuffer(bytes,recVersion,type);
        final ODatabaseDocument database=ODatabaseRecordThreadLocal.INSTANCE.getIfDefined();
        ORecord record;
        while (network.readByte() == 2) {
          record=(ORecord)OChannelBinaryProtocol.readIdentifiable(network);
          if (database != null)           database.getLocalCache().updateRecord(record);
        }
        return new OStorageOperationResult<ORawBuffer>(buffer);
      }
  finally {
        endResponse(network);
      }
    }
  }
,"Error on read record \" + rid");
}
