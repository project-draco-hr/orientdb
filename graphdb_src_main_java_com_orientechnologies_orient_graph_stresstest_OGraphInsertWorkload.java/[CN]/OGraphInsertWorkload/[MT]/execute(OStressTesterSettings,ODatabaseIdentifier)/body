{
  final List<OBaseWorkLoadContext> contexts=executeOperation(databaseIdentifier,resultVertices,settings.concurrencyLevel,settings.operationsPerTransaction,new OCallable<Void,OBaseWorkLoadContext>(){
    @Override public Void call(    final OBaseWorkLoadContext context){
      final OWorkLoadContext graphContext=((OWorkLoadContext)context);
      final OrientBaseGraph graph=graphContext.graph;
      final OrientVertex v=graph.addVertex(null,"_id",resultVertices.current.get());
      if (graphContext.lastVertexToConnect != null) {
        v.addEdge("E",graphContext.lastVertexToConnect);
        resultEdges.current.incrementAndGet();
        graphContext.lastVertexEdges++;
        if (graphContext.lastVertexEdges > factor) {
          graphContext.lastVertexEdges=0;
          if (strategy == STRATEGIES.LAST)           graphContext.lastVertexToConnect=v;
 else           if (strategy == STRATEGIES.RANDOM) {
            do {
              final int[] totalClusters=graph.getVertexBaseType().getClusterIds();
              final int randomCluster=totalClusters[new Random().nextInt(totalClusters.length)];
              long totClusterRecords=graph.getRawGraph().countClusterElements(randomCluster);
              if (totClusterRecords > 0) {
                final ORecordId randomRid=new ORecordId(randomCluster,new Random().nextInt((int)totClusterRecords));
                graphContext.lastVertexToConnect=graph.getVertex(randomRid);
                break;
              }
            }
 while (true);
          }
 else           if (strategy == STRATEGIES.SUPERNODE) {
            final int[] totalClusters=graph.getVertexBaseType().getClusterIds();
            final int firstCluster=totalClusters[0];
            long totClusterRecords=graph.getRawGraph().countClusterElements(firstCluster);
            if (totClusterRecords > 0) {
              final ORecordId randomRid=new ORecordId(firstCluster,0);
              graphContext.lastVertexToConnect=graph.getVertex(randomRid);
            }
          }
        }
      }
 else       graphContext.lastVertexToConnect=v;
      resultVertices.current.incrementAndGet();
      return null;
    }
  }
);
  final OrientBaseGraph graph=settings.operationsPerTransaction > 0 ? getGraph(databaseIdentifier) : getGraphNoTx(databaseIdentifier);
  try {
    OrientVertex lastVertex=null;
    for (    OBaseWorkLoadContext context : contexts) {
      for (int retry=0; retry < 100; ++retry)       try {
        if (lastVertex != null)         lastVertex.addEdge("E",((OWorkLoadContext)context).lastVertexToConnect);
        lastVertex=((OWorkLoadContext)context).lastVertexToConnect;
      }
 catch (      ONeedRetryException e) {
        lastVertex.reload();
        ((OWorkLoadContext)context).lastVertexToConnect.reload();
      }
    }
  }
  finally {
    graph.shutdown();
  }
}
