{
  final long timer=System.currentTimeMillis();
  lock.acquireExclusiveLock();
  try {
    if (root == null)     return;
    OLogManager.instance().debug(this,"Starting optimization of RB+Tree...");
    OTreeMapEntryPersistent<K,V> pRoot=(OTreeMapEntryPersistent<K,V>)root;
    final int depth=pRoot.getMaxDepthInMemory();
    if (depth < entryPointsSize * optimizeEntryPointsFactor)     return;
    pRoot.disconnect((int)(entryPointsSize * optimizeEntryPointsFactor));
    if (isRuntimeCheckEnabled()) {
      for (      OTreeMapEntryPersistent<K,V> entryPoint : entryPoints)       for (OTreeMapEntryPersistent<K,V> e=(OTreeMapEntryPersistent<K,V>)entryPoint.getFirstInMemory(); e != null; e=e.getNextInMemory())       e.checkEntryStructure();
    }
  }
  finally {
    if (isRuntimeCheckEnabled())     for (    OTreeMapEntryPersistent<K,V> entryPoint : entryPoints)     checkTreeStructure(entryPoint.getFirstInMemory());
    lock.releaseExclusiveLock();
    OProfiler.getInstance().stopChrono("OTreeMapPersistent.optimize",timer);
    if (OLogManager.instance().isDebugEnabled())     OLogManager.instance().debug(this,"Optimization completed in %d ms\n",System.currentTimeMillis() - timer);
  }
}
