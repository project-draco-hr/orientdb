{
  ODatabaseDocumentTx db=new ODatabaseDocumentTx("plocal:target/server1/databases/" + getDatabaseName());
  db.open("admin","admin");
  db.command(new OCommandSQL("create class DistributedIndexTest")).execute();
  db.command(new OCommandSQL("create property DistributedIndexTest.unique STRING")).execute();
  db.command(new OCommandSQL("create property DistributedIndexTest.notunique STRING")).execute();
  db.command(new OCommandSQL("create property DistributedIndexTest.dictionary STRING")).execute();
  db.command(new OCommandSQL("create property DistributedIndexTest.unique_hash STRING")).execute();
  db.command(new OCommandSQL("create property DistributedIndexTest.notunique_hash STRING")).execute();
  try {
    db.command(new OCommandSQL("CREATE INDEX index_unique         ON DistributedIndexTest (unique) UNIQUE")).execute();
    db.command(new OCommandSQL("CREATE INDEX index_notunique      ON DistributedIndexTest (notunique) NOTUNIQUE")).execute();
    db.command(new OCommandSQL("CREATE INDEX index_dictionary     ON DistributedIndexTest (dictionary) DICTIONARY")).execute();
    db.command(new OCommandSQL("CREATE INDEX index_unique_hash    ON DistributedIndexTest (unique_hash) UNIQUE_HASH_INDEX")).execute();
    db.command(new OCommandSQL("CREATE INDEX index_notunique_hash ON DistributedIndexTest (notunique_hash) NOTUNIQUE_HASH_INDEX")).execute();
    final ODocument test1=new ODocument("DistributedIndexTest");
    test1.field("unique","test1");
    test1.field("notunique","test1");
    test1.field("dictionary","test1");
    test1.field("unique_hash","test1");
    test1.field("notunique_hash","test1");
    test1.save();
    final ODocument test2=new ODocument("DistributedIndexTest");
    test2.field("unique","test2");
    test2.field("notunique","test2");
    test2.field("dictionary","test2");
    test2.field("unique_hash","test2");
    test2.field("notunique_hash","test2");
    test2.save();
    final ODocument test3=new ODocument("DistributedIndexTest");
    test3.field("unique","test2");
    test3.field("notunique","test3");
    test3.field("dictionary","test3");
    test3.field("unique_hash","test3");
    test3.field("notunique_hash","test3");
    try {
      test3.save();
      Assert.fail();
    }
 catch (    Exception e) {
      final Iterable<ODocument> result=db.command(new OCommandSQL("select count(*) from DistributedIndexTest")).execute();
      Assert.assertEquals(result.iterator().next().field("count"),2l);
    }
    final ODocument test4=new ODocument("DistributedIndexTest");
    test4.field("unique","test4");
    test4.field("notunique","test4");
    test4.field("dictionary","test4");
    test4.field("unique_hash","test2");
    test4.field("notunique_hash","test4");
    try {
      test4.save();
      Assert.fail();
    }
 catch (    Exception e) {
      final Iterable<ODocument> result=db.command(new OCommandSQL("select count(*) from DistributedIndexTest")).execute();
      Assert.assertEquals(result.iterator().next().field("count"),2l);
    }
  }
 catch (  Exception e) {
    Assert.fail();
  }
}
