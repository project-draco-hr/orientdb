{
  Assert.assertTrue(comparator.isEqual(field(OType.STRING,"test"),field(OType.STRING,"test")));
  Assert.assertFalse(comparator.isEqual(field(OType.STRING,"test2"),field(OType.STRING,"test")));
  Assert.assertFalse(comparator.isEqual(field(OType.STRING,"test"),field(OType.STRING,"test2")));
  Assert.assertFalse(comparator.isEqual(field(OType.STRING,"t"),field(OType.STRING,"te")));
  Assert.assertTrue(comparator.isEqual(field(OType.STRING,"test",new ODefaultCollate()),field(OType.STRING,"test")));
  Assert.assertFalse(comparator.isEqual(field(OType.STRING,"test2",new ODefaultCollate()),field(OType.STRING,"test")));
  Assert.assertFalse(comparator.isEqual(field(OType.STRING,"test",new ODefaultCollate()),field(OType.STRING,"test2")));
  Assert.assertFalse(comparator.isEqual(field(OType.STRING,"t",new ODefaultCollate()),field(OType.STRING,"te")));
  Assert.assertTrue(comparator.isEqual(field(OType.STRING,"test",new ODefaultCollate()),field(OType.STRING,"test",new ODefaultCollate())));
  Assert.assertFalse(comparator.isEqual(field(OType.STRING,"test2",new ODefaultCollate()),field(OType.STRING,"test",new ODefaultCollate())));
  Assert.assertFalse(comparator.isEqual(field(OType.STRING,"test",new ODefaultCollate()),field(OType.STRING,"test2",new ODefaultCollate())));
  Assert.assertFalse(comparator.isEqual(field(OType.STRING,"t",new ODefaultCollate()),field(OType.STRING,"te",new ODefaultCollate())));
  Assert.assertTrue(comparator.isEqual(field(OType.STRING,"test"),field(OType.STRING,"test",new ODefaultCollate())));
  Assert.assertFalse(comparator.isEqual(field(OType.STRING,"test2"),field(OType.STRING,"test",new ODefaultCollate())));
  Assert.assertFalse(comparator.isEqual(field(OType.STRING,"test"),field(OType.STRING,"test2",new ODefaultCollate())));
  Assert.assertFalse(comparator.isEqual(field(OType.STRING,"t"),field(OType.STRING,"te",new ODefaultCollate())));
  Assert.assertTrue(comparator.isEqual(field(OType.STRING,"test"),field(OType.STRING,"test",new OCaseInsensitiveCollate())));
  Assert.assertFalse(comparator.isEqual(field(OType.STRING,"test2"),field(OType.STRING,"test",new OCaseInsensitiveCollate())));
  Assert.assertFalse(comparator.isEqual(field(OType.STRING,"test"),field(OType.STRING,"test2",new OCaseInsensitiveCollate())));
  Assert.assertFalse(comparator.isEqual(field(OType.STRING,"t"),field(OType.STRING,"te",new OCaseInsensitiveCollate())));
  Assert.assertTrue(comparator.isEqual(field(OType.STRING,"test"),field(OType.STRING,"TEST",new OCaseInsensitiveCollate())));
  Assert.assertTrue(comparator.isEqual(field(OType.STRING,"TEST"),field(OType.STRING,"TEST",new OCaseInsensitiveCollate())));
  Assert.assertTrue(comparator.isEqual(field(OType.STRING,"TE"),field(OType.STRING,"te",new OCaseInsensitiveCollate())));
  Assert.assertFalse(comparator.isEqual(field(OType.STRING,"test2"),field(OType.STRING,"TEST",new OCaseInsensitiveCollate())));
  Assert.assertFalse(comparator.isEqual(field(OType.STRING,"test"),field(OType.STRING,"TEST2",new OCaseInsensitiveCollate())));
  Assert.assertFalse(comparator.isEqual(field(OType.STRING,"t"),field(OType.STRING,"tE",new OCaseInsensitiveCollate())));
}
