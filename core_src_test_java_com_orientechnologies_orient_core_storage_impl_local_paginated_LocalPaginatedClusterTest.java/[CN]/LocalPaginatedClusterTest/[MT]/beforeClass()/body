{
  System.out.println("Start LocalPaginatedClusterTest");
  buildDirectory=System.getProperty("buildDirectory");
  if (buildDirectory == null || buildDirectory.isEmpty())   buildDirectory=".";
  buildDirectory+="/localPaginatedClusterTest";
  OLocalPaginatedStorage storage=mock(OLocalPaginatedStorage.class);
  OStorageConfiguration storageConfiguration=mock(OStorageConfiguration.class);
  storageConfiguration.clusters=new ArrayList<OStorageClusterConfiguration>();
  storageConfiguration.fileTemplate=new OStorageSegmentConfiguration();
  storageConfiguration.binaryFormatVersion=Integer.MAX_VALUE;
  when(storage.getComponentsFactory()).thenReturn(new OCurrentStorageComponentsFactory(storageConfiguration));
  when(storageConfiguration.getDirectory()).thenReturn(buildDirectory);
  when(storageConfiguration.getContextConfiguration()).thenReturn(contextConfiguration);
  when(storage.getStoragePath()).thenReturn(buildDirectory);
  OStorageVariableParser variableParser=new OStorageVariableParser(buildDirectory);
  when(storage.getVariableParser()).thenReturn(variableParser);
  when(storage.getPerformanceStatisticManager()).thenReturn(new OPerformanceStatisticManager(storage,10000000,10000000));
  writeCache=new OWOWCache(false,OGlobalConfiguration.DISK_CACHE_PAGE_SIZE.getValueAsInteger() * 1024,new OByteBufferPool(OGlobalConfiguration.DISK_CACHE_PAGE_SIZE.getValueAsInteger() * 1024),1000000,null,100,2648L * 1024 * 1024,2648L * 1024 * 1024 + 400L * 1024 * 1024* 1024,storage,true,1);
  readCache=new O2QCache(400L * 1024 * 1024* 1024,OGlobalConfiguration.DISK_CACHE_PAGE_SIZE.getValueAsInteger() * 1024,false,20);
  atomicOperationsManager=new OAtomicOperationsManager(storage);
  when(storage.getReadCache()).thenReturn(readCache);
  when(storage.getWriteCache()).thenReturn(writeCache);
  when(storage.getAtomicOperationsManager()).thenReturn(atomicOperationsManager);
  when(storage.getConfiguration()).thenReturn(storageConfiguration);
  when(storage.getMode()).thenReturn("rw");
  when(storageConfiguration.getDirectory()).thenReturn(buildDirectory);
  paginatedCluster=new OPaginatedCluster("paginatedClusterTest",storage);
  paginatedCluster.configure(storage,5,"paginatedClusterTest",buildDirectory,-1);
  paginatedCluster.create(-1);
}
