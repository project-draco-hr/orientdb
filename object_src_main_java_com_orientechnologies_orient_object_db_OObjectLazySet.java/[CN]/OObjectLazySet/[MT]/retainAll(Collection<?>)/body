{
  setDirty();
  final ODatabasePojoAbstract<TYPE> database=getDatabase();
  boolean modified=super.retainAll(c);
  Set<Object> toRetain=new HashSet<Object>();
  Set<Object> toRemove=new HashSet<Object>();
  for (  Object o : c) {
    OIdentifiable record=database.getRecordByUserObject(o,false);
    toRetain.add(record);
  }
  for (  OIdentifiable underlyingRec : underlying) {
    if (toRetain.contains(underlyingRec) && sourceRecord != null) {
      ((OObjectProxyMethodHandler)sourceRecord.getHandler()).getOrphans().remove(underlyingRec.getIdentity());
    }
 else {
      if (sourceRecord != null)       ((OObjectProxyMethodHandler)sourceRecord.getHandler()).getOrphans().add(underlyingRec.getIdentity());
      toRemove.add(underlyingRec);
      modified=true;
    }
  }
  underlying.removeAll(toRemove);
  toRemove.clear();
  toRetain.clear();
  return modified;
}
