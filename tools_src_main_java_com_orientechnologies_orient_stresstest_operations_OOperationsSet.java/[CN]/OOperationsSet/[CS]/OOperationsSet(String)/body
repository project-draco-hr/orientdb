{
  ops=ops.toUpperCase();
  if (!(ops.contains("C") && ops.contains("R") && ops.contains("U")&& ops.contains("D"))) {
    throw new OInitException(OErrorMessages.OPERATION_SET_SHOULD_CONTAIN_ALL_MESSAGE);
  }
  int pos=0;
  while (pos < ops.length()) {
    ValuePosition valPos=getValue(ops,pos + 1);
switch (ops.charAt(pos)) {
case 'C':
      number.put(OOperationType.CREATE,valPos.value);
    total+=valPos.value;
  break;
case 'R':
number.put(OOperationType.READ,valPos.value);
if (number.get(OOperationType.READ) > number.get(OOperationType.CREATE)) {
throw new OInitException(String.format(OErrorMessages.COMMAND_LINE_PARSER_READS_GT_CREATES,number.get(OOperationType.READ),number.get(OOperationType.CREATE)));
}
total+=valPos.value;
break;
case 'U':
number.put(OOperationType.UPDATE,valPos.value);
total+=valPos.value;
break;
case 'D':
number.put(OOperationType.DELETE,valPos.value);
if (number.get(OOperationType.DELETE) > number.get(OOperationType.CREATE)) {
throw new OInitException(String.format(OErrorMessages.COMMAND_LINE_PARSER_DELETES_GT_CREATES,number.get(OOperationType.DELETE),number.get(OOperationType.CREATE)));
}
total+=valPos.value;
break;
default :
throw new OInitException(OErrorMessages.OPERATION_SET_INVALID_FORM_MESSAGE);
}
pos+=valPos.position + 1;
}
}
