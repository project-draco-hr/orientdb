{
  final String databaseName=iDatabase.getName();
  if (!(iClass.getClusterSelection() instanceof OLocalClusterStrategy))   ((OClassImpl)iClass).setClusterSelectionInternal(new OLocalClusterStrategy(this,databaseName,iClass));
  if (iClass.isAbstract())   return;
  final int[] clusterIds=iClass.getClusterIds();
  final List<String> clusterNames=new ArrayList<String>(clusterIds.length);
  for (  int clusterId : clusterIds)   clusterNames.add(iDatabase.getClusterNameById(clusterId));
  boolean distributedCfgDirty=false;
  final Lock lock=getLock("orientdb." + databaseName + ".cfg");
  lock.lock();
  try {
    final ODistributedConfiguration cfg=getDatabaseConfiguration(iDatabase.getName());
    final List<String> servers=cfg.getServers(null);
    for (    String server : servers) {
      final String bestCluster=cfg.getLocalCluster(clusterNames,server);
      if (bestCluster == null) {
        final String newClusterName=(iClass.getName() + "_" + server).toLowerCase();
        final Set<String> cfgClusterNames=new HashSet<String>();
        for (        String cl : cfg.getClusterNames())         cfgClusterNames.add(cl);
        if (cfgClusterNames.contains(newClusterName)) {
          ODistributedServerLog.info(this,nodeName,null,DIRECTION.NONE,"class %s, change mastership of cluster '%s' (id=%d) to node '%s'",iClass,newClusterName,iDatabase.getClusterIdByName(newClusterName),server);
          cfg.setMasterServer(newClusterName,server);
          distributedCfgDirty=true;
        }
 else {
          ODistributedServerLog.info(this,nodeName,null,DIRECTION.NONE,"class %s, creation of new cluster '%s' (id=%d)",iClass,newClusterName,iDatabase.getClusterIdByName(newClusterName));
          final OScenarioThreadLocal.RUN_MODE currentDistributedMode=OScenarioThreadLocal.INSTANCE.get();
          if (currentDistributedMode != OScenarioThreadLocal.RUN_MODE.DEFAULT)           OScenarioThreadLocal.INSTANCE.set(OScenarioThreadLocal.RUN_MODE.DEFAULT);
          try {
            iClass.addCluster(newClusterName);
          }
 catch (          OCommandSQLParsingException e) {
            if (!e.getMessage().endsWith("already exists"))             throw e;
          }
catch (          Exception e) {
            ODistributedServerLog.error(this,nodeName,null,DIRECTION.NONE,"error on creating cluster '%s' in class '%s'",newClusterName,iClass);
            throw OException.wrapException(new ODistributedException("Error on creating cluster '" + newClusterName + "' in class '"+ iClass+ "'"),e);
          }
 finally {
            if (currentDistributedMode != OScenarioThreadLocal.RUN_MODE.DEFAULT)             OScenarioThreadLocal.INSTANCE.set(OScenarioThreadLocal.RUN_MODE.RUNNING_DISTRIBUTED);
          }
          ODistributedServerLog.info(this,nodeName,null,DIRECTION.NONE,"class '%s', set mastership of cluster '%s' (id=%d) to '%s'",iClass,newClusterName,iDatabase.getClusterIdByName(newClusterName),server);
          cfg.setMasterServer(newClusterName,server);
          distributedCfgDirty=true;
        }
      }
    }
    if (distributedCfgDirty) {
      final boolean deployToCluster=isNodeOnline(nodeName,databaseName);
      updateCachedDatabaseConfiguration(databaseName,cfg.serialize(),true,deployToCluster);
    }
  }
  finally {
    lock.unlock();
  }
}
