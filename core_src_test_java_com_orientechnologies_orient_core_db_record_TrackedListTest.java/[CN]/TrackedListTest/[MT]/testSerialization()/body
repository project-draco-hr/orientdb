{
class NotSerializableDocument extends ODocument {
    private static final long serialVersionUID=1L;
    private void writeObject(    ObjectOutputStream oos) throws IOException {
      throw new NotSerializableException();
    }
  }
  final OTrackedList<String> beforeSerialization=new OTrackedList<String>(new NotSerializableDocument());
  beforeSerialization.add("firstVal");
  beforeSerialization.add("secondVal");
  final OMemoryStream memoryStream=new OMemoryStream();
  ObjectOutputStream out=new ObjectOutputStream(memoryStream);
  out.writeObject(beforeSerialization);
  out.close();
  final ObjectInputStream input=new ObjectInputStream(new OMemoryInputStream(memoryStream.copy()));
  @SuppressWarnings("unchecked") final List<String> afterSerialization=(List<String>)input.readObject();
  Assert.assertEquals(afterSerialization.size(),beforeSerialization.size(),"List size");
  for (int i=0; i < afterSerialization.size(); i++) {
    Assert.assertEquals(afterSerialization.get(i),beforeSerialization.get(i));
  }
}
