{
  getDatabase().checkSecurity(ODatabaseSecurityResources.CLASS,ORole.PERMISSION_UPDATE);
  if (isSubClassOf(OSecurityShared.RESTRICTED_CLASSNAME))   throw new OSecurityException("Class " + getName() + " cannot be truncated because has record level security enabled (extends "+ OSecurityShared.RESTRICTED_CLASSNAME+ ")");
  getDatabase().getStorage().callInLock(new Callable<Object>(){
    public Object call() throws Exception {
      for (      int id : clusterIds) {
        final OStorage storage=getDatabase().getStorage();
        storage.getClusterById(id).truncate();
      }
      for (      OIndex<?> index : getClassIndexes()) {
        index.clear();
      }
      return null;
    }
  }
,true);
}
