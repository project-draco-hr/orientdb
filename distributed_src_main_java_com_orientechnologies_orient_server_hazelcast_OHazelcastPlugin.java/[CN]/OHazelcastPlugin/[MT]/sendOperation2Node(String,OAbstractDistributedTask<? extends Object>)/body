{
  Member member=remoteClusterNodes.get(iNodeId);
  if (member == null) {
    for (    Member m : hazelcastInstance.getCluster().getMembers()) {
      if (getNodeId(m).equals(iNodeId)) {
        member=m;
        break;
      }
    }
    if (member == null)     throw new ODistributedException("Remote node '" + iNodeId + "' is not configured");
  }
  final Member clusterMember=member;
  DistributedTask<Object> task=new DistributedTask<Object>((Callable<Object>)iTask,clusterMember);
  ExecutionCallback<Object> callback=null;
  if (iTask.getMode() == EXECUTION_MODE.ASYNCHRONOUS)   callback=new ExecutionCallback<Object>(){
    @SuppressWarnings("unused") @Override public void done(    Future<Object> future){
      try {
        if (!future.isCancelled()) {
          Object result=future.get();
        }
      }
 catch (      Exception e) {
        OLogManager.instance().error(this,"DISTRIBUTED -> error on execution of operation in ASYNCH mode against node: %s",e,clusterMember);
      }
    }
  }
;
  for (int retry=0; retry < SEND_RETRY_MAX; ++retry) {
    try {
      Object result=executeOperation(task,iTask.getMode(),callback);
      return result;
    }
 catch (    ExecutionException e) {
      if (e.getCause() instanceof OServerOfflineException) {
        final OServerOfflineException exc=(OServerOfflineException)e.getCause();
        OLogManager.instance().warn(this,"DISTRIBUTED -> remote node %s is not online (status=%s), retrying %d...",exc.getNodeId(),exc.getNodeStatus(),retry + 1);
        try {
          Thread.sleep(200 + (retry * 50));
        }
 catch (        InterruptedException ex) {
          Thread.interrupted();
        }
        task=new DistributedTask<Object>((Callable<Object>)iTask,clusterMember);
      }
 else {
        OLogManager.instance().error(this,"DISTRIBUTED -> error on execution of operation in %s mode",e,EXECUTION_MODE.SYNCHRONOUS);
        throw new ODistributedException("Error on executing remote operation in " + iTask.getMode() + " mode against node: "+ member,e);
      }
    }
catch (    Exception e) {
      OLogManager.instance().error(this,"DISTRIBUTED -> error on execution of operation in %s mode against node: %s",e,iTask.getMode(),member);
      throw new ODistributedException("Error on executing remote operation in " + iTask.getMode() + " mode against node: "+ member,e);
    }
  }
  throw new ODistributedException("Cannot complete the operation because the cluster is offline");
}
