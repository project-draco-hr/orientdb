{
  String name=document.field("name");
  OType type=null;
  if (document.field("type") != null)   type=OType.getById(((Integer)document.field("type")).byteValue());
  Integer globalId=document.field("globalId");
  if (globalId != null)   globalRef=owner.owner.getGlobalPropertyById(globalId);
 else {
    if (type == null)     type=OType.ANY;
    globalRef=owner.owner.findOrCreateGlobalProperty(name,type);
  }
  mandatory=document.containsField("mandatory") ? (Boolean)document.field("mandatory") : false;
  readonly=document.containsField("readonly") ? (Boolean)document.field("readonly") : false;
  notNull=document.containsField("notNull") ? (Boolean)document.field("notNull") : false;
  if (document.containsField("collate"))   collate=OSQLEngine.getCollate((String)document.field("collate"));
  min=(String)(document.containsField("min") ? document.field("min") : null);
  max=(String)(document.containsField("max") ? document.field("max") : null);
  regexp=(String)(document.containsField("regexp") ? document.field("regexp") : null);
  linkedClassName=(String)(document.containsField("linkedClass") ? document.field("linkedClass") : null);
  linkedType=document.field("linkedType") != null ? OType.getById(((Integer)document.field("linkedType")).byteValue()) : null;
  customFields=(Map<String,String>)(document.containsField("customFields") ? document.field("customFields",OType.EMBEDDEDMAP) : null);
  description=(String)(document.containsField("description") ? document.field("description") : null);
}
