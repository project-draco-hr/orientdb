{
  final Collection<?> linked;
  if (fieldValue instanceof ODocument)   linked=new OMVRBTreeRIDSet().fromDocument((ODocument)fieldValue);
 else   if (fieldValue instanceof Collection<?>) {
    linked=(Collection<OIdentifiable>)fieldValue;
    iContext.onBeforeCollection(iRootRecord,fieldName,iUserObject,linked);
  }
 else   if (fieldValue instanceof Map<?,?>) {
    linked=(Collection<?>)((Map<?,?>)fieldValue).values();
    iContext.onBeforeMap(iRootRecord,fieldName,iUserObject);
  }
 else   throw new IllegalStateException("Unrecognized type: " + fieldValue.getClass());
  final Iterator<?> iter;
  if (linked instanceof ORecordLazyMultiValue)   iter=((ORecordLazyMultiValue)linked).rawIterator();
 else   iter=linked.iterator();
  while (iter.hasNext()) {
    final Object o=iter.next();
    if (o == null)     continue;
    if (o instanceof OIdentifiable) {
      OIdentifiable d=(OIdentifiable)o;
      final Integer fieldDepthLevel=parsedRecords.get(d.getIdentity());
      if (!d.getIdentity().isValid() || (fieldDepthLevel != null && fieldDepthLevel.intValue() == iLevelFromRoot)) {
        removeParsedFromMap(parsedRecords,d);
        d=d.getRecord();
        if (!(d instanceof ODocument)) {
          iListener.processStandardField(null,d,fieldName,iContext,iUserObject,"");
        }
 else {
          iContext.onBeforeDocument(iRootRecord,(ODocument)d,fieldName,iUserObject);
          final Object userObject=iListener.fetchLinkedCollectionValue(iRootRecord,iUserObject,fieldName,(ODocument)d,iContext);
          processRecord((ODocument)d,userObject,iFetchPlan,iCurrentLevel,iLevelFromRoot,iFieldDepthLevel,parsedRecords,iFieldPathFromRoot,iListener,iContext,"");
          iContext.onAfterDocument(iRootRecord,(ODocument)d,fieldName,iUserObject);
        }
      }
 else {
        iListener.parseLinkedCollectionValue(iRootRecord,d,iUserObject,fieldName,iContext);
      }
    }
 else     if (o instanceof Map<?,?>) {
      fetchMap(iRootRecord,iUserObject,iFetchPlan,o,null,iCurrentLevel + 1,iLevelFromRoot,iFieldDepthLevel,parsedRecords,iFieldPathFromRoot,iListener,iContext);
    }
 else     if (OMultiValue.isMultiValue(o)) {
      fetchCollection(iRootRecord,iUserObject,iFetchPlan,o,null,iCurrentLevel + 1,iLevelFromRoot,iFieldDepthLevel,parsedRecords,iFieldPathFromRoot,iListener,iContext);
    }
  }
  if (fieldValue instanceof Collection<?>)   iContext.onAfterCollection(iRootRecord,fieldName,iUserObject);
 else   if (fieldValue instanceof Map<?,?>)   iContext.onAfterMap(iRootRecord,fieldName,iUserObject);
}
