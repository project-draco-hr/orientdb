{
  ODocument doc=null;
  if (returnsElements()) {
    for (    Map.Entry<String,OIdentifiable> entry : matchContext.matched.entrySet()) {
      if (isExplicitAlias(entry.getKey()) && entry.getValue() != null) {
        ORecord record=entry.getValue().getRecord();
        if (request.getResultListener() != null && record != null) {
          if (!addSingleResult(request,(OBasicCommandContext)ctx,record))           return false;
        }
      }
    }
  }
 else   if (returnsPathElements()) {
    for (    Map.Entry<String,OIdentifiable> entry : matchContext.matched.entrySet()) {
      if (entry.getValue() != null) {
        ORecord record=entry.getValue().getRecord();
        if (request.getResultListener() != null && record != null) {
          if (!addSingleResult(request,(OBasicCommandContext)ctx,record))           return false;
        }
      }
    }
  }
 else   if (returnsPatterns()) {
    doc=getDatabase().newInstance();
    doc.setTrackingChanges(false);
    for (    Map.Entry<String,OIdentifiable> entry : matchContext.matched.entrySet()) {
      if (isExplicitAlias(entry.getKey())) {
        doc.field(entry.getKey(),entry.getValue());
      }
    }
  }
 else   if (returnsPaths()) {
    doc=getDatabase().newInstance();
    doc.setTrackingChanges(false);
    for (    Map.Entry<String,OIdentifiable> entry : matchContext.matched.entrySet()) {
      doc.field(entry.getKey(),entry.getValue());
    }
  }
 else   if (returnsJson()) {
    doc=jsonToDoc(matchContext,ctx);
  }
 else {
    doc=getDatabase().newInstance();
    doc.setTrackingChanges(false);
    int i=0;
    ODocument mapDoc=new ODocument();
    mapDoc.setTrackingChanges(false);
    mapDoc.fromMap((Map)matchContext.matched);
    for (    OExpression item : returnItems) {
      OIdentifier returnAliasIdentifier=returnAliases.get(i);
      OIdentifier returnAlias;
      if (returnAliasIdentifier == null) {
        returnAlias=item.getDefaultAlias();
      }
 else {
        returnAlias=returnAliasIdentifier;
      }
      doc.field(returnAlias.getStringValue(),item.execute(mapDoc,ctx));
      i++;
    }
    doc.setTrackingChanges(true);
  }
  if (request.getResultListener() != null && doc != null) {
    if (!addSingleResult(request,(OBasicCommandContext)ctx,doc))     return false;
  }
  return true;
}
