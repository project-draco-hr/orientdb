{
  if (iValue.length() == 0)   return null;
  final String value=iValue.startsWith("[") ? iValue.substring(1,iValue.length() - 1) : iValue;
  final Collection<Object> coll;
  if (iLinkedType == OType.LINK) {
    if (iDocument != null)     coll=iType == OType.EMBEDDEDLIST ? new ORecordLazyList(iDocument,ODocument.RECORD_TYPE) : new ORecordLazySet(iDocument,ODocument.RECORD_TYPE);
 else     coll=iType == OType.EMBEDDEDLIST ? new ORecordLazyList(iDatabase,ODocument.RECORD_TYPE) : new ORecordLazySet(iDatabase,ODocument.RECORD_TYPE);
  }
 else   coll=iType == OType.EMBEDDEDLIST ? new ORecordTrackedList(iDocument) : new ORecordTrackedSet(iDocument);
  if (value.length() == 0)   return coll;
  final List<String> items=OStringSerializerHelper.smartSplit(value,OStringSerializerHelper.RECORD_SEPARATOR);
  Object objectToAdd;
  for (  String item : items) {
    objectToAdd=null;
    if (item.length() > 2 && item.charAt(0) == OStringSerializerHelper.PARENTHESIS_BEGIN) {
      item=item.substring(1,item.length() - 1);
      if (item.length() > 0) {
        iLinkedClass=OStringSerializerHelper.getRecordClassName(iDatabase,item,iLinkedClass);
        if (iLinkedClass != null) {
          objectToAdd=fromString(iDocument.getDatabase(),item,new ODocument(iDatabase,iLinkedClass.getName()));
        }
 else         objectToAdd=fieldTypeFromStream(iDocument,iLinkedType,item);
      }
    }
 else {
      if (iLinkedType == null)       throw new IllegalArgumentException("Linked type can't be null. Probably the serialized type has not stored the type along with data");
      objectToAdd=fieldTypeFromStream(iDocument,iLinkedType,item);
    }
    if (objectToAdd != null) {
      if (objectToAdd instanceof ODocument && coll instanceof ORecordElement)       ((ODocument)objectToAdd).addOwner((ORecordElement)coll);
      coll.add(objectToAdd);
    }
  }
  return coll;
}
