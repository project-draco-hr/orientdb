{
  if (!enable)   return null;
  final String key=getKey(iUser,queryText,iLimit);
  OCachedResult result;
  lock.lock();
  try {
    result=cache.get(key);
    if (result != null) {
      int resultsetSize=1;
      if (result.result instanceof ORecord)       ((ORecord)result.result).toStream();
 else       if (OMultiValue.isMultiValue(result.result)) {
        resultsetSize=OMultiValue.getSize(result.result);
        for (        Object rc : OMultiValue.getMultiValueIterable(result.result)) {
          if (rc != null && rc instanceof ORecord) {
            ((ORecord)rc).toStream();
          }
        }
      }
      OLogManager.instance().debug(this,"Reused cached resultset size=%d",resultsetSize);
    }
  }
  finally {
    lock.unlock();
  }
  final OProfilerMBean profiler=Orient.instance().getProfiler();
  if (profiler.isRecording()) {
    if (result != null) {
      profiler.updateCounter(profiler.getDatabaseMetric(databaseName,"queryCache.hit"),"Results returned by Query Cache",+1);
    }
 else {
      profiler.updateCounter(profiler.getDatabaseMetric(databaseName,"queryCache.miss"),"Results not returned by Query Cache",+1);
    }
  }
  return result != null ? result.result : null;
}
