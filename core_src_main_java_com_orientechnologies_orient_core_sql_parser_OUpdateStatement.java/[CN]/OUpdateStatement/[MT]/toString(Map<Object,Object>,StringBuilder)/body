{
  builder.append(getStatementType());
  if (target != null) {
    target.toString(params,builder);
  }
  for (  OUpdateOperations ops : this.operations) {
    builder.append(" ");
    ops.toString(params,builder);
  }
  if (upsert) {
    builder.append(" UPSERT");
  }
  if (returnBefore || returnAfter) {
    builder.append(" RETURN");
    if (returnBefore) {
      builder.append(" BEFORE");
    }
 else {
      builder.append(" AFTER");
    }
    if (returnProjection != null) {
      builder.append(" ");
      returnProjection.toString(params,builder);
    }
  }
  if (whereClause != null) {
    builder.append(" WHERE ");
    whereClause.toString(params,builder);
  }
  if (lockRecord != null) {
    builder.append(" LOCK ");
switch (lockRecord) {
case DEFAULT:
      builder.append("DEFAULT");
    break;
case EXCLUSIVE_LOCK:
  builder.append("RECORD");
break;
case SHARED_LOCK:
builder.append("SHARED");
break;
case NONE:
builder.append("NONE");
break;
}
}
if (limit != null) {
limit.toString(params,builder);
}
if (timeout != null) {
timeout.toString(params,builder);
}
}
