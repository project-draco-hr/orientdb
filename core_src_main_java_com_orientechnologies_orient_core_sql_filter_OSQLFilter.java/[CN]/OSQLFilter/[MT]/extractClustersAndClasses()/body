{
  jumpWhiteSpaces();
  boolean whereDefined=true;
  int wherePosition=textUpperCase.indexOf(OCommandExecutorSQLAbstract.KEYWORD_WHERE,currentPos);
  if (wherePosition == -1) {
    whereDefined=false;
    wherePosition=text.length();
  }
  String[] items=textUpperCase.substring(currentPos,wherePosition).split(",");
  if (items == null || items.length == 0)   throw new OQueryParsingException("No clusters found after " + OCommandExecutorSQLAbstract.KEYWORD_FROM,text,currentPos);
  String[] words;
  String subjectName;
  String alias;
  String subjectToMatch;
  for (  String i : items) {
    words=i.split(" ");
    if (words != null && words.length > 1) {
      subjectName=words[0].trim();
      alias=words[1].trim();
    }
 else {
      subjectName=i.trim();
      alias=subjectName;
    }
    subjectToMatch=subjectName;
    if (subjectToMatch.startsWith(OCommandExecutorSQLAbstract.CLUSTER_PREFIX))     clusters.put(subjectName.substring(OCommandExecutorSQLAbstract.CLUSTER_PREFIX.length()),alias);
 else {
      if (subjectToMatch.startsWith(OCommandExecutorSQLAbstract.CLASS_PREFIX))       subjectName=subjectName.substring(OCommandExecutorSQLAbstract.CLASS_PREFIX.length());
      classes.put(subjectName,alias);
    }
  }
  if (whereDefined)   currentPos=wherePosition + OCommandExecutorSQLAbstract.KEYWORD_WHERE.length() + 1;
  return whereDefined;
}
