{
  waitNodeIsOnline();
  connection=OClientConnectionManager.instance().getConnection(clientTxId);
  if (clientTxId < 0) {
    short protocolId=0;
    if (connection != null)     protocolId=connection.data.protocolVersion;
    connection=OClientConnectionManager.instance().connect(this);
    if (connection != null)     connection.data.protocolVersion=protocolId;
  }
  if (connection != null) {
    ODatabaseRecordThreadLocal.INSTANCE.set(connection.database);
    if (connection.database != null) {
      connection.data.lastDatabase=connection.database.getName();
      connection.data.lastUser=connection.database.getUser() != null ? connection.database.getUser().getName() : null;
    }
 else {
      connection.data.lastDatabase=null;
      connection.data.lastUser=null;
    }
    ++connection.data.totalRequests;
    setDataCommandInfo("Listening");
    connection.data.commandDetail="-";
    connection.data.lastCommandReceived=System.currentTimeMillis();
  }
 else {
    if (requestType != OChannelBinaryProtocol.REQUEST_DB_CLOSE && requestType != OChannelBinaryProtocol.REQUEST_SHUTDOWN) {
      OLogManager.instance().debug(this,"Found unknown session %d, shutdown current connection",clientTxId);
      shutdown();
      throw new OIOException("Found unknown session " + clientTxId);
    }
  }
  OServerHandlerHelper.invokeHandlerCallbackOnBeforeClientRequest(server,connection,(byte)requestType);
}
