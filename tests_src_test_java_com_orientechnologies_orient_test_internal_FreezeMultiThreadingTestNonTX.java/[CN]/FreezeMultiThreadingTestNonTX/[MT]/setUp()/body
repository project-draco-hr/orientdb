{
  OGlobalConfiguration.CACHE_LOCAL_ENABLED.setValue(false);
  OGlobalConfiguration.CACHE_LOCAL_SIZE.setValue(0);
  OGlobalConfiguration.CLIENT_DB_RELEASE_WAIT_TIMEOUT.setValue(1000);
  System.out.println("Create db");
  try {
    ODatabaseDocumentTx db=new ODatabaseDocumentTx(URL);
    System.out.println("Recreating database");
    if (ODatabaseHelper.existsDatabase(db,"plocal")) {
      db.setProperty("security",Boolean.FALSE);
      ODatabaseHelper.dropDatabase(db,URL,"plocal");
    }
    ODatabaseHelper.createDatabase(db,URL);
    db.close();
  }
 catch (  IOException ex) {
    System.out.println("Exception: " + ex);
    throw ex;
  }
  ODatabaseDocumentTx database=new ODatabaseDocumentTx(URL);
  database.open("admin","admin");
  OClass student=database.getMetadata().getSchema().createClass(STUDENT_CLASS_NAME);
  student.createProperty("counter",OType.INTEGER);
  student.createProperty("counter2",OType.INTEGER);
  student.createIndex("index1",OClass.INDEX_TYPE.UNIQUE,"counter");
  student.createIndex("index2",OClass.INDEX_TYPE.NOTUNIQUE,"counter2");
  student.createIndex("index3",OClass.INDEX_TYPE.NOTUNIQUE,"counter","counter2");
  OClass transactionalStudent=database.getMetadata().getSchema().createClass(TRANSACTIONAL_WORD + STUDENT_CLASS_NAME);
  transactionalStudent.createProperty("counter",OType.INTEGER);
  transactionalStudent.createProperty("counter2",OType.INTEGER);
  transactionalStudent.createIndex("index4",OClass.INDEX_TYPE.UNIQUE,"counter");
  transactionalStudent.createIndex("index5",OClass.INDEX_TYPE.NOTUNIQUE,"counter2");
  transactionalStudent.createIndex("index6",OClass.INDEX_TYPE.NOTUNIQUE,"counter","counter2");
  database.getMetadata().getSchema().save();
  System.out.println("*in before***********CLOSE************************************");
  database.close();
}
