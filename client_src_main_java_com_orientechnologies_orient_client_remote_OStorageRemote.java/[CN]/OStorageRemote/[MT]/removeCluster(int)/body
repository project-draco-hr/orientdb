{
  checkConnection();
  do {
    boolean locked=lock.acquireExclusiveLock();
    try {
      try {
        beginRequest(OChannelBinaryProtocol.REQUEST_DATACLUSTER_REMOVE);
        network.writeShort((short)iClusterId);
      }
  finally {
        endRequest();
      }
      try {
        beginResponse();
        if (network.readByte() == 1) {
          for (          Entry<String,Integer> entry : clustersIds.entrySet())           if (entry.getValue() != null && entry.getValue().intValue() == iClusterId) {
            clustersIds.remove(entry.getKey());
            clustersTypes.remove(entry.getKey());
            break;
          }
          return true;
        }
        return false;
      }
  finally {
        endResponse();
      }
    }
 catch (    Exception e) {
      handleException("Error on removing of cluster",e);
    }
 finally {
      lock.releaseExclusiveLock(locked);
    }
  }
 while (true);
}
