{
  final ODatabaseRecord db=ODatabaseRecordThreadLocal.INSTANCE.get();
  OClass classTrigger=db.getMetadata().getSchema().getClass(OClassTrigger.CLASSNAME);
  if (classTrigger == null)   classTrigger=db.getMetadata().getSchema().createAbstractClass(OClassTrigger.CLASSNAME);
  if (!classTrigger.existsProperty(OClassTrigger.ONBEFORE_CREATED))   classTrigger.createProperty(OClassTrigger.ONBEFORE_CREATED,OType.LINK,db.getMetadata().getSchema().getClass(OFunction.CLASS_NAME));
  if (!classTrigger.existsProperty(OClassTrigger.ONAFTER_CREATED))   classTrigger.createProperty(OClassTrigger.ONAFTER_CREATED,OType.LINK,db.getMetadata().getSchema().getClass(OFunction.CLASS_NAME));
  if (!classTrigger.existsProperty(OClassTrigger.ONBEFORE_READ))   classTrigger.createProperty(OClassTrigger.ONBEFORE_READ,OType.LINK,db.getMetadata().getSchema().getClass(OFunction.CLASS_NAME));
  if (!classTrigger.existsProperty(OClassTrigger.ONAFTER_READ))   classTrigger.createProperty(OClassTrigger.ONAFTER_READ,OType.LINK,db.getMetadata().getSchema().getClass(OFunction.CLASS_NAME));
  if (!classTrigger.existsProperty(OClassTrigger.ONBEFORE_UPDATED))   classTrigger.createProperty(OClassTrigger.ONBEFORE_UPDATED,OType.LINK,db.getMetadata().getSchema().getClass(OFunction.CLASS_NAME));
  if (!classTrigger.existsProperty(OClassTrigger.ONAFTER_UPDATED))   classTrigger.createProperty(OClassTrigger.ONAFTER_UPDATED,OType.LINK,db.getMetadata().getSchema().getClass(OFunction.CLASS_NAME));
  if (!classTrigger.existsProperty(OClassTrigger.ONBEFORE_DELETE))   classTrigger.createProperty(OClassTrigger.ONBEFORE_DELETE,OType.LINK,db.getMetadata().getSchema().getClass(OFunction.CLASS_NAME));
  if (!classTrigger.existsProperty(OClassTrigger.ONAFTER_DELETE))   classTrigger.createProperty(OClassTrigger.ONAFTER_DELETE,OType.LINK,db.getMetadata().getSchema().getClass(OFunction.CLASS_NAME));
}
