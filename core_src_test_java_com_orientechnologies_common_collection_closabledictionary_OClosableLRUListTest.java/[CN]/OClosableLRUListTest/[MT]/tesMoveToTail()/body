{
  OClosableLRUList<Long,CIItem> lruList=new OClosableLRUList<Long,CIItem>();
  OClosableEntry<Long,CIItem> firstEntry=new OClosableEntry<Long,CIItem>(new CIItem());
  Assert.assertTrue(!lruList.contains(firstEntry));
  Assert.assertEquals(lruList.size(),0);
  lruList.moveToTheTail(firstEntry);
  Assert.assertEquals(lruList.size(),1);
  Assert.assertTrue(lruList.contains(firstEntry));
  assertContent(lruList,new OClosableEntry[]{firstEntry});
  Assert.assertTrue(lruList.assertBackwardStructure());
  Assert.assertTrue(lruList.assertForwardStructure());
  OClosableEntry<Long,CIItem> secondEntry=new OClosableEntry<Long,CIItem>(new CIItem());
  lruList.moveToTheTail(secondEntry);
  Assert.assertEquals(lruList.size(),2);
  Assert.assertTrue(lruList.contains(firstEntry));
  Assert.assertTrue(lruList.contains(secondEntry));
  assertContent(lruList,new OClosableEntry[]{firstEntry,secondEntry});
  Assert.assertTrue(lruList.assertBackwardStructure());
  Assert.assertTrue(lruList.assertForwardStructure());
  OClosableEntry<Long,CIItem> thirdEntry=new OClosableEntry<Long,CIItem>(new CIItem());
  lruList.moveToTheTail(thirdEntry);
  Assert.assertEquals(lruList.size(),3);
  Assert.assertTrue(lruList.contains(firstEntry));
  Assert.assertTrue(lruList.contains(secondEntry));
  Assert.assertTrue(lruList.contains(thirdEntry));
  assertContent(lruList,new OClosableEntry[]{firstEntry,secondEntry,thirdEntry});
  Assert.assertTrue(lruList.assertBackwardStructure());
  Assert.assertTrue(lruList.assertForwardStructure());
  lruList.moveToTheTail(secondEntry);
  Assert.assertEquals(lruList.size(),3);
  Assert.assertTrue(lruList.contains(firstEntry));
  Assert.assertTrue(lruList.contains(secondEntry));
  Assert.assertTrue(lruList.contains(thirdEntry));
  assertContent(lruList,new OClosableEntry[]{firstEntry,thirdEntry,secondEntry});
  Assert.assertTrue(lruList.assertBackwardStructure());
  Assert.assertTrue(lruList.assertForwardStructure());
  lruList.moveToTheTail(firstEntry);
  Assert.assertEquals(lruList.size(),3);
  Assert.assertTrue(lruList.contains(firstEntry));
  Assert.assertTrue(lruList.contains(secondEntry));
  Assert.assertTrue(lruList.contains(thirdEntry));
  assertContent(lruList,new OClosableEntry[]{thirdEntry,secondEntry,firstEntry});
  Assert.assertTrue(lruList.assertBackwardStructure());
  Assert.assertTrue(lruList.assertForwardStructure());
  lruList.moveToTheTail(firstEntry);
  Assert.assertEquals(lruList.size(),3);
  Assert.assertTrue(lruList.contains(firstEntry));
  Assert.assertTrue(lruList.contains(secondEntry));
  Assert.assertTrue(lruList.contains(thirdEntry));
  assertContent(lruList,new OClosableEntry[]{thirdEntry,secondEntry,firstEntry});
  Assert.assertTrue(lruList.assertBackwardStructure());
  Assert.assertTrue(lruList.assertForwardStructure());
}
