{
  final ODatabaseDocumentTx database=new ODatabaseDocumentTx("memory:compositetesttwo");
  database.create();
  final OCompositeIndexDefinition emptyCompositeIndex=new OCompositeIndexDefinition("testClass",Arrays.asList(new OPropertyIndexDefinition("testClass","fOne",OType.INTEGER),new OPropertyIndexDefinition("testClass","fTwo",OType.STRING)),-1);
  final OCompositeIndexDefinition emptyCompositeIndexTwo=new OCompositeIndexDefinition("testClass",-1);
  emptyCompositeIndexTwo.addIndex(new OPropertyIndexDefinition("testClass","fOne",OType.INTEGER));
  emptyCompositeIndexTwo.addIndex(new OPropertyIndexDefinition("testClass","fTwo",OType.STRING));
  Assert.assertEquals(emptyCompositeIndex,emptyCompositeIndexTwo);
  final ODocument docToStore=emptyCompositeIndex.toStream();
  database.save(docToStore);
  final ODocument docToLoad=database.load(docToStore.getIdentity());
  final OCompositeIndexDefinition result=new OCompositeIndexDefinition();
  result.fromStream(docToLoad);
  database.drop();
  Assert.assertEquals(result,emptyCompositeIndexTwo);
}
