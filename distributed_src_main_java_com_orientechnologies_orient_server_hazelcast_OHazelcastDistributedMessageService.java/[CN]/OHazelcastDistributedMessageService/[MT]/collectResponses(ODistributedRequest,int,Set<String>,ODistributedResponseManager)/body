{
  if (iRequest.getExecutionMode() == EXECUTION_MODE.NO_RESPONSE)   return null;
  final long beginTime=System.currentTimeMillis();
  int availableNodes=0;
  for (  String node : nodes) {
    if (manager.isNodeAvailable(node))     availableNodes++;
 else {
      if (ODistributedServerLog.isDebugEnabled())       ODistributedServerLog.debug(this,getLocalNodeNameAndThread(),node,DIRECTION.OUT,"skip listening of response because node '%s' is not online",node);
    }
  }
  final int expectedSynchronousResponses=Math.min(availableNodes,iQuorum);
  final long synchTimeout=iRequest.getPayload().getSynchronousTimeout(expectedSynchronousResponses);
  boolean executeOnLocalNode=nodes.contains(manager.getLocalNodeName());
  boolean receivedCurrentNode=false;
  final ArrayBlockingQueue<ODistributedResponse> responseQueue=getInternalThreadQueue(iRequest.getSenderThreadId());
  int receivedSynchResponses=0;
  ODistributedResponse firstResponse=null;
  while ((executeOnLocalNode && !receivedCurrentNode) || currentResponseMgr.getReceivedResponses() < expectedSynchronousResponses) {
    long elapsed=System.currentTimeMillis() - beginTime;
    final ODistributedResponse currentResponse=responseQueue.poll(synchTimeout - elapsed,TimeUnit.MILLISECONDS);
    if (currentResponse != null) {
      if (currentResponse.getRequestId() == iRequest.getId()) {
        if (executeOnLocalNode && currentResponse.isExecutedOnLocalNode())         receivedCurrentNode=true;
      }
 else {
        continue;
      }
      if (ODistributedServerLog.isDebugEnabled())       ODistributedServerLog.debug(this,getLocalNodeNameAndThread(),currentResponse.getSenderNodeName(),DIRECTION.IN,"received response: %s",currentResponse);
      if (firstResponse == null)       firstResponse=currentResponse;
      receivedSynchResponses++;
    }
 else {
      elapsed=System.currentTimeMillis() - beginTime;
      ODistributedServerLog.warn(this,getLocalNodeNameAndThread(),null,DIRECTION.IN,"timeout (%dms) on waiting for synchronous responses from nodes=%s responsesSoFar=%s request=%s",elapsed,nodes,currentResponseMgr.getRespondingNodes(),iRequest);
      break;
    }
  }
  if (!receivedCurrentNode)   ODistributedServerLog.warn(this,getLocalNodeNameAndThread(),manager.getLocalNodeName(),DIRECTION.IN,"no response received from local node about message %d",iRequest.getId());
  if (receivedSynchResponses < iQuorum) {
    iRequest.undo();
  }
  if (firstResponse == null)   throw new ODistributedException("No response from connected nodes");
  return getResponse(iRequest,firstResponse,currentResponseMgr);
}
