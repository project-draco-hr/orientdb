{
  document.setInternalStatus(ORecordElement.STATUS.UNMARSHALLING);
  try {
    document.field("name",name);
    document.field("shortName",shortName);
    document.field("description",description);
    document.field("defaultClusterId",defaultClusterId);
    document.field("clusterIds",clusterIds);
    document.field("clusterSelection",clusterSelection.getName());
    document.field("overSize",overSize);
    document.field("strictMode",strictMode);
    document.field("abstract",abstractClass);
    final Set<ODocument> props=new LinkedHashSet<ODocument>();
    for (    final OProperty p : properties.values()) {
      props.add(((OPropertyImpl)p).toStream());
    }
    document.field("properties",props,OType.EMBEDDEDSET);
    if (superClasses.isEmpty()) {
      document.field("superClass",null,OType.STRING);
      document.field("superClasses",null,OType.EMBEDDEDLIST);
    }
 else {
      document.field("superClass",superClasses.get(0).getName(),OType.STRING);
      List<String> superClassesNames=new ArrayList<String>();
      for (      OClassImpl superClass : superClasses) {
        superClassesNames.add(superClass.getName());
      }
      document.field("superClasses",superClassesNames,OType.EMBEDDEDLIST);
    }
    document.field("customFields",customFields != null && customFields.size() > 0 ? customFields : null,OType.EMBEDDEDMAP);
  }
  finally {
    document.setInternalStatus(ORecordElement.STATUS.LOADED);
  }
  return document;
}
