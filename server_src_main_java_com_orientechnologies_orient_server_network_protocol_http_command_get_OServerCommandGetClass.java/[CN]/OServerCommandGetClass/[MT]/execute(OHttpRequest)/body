{
  String[] urlParts=checkSyntax(iRequest.url,3,"Syntax error: class/<database>/<class-name>[/<limit>]<br/>Limit is optional and is setted to 20 by default. Set expressely to 0 to have no limits.");
  iRequest.data.commandInfo="Browse class";
  iRequest.data.commandDetail=urlParts[2];
  ODatabaseDocumentTx db=null;
  try {
    db=getProfiledDatabaseInstance(iRequest);
    if (db.getMetadata().getSchema().getClass(urlParts[2]) == null)     throw new IllegalArgumentException("Invalid class '" + urlParts[2] + "'");
    final int limit=urlParts.length > 3 ? Integer.parseInt(urlParts[3]) : 20;
    final List<ORecord<?>> response=new ArrayList<ORecord<?>>();
    for (    ORecord<?> rec : db.browseClass(urlParts[2])) {
      if (limit > 0 && response.size() >= limit)       break;
      response.add(rec);
    }
    if (response != null && response.size() > 0) {
      sendRecordsContent(iRequest,response);
    }
 else {
      final StringWriter buffer=new StringWriter();
      final OJSONWriter json=new OJSONWriter(buffer,JSON_FORMAT);
      json.beginObject();
      exportClassSchema(db,json,db.getMetadata().getSchema().getClass(urlParts[2]));
      json.endObject();
      sendTextContent(iRequest,OHttpUtils.STATUS_OK_CODE,"OK",null,OHttpUtils.CONTENT_JSON,buffer.toString());
    }
  }
  finally {
    if (db != null)     OSharedDocumentDatabase.release(db);
  }
  return false;
}
