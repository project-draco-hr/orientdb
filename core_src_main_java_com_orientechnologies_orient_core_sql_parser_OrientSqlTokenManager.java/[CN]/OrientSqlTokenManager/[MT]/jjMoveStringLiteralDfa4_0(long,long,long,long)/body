{
  if (((active0&=old0) | (active1&=old1)) == 0L)   return jjStartNfa_0(2,old0,old1);
  try {
    curChar=input_stream.readChar();
  }
 catch (  java.io.IOException e) {
    jjStopStringLiteralDfa_0(3,active0,active1);
    return 4;
  }
switch (curChar) {
case 41:
    if ((active1 & 0x100000000000L) != 0L)     return jjStopAtPos(4,108);
 else     if ((active1 & 0x200000000000L) != 0L)     return jjStopAtPos(4,109);
  break;
case 115:
if ((active0 & 0x20000000L) != 0L) return jjStopAtPos(4,29);
break;
case 116:
return jjMoveStringLiteralDfa5_0(active0,0L,active1,0x400000000000L);
case 120:
return jjMoveStringLiteralDfa5_0(active0,0L,active1,0x800000000000L);
default :
break;
}
return jjStartNfa_0(3,active0,active1);
}
