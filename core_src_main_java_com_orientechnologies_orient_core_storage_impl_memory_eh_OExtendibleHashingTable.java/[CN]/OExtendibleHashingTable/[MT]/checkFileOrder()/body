{
  if (size == 0)   return true;
  final long firstBucket=nextBucket(new NodeInfo(null,0,0,0,MAX_LEVEL_DEPTH));
  int bucketCount=1;
  OExtendibleHashingBucket bucket=file.get((int)firstBucket - 1);
  OClusterPosition lastPrevKey=null;
  OClusterPosition nextFirstKey=null;
  while (bucket.getNextBucket() > 0) {
    OExtendibleHashingBucket nextBucket=file.get((int)bucket.getNextBucket() - 1);
    if (nextBucket.size() > 0) {
      nextFirstKey=nextBucket.get(0).clusterPosition;
      if (bucket.size() > 0)       lastPrevKey=bucket.get(bucket.size() - 1).clusterPosition;
    }
    if (nextFirstKey != null && lastPrevKey != null)     if (lastPrevKey.compareTo(nextFirstKey) >= 0)     return false;
    bucketCount++;
    bucket=nextBucket;
  }
  return bucketCount == file.size();
}
