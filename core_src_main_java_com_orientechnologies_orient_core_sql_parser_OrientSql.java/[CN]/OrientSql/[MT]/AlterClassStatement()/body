{
  OAlterClassStatement jjtn000=new OAlterClassStatement(JJTALTERCLASSSTATEMENT);
  boolean jjtc000=true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
  OIdentifier lastIdentifier;
  OInteger lastInteger;
  try {
    jj_consume_token(ALTER);
    jj_consume_token(CLASS);
    jjtn000.name=Identifier();
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case NAME:
      jj_consume_token(NAME);
    jjtn000.property=com.orientechnologies.orient.core.metadata.schema.OClass.ATTRIBUTES.NAME;
  jjtn000.identifierValue=Identifier();
break;
case SHORTNAME:
jj_consume_token(SHORTNAME);
jjtn000.property=com.orientechnologies.orient.core.metadata.schema.OClass.ATTRIBUTES.SHORTNAME;
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case TO:
case VALUES:
case SET:
case ADD:
case PUT:
case MERGE:
case CONTENT:
case REMOVE:
case ORDER:
case GROUP:
case OFFSET:
case RECORD:
case LUCENE:
case NEAR:
case WITHIN:
case MINDEPTH:
case CLASS:
case SUPERCLASS:
case CLASSES:
case SUPERCLASSES:
case EXCEPTION:
case PROFILE:
case STORAGE:
case ON:
case OFF:
case TRUNCATE:
case FIND:
case REFERENCES:
case EXTENDS:
case CLUSTERS:
case ABSTRACT:
case ALTER:
case NAME:
case SHORTNAME:
case OVERSIZE:
case STRICTMODE:
case ADDCLUSTER:
case REMOVECLUSTER:
case CUSTOM:
case CLUSTERSELECTION:
case DESCRIPTION:
case ENCRYPTION:
case DROP:
case PROPERTY:
case FORCE:
case IN:
case KEY:
case IDENTIFIER:
case QUOTED_IDENTIFIER:
jjtn000.identifierValue=Identifier();
break;
case NULL:
jj_consume_token(NULL);
break;
default :
jj_la1[280]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
break;
case SUPERCLASS:
jj_consume_token(SUPERCLASS);
jjtn000.property=com.orientechnologies.orient.core.metadata.schema.OClass.ATTRIBUTES.SUPERCLASS;
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case PLUS:
case MINUS:
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case PLUS:
jj_consume_token(PLUS);
jjtn000.add=true;
break;
case MINUS:
jj_consume_token(MINUS);
jjtn000.remove=true;
break;
default :
jj_la1[281]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
break;
default :
jj_la1[282]=jj_gen;
;
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case TO:
case VALUES:
case SET:
case ADD:
case PUT:
case MERGE:
case CONTENT:
case REMOVE:
case ORDER:
case GROUP:
case OFFSET:
case RECORD:
case LUCENE:
case NEAR:
case WITHIN:
case MINDEPTH:
case CLASS:
case SUPERCLASS:
case CLASSES:
case SUPERCLASSES:
case EXCEPTION:
case PROFILE:
case STORAGE:
case ON:
case OFF:
case TRUNCATE:
case FIND:
case REFERENCES:
case EXTENDS:
case CLUSTERS:
case ABSTRACT:
case ALTER:
case NAME:
case SHORTNAME:
case OVERSIZE:
case STRICTMODE:
case ADDCLUSTER:
case REMOVECLUSTER:
case CUSTOM:
case CLUSTERSELECTION:
case DESCRIPTION:
case ENCRYPTION:
case DROP:
case PROPERTY:
case FORCE:
case IN:
case KEY:
case IDENTIFIER:
case QUOTED_IDENTIFIER:
jjtn000.identifierValue=Identifier();
break;
case NULL:
jj_consume_token(NULL);
jjtn000.identifierValue=null;
break;
default :
jj_la1[283]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
break;
case SUPERCLASSES:
jj_consume_token(SUPERCLASSES);
jjtn000.property=com.orientechnologies.orient.core.metadata.schema.OClass.ATTRIBUTES.SUPERCLASSES;
jjtn000.identifierListValue=new ArrayList<OIdentifier>();
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case TO:
case VALUES:
case SET:
case ADD:
case PUT:
case MERGE:
case CONTENT:
case REMOVE:
case ORDER:
case GROUP:
case OFFSET:
case RECORD:
case LUCENE:
case NEAR:
case WITHIN:
case MINDEPTH:
case CLASS:
case SUPERCLASS:
case CLASSES:
case SUPERCLASSES:
case EXCEPTION:
case PROFILE:
case STORAGE:
case ON:
case OFF:
case TRUNCATE:
case FIND:
case REFERENCES:
case EXTENDS:
case CLUSTERS:
case ABSTRACT:
case ALTER:
case NAME:
case SHORTNAME:
case OVERSIZE:
case STRICTMODE:
case ADDCLUSTER:
case REMOVECLUSTER:
case CUSTOM:
case CLUSTERSELECTION:
case DESCRIPTION:
case ENCRYPTION:
case DROP:
case PROPERTY:
case FORCE:
case IN:
case KEY:
case IDENTIFIER:
case QUOTED_IDENTIFIER:
lastIdentifier=Identifier();
jjtn000.identifierListValue.add(lastIdentifier);
label_51: while (true) {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case COMMA:
;
break;
default :
jj_la1[284]=jj_gen;
break label_51;
}
jj_consume_token(COMMA);
lastIdentifier=Identifier();
jjtn000.identifierListValue.add(lastIdentifier);
}
break;
case NULL:
jj_consume_token(NULL);
jjtn000.identifierListValue=null;
break;
default :
jj_la1[285]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
break;
case OVERSIZE:
jj_consume_token(OVERSIZE);
jjtn000.property=com.orientechnologies.orient.core.metadata.schema.OClass.ATTRIBUTES.OVERSIZE;
jjtn000.numberValue=Number();
break;
case STRICTMODE:
jj_consume_token(STRICTMODE);
jjtn000.property=com.orientechnologies.orient.core.metadata.schema.OClass.ATTRIBUTES.STRICTMODE;
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case TRUE:
jj_consume_token(TRUE);
jjtn000.booleanValue=true;
break;
case FALSE:
jj_consume_token(FALSE);
jjtn000.booleanValue=false;
break;
default :
jj_la1[286]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
break;
case ADDCLUSTER:
jj_consume_token(ADDCLUSTER);
jjtn000.property=com.orientechnologies.orient.core.metadata.schema.OClass.ATTRIBUTES.ADDCLUSTER;
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case TO:
case VALUES:
case SET:
case ADD:
case PUT:
case MERGE:
case CONTENT:
case REMOVE:
case ORDER:
case GROUP:
case OFFSET:
case RECORD:
case LUCENE:
case NEAR:
case WITHIN:
case MINDEPTH:
case CLASS:
case SUPERCLASS:
case CLASSES:
case SUPERCLASSES:
case EXCEPTION:
case PROFILE:
case STORAGE:
case ON:
case OFF:
case TRUNCATE:
case FIND:
case REFERENCES:
case EXTENDS:
case CLUSTERS:
case ABSTRACT:
case ALTER:
case NAME:
case SHORTNAME:
case OVERSIZE:
case STRICTMODE:
case ADDCLUSTER:
case REMOVECLUSTER:
case CUSTOM:
case CLUSTERSELECTION:
case DESCRIPTION:
case ENCRYPTION:
case DROP:
case PROPERTY:
case FORCE:
case IN:
case KEY:
case IDENTIFIER:
case QUOTED_IDENTIFIER:
jjtn000.identifierValue=Identifier();
break;
case INTEGER_LITERAL:
case MINUS:
jjtn000.numberValue=Integer();
break;
default :
jj_la1[287]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
break;
case REMOVECLUSTER:
jj_consume_token(REMOVECLUSTER);
jjtn000.property=com.orientechnologies.orient.core.metadata.schema.OClass.ATTRIBUTES.REMOVECLUSTER;
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case TO:
case VALUES:
case SET:
case ADD:
case PUT:
case MERGE:
case CONTENT:
case REMOVE:
case ORDER:
case GROUP:
case OFFSET:
case RECORD:
case LUCENE:
case NEAR:
case WITHIN:
case MINDEPTH:
case CLASS:
case SUPERCLASS:
case CLASSES:
case SUPERCLASSES:
case EXCEPTION:
case PROFILE:
case STORAGE:
case ON:
case OFF:
case TRUNCATE:
case FIND:
case REFERENCES:
case EXTENDS:
case CLUSTERS:
case ABSTRACT:
case ALTER:
case NAME:
case SHORTNAME:
case OVERSIZE:
case STRICTMODE:
case ADDCLUSTER:
case REMOVECLUSTER:
case CUSTOM:
case CLUSTERSELECTION:
case DESCRIPTION:
case ENCRYPTION:
case DROP:
case PROPERTY:
case FORCE:
case IN:
case KEY:
case IDENTIFIER:
case QUOTED_IDENTIFIER:
jjtn000.identifierValue=Identifier();
break;
case INTEGER_LITERAL:
case MINUS:
jjtn000.numberValue=Integer();
break;
default :
jj_la1[288]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
break;
case CUSTOM:
jj_consume_token(CUSTOM);
jjtn000.property=com.orientechnologies.orient.core.metadata.schema.OClass.ATTRIBUTES.CUSTOM;
jjtn000.customKey=Identifier();
jj_consume_token(EQ);
jjtn000.customValue=Expression();
break;
case ABSTRACT:
jj_consume_token(ABSTRACT);
jjtn000.property=com.orientechnologies.orient.core.metadata.schema.OClass.ATTRIBUTES.ABSTRACT;
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case TRUE:
jj_consume_token(TRUE);
jjtn000.booleanValue=true;
break;
case FALSE:
jj_consume_token(FALSE);
jjtn000.booleanValue=false;
break;
default :
jj_la1[289]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
break;
case CLUSTERSELECTION:
jj_consume_token(CLUSTERSELECTION);
jjtn000.property=com.orientechnologies.orient.core.metadata.schema.OClass.ATTRIBUTES.CLUSTERSELECTION;
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case TO:
case VALUES:
case SET:
case ADD:
case PUT:
case MERGE:
case CONTENT:
case REMOVE:
case ORDER:
case GROUP:
case OFFSET:
case RECORD:
case LUCENE:
case NEAR:
case WITHIN:
case MINDEPTH:
case CLASS:
case SUPERCLASS:
case CLASSES:
case SUPERCLASSES:
case EXCEPTION:
case PROFILE:
case STORAGE:
case ON:
case OFF:
case TRUNCATE:
case FIND:
case REFERENCES:
case EXTENDS:
case CLUSTERS:
case ABSTRACT:
case ALTER:
case NAME:
case SHORTNAME:
case OVERSIZE:
case STRICTMODE:
case ADDCLUSTER:
case REMOVECLUSTER:
case CUSTOM:
case CLUSTERSELECTION:
case DESCRIPTION:
case ENCRYPTION:
case DROP:
case PROPERTY:
case FORCE:
case IN:
case KEY:
case IDENTIFIER:
case QUOTED_IDENTIFIER:
jjtn000.identifierValue=Identifier();
break;
case 202:
jj_consume_token(202);
jjtn000.customString="round-robin";
break;
default :
jj_la1[290]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
break;
case DESCRIPTION:
jj_consume_token(DESCRIPTION);
jjtn000.property=com.orientechnologies.orient.core.metadata.schema.OClass.ATTRIBUTES.DESCRIPTION;
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case TO:
case VALUES:
case SET:
case ADD:
case PUT:
case MERGE:
case CONTENT:
case REMOVE:
case ORDER:
case GROUP:
case OFFSET:
case RECORD:
case LUCENE:
case NEAR:
case WITHIN:
case MINDEPTH:
case CLASS:
case SUPERCLASS:
case CLASSES:
case SUPERCLASSES:
case EXCEPTION:
case PROFILE:
case STORAGE:
case ON:
case OFF:
case TRUNCATE:
case FIND:
case REFERENCES:
case EXTENDS:
case CLUSTERS:
case ABSTRACT:
case ALTER:
case NAME:
case SHORTNAME:
case OVERSIZE:
case STRICTMODE:
case ADDCLUSTER:
case REMOVECLUSTER:
case CUSTOM:
case CLUSTERSELECTION:
case DESCRIPTION:
case ENCRYPTION:
case DROP:
case PROPERTY:
case FORCE:
case IN:
case KEY:
case IDENTIFIER:
case QUOTED_IDENTIFIER:
jjtn000.identifierValue=Identifier();
break;
case NULL:
jj_consume_token(NULL);
break;
default :
jj_la1[291]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
break;
case ENCRYPTION:
jj_consume_token(ENCRYPTION);
jjtn000.property=com.orientechnologies.orient.core.metadata.schema.OClass.ATTRIBUTES.ENCRYPTION;
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case TO:
case VALUES:
case SET:
case ADD:
case PUT:
case MERGE:
case CONTENT:
case REMOVE:
case ORDER:
case GROUP:
case OFFSET:
case RECORD:
case LUCENE:
case NEAR:
case WITHIN:
case MINDEPTH:
case CLASS:
case SUPERCLASS:
case CLASSES:
case SUPERCLASSES:
case EXCEPTION:
case PROFILE:
case STORAGE:
case ON:
case OFF:
case TRUNCATE:
case FIND:
case REFERENCES:
case EXTENDS:
case CLUSTERS:
case ABSTRACT:
case ALTER:
case NAME:
case SHORTNAME:
case OVERSIZE:
case STRICTMODE:
case ADDCLUSTER:
case REMOVECLUSTER:
case CUSTOM:
case CLUSTERSELECTION:
case DESCRIPTION:
case ENCRYPTION:
case DROP:
case PROPERTY:
case FORCE:
case IN:
case KEY:
case IDENTIFIER:
case QUOTED_IDENTIFIER:
jjtn000.identifierValue=Identifier();
break;
case NULL:
jj_consume_token(NULL);
break;
default :
jj_la1[292]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
break;
default :
jj_la1[293]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case UNSAFE:
jj_consume_token(UNSAFE);
jjtn000.unsafe=true;
break;
default :
jj_la1[294]=jj_gen;
;
}
jjtree.closeNodeScope(jjtn000,true);
jjtc000=false;
jjtn000.jjtSetLastToken(getToken(0));
{
if (true) return jjtn000;
}
}
 catch (Throwable jjte000) {
if (jjtc000) {
jjtree.clearNodeScope(jjtn000);
jjtc000=false;
}
 else {
jjtree.popNode();
}
if (jjte000 instanceof RuntimeException) {
{
if (true) throw (RuntimeException)jjte000;
}
}
if (jjte000 instanceof ParseException) {
{
if (true) throw (ParseException)jjte000;
}
}
{
if (true) throw (Error)jjte000;
}
}
 finally {
if (jjtc000) {
jjtree.closeNodeScope(jjtn000,true);
jjtn000.jjtSetLastToken(getToken(0));
}
}
throw new Error("Missing return statement in function");
}
