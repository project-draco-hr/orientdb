{
  if (!(iCurrentRecord instanceof ODocument))   return null;
  final OGraphDatabase db=OGremlinHelper.getGraphDatabase(ODatabaseRecordThreadLocal.INSTANCE.get());
  if (result == null)   result=new ArrayList<Object>();
  @SuppressWarnings({"rawtypes","unchecked"}) final Object scriptResult=OGremlinHelper.execute(db,(String)iParameters[0],null,(Map)iContext.getVariables(),result,new OGremlinHelper.OGremlinCallback(){
    @Override public boolean call(    ScriptEngine iEngine,    OrientBaseGraph iGraph){
      final ODocument document=(ODocument)iCurrentRecord;
      if (db.isVertex(document)) {
        OrientVertex graphElement=(OrientVertex)new OrientElementIterable<OrientVertex>(iGraph,Arrays.asList(new ODocument[]{document})).iterator().next();
        iEngine.getBindings(ScriptContext.ENGINE_SCOPE).put("current",graphElement);
        iEngine.getBindings(ScriptContext.ENGINE_SCOPE).put("it",graphElement);
      }
 else       if (db.isEdge(document)) {
        OrientEdge graphElement=(OrientEdge)new OrientElementIterable<OrientEdge>(iGraph,Arrays.asList(new ODocument[]{document})).iterator().next();
        iEngine.getBindings(ScriptContext.ENGINE_SCOPE).put("current",graphElement);
        iEngine.getBindings(ScriptContext.ENGINE_SCOPE).put("it",graphElement);
      }
 else       return false;
      return true;
    }
  }
,null);
  return scriptResult;
}
