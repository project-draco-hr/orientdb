{
  final ODistributedQueryHelper helper=new ODistributedQueryHelper(iCommand,undistributedClusters);
  if (!helper.isDistributable()) {
    return wrapped.command(iCommand);
  }
  final OCommandRequestText distributedCommand=helper.getPreparedRemoteCommand();
  final List<ODHTNode> nodes=getDHTNodes();
  final List<Future> tasks=new ArrayList<Future>(nodes.size());
  for (  final ODHTNode node : nodes) {
    tasks.add(distributedQueryExecutors.submit(new Runnable(){
      @Override public void run(){
        try {
          Object result=node.command(wrapped.getName(),distributedCommand,false);
          if (result != null && !node.isLocal()) {
            result=OCommandResultSerializationHelper.readFromStream((byte[])result);
          }
          helper.addToResult(result);
        }
 catch (        IOException e) {
          OLogManager.instance().error(this,"Error deserializing result from node " + node.getNodeId(),e);
        }
      }
    }
));
  }
  for (  final Future task : tasks) {
    try {
      task.get();
    }
 catch (    Exception e) {
      OLogManager.instance().error(this,"Error getting task",e);
    }
  }
  return helper.getResult();
}
