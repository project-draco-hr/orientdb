{
  for (  Map.Entry<OIdentifiable,OModifiableInteger> entry : changedValues.entrySet()) {
    final OIdentifiable identifiable=entry.getKey();
    if (identifiable instanceof ORecord) {
      final ORID identity=identifiable.getIdentity();
      final ORecord record=(ORecord)identifiable;
      if (identity.isNew() || record.isDirty()) {
        record.save();
      }
    }
  }
  if (rootPointer == null) {
    final OSBTreeBonsai<OIdentifiable,Integer> treeBonsai=ODatabaseRecordThreadLocal.INSTANCE.get().getSbTreeCollectionManager().createSBTree();
    try {
      rootPointer=treeBonsai.getRootBucketPointer();
    }
  finally {
      releaseTree();
    }
  }
  final byte[] stream=new byte[OLongSerializer.LONG_SIZE + 2 * OIntegerSerializer.INT_SIZE];
  int offset=0;
  OLongSerializer.INSTANCE.serialize(rootPointer.getPageIndex(),stream,0);
  offset+=OLongSerializer.LONG_SIZE;
  OIntegerSerializer.INSTANCE.serialize(rootPointer.getPageOffset(),stream,offset);
  offset+=OIntegerSerializer.INT_SIZE;
  OIntegerSerializer.INSTANCE.serialize(size,stream,offset);
  output.append(OBase64Utils.encodeBytes(stream));
  ORecordSerializationContext context=ORecordSerializationContext.getContext();
  context.push(new ORidSetUpdateSerializationOperation(changedValues,rootPointer));
  return this;
}
