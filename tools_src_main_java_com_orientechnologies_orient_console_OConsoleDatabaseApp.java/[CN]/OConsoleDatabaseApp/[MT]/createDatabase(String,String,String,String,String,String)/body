{
  if (userName == null)   userName=OUser.ADMIN;
  if (userPassword == null)   userPassword=OUser.ADMIN;
  if (storageType == null) {
    if (databaseURL.startsWith(OEngineRemote.NAME + ":"))     throw new IllegalArgumentException("Missing storage type for remote database");
    int pos=databaseURL.indexOf(":");
    if (pos == -1)     throw new IllegalArgumentException("Invalid URL");
    storageType=databaseURL.substring(0,pos);
  }
  if (databaseType == null)   databaseType="graph";
  message("\nCreating database [" + databaseURL + "] using the storage type ["+ storageType+ "]...");
  currentDatabaseUserName=userName;
  currentDatabaseUserPassword=userPassword;
  final Map<String,String> omap=parseCommandOptions(options);
  final String backupPath=omap.remove("-restore");
  if (databaseURL.startsWith(OEngineRemote.NAME)) {
    final String dbURL=databaseURL.substring(OEngineRemote.NAME.length() + 1);
    OServerAdmin serverAdmin=new OServerAdmin(dbURL).connect(userName,userPassword);
    serverAdmin.createDatabase(serverAdmin.getStorageName(),databaseType,storageType,backupPath).close();
    connect(databaseURL,userName,userPassword);
  }
 else {
    if (storageType != null) {
      if (!databaseURL.toLowerCase().startsWith(storageType.toLowerCase()))       throw new IllegalArgumentException("Storage type '" + storageType + "' is different by storage type in URL");
    }
    currentDatabase=new ODatabaseDocumentTx(databaseURL);
    for (    Map.Entry<String,String> oentry : omap.entrySet()) {
      if ("-encryption".equalsIgnoreCase(oentry.getKey()))       currentDatabase.setProperty(OGlobalConfiguration.STORAGE_ENCRYPTION_METHOD.getKey(),oentry.getValue());
 else       if ("-compression".equalsIgnoreCase(oentry.getKey()))       currentDatabase.setProperty(OGlobalConfiguration.STORAGE_COMPRESSION_METHOD.getKey(),oentry.getValue());
 else       currentDatabase.setProperty(oentry.getKey(),oentry.getValue());
    }
    if (backupPath == null)     currentDatabase.create();
 else     currentDatabase.create(backupPath);
    currentDatabaseName=currentDatabase.getName();
  }
  message("\nDatabase created successfully.");
  message("\n\nCurrent database is: " + databaseURL);
}
