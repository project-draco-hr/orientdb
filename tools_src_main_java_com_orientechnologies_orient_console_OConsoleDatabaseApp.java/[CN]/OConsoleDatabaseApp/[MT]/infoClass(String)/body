{
  if (currentDatabaseName == null) {
    out.println("No database selected yet.");
    return;
  }
  final OClass cls=currentDatabase.getMetadata().getSchema().getClass(iClassName);
  if (cls == null) {
    out.println("! Class '" + iClassName + "' doesn't exist in the database '"+ currentDatabaseName+ "'");
    return;
  }
  out.println();
  out.println("Class................: " + cls + " (id="+ cls.getId()+ ")");
  if (cls.getSuperClass() != null)   out.println("Super class..........: " + cls.getSuperClass());
  out.println("Default cluster......: " + currentDatabase.getClusterNameById(cls.getDefaultClusterId()) + " (id="+ cls.getDefaultClusterId()+ ")");
  out.println("Supported cluster ids: " + Arrays.toString(cls.getClusterIds()));
  if (cls.getBaseClasses() != null) {
    out.print("Base classes.........: ");
    int i=0;
    for (Iterator<OClass> it=cls.getBaseClasses(); it.hasNext(); ) {
      if (i > 0)       out.print(", ");
      out.print(it.next().getName());
      ++i;
    }
    out.println();
  }
  if (cls.properties().size() > 0) {
    out.println("Properties:");
    out.println("---------------------+------+---------------------+---------------------+-----------+------+------+");
    out.println(" NAME                |  ID  | TYPE                | LINKED TYPE/CLASS   | INDEX     | MIN  | MAX  |");
    out.println("---------------------+------+---------------------+---------------------+-----------+------+------+");
    for (    OProperty p : cls.properties()) {
      try {
        out.printf(" %-20s| %4d | %-20s| %-20s| %-10s| %-5s| %-5s|\n",p.getName(),p.getId(),p.getType(),p.getLinkedClass() != null ? p.getLinkedClass() : p.getLinkedType(),p.getIndex() != null ? p.getIndex() : "",p.getMin() != null ? p.getMin() : "",p.getMax() != null ? p.getMax() : "");
      }
 catch (      Exception e) {
      }
    }
    out.println("---------------------+------+---------------------+---------------------+-----------+------+------+");
  }
}
