{
  if (!useOnlyAlignedAccess) {
    long result=theUnsafe.getLong(buffer,index + BYTE_ARRAY_OFFSET);
    if (!byteOrder.equals(ByteOrder.nativeOrder()))     result=Long.reverseBytes(result);
    return result;
  }
  if (byteOrder.equals(ByteOrder.BIG_ENDIAN))   return ((0xFFL & theUnsafe.getByte(buffer,index + BYTE_ARRAY_OFFSET)) << 56) | ((0xFFL & theUnsafe.getByte(buffer,index + BYTE_ARRAY_OFFSET + 1)) << 48) | ((0xFFL & theUnsafe.getByte(buffer,index + BYTE_ARRAY_OFFSET + 2)) << 40)| ((0xFFL & theUnsafe.getByte(buffer,index + BYTE_ARRAY_OFFSET + 3)) << 32)| ((0xFFL & theUnsafe.getByte(buffer,index + BYTE_ARRAY_OFFSET + 4)) << 24)| ((0xFFL & theUnsafe.getByte(buffer,index + BYTE_ARRAY_OFFSET + 5)) << 16)| ((0xFFL & theUnsafe.getByte(buffer,index + BYTE_ARRAY_OFFSET + 6)) << 8)| (0xFFL & theUnsafe.getByte(buffer,index + BYTE_ARRAY_OFFSET + 7));
  return (0xFFL & theUnsafe.getByte(buffer,index + BYTE_ARRAY_OFFSET)) | ((0xFFL & theUnsafe.getByte(buffer,index + BYTE_ARRAY_OFFSET + 1)) << 8) | ((0xFFL & theUnsafe.getByte(buffer,index + BYTE_ARRAY_OFFSET + 2)) << 16)| ((0xFFL & theUnsafe.getByte(buffer,index + BYTE_ARRAY_OFFSET + 3)) << 24)| ((0xFFL & theUnsafe.getByte(buffer,index + BYTE_ARRAY_OFFSET + 4)) << 32)| ((0xFFL & theUnsafe.getByte(buffer,index + BYTE_ARRAY_OFFSET + 5)) << 40)| ((0xFFL & theUnsafe.getByte(buffer,index + BYTE_ARRAY_OFFSET + 6)) << 48)| ((0xFFL & theUnsafe.getByte(buffer,index + BYTE_ARRAY_OFFSET + 7)) << 56);
}
