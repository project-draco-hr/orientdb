{
  if (tokenFromNetwork == null || tokenFromNetwork.length == 0) {
    if (!protocols.contains(protocol))     throw new OTokenSecurityException("No valid session found, provide a token");
  }
 else {
    if (tokenBytes != null && tokenBytes.length > 0) {
      if (tokenBytes.equals(tokenFromNetwork))       return;
    }
    OToken token=null;
    try {
      if (tokenFromNetwork != null)       token=handler.parseBinaryToken(tokenFromNetwork);
    }
 catch (    Exception e) {
      throw OException.wrapException(new OSystemException("Error on token parse"),e);
    }
    if (token == null || !token.getIsVerified()) {
      cleanSession();
      throw new OTokenSecurityException("The token provided is not a valid token, signature does not match");
    }
    if (!handler.validateBinaryToken(token)) {
      cleanSession();
      throw new OTokenSecurityException("The token provided is expired");
    }
    if (tokenBased == null) {
      tokenBased=Boolean.TRUE;
    }
    if (!Arrays.equals(this.tokenBytes,tokenFromNetwork))     cleanSession();
    this.tokenBytes=tokenFromNetwork;
    this.token=token;
    protocols.add(protocol);
  }
}
