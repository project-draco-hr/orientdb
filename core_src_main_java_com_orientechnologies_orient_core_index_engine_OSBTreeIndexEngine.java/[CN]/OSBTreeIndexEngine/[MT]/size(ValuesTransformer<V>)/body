{
  acquireSharedLock();
  try {
    if (transformer == null)     return sbTree.size();
 else {
      final ItemsCounter<V> counter=new ItemsCounter<V>(transformer,-1);
      final Object firstKey=sbTree.firstKey();
      final Object lastKey=sbTree.lastKey();
      if (firstKey != null && lastKey != null) {
        sbTree.loadEntriesBetween(firstKey,true,lastKey,true,true,counter);
        return counter.count;
      }
      return 0;
    }
  }
  finally {
    releaseSharedLock();
  }
}
