{
  OrientBaseGraph graph=getGraph();
  if (fields != null && fields.length > 0 && fields[0] != null) {
    if (graph != null)     graph.autoStartTransaction();
    if (fields.length == 1) {
      Object f=fields[0];
      if (f instanceof Map<?,?>) {
        for (        Map.Entry<Object,Object> entry : ((Map<Object,Object>)f).entrySet())         setPropertyInternal(this,(ODocument)rawElement.getRecord(),entry.getKey().toString(),entry.getValue());
      }
 else       if (f instanceof Collection) {
        for (        Object o : (Collection)f) {
          if (!(o instanceof OPair))           throw new IllegalArgumentException("Invalid fields: expecting a pairs of fields as String,Object, but found the item: " + o);
          final OPair entry=(OPair)o;
          setPropertyInternal(this,(ODocument)rawElement.getRecord(),entry.getKey().toString(),entry.getValue());
        }
      }
 else       throw new IllegalArgumentException("Invalid fields: expecting a pairs of fields as String,Object or a single Map<String,Object>, but found: " + f);
    }
 else {
      if (fields.length % 2 != 0)       throw new IllegalArgumentException("Invalid fields: expecting a pairs of fields as String,Object or a single Map<String,Object>, but found: " + Arrays.toString(fields));
      for (int i=0; i < fields.length; i+=2)       setPropertyInternal(this,(ODocument)rawElement.getRecord(),fields[i].toString(),fields[i + 1]);
    }
  }
  return (T)this;
}
