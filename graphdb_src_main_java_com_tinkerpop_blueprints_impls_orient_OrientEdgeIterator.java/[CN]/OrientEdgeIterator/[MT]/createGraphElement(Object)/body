{
  if (iObject instanceof OrientEdge)   return (OrientEdge)iObject;
  final OIdentifiable rec=(OIdentifiable)iObject;
  if (rec == null) {
    OLogManager.instance().warn(this,"Record (%s) is null",rec);
    return null;
  }
  final ORecord record=rec.getRecord();
  if (record == null) {
    OLogManager.instance().warn(this,"Record (%s) is null",rec);
    return null;
  }
  if (!(record instanceof ODocument)) {
    OLogManager.instance().warn(this,"Found a record (%s) that is not an edge. Source vertex : %s, Target vertex : %s, Database : %s .",rec,sourceVertex != null ? sourceVertex.getIdentity() : null,targetVertex != null ? targetVertex.getIdentity() : null,record.getDatabase().getURL());
    return null;
  }
  final ODocument value=rec.getRecord();
  if (value == null) {
    return null;
  }
  OImmutableClass immutableSchema=ODocumentInternal.getImmutableSchemaClass(value);
  if (immutableSchema == null) {
    ODatabaseDocument db=value.getDatabaseIfDefined();
    if (db == null) {
      return null;
    }
    db.getMetadata().reload();
    immutableSchema=ODocumentInternal.getImmutableSchemaClass(value);
    if (immutableSchema == null) {
      return null;
    }
  }
  final OrientEdge edge;
  if (immutableSchema.isVertexType()) {
    if (connection.getKey() == Direction.OUT)     edge=new OrientEdge(this.sourceVertex.getGraph(),this.sourceVertex.getIdentity(),rec.getIdentity(),connection.getValue());
 else     edge=new OrientEdge(this.sourceVertex.getGraph(),rec.getIdentity(),this.sourceVertex.getIdentity(),connection.getValue());
  }
 else   if (immutableSchema.isEdgeType()) {
    edge=new OrientEdge(this.sourceVertex.getGraph(),rec.getIdentity(),connection.getValue());
  }
 else   throw new IllegalStateException("Invalid content found while iterating edges, value '" + value + "' is not an edge");
  if (this.sourceVertex.settings.isUseVertexFieldsForEdgeLabels() || edge.isLabeled(labels))   return edge;
  return null;
}
