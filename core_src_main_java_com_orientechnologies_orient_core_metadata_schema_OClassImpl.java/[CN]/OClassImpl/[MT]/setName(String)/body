{
  getDatabase().checkSecurity(ORule.ResourceGeneric.SCHEMA,ORole.PERMISSION_UPDATE);
  final Character wrongCharacter=OSchemaShared.checkClassNameIfValid(name);
  if (wrongCharacter != null)   throw new OSchemaException("Invalid class name found. Character '" + wrongCharacter + "' cannot be used in class name '"+ name+ "'");
  acquireSchemaWriteLock();
  try {
    final ODatabaseDocumentInternal database=getDatabase();
    final OStorage storage=database.getStorage();
    if (storage instanceof OStorageProxy) {
      final String cmd=String.format("alter class %s name %s",this.name,name);
      database.command(new OCommandSQL(cmd)).execute();
    }
 else     if (isDistributedCommand()) {
      final String cmd=String.format("alter class %s name %s",this.name,name);
      final OCommandSQL commandSQL=new OCommandSQL(cmd);
      commandSQL.addExcludedNode(((OAutoshardedStorage)storage).getNodeId());
      database.command(commandSQL).execute();
      setNameInternal(name);
    }
 else     setNameInternal(name);
  }
  finally {
    releaseSchemaWriteLock();
  }
  return this;
}
