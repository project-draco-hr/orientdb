{
  OBonsaiBucketPointer bucketPointer=rootBucketPointer;
  final ArrayList<OBonsaiBucketPointer> path=new ArrayList<OBonsaiBucketPointer>();
  while (true) {
    path.add(bucketPointer);
    final OCacheEntry bucketEntry=loadPage(atomicOperation,fileId,bucketPointer.getPageIndex(),false,diskCache);
    final OSBTreeBonsaiBucket.SBTreeEntry<K,V> entry;
    try {
      final OSBTreeBonsaiBucket<K,V> keyBucket=new OSBTreeBonsaiBucket<K,V>(bucketEntry,bucketPointer.getPageOffset(),keySerializer,valueSerializer,getChangesTree(atomicOperation,bucketEntry));
      final int index=keyBucket.find(key);
      if (keyBucket.isLeaf())       return new BucketSearchResult(index,path);
      if (index >= 0)       entry=keyBucket.getEntry(index);
 else {
        final int insertionIndex=-index - 1;
        if (insertionIndex >= keyBucket.size())         entry=keyBucket.getEntry(insertionIndex - 1);
 else         entry=keyBucket.getEntry(insertionIndex);
      }
    }
  finally {
      releasePage(atomicOperation,bucketEntry,diskCache);
    }
    if (comparator.compare(key,entry.key) >= 0)     bucketPointer=entry.rightChild;
 else     bucketPointer=entry.leftChild;
  }
}
