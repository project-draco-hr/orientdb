{
  final long timer=OProfiler.getInstance().startChrono();
  final OCluster cluster=getClusterById(iRid.clusterId);
  lock.acquireSharedLock();
  try {
    lockManager.acquireLock(Thread.currentThread(),iRid,LOCK.EXCLUSIVE);
    try {
      final OPhysicalPosition ppos=cluster.getPhysicalPosition(iRid.clusterPosition,new OPhysicalPosition());
      if (ppos == null)       return -1;
      if (iVersion != -1) {
        if (iVersion > -1) {
          if (iVersion != ppos.version)           throw new OConcurrentModificationException("Cannot update record " + iRid + " because the version is not the latest. Probably you are updating an old record or it has been modified by another user (db=v"+ ppos.version+ " your=v"+ iVersion+ ")");
          ++ppos.version;
        }
 else         --ppos.version;
      }
      data.updateRecord(ppos.dataPosition,iContent);
      return ppos.version;
    }
  finally {
      lockManager.releaseLock(Thread.currentThread(),iRid,LOCK.EXCLUSIVE);
    }
  }
 catch (  IOException e) {
    throw new OStorageException("Error on update record " + iRid,e);
  }
 finally {
    lock.releaseSharedLock();
    OProfiler.getInstance().stopChrono("OStorageMemory.updateRecord",timer);
  }
}
