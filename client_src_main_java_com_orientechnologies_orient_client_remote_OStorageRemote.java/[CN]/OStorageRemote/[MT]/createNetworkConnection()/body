{
  final String currentServerURL=getServerURL();
  if (currentServerURL != null) {
    try {
      return connect(currentServerURL);
    }
 catch (    Exception e) {
      OLogManager.instance().debug(this,"Error on connecting to %s",e,currentServerURL);
    }
  }
  for (int serverIdx=0; serverIdx < serverURLs.size(); ++serverIdx) {
    final String server=serverURLs.get(serverIdx);
    try {
      final OChannelBinaryAsynchClient ch=connect(server);
      if (serverIdx > 0) {
        serverURLs.remove(serverIdx);
        serverURLs.add(0,server);
        OLogManager.instance().debug(this,"New server list priority: %s...",serverURLs);
      }
      return ch;
    }
 catch (    Exception e) {
      OLogManager.instance().debug(this,"Error on connecting to %s",e,server);
    }
  }
  final StringBuilder buffer=new StringBuilder();
  for (  String server : serverURLs) {
    if (buffer.length() > 0)     buffer.append(',');
    buffer.append(server);
  }
  throw new OIOException("Cannot connect to any configured remote nodes: " + buffer);
}
