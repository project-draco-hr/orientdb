{
  String parts[]=getRequestParameters(iURI);
  String dbName=parts[0];
  String bucket=parts[1];
  String key=parts[2];
  String value;
  try {
    ODatabaseBinary db=acquireDatabase(dbName);
    try {
      OTreeMapPersistent<String,String> bucketTree=getBucket(db,bucket);
      value=bucketTree.put(key,iContent);
    }
  finally {
      releaseDatabase(dbName,db);
    }
    sendTextContent(200,"Ok","text/plain",value);
  }
 catch (  SocketTimeoutException e) {
    timeout();
  }
catch (  SocketException e) {
    connectionError();
  }
catch (  Exception e) {
    OLogManager.instance().error(this,"Error on retrieving key '" + key + "' from database '"+ dbName+ "'",e,ONetworkProtocolException.class);
  }
}
