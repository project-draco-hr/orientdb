{
  OObjectSerializerContext serializerContext=new OObjectSerializerContext();
  serializerContext.bind(new OObjectSerializer<CustomType,Long>(){
    @Override public Long serializeFieldValue(    Class<?> itype,    CustomType iFieldValue){
      serialized++;
      return iFieldValue.value;
    }
    @Override public CustomType unserializeFieldValue(    Class<?> itype,    Long iFieldValue){
      unserialized++;
      return new CustomType(iFieldValue);
    }
  }
,database);
  OObjectSerializerHelper.bindSerializerContext(null,serializerContext);
  database.getEntityManager().registerEntityClass(CustomClass.class);
  if (!database.getMetadata().getSchema().existsClass("CustomClass"))   database.getMetadata().getSchema().createClass("CustomClass");
  List<CustomType> customTypesList=new ArrayList<CustomType>();
  customTypesList.add(new CustomType(102L));
  Set<CustomType> customTypeSet=new HashSet<CustomType>();
  customTypeSet.add(new CustomType(103L));
  Map<Long,CustomType> customTypeMap=new HashMap<Long,CustomType>();
  customTypeMap.put(1L,new CustomType(104L));
  CustomClass pojo=new CustomClass("test",33L,new CustomType(101L),customTypesList,customTypeSet,customTypeMap);
  serialized=0;
  unserialized=0;
  pojo=database.save(pojo);
  Assert.assertEquals(serialized,4);
  Assert.assertEquals(unserialized,0);
  pojo=database.reload(pojo);
  Assert.assertEquals(unserialized,0);
  pojo.getCustom();
  Assert.assertEquals(unserialized,1);
  Assert.assertTrue(pojo.getCustom() instanceof CustomType);
  pojo.getCustomTypeList().iterator().next();
  Assert.assertEquals(unserialized,2);
  Assert.assertTrue(pojo.getCustomTypeList().iterator().next() instanceof CustomType);
  unserialized--;
  pojo.getCustomTypeSet().iterator().next();
  Assert.assertEquals(unserialized,3);
  Assert.assertTrue(pojo.getCustomTypeSet().iterator().next() instanceof CustomType);
  unserialized--;
  pojo.getCustomTypeMap().get(1L);
  Assert.assertEquals(serialized,4);
  Assert.assertEquals(unserialized,4);
  Assert.assertTrue(pojo.getCustomTypeMap().get(1L) instanceof CustomType);
}
