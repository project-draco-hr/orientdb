{
  final Class genericType=OReflectionHelper.getGenericMultivalueType(f);
  if (customSerialization) {
    Map<Object,Object> map=new HashMap<Object,Object>();
    doc.field(f.getName(),map);
    value=new OObjectCustomSerializerMap<TYPE>(OObjectEntitySerializer.getSerializedType(f),doc,map,(Map<Object,Object>)value);
  }
 else   if (genericType.isEnum()) {
    Map<Object,Object> map=new HashMap<Object,Object>();
    doc.field(f.getName(),map);
    value=new OObjectEnumLazyMap(genericType,doc,map,(Map<Object,Object>)value);
  }
 else   if (!(value instanceof OLazyObjectMultivalueElement)) {
    Map<Object,OIdentifiable> docMap=doc.field(f.getName());
    if (docMap == null) {
      docMap=new ORecordLazyMap(doc);
      doc.field(f.getName(),docMap);
    }
    value=new OObjectLazyMap(doc,docMap,value);
  }
  return value;
}
