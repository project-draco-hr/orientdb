{
  if (endDeepLevel > -1 && iLevel > endDeepLevel)   return false;
  if (iTarget instanceof OIdentifiable) {
    if (iEvaluatedRecords.contains(((OIdentifiable)iTarget).getIdentity()))     return false;
    iTarget=((OIdentifiable)iTarget).getRecord();
  }
  if (iTarget instanceof ODocument) {
    final ODocument target=(ODocument)iTarget;
    iEvaluatedRecords.add(target.getIdentity());
    if (target.getInternalStatus() == ORecordElement.STATUS.NOT_LOADED)     try {
      target.load();
    }
 catch (    final ORecordNotFoundException e) {
      return false;
    }
    if (iLevel >= startDeepLevel && (Boolean)iCondition.evaluate(target,null,iContext) == Boolean.TRUE)     return true;
    if (cfgFields != null)     for (    final String cfgField : cfgFields) {
      if (cfgField.equalsIgnoreCase(OSQLFilterItemFieldAny.FULL_NAME)) {
        for (        final String fieldName : target.fieldNames())         if (traverse(target.rawField(fieldName),iCondition,iLevel + 1,iEvaluatedRecords,iContext))         return true;
      }
 else       if (cfgField.equalsIgnoreCase(OSQLFilterItemFieldAny.FULL_NAME)) {
        for (        final String fieldName : target.fieldNames())         if (!traverse(target.rawField(fieldName),iCondition,iLevel + 1,iEvaluatedRecords,iContext))         return false;
        return true;
      }
 else {
        if (traverse(target.rawField(cfgField),iCondition,iLevel + 1,iEvaluatedRecords,iContext))         return true;
      }
    }
  }
 else   if (iTarget instanceof OQueryRuntimeValueMulti) {
    final OQueryRuntimeValueMulti multi=(OQueryRuntimeValueMulti)iTarget;
    for (    final Object o : multi.getValues()) {
      if (traverse(o,iCondition,iLevel + 1,iEvaluatedRecords,iContext) == Boolean.TRUE)       return true;
    }
  }
 else   if (iTarget instanceof Map<?,?>) {
    final Map<Object,Object> map=(Map<Object,Object>)iTarget;
    for (    final Object o : map.values()) {
      if (traverse(o,iCondition,iLevel + 1,iEvaluatedRecords,iContext) == Boolean.TRUE)       return true;
    }
  }
 else   if (OMultiValue.isMultiValue(iTarget)) {
    final Iterable<Object> collection=OMultiValue.getMultiValueIterable(iTarget);
    for (    final Object o : collection) {
      if (traverse(o,iCondition,iLevel + 1,iEvaluatedRecords,iContext) == Boolean.TRUE)       return true;
    }
  }
 else   if (iTarget instanceof Iterator) {
    final Iterator iterator=(Iterator)iTarget;
    while (iterator.hasNext()) {
      if (traverse(iterator.next(),iCondition,iLevel + 1,iEvaluatedRecords,iContext) == Boolean.TRUE)       return true;
    }
  }
  return false;
}
