{
  final ORecordInternal<?> record=txEntry.getRecord();
  if (txEntry.type != ORecordOperation.DELETED && !record.isDirty())   return;
  final ORecordId rid=(ORecordId)record.getIdentity();
  if (rid.clusterId == ORID.CLUSTER_ID_INVALID && record instanceof ODocument && ((ODocument)record).getSchemaClass() != null) {
    final OClass schemaClass=((ODocument)record).getSchemaClass();
    rid.clusterId=schemaClass.getClusterForNewInstance();
  }
  final OCluster cluster=storage.getClusterById(rid.clusterId);
  final ODataLocal dataSegment=storage.getDataSegmentById(txEntry.dataSegmentId);
  if (cluster.getName().equals(OMetadataDefault.CLUSTER_INDEX_NAME) || cluster.getName().equals(OMetadataDefault.CLUSTER_MANUAL_INDEX_NAME))   return;
  if (!(cluster instanceof OClusterLocal))   return;
  if (record instanceof OTxListener)   ((OTxListener)record).onEvent(txEntry,OTxListener.EVENT.BEFORE_COMMIT);
switch (txEntry.type) {
case ORecordOperation.LOADED:
    break;
case ORecordOperation.CREATED:
{
    final byte[] stream=record.toStream();
    if (stream == null) {
      OLogManager.instance().warn(this,"Null serialization on committing new record %s in transaction",rid);
      break;
    }
    final ORecordId oldRID=rid.isNew() ? rid.copy() : rid;
    if (rid.isNew()) {
      rid.clusterId=cluster.getId();
      final OPhysicalPosition ppos;
      if (iUseLog)       ppos=createRecord(iTx.getId(),dataSegment,cluster,rid,stream,record.getRecordVersion(),record.getRecordType());
 else       ppos=iTx.getDatabase().getStorage().createRecord(txEntry.dataSegmentId,rid,stream,OVersionFactory.instance().createVersion(),record.getRecordType(),(byte)0,null).getResult();
      rid.clusterPosition=ppos.clusterPosition;
      record.getRecordVersion().copyFrom(ppos.recordVersion);
      iTx.updateIdentityAfterCommit(oldRID,rid);
    }
 else {
      final ORecordVersion version;
      if (iUseLog) {
        version=updateRecord(iTx.getId(),cluster,rid,stream,record.getRecordVersion(),record.getRecordType());
      }
 else {
        version=iTx.getDatabase().getStorage().updateRecord(rid,record.isContentChanged(),stream,record.getRecordVersion(),record.getRecordType(),(byte)0,null).getResult();
      }
      record.getRecordVersion().copyFrom(version);
    }
    break;
  }
case ORecordOperation.UPDATED:
{
  final byte[] stream=record.toStream();
  if (stream == null) {
    OLogManager.instance().warn(this,"Null serialization on committing updated record %s in transaction",rid);
    break;
  }
  if (!record.isContentChanged())   break;
  if (iUseLog)   record.getRecordVersion().copyFrom(updateRecord(iTx.getId(),cluster,rid,stream,record.getRecordVersion(),record.getRecordType()));
 else   record.getRecordVersion().copyFrom(iTx.getDatabase().getStorage().updateRecord(rid,record.isContentChanged(),stream,record.getRecordVersion(),record.getRecordType(),(byte)0,null).getResult());
  break;
}
case ORecordOperation.DELETED:
{
if (iUseLog) deleteRecord(iTx.getId(),cluster,rid.clusterPosition,record.getRecordVersion());
 else iTx.getDatabase().getStorage().deleteRecord(rid,record.getRecordVersion(),(byte)0,null);
}
break;
}
record.unsetDirty();
if (record instanceof OTxListener) ((OTxListener)record).onEvent(txEntry,OTxListener.EVENT.AFTER_COMMIT);
}
