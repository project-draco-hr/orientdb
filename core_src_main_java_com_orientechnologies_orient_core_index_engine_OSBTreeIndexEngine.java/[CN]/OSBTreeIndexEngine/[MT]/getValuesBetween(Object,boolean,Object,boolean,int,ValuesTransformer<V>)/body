{
  acquireSharedLock();
  try {
    final Set<OIdentifiable> result=new HashSet<OIdentifiable>();
    sbTree.loadEntriesBetween(rangeFrom,fromInclusive,rangeTo,toInclusive,new OSBTree.RangeResultListener<Object,V>(){
      @Override public boolean addResult(      Map.Entry<Object,V> entry){
        addToResult(transformer,result,entry.getValue(),maxValuesToFetch);
        if (maxValuesToFetch > -1 && result.size() == maxValuesToFetch)         return false;
        return true;
      }
    }
);
    return result;
  }
  finally {
    releaseSharedLock();
  }
}
