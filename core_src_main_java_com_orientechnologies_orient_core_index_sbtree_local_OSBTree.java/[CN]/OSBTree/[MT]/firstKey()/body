{
  final OSessionStoragePerformanceStatistic statistic=performanceStatisticManager.getSessionPerformanceStatistic();
  startOperation();
  if (statistic != null)   statistic.startIndexEntryReadTimer();
  try {
    atomicOperationsManager.acquireReadLock(this);
    try {
      acquireSharedLock();
      try {
        OAtomicOperation atomicOperation=atomicOperationsManager.getCurrentOperation();
        final BucketSearchResult searchResult=firstItem(atomicOperation);
        if (searchResult == null)         return null;
        final OCacheEntry cacheEntry=loadPage(atomicOperation,fileId,searchResult.getLastPathItem(),false);
        cacheEntry.acquireSharedLock();
        try {
          OSBTreeBucket<K,V> bucket=new OSBTreeBucket<K,V>(cacheEntry,keySerializer,keyTypes,valueSerializer,getChanges(atomicOperation,cacheEntry));
          return bucket.getKey(searchResult.itemIndex);
        }
  finally {
          cacheEntry.releaseSharedLock();
          releasePage(atomicOperation,cacheEntry);
        }
      }
  finally {
        releaseSharedLock();
      }
    }
 catch (    IOException e) {
      throw OException.wrapException(new OSBTreeException("Error during finding first key in sbtree [" + getName() + "]",this),e);
    }
 finally {
      atomicOperationsManager.releaseReadLock(this);
    }
  }
  finally {
    if (statistic != null)     statistic.stopIndexEntryReadTimer();
    completeOperation();
  }
}
