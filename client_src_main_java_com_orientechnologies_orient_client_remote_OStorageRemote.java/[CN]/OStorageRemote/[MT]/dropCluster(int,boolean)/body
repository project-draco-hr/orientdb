{
  return networkOperation(new OStorageRemoteOperation<Boolean>(){
    @Override public Boolean execute(    OChannelBinaryAsynchClient network,    OStorageRemoteSession session) throws IOException {
      stateLock.acquireWriteLock();
      try {
        try {
          beginRequest(network,OChannelBinaryProtocol.REQUEST_DATACLUSTER_DROP,session);
          network.writeShort((short)iClusterId);
        }
  finally {
          endRequest(network);
        }
        byte result=0;
        try {
          beginResponse(network,session);
          result=network.readByte();
        }
  finally {
          endResponse(network);
        }
        if (result == 1) {
          final OCluster cluster=clusters[iClusterId];
          clusters[iClusterId]=null;
          clusterMap.remove(cluster.getName());
          if (configuration.clusters.size() > iClusterId)           configuration.dropCluster(iClusterId);
          return true;
        }
        return false;
      }
  finally {
        stateLock.releaseWriteLock();
      }
    }
  }
,"Error on removing of cluster");
}
