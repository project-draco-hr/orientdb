{
  OMemoryWatchDog.setPercentageUsageThreshold(iThreshold);
  final MemoryMXBean memBean=ManagementFactory.getMemoryMXBean();
  final NotificationEmitter memEmitter=(NotificationEmitter)memBean;
  memEmitter.addNotificationListener(new NotificationListener(){
    public void handleNotification(    Notification n,    Object hb){
      if (n.getType().equals(MemoryNotificationInfo.MEMORY_THRESHOLD_EXCEEDED)) {
        long maxMemory=tenuredGenPool.getUsage().getMax();
        long usedMemory=tenuredGenPool.getUsage().getUsed();
        for (        Listener listener : listeners) {
          listener.memoryUsageLow(TYPE.JVM,usedMemory,maxMemory);
        }
      }
    }
  }
,null,null);
}
