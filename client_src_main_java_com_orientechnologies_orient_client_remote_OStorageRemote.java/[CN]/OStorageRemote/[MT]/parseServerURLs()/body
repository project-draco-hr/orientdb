{
  String remoteHost;
  String[] remotePorts;
  int dbPos=fileURL.indexOf("/");
  if (dbPos == -1) {
    name=fileURL;
    remoteHost=getDefaultHost();
    remotePorts=getDefaultPort();
  }
 else {
    name=fileURL.substring(dbPos + 1);
    int startPos=0;
    int endPos=0;
    while (endPos < dbPos) {
      if (fileURL.indexOf(ADDRESS_SEPARATOR,startPos) > -1)       endPos=fileURL.indexOf(ADDRESS_SEPARATOR,startPos);
 else       endPos=dbPos;
      int posRemotePort=fileURL.indexOf(":",startPos);
      if (posRemotePort != -1 && posRemotePort < endPos) {
        remoteHost=fileURL.substring(startPos,posRemotePort);
        remotePorts=fileURL.substring(posRemotePort + 1,endPos).split("_");
        startPos=endPos + 1;
      }
 else {
        remoteHost=fileURL.substring(startPos,endPos);
        remotePorts=getDefaultPort();
        startPos=endPos + 1;
      }
      serverURLs.add(new OPair<String,String[]>(remoteHost,remotePorts));
    }
  }
}
