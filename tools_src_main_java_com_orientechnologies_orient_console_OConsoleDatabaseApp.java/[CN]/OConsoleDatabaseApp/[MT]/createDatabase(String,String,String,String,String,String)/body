{
  if (iUserName == null)   iUserName=OUser.ADMIN;
  if (iUserPassword == null)   iUserPassword=OUser.ADMIN;
  if (iStorageType == null) {
    if (iDatabaseURL.startsWith(OEngineRemote.NAME + ":"))     throw new IllegalArgumentException("Missing storage type for remote database");
    int pos=iDatabaseURL.indexOf(":");
    if (pos == -1)     throw new IllegalArgumentException("Invalid URL");
    iStorageType=iDatabaseURL.substring(0,pos);
  }
  if (iDatabaseType == null)   iDatabaseType="graph";
  message("\nCreating database [" + iDatabaseURL + "] using the storage type ["+ iStorageType+ "]...");
  currentDatabaseUserName=iUserName;
  currentDatabaseUserPassword=iUserPassword;
  if (iDatabaseURL.startsWith(OEngineRemote.NAME)) {
    final String dbURL=iDatabaseURL.substring(OEngineRemote.NAME.length() + 1);
    new OServerAdmin(dbURL).connect(iUserName,iUserPassword).createDatabase(iDatabaseType,iStorageType).close();
    connect(iDatabaseURL,OUser.ADMIN,OUser.ADMIN);
  }
 else {
    if (iStorageType != null) {
      if (!iDatabaseURL.toLowerCase().startsWith(iStorageType.toLowerCase()))       throw new IllegalArgumentException("Storage type '" + iStorageType + "' is different by storage type in URL");
    }
    currentDatabase=new ODatabaseDocumentTx(iDatabaseURL);
    if (iOptions != null) {
      final List<String> options=OStringSerializerHelper.smartSplit(iOptions,',',false);
      for (      String option : options) {
        final String[] values=option.split("=");
        if (values.length != 2)         throw new IllegalArgumentException("Options must have in th format -<option>=<value>[,-<option>=<value>]*");
        if ("-encryption".equalsIgnoreCase(values[0]))         currentDatabase.setProperty(OGlobalConfiguration.STORAGE_ENCRYPTION_METHOD.getKey(),values[1]);
 else         if ("-compression".equalsIgnoreCase(values[0]))         currentDatabase.setProperty(OGlobalConfiguration.STORAGE_COMPRESSION_METHOD.getKey(),values[1]);
 else         currentDatabase.setProperty(values[0],values[1]);
      }
    }
    currentDatabase.create();
    currentDatabaseName=currentDatabase.getName();
  }
  message("\nDatabase created successfully.");
  message("\n\nCurrent database is: " + iDatabaseURL);
}
