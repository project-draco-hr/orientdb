{
  if (iType == null)   return iValue;
  if (iValue instanceof ORID && !ORID.class.equals(iType) && !ORecordId.class.equals(iType)) {
    iValue=(RET)new ODocument(_database,(ORID)iValue);
    _fieldValues.put(iPropertyName,iValue);
  }
 else   if (Set.class.isAssignableFrom(iType) && !(iValue instanceof Set)) {
    final Collection<Object> newValue;
    if (iValue instanceof ORecordLazyList || iValue instanceof ORecordLazyMap)     newValue=new ORecordLazySet(this,RECORD_TYPE);
 else     newValue=new ORecordTrackedSet(this);
    if (iValue instanceof Collection)     newValue.addAll((Collection<Object>)iValue);
 else     if (iValue instanceof Map)     newValue.addAll(((Map<String,Object>)iValue).values());
    _fieldValues.put(iPropertyName,newValue);
    iValue=(RET)newValue;
  }
 else   if (List.class.isAssignableFrom(iType) && !(iValue instanceof List)) {
    final Collection<Object> newValue;
    if (iValue instanceof ORecordLazySet || iValue instanceof ORecordLazyMap)     newValue=new ORecordLazyList(this,RECORD_TYPE);
 else     newValue=new ORecordTrackedList(this);
    if (iValue instanceof Collection)     newValue.addAll((Collection<Object>)iValue);
 else     if (iValue instanceof Map)     newValue.addAll(((Map<String,Object>)iValue).values());
    _fieldValues.put(iPropertyName,newValue);
    iValue=(RET)newValue;
  }
  return iValue;
}
