{
  String alias=matchFilter.getAlias();
  OWhereClause filter=matchFilter.getFilter();
  if (alias != null) {
    if (filter != null && filter.baseExpression != null) {
      OWhereClause previousFilter=aliasFilters.get(alias);
      if (previousFilter == null) {
        previousFilter=new OWhereClause(-1);
        previousFilter.baseExpression=new OAndBlock(-1);
        aliasFilters.put(alias,previousFilter);
      }
      OAndBlock filterBlock=(OAndBlock)previousFilter.baseExpression;
      if (filter != null && filter.baseExpression != null) {
        filterBlock.subBlocks.add(filter.baseExpression);
      }
    }
    String clazz=matchFilter.getClassName(context);
    if (clazz != null) {
      String previousClass=aliasClasses.get(alias);
      if (previousClass == null) {
        aliasClasses.put(alias,clazz);
      }
 else {
        String lower=getLowerSubclass(clazz,previousClass);
        if (lower == null) {
          throw new OCommandExecutionException("classes defined for alias " + alias + " ("+ clazz+ ", "+ previousClass+ ") are not in the same hierarchy");
        }
        aliasClasses.put(alias,lower);
      }
    }
  }
}
