{
  final ORID id;
  ODatabaseDocumentTx db=null;
  try {
    db=new ODatabaseDocumentTx("memory:" + TestQueryRecordLockUnlock.class.getSimpleName());
    db.create();
    ODocument doc=new ODocument();
    doc.field("count",0);
    doc=db.save(doc);
    id=doc.getIdentity();
    db.commit();
  }
  finally {
    db.close();
  }
  int thread=10;
  ExecutorService pool=Executors.newFixedThreadPool(thread);
  for (int i=0; i < 10; i++) {
    pool.submit(new Runnable(){
      @Override public void run(){
        ODatabaseDocumentTx db=null;
        try {
          db=new ODatabaseDocumentTx("memory:" + TestQueryRecordLockUnlock.class.getSimpleName());
          db.open("admin","admin");
          for (int j=0; j < 10; j++) {
            String asql="update (select from " + id.toString() + ") INCREMENT count = 1 where count < 50 lock record";
            db.command(new OCommandSQL(asql)).execute(id);
          }
        }
 catch (        Exception e) {
          e.printStackTrace();
        }
 finally {
          if (db != null) {
            db.close();
          }
        }
        System.out.println(Thread.currentThread().getName() + " done.");
      }
    }
);
  }
  pool.shutdown();
  pool.awaitTermination(1,TimeUnit.HOURS);
  try {
    db=new ODatabaseDocumentTx("memory:" + TestQueryRecordLockUnlock.class.getSimpleName());
    db.open("admin","admin");
    ODocument doc=db.load(id);
    assertEquals(50,doc.field("count"));
  }
  finally {
    if (db != null) {
      db.drop();
    }
  }
}
