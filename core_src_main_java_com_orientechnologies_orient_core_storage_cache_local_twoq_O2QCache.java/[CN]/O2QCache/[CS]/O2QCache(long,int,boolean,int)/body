{
  if (percentOfPinnedPages > MAX_PERCENT_OF_PINED_PAGES)   throw new IllegalArgumentException("Percent of pinned pages cannot be more than " + percentOfPinnedPages + " but passed value is "+ percentOfPinnedPages);
  this.percentOfPinnedPages=percentOfPinnedPages;
  cacheLock.acquireWriteLock();
  try {
    this.pageSize=pageSize;
    this.filePages=new ConcurrentHashMap<Long,Set<Long>>();
    int normalizedSize=normalizeMemory(readCacheMaxMemory,pageSize);
    if (checkMinSize && normalizedSize < MIN_CACHE_SIZE)     normalizedSize=MIN_CACHE_SIZE;
    final MemoryData memoryData=new MemoryData(normalizedSize,0);
    this.memoryDataContainer.set(memoryData);
    am=new ConcurrentLRUList();
    a1out=new ConcurrentLRUList();
    a1in=new ConcurrentLRUList();
  }
  finally {
    cacheLock.releaseWriteLock();
  }
}
