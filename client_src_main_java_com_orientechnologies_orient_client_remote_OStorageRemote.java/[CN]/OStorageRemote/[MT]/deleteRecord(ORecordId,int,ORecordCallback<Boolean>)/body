{
  checkConnection();
  do {
    try {
      final OChannelBinaryClient network=beginRequest(OChannelBinaryProtocol.REQUEST_RECORD_DELETE);
      try {
        network.writeRID(iRid);
        network.writeInt(iVersion);
      }
  finally {
        endRequest(network);
      }
      if (iCallback == null)       try {
        beginResponse(network);
        return network.readByte() == 1;
      }
  finally {
        endResponse(network);
      }
 else {
        Callable<Object> response=new Callable<Object>(){
          public Object call() throws Exception {
            Boolean result;
            beginResponse(network);
            try {
              result=network.readByte() == 1;
            }
  finally {
              endResponse(network);
            }
            iCallback.call(result);
            return null;
          }
        }
;
        asynchExecutor.submit(new FutureTask<Object>(response));
      }
    }
 catch (    OException e) {
      throw e;
    }
catch (    Exception e) {
      handleException("Error on delete record " + iRid,e);
    }
  }
 while (true);
}
