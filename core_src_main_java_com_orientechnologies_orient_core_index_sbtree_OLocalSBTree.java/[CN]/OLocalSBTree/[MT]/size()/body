{
  acquireSharedLock();
  try {
    OCachePointer rootPointer=diskCache.load(fileId,ROOT_INDEX);
    try {
      OSBTreeBucket<K> rootBucket=new OSBTreeBucket<K>(rootPointer.getDataPointer(),keySerializer);
      return rootBucket.getTreeSize();
    }
  finally {
      diskCache.release(fileId,ROOT_INDEX);
    }
  }
 catch (  IOException e) {
    throw new OIndexException("Error during retrieving of size of index " + name);
  }
 finally {
    releaseSharedLock();
  }
}
