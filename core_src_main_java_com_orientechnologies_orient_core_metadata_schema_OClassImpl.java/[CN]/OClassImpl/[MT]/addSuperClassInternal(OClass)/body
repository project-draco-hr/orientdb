{
  acquireSchemaWriteLock();
  try {
    final OClassImpl cls;
    if (superClass instanceof OClassAbstractDelegate)     cls=(OClassImpl)((OClassAbstractDelegate)superClass).delegate;
 else     cls=(OClassImpl)superClass;
    if (cls != null) {
      final OSecurityUser user=getDatabase().getUser();
      if (user != null)       user.allow(ORule.ResourceGeneric.CLASS,cls.getName(),ORole.PERMISSION_UPDATE);
      if (superClasses.contains(superClass)) {
        throw new OSchemaException("Class: '" + this.getName() + "' already has the class '"+ superClass.getName()+ "' as superclass");
      }
      cls.addBaseClass(this);
      superClasses.add(cls);
    }
  }
  finally {
    releaseSchemaWriteLock();
  }
}
