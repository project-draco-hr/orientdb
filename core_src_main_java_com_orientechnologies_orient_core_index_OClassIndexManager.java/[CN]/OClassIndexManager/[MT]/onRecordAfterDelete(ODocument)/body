{
  iRecord=checkForLoading(iRecord);
  final OClass cls=iRecord.getSchemaClass();
  if (cls == null)   return false;
  final Collection<OIndex> indexes=new ArrayList<OIndex>(cls.getIndexes());
  if (!indexes.isEmpty()) {
    final Set<String> dirtyFields=new HashSet<String>(Arrays.asList(iRecord.getDirtyFields()));
    if (dirtyFields.size() > 0) {
      final Iterator<OIndex> indexIterator=indexes.iterator();
      while (indexIterator.hasNext()) {
        final OIndex index=indexIterator.next();
        final OIndexDefinition indexDefinition=index.getDefinition();
        final List<String> indexFields=indexDefinition.getFields();
        for (        final String indexField : indexFields) {
          if (dirtyFields.contains(indexField)) {
            final List<Object> origValues=new ArrayList<Object>(indexFields.size());
            for (            final String field : indexFields) {
              if (dirtyFields.contains(field))               origValues.add(iRecord.getOriginalValue(field));
 else               origValues.add(iRecord.<Object>field(field));
            }
            final Object origValue=indexDefinition.createValue(origValues);
            if (origValue instanceof Collection) {
              for (              final Object valueItem : (Collection)origValue)               if (valueItem != null)               index.remove(valueItem,iRecord);
            }
 else             if (origValue != null)             index.remove(origValue,iRecord);
            indexIterator.remove();
            break;
          }
        }
      }
    }
    for (    final OIndex<?> index : indexes) {
      final Object key=index.getDefinition().getDocumentValueToIndex(iRecord);
      if (key instanceof Collection) {
        for (        final Object keyItem : (Collection)key)         if (keyItem != null)         index.remove(keyItem,iRecord);
      }
 else       if (key != null)       index.remove(key,iRecord);
    }
  }
  if (iRecord.isTrackingChanges()) {
    iRecord.setTrackingChanges(false);
    iRecord.setTrackingChanges(true);
  }
  return false;
}
