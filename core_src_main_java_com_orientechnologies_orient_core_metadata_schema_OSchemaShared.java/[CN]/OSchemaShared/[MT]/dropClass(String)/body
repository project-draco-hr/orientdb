{
  if (getDatabase().getTransaction().isActive())   throw new IllegalStateException("Cannot drop a class inside a transaction");
  if (iClassName == null)   throw new IllegalArgumentException("Class name is null");
  getDatabase().checkSecurity(ODatabaseSecurityResources.SCHEMA,ORole.PERMISSION_DELETE);
  final String key=iClassName.toLowerCase();
  getDatabase().getStorage().callInLock(new Callable<Object>(){
    @Override public Object call() throws Exception {
      final OClass cls=classes.get(key);
      if (cls == null)       throw new OSchemaException("Class " + iClassName + " was not found in current database");
      if (cls.getBaseClasses().hasNext())       throw new OSchemaException("Class " + iClassName + " cannot be dropped because it has sub classes. Remove the dependencies before trying to drop it again");
      final StringBuilder cmd=new StringBuilder("drop class ");
      cmd.append(iClassName);
      getDatabase().command(new OCommandSQL(cmd.toString())).execute();
      getDatabase().reload();
      reload();
      return null;
    }
  }
,true);
}
