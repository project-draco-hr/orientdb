{
  String fieldName;
  String fieldValue;
  Object value;
  int newPos=currentPos;
  while (currentPos != -1 && (removeEntries.size() == 0 || tempParseWord.toString().equals(",")) && !tempParseWord.toString().equals(KEYWORD_WHERE)) {
    newPos=OSQLHelper.nextWord(text,textUpperCase,currentPos,tempParseWord,false);
    if (newPos == -1)     throw new OCommandSQLParsingException("Field name expected. Use " + getSyntax(),text,currentPos);
    fieldName=tempParseWord.toString();
    currentPos=OStringParser.jumpWhiteSpaces(text,newPos);
    if (currentPos > -1 && text.charAt(currentPos) == '=') {
      currentPos=OSQLHelper.nextWord(text,textUpperCase,currentPos + 1,tempParseWord,false," =><,");
      if (currentPos == -1)       throw new OCommandSQLParsingException("Value expected. Use " + getSyntax(),text,currentPos);
      fieldValue=tempParseWord.toString();
      if (fieldValue.endsWith(",")) {
        currentPos=newPos - 1;
        fieldValue=fieldValue.substring(0,fieldValue.length() - 1);
      }
 else       currentPos=newPos;
      value=getFieldValueCountingParameters(fieldValue);
    }
 else     value=EMPTY_VALUE;
    removeEntries.add(new OPair<String,Object>(fieldName,value));
    currentPos=OSQLHelper.nextWord(text,textUpperCase,currentPos,tempParseWord,true);
  }
  if (removeEntries.size() == 0)   throw new OCommandSQLParsingException("Field(s) to remove are missed. Example: name, salary. Use " + getSyntax(),text,currentPos);
  return currentPos;
}
