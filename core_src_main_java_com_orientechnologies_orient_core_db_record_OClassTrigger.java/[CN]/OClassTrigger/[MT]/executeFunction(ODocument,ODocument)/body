{
  if (funcDoc == null)   return RESULT.RECORD_NOT_CHANGED;
  String funcName=funcDoc.field("name");
  if (funcName == null || funcName.length() == 0)   return RESULT.RECORD_NOT_CHANGED;
  ODatabaseRecord db=ODatabaseRecordThreadLocal.INSTANCE.getIfDefined();
  if (db != null && !(db instanceof ODatabaseRecordTx))   db=db.getUnderlying();
  final OFunction f=db.getMetadata().getFunctionLibrary().getFunction(funcName);
  final OScriptManager scriptManager=Orient.instance().getScriptManager();
  final ScriptEngine scriptEngine=scriptManager.getEngine(f.getLanguage());
  final Bindings binding=scriptEngine.getBindings(ScriptContext.ENGINE_SCOPE);
  for (  OScriptInjection i : scriptManager.getInjections())   i.bind(binding);
  binding.put("doc",iDocument);
  if (db != null)   binding.put("db",new OScriptDocumentDatabaseWrapper((ODatabaseRecordTx)db));
  boolean isSuccess=false;
  try {
    if (f.getLanguage() == null)     throw new OConfigurationException("Database function '" + funcName + "' has no language");
    final String funcStr=scriptManager.getFunctionDefinition(f);
    if (funcStr != null) {
      try {
        scriptEngine.eval(funcStr);
      }
 catch (      ScriptException e) {
        scriptManager.getErrorMessage(e,funcStr);
      }
    }
    if (scriptEngine instanceof Invocable) {
      final Invocable invocableEngine=(Invocable)scriptEngine;
      Object[] EMPTY=new Object[0];
      isSuccess=(Boolean)invocableEngine.invokeFunction(funcName,EMPTY);
    }
  }
 catch (  ScriptException e) {
    throw new OCommandScriptException("Error on execution of the script",funcName,e.getColumnNumber(),e);
  }
catch (  NoSuchMethodException e) {
    throw new OCommandScriptException("Error on execution of the script",funcName,0,e);
  }
catch (  OCommandScriptException e) {
    throw e;
  }
 finally {
    scriptManager.unbind(binding);
  }
  if (isSuccess) {
    return RESULT.RECORD_CHANGED;
  }
  return RESULT.RECORD_NOT_CHANGED;
}
