{
  acquireExclusiveLock();
  try {
    clearMetadata();
    final Collection<ODocument> idxs=document.field(CONFIG_INDEXES);
    if (idxs != null) {
      for (      ODocument d : idxs) {
        d.setLazyLoad(false);
        try {
          final boolean isMultiValue=ODefaultIndexFactory.isMultiValueIndex((String)d.field(OIndexInternal.CONFIG_TYPE));
          final OIndexInternal.IndexMetadata newIndexMetadata=OIndexAbstract.loadMetadataInternal(d,(String)d.field(OIndexInternal.CONFIG_TYPE),d.<String>field(OIndexInternal.ALGORITHM),d.<String>field(OIndexInternal.VALUE_CONTAINER_ALGORITHM));
          addIndexInternal(getRemoteIndexInstance(isMultiValue,newIndexMetadata.getType(),newIndexMetadata.getName(),newIndexMetadata.getAlgorithm(),newIndexMetadata.getClustersToIndex(),newIndexMetadata.getIndexDefinition(),(ORID)d.field(OIndexAbstract.CONFIG_MAP_RID),d));
        }
 catch (        Exception e) {
          OLogManager.instance().error(this,"Error on loading of index by configuration: %s",e,d);
        }
      }
    }
  }
  finally {
    releaseExclusiveLock();
  }
}
