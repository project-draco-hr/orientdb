{
  for (long index=0; index < capacity; index++) {
    int hashLineSize=getHashLineSize(entries,index);
    for (int offset=0; offset < hashLineSize; offset++) {
      final int keyPtr=getKeyPtr(entries,index,offset);
      final int valuePtr=getValuePtr(entries,index,offset);
      memory.free(keyPtr);
      memory.free(valuePtr);
    }
    int hashLinePtr=getNextHashLinePtr(entries,index);
    while (hashLinePtr != ODirectMemory.NULL_POINTER) {
      hashLineSize=getHashLineSizeFromHashLine(hashLinePtr);
      for (int oldOffset=0; oldOffset < hashLineSize; oldOffset++) {
        final int keyPtr=getKeyPtrFromHashLine(hashLinePtr,oldOffset);
        final int valuePtr=getValuePtrFromHashLine(hashLinePtr,oldOffset);
        memory.free(keyPtr);
        memory.free(valuePtr);
      }
      hashLinePtr=getNextHashLinePtrFromHashLine(hashLinePtr);
    }
  }
  clearLines(entries,capacity);
  size=0;
}
