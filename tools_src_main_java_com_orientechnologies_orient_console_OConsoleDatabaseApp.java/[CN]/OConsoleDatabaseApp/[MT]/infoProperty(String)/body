{
  checkForDatabase();
  if (iPropertyName.indexOf('.') == -1)   throw new OException("Property name is in the format <class>.<property>");
  final String[] parts=iPropertyName.split("\\.");
  final OClass cls=currentDatabase.getMetadata().getImmutableSchemaSnapshot().getClass(parts[0]);
  if (cls == null) {
    message("\n! Class '" + parts[0] + "' does not exist in the database '"+ currentDatabaseName+ "'");
    return;
  }
  final OProperty prop=cls.getProperty(parts[1]);
  if (prop == null) {
    message("\n! Property '" + parts[1] + "' does not exist in class '"+ parts[0]+ "'");
    return;
  }
  message("\nPROPERTY '" + prop.getFullName() + "'\n");
  message("\nType.................: " + prop.getType());
  message("\nMandatory............: " + prop.isMandatory());
  message("\nNot null.............: " + prop.isNotNull());
  message("\nRead only............: " + prop.isReadonly());
  message("\nDefault value........: " + prop.getDefaultValue());
  message("\nMinimum value........: " + prop.getMin());
  message("\nMaximum value........: " + prop.getMax());
  message("\nREGEXP...............: " + prop.getRegexp());
  message("\nCollate..............: " + prop.getCollate());
  message("\nLinked class.........: " + prop.getLinkedClass());
  message("\nLinked type..........: " + prop.getLinkedType());
  if (prop.getCustomKeys().size() > 0) {
    message("\n\nCUSTOM ATTRIBUTES");
    message("\n-------------------------------+-----------------------------------------+");
    message("\n NAME                          | VALUE                                   |");
    message("\n-------------------------------+-----------------------------------------+");
    for (    final String k : prop.getCustomKeys()) {
      try {
        message("\n %-30s| %-40s|",k,prop.getCustom(k));
      }
 catch (      Exception ignored) {
      }
    }
    message("\n-------------------------------+-----------------------------------------+");
  }
  final Collection<OIndex<?>> indexes=prop.getAllIndexes();
  if (!indexes.isEmpty()) {
    message("\n\nINDEXES (" + indexes.size() + " altogether)");
    message("\n-------------------------------+----------------+");
    message("\n NAME                          | PROPERTIES     |");
    message("\n-------------------------------+----------------+");
    for (    final OIndex<?> index : indexes) {
      final OIndexDefinition indexDefinition=index.getDefinition();
      if (indexDefinition != null) {
        final List<String> fields=indexDefinition.getFields();
        message("\n %-30s| %-15s|",index.getName(),fields.get(0) + (fields.size() > 1 ? " (+)" : ""));
        for (int i=1; i < fields.size(); i++) {
          if (i < fields.size() - 1)           message("\n %-30s| %-15s|","",fields.get(i) + " (+)");
 else           message("\n %-30s| %-15s|","",fields.get(i));
        }
      }
 else {
        message("\n %-30s| %-15s|",index.getName(),"");
      }
    }
    message("\n-------------------------------+----------------+");
  }
}
