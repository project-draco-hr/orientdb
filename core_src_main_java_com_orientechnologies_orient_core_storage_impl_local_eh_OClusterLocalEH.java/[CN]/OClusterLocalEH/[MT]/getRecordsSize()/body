{
  acquireSharedLock();
  try {
    long size=0;
    OHashIndexBucket.Entry<OClusterPosition,OPhysicalPosition>[] entries=localHashTable.ceilingEntries(OClusterPositionFactory.INSTANCE.valueOf(0));
    while (entries.length > 0) {
      for (      OHashIndexBucket.Entry<OClusterPosition,OPhysicalPosition> entry : entries) {
        if (entry.value.dataSegmentPos > -1 && !entry.value.recordVersion.isTombstone())         size+=storage.getDataSegmentById(entry.value.dataSegmentId).getRecordSize(entry.value.dataSegmentPos);
      }
      entries=localHashTable.higherEntries(entries[entries.length - 1].key);
    }
    return size;
  }
  finally {
    releaseSharedLock();
  }
}
