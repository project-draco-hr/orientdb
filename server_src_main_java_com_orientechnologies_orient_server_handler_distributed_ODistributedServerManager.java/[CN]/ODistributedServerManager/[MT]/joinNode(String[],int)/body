{
  Throwable lastException=null;
  for (  String serverAddress : iServerAddresses) {
    final String key=getNodeName(serverAddress,iServerPort);
    final ODistributedServerNodeRemote node;
    lock.acquireExclusiveLock();
    try {
      if (nodes.containsKey(key)) {
        node=nodes.get(key);
        if (node.getStatus() != ODistributedServerNodeRemote.STATUS.UNREACHABLE && node.getStatus() != ODistributedServerNodeRemote.STATUS.DISCONNECTED && node.checkConnection())         return;
      }
 else       node=new ODistributedServerNodeRemote(this,serverAddress,iServerPort);
      try {
        if (!node.connect(networkTimeoutNode,name,securityKey))         return;
        nodes.put(key,node);
        node.startSynchronization();
        return;
      }
 catch (      Exception e) {
        lastException=e;
      }
    }
  finally {
      lock.releaseExclusiveLock();
    }
  }
  OLogManager.instance().error(this,"Can't connect to distributed server node using addresses %s:%d and %s:%d",lastException,iServerAddresses[0],iServerPort,iServerAddresses[1],iServerPort);
}
