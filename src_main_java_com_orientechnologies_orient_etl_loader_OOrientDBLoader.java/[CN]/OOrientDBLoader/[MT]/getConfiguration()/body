{
  return new ODocument().fromJSON("{parameters:[" + "{dbUrl:{optional:false,description:'Database URL'}}," + "{dbUser:{optional:true,description:'Database user, default is admin'}},"+ "{dbPassword:{optional:true,description:'Database password, default is admin'}},"+ "{dbType:{optional:true,description:'Database type, default is document',values:" + stringArray2Json(DB_TYPE.values()) + "}},"+ "{class:{optional:true,description:'Record class name'}},"+ "{tx:{optional:true,description:'Transaction mode: true executes in transaction, false for atomic operations'}},"+ "{dbAutoCreate:{optional:true,description:'Auto create the database if not exists. Default is true'}},"+ "{dbAutoCreateProperties:{optional:true,description:'Auto create properties in schema'}},"+ "{dbAutoDropIfExists:{optional:true,description:'Auto drop the database if already exists. Default is false.'}},"+ "{batchCommit:{optional:true,description:'Auto commit every X items. This speed up creation of edges.'}},"+ "{wal:{optional:true,description:'Use the WAL (Write Ahead Log)'}},"+ "{useLightweightEdges:{optional:true,description:'Enable/Disable LightweightEdges in Graphs. Default is false'}},"+ "{standardElementConstraints:{optional:true,description:'Enable/Disable Standard Blueprints constraints on names. Default is true'}},"+ "{cluster:{optional:true,description:'Cluster name where to store the new record'}},"+ "{classes:{optional:true,description:'Classes used. It assure the classes exist or in case create them'}},"+ "{indexes:{optional:true,description:'Indexes used. It assure the indexes exist or in case create them'}}],"+ "input:['OrientVertex','ODocument']}");
}
