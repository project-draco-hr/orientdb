{
  ((OClassImpl)iClass).setClusterSelectionInternal(new OLocalClusterStrategy(this,iDatabase.getName(),iClass));
  if (iClass.isAbstract())   return false;
  final int[] clusterIds=iClass.getClusterIds();
  final List<String> clusterNames=new ArrayList<String>(clusterIds.length);
  for (  int clusterId : clusterIds)   clusterNames.add(iDatabase.getClusterNameById(clusterId));
  if (cfg.getLocalClusters(clusterNames,nodeName).isEmpty()) {
    final String newClusterName=(iClass.getName() + "_" + nodeName).toLowerCase();
    final Set<String> cfgClusterNames=new HashSet<String>();
    for (    String cl : cfg.getClusterNames())     cfgClusterNames.add(cl.toLowerCase());
    if (cfgClusterNames.contains(newClusterName)) {
      ODistributedServerLog.info(this,nodeName,null,DIRECTION.NONE,"class '%s', change mastership of cluster '%s' (id=%d) to local node '%s'",iClass,newClusterName,iDatabase.getClusterIdByName(newClusterName),nodeName);
      cfg.setMasterServer(newClusterName,nodeName);
    }
 else {
      final Set<String> clustersManagedOnLocalNode=cfg.getClustersOnServer(nodeName);
      for (      String cl : clustersManagedOnLocalNode) {
        final String leaderNode=cfg.getMasterServer(cl);
        if (!isNodeAvailable(leaderNode,iDatabase.getName())) {
          ODistributedServerLog.info(this,nodeName,null,DIRECTION.NONE,"class '%s', change mastership of cluster '%s' (id=%d) to local node '%s'",iClass,cl,iDatabase.getClusterIdByName(newClusterName),nodeName);
          cfg.setMasterServer(cl,nodeName);
          return true;
        }
      }
      ODistributedServerLog.info(this,nodeName,null,DIRECTION.NONE,"class '%s', creation of new local cluster '%s' (id=%d)",iClass,newClusterName,iDatabase.getClusterIdByName(newClusterName));
      final OScenarioThreadLocal.RUN_MODE currentDistributedMode=OScenarioThreadLocal.INSTANCE.get();
      if (currentDistributedMode != OScenarioThreadLocal.RUN_MODE.DEFAULT)       OScenarioThreadLocal.INSTANCE.set(OScenarioThreadLocal.RUN_MODE.DEFAULT);
      try {
        iClass.addCluster(newClusterName);
      }
 catch (      OCommandSQLParsingException e) {
        if (!e.getMessage().endsWith("already exists"))         throw e;
      }
catch (      Exception e) {
        ODistributedServerLog.error(this,nodeName,null,DIRECTION.NONE,"error on creating cluster '%s' in class '%s': ",newClusterName,iClass,e);
        throw OException.wrapException(new ODistributedException("Error on creating cluster '" + newClusterName + "' in class '"+ iClass+ "'"),e);
      }
 finally {
        if (currentDistributedMode != OScenarioThreadLocal.RUN_MODE.DEFAULT)         OScenarioThreadLocal.INSTANCE.set(OScenarioThreadLocal.RUN_MODE.RUNNING_DISTRIBUTED);
      }
      ODistributedServerLog.info(this,nodeName,null,DIRECTION.NONE,"class '%s', set mastership of cluster '%s' (id=%d) to '%s'",iClass,newClusterName,iDatabase.getClusterIdByName(newClusterName),nodeName);
      cfg.setMasterServer(newClusterName,nodeName);
    }
    return true;
  }
  return false;
}
