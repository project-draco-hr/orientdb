{
  final ODatabaseDocumentTx databaseDocumentTx=(ODatabaseDocumentTx)database.getUnderlying();
  final OSchema schema=databaseDocumentTx.getMetadata().getSchema();
  final OClass clazz=schema.createClass("NullIndexKeysSupportInTx",1,null);
  clazz.createProperty("nullField",OType.STRING);
  ODocument metadata=new ODocument();
  metadata.field("ignoreNullValues",false);
  clazz.createIndex("NullIndexKeysSupportInTxIndex",INDEX_TYPE.NOTUNIQUE.toString(),null,metadata,new String[]{"nullField"});
  database.begin();
  for (int i=0; i < 20; i++) {
    if (i % 5 == 0) {
      ODocument document=new ODocument("NullIndexKeysSupportInTx");
      document.field("nullField",(Object)null);
      document.save();
    }
 else {
      ODocument document=new ODocument("NullIndexKeysSupportInTx");
      document.field("nullField","val" + i);
      document.save();
    }
  }
  database.commit();
  List<ODocument> result=databaseDocumentTx.query(new OSQLSynchQuery<ODocument>("select from NullIndexKeysSupportInTx where nullField = 'val3'"));
  Assert.assertEquals(result.size(),1);
  Assert.assertEquals(result.get(0).field("nullField"),"val3");
  final String query="select from NullIndexKeysSupportInTx where nullField is null";
  result=databaseDocumentTx.query(new OSQLSynchQuery<ODocument>("select from NullIndexKeysSupportInTx where nullField is null"));
  Assert.assertEquals(result.size(),4);
  for (  ODocument document : result)   Assert.assertNull(document.field("nullField"));
  final ODocument explain=databaseDocumentTx.command(new OCommandSQL("explain " + query)).execute();
  Assert.assertTrue(explain.<Set<String>>field("involvedIndexes").contains("NullIndexKeysSupportInTxIndex"));
}
