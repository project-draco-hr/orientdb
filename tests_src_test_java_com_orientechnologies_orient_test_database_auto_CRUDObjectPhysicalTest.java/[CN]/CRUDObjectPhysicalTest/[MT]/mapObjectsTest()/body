{
  database=OObjectDatabasePool.global().acquire(url,"admin","admin");
  JavaComplexTestClass p=database.newInstance(JavaComplexTestClass.class);
  p.setName("Silvester");
  Child c=database.newInstance(Child.class);
  c.setName("John");
  p.getChildren().put("first",c);
  p.getEnumList().add(EnumTest.ENUM1);
  p.getEnumList().add(EnumTest.ENUM2);
  p.getEnumSet().add(EnumTest.ENUM1);
  p.getEnumSet().add(EnumTest.ENUM3);
  p.getEnumMap().put("1",EnumTest.ENUM2);
  p.getEnumMap().put("2",EnumTest.ENUM3);
  database.save(p);
  List<Child> cresult=database.query(new OSQLSynchQuery<Child>("select * from Child"));
  Assert.assertTrue(cresult.size() > 0);
  ORID rid=database.getRecordByUserObject(p,false).getIdentity();
  database.close();
  database=OObjectDatabasePool.global().acquire(url,"admin","admin");
  JavaComplexTestClass loaded=database.load(rid);
  Assert.assertEquals(loaded.getEnumList().size(),2);
  Assert.assertEquals(loaded.getEnumList().get(0),EnumTest.ENUM1);
  Assert.assertEquals(loaded.getEnumList().get(1),EnumTest.ENUM2);
  Assert.assertEquals(loaded.getEnumSet().size(),2);
  Iterator<EnumTest> it=loaded.getEnumSet().iterator();
  Assert.assertEquals(it.next(),EnumTest.ENUM1);
  Assert.assertEquals(it.next(),EnumTest.ENUM3);
  Assert.assertEquals(loaded.getEnumMap().size(),2);
  Assert.assertEquals(loaded.getEnumMap().get("1"),EnumTest.ENUM2);
  Assert.assertEquals(loaded.getEnumMap().get("2"),EnumTest.ENUM3);
  database.close();
}
