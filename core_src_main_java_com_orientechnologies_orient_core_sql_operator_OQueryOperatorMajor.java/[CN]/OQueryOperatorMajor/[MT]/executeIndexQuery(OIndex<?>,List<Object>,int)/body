{
  final OIndexDefinition indexDefinition=index.getDefinition();
  final OIndexInternal internalIndex=index.getInternal();
  if (!internalIndex.canBeUsedInEqualityOperators())   return null;
  final Collection<OIdentifiable> result;
  if (indexDefinition.getParamCount() == 1) {
    final Object key;
    if (indexDefinition instanceof OIndexDefinitionMultiValue)     key=((OIndexDefinitionMultiValue)indexDefinition).createSingleValue(keyParams.get(0));
 else     key=indexDefinition.createValue(keyParams);
    if (key == null)     return null;
    if (fetchLimit > -1)     result=index.getValuesMajor(key,false,fetchLimit);
 else     result=index.getValuesMajor(key,false);
  }
 else {
    final Object keyOne=indexDefinition.createValue(keyParams);
    if (keyOne == null)     return null;
    final Object keyTwo=indexDefinition.createValue(keyParams.subList(0,keyParams.size() - 1));
    if (keyTwo == null)     return null;
    if (fetchLimit > -1)     result=index.getValuesBetween(keyOne,false,keyTwo,true,fetchLimit);
 else     result=index.getValuesBetween(keyOne,false,keyTwo,true);
    if (OProfiler.getInstance().isRecording()) {
      OProfiler.getInstance().updateCounter("Query.compositeIndexUsage",1);
      OProfiler.getInstance().updateCounter("Query.compositeIndexUsage." + indexDefinition.getParamCount(),1);
    }
  }
  return result;
}
