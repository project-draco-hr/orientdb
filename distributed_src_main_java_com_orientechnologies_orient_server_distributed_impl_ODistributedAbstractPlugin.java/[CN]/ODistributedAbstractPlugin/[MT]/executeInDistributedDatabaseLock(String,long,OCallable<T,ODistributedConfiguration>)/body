{
  final ODistributedConfiguration lastCfg=getDatabaseConfiguration(databaseName);
  if (OScenarioThreadLocal.INSTANCE.isInDatabaseLock()) {
    return (T)iCallback.call(lastCfg);
  }
  try {
    boolean locked=false;
    final Lock lock=getLock(databaseName + ".cfg");
    if (timeoutLocking > 0) {
      try {
        if (lock.tryLock(timeoutLocking,TimeUnit.MILLISECONDS))         locked=true;
      }
 catch (      InterruptedException e) {
      }
    }
 else {
      lock.lock();
      locked=true;
    }
    if (locked)     try {
      OScenarioThreadLocal.INSTANCE.setInDatabaseLock(true);
      final int cfgVersion=lastCfg.getVersion();
      try {
        return (T)iCallback.call(lastCfg);
      }
  finally {
        if (lastCfg.getVersion() > cfgVersion)         updateCachedDatabaseConfiguration(databaseName,lastCfg.getDocument(),true,true);
        OScenarioThreadLocal.INSTANCE.setInDatabaseLock(false);
      }
    }
 catch (    RuntimeException e) {
      throw e;
    }
catch (    Exception e) {
      throw new RuntimeException(e);
    }
 finally {
      lock.unlock();
    }
  }
  finally {
  }
  throw new OLockException("Cannot lock distributed database resource after " + timeoutLocking + "ms");
}
