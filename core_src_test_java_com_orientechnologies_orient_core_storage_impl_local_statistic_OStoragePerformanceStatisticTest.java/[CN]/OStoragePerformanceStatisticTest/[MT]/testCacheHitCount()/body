{
  final OStoragePerformanceStatistic storagePerformanceStatistic=new OStoragePerformanceStatistic(1024,"test",1,new OStoragePerformanceStatistic.NanoTimer(){
    private long counter=0;
    @Override public long getNano(){
      return counter+=100;
    }
  }
);
  Assert.assertFalse(storagePerformanceStatistic.isMeasurementEnabled());
  Assert.assertEquals(storagePerformanceStatistic.getCacheHits(),-1);
  storagePerformanceStatistic.startMeasurement();
  for (int i=0; i < 100; i++) {
    storagePerformanceStatistic.incrementPageAccessOnCacheLevel();
    if (i % 2 == 0)     storagePerformanceStatistic.incrementCacheHit();
  }
  Thread.sleep(2000);
  Assert.assertEquals(storagePerformanceStatistic.getCacheHits(),50);
  storagePerformanceStatistic.stopMeasurement();
  for (int i=0; i < 100; i++) {
    storagePerformanceStatistic.incrementPageAccessOnCacheLevel();
    storagePerformanceStatistic.incrementCacheHit();
  }
  Thread.sleep(2000);
  Assert.assertEquals(storagePerformanceStatistic.getCacheHits(),50);
  Assert.assertFalse(storagePerformanceStatistic.isMeasurementEnabled());
}
