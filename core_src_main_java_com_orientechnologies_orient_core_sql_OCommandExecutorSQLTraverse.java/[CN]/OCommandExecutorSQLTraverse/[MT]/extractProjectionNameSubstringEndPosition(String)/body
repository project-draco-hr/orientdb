{
  int endPos;
  final int pos1=projection.indexOf('.');
  final int pos2=projection.indexOf('(');
  final int pos3=projection.indexOf('[');
  if (pos1 > -1 && pos2 == -1 && pos3 == -1)   endPos=pos1;
 else   if (pos2 > -1 && pos1 == -1 && pos3 == -1)   endPos=pos2;
 else   if (pos3 > -1 && pos1 == -1 && pos2 == -1)   endPos=pos3;
 else   if (pos1 > -1 && pos2 > -1 && pos3 == -1)   endPos=Math.min(pos1,pos2);
 else   if (pos2 > -1 && pos3 > -1 && pos1 == -1)   endPos=Math.min(pos2,pos3);
 else   if (pos1 > -1 && pos3 > -1 && pos2 == -1)   endPos=Math.min(pos1,pos3);
 else   if (pos1 > -1 && pos2 > -1 && pos3 > -1) {
    endPos=Math.min(pos1,pos2);
    endPos=Math.min(endPos,pos3);
  }
 else   endPos=-1;
  return endPos;
}
