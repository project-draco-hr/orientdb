{
  if (graph == null)   throw new OETLProcessHaltedException("Graph instance not found. Assure you have configured it in the Loader");
  final OrientVertex vertex;
  if (input instanceof OIdentifiable)   vertex=graph.getVertex(input);
 else   if (input instanceof OrientVertex)   vertex=(OrientVertex)input;
 else   throw new OTransformException(getName() + ": input type '" + input+ "' is not supported");
  final Object joinCurrentValue=joinValue != null ? joinValue : vertex.getProperty(joinFieldName);
  Object result=lookup(joinCurrentValue,false);
  log(OETLProcessor.LOG_LEVELS.DEBUG,"joinCurrentValue=%s, lookupResult=%s",joinCurrentValue,result);
  if (result == null) {
switch (unresolvedLinkAction) {
case CREATE:
      if (lookup != null) {
        final String[] lookupParts=lookup.split("\\.");
        final OrientVertex linkedV=graph.addTemporaryVertex(lookupParts[0]);
        linkedV.setProperty(lookupParts[1],joinCurrentValue);
        linkedV.save();
        log(OETLProcessor.LOG_LEVELS.DEBUG,"created new vertex=%s",linkedV.getRecord());
        result=linkedV;
      }
 else       throw new OConfigurationException("Cannot create linked document because target class is unknown. Use 'lookup' field");
    break;
case ERROR:
  processor.getStats().incrementErrors();
log(OETLProcessor.LOG_LEVELS.ERROR,"%s: ERROR Cannot resolve join for value '%s'",getName(),joinCurrentValue);
break;
case WARNING:
processor.getStats().incrementWarnings();
log(OETLProcessor.LOG_LEVELS.INFO,"%s: WARN Cannot resolve join for value '%s'",getName(),joinCurrentValue);
break;
case SKIP:
return null;
case HALT:
throw new OETLProcessHaltedException("Cannot resolve join for value '" + joinCurrentValue + "'");
}
}
if (result != null) {
final OrientVertex targetVertex=graph.getVertex(result);
final OrientEdge edge;
if (directionOut) edge=(OrientEdge)vertex.addEdge(edgeClass,targetVertex);
 else edge=(OrientEdge)targetVertex.addEdge(edgeClass,vertex);
log(OETLProcessor.LOG_LEVELS.DEBUG,"created new edge=%s",edge);
}
return input;
}
