{
  writeAheadLog.close();
  OLocalPaginatedStorage paginatedStorage=mock(OLocalPaginatedStorage.class);
  when(paginatedStorage.getName()).thenReturn("WriteAheadLogTest");
  when(paginatedStorage.getStoragePath()).thenReturn(testDir.getAbsolutePath());
  writeAheadLog=new OWriteAheadLog(1024,-1,2048,2 * 2048,paginatedStorage);
  List<OUpdatePageRecord> writtenRecords=new ArrayList<OUpdatePageRecord>();
  Random rnd=new Random();
  OUpdatePageRecord setPageDataRecord=new OUpdatePageRecord(1,"test");
  int oneSegment=2048 / serializeSize(setPageDataRecord);
  int recordsToWrite=3 * oneSegment;
  for (int i=0; i < recordsToWrite; i++) {
    long pageIndex=rnd.nextLong();
    setPageDataRecord=new OUpdatePageRecord(pageIndex,"test");
    writtenRecords.add(setPageDataRecord);
    writeAheadLog.logRecord(setPageDataRecord);
  }
  assertLogContent(writeAheadLog,writtenRecords.subList(oneSegment,writtenRecords.size()));
  Assert.assertNull(writeAheadLog.read(writtenRecords.get(oneSegment - 1).getLsn()));
  verify(paginatedStorage).scheduleCheckpoint();
}
