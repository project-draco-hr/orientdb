{
  database.getMetadata().getIndexManager().reload();
  database.begin();
  final OIndex<?> index=database.getMetadata().getIndexManager().getIndex("idxTxAwareOneValueGetValuesTest");
  Assert.assertTrue(index instanceof OIndexTxAwareOneValue);
  final int clusterId=database.getDefaultClusterId();
  index.put(1,new ORecordId(clusterId,OClusterPositionFactory.INSTANCE.valueOf(1)));
  index.put(2,new ORecordId(clusterId,OClusterPositionFactory.INSTANCE.valueOf(2)));
  database.commit();
  Assert.assertNull(database.getTransaction().getIndexChanges("idxTxAwareOneValueGetValuesTest"));
  final Collection<?> resultOne=index.getValues(Arrays.asList(1,2),true);
  Assert.assertEquals(resultOne.size(),2);
  database.begin();
  index.put(3,new ORecordId(clusterId,OClusterPositionFactory.INSTANCE.valueOf(3)));
  Assert.assertNotNull(database.getTransaction().getIndexChanges("idxTxAwareOneValueGetValuesTest"));
  final Collection<?> resultTwo=index.getValues(Arrays.asList(1,2,3),true);
  Assert.assertEquals(resultTwo.size(),3);
  database.rollback();
  Assert.assertNull(database.getTransaction().getIndexChanges("idxTxAwareOneValueGetValuesTest"));
  final Collection<?> resultThree=index.getValues(Arrays.asList(1,2),true);
  Assert.assertEquals(resultThree.size(),2);
}
