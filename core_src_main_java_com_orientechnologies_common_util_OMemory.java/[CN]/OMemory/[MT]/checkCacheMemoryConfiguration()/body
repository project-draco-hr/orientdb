{
  final long maxHeapSize=Runtime.getRuntime().maxMemory();
  final long maxCacheSize=getMaxCacheMemorySize();
  final long physicalMemory=getPhysicalMemorySize();
  final long maxDirectMemory=getConfiguredMaxDirectMemory();
  if (maxDirectMemory != -1 && maxCacheSize > maxDirectMemory)   OLogManager.instance().warn(OMemory.class,"Configured maximum amount of memory available to the cache (" + maxCacheSize + " bytes) is larger than configured JVM maximum direct memory size ("+ maxDirectMemory+ " bytes). That may cause "+ "out of memory errors, please tune the configuration up. Use the -XX:MaxDirectMemorySize JVM option to raise the JVM "+ "maximum direct memory size or storage.diskCache.bufferSize OrientDB option to lower memory requirements of the "+ "cache.");
  if (maxHeapSize != Long.MAX_VALUE && physicalMemory != -1 && maxHeapSize + maxCacheSize > physicalMemory)   OLogManager.instance().warn(OMemory.class,"The sum of the configured JVM maximum heap size (" + maxHeapSize + " bytes) "+ "and the OrientDB maximum cache size ("+ maxCacheSize+ " bytes) is larger than the available physical memory size "+ "("+ physicalMemory+ " bytes). That may cause out of memory errors, please tune the configuration up. Use the "+ "-Xmx JVM option to lower the JVM maximum heap memory size or storage.diskCache.bufferSize OrientDB option to lower "+ "memory requirements of the cache.");
}
