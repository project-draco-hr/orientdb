{
  TreeMap<Integer,ORID> keyValues=new TreeMap<Integer,ORID>();
  MersenneTwisterFast random=new MersenneTwisterFast();
  while (keyValues.size() < KEYS_COUNT) {
    int key=random.nextInt(Integer.MAX_VALUE);
    sbTree.put(key,new ORecordId(key % 32000,OClusterPositionFactory.INSTANCE.valueOf(key)));
    keyValues.put(key,new ORecordId(key % 32000,OClusterPositionFactory.INSTANCE.valueOf(key)));
  }
  assertMajorValues(keyValues,random,true);
  assertMajorValues(keyValues,random,false);
}
