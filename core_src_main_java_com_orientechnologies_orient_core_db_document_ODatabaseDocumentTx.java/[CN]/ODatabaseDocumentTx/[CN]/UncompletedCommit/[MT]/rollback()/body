{
  checkOpeness();
  checkIfActive();
  if (!topLevel) {
    nestedCommit.rollback();
    return;
  }
  for (  ODatabaseListener listener : browseListeners())   try {
    listener.onBeforeTxRollback(ODatabaseDocumentTx.this);
  }
 catch (  Throwable t) {
    OLogManager.instance().error(this,"Error before transaction rollback",t);
  }
  nestedCommit.rollback();
  getLocalCache().clear();
  for (  ODatabaseListener listener : browseListeners())   try {
    listener.onAfterTxRollback(ODatabaseDocumentTx.this);
  }
 catch (  Throwable t) {
    OLogManager.instance().error(this,"Error after transaction rollback",t);
  }
}
