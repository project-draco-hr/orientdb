{
  String className=readString(bytes);
  if (className.length() != 0)   document.setClassNameIfExists(className);
  int last=0;
  String field;
  while ((field=readString(bytes)).length() != 0) {
    if (document.containsField(field)) {
      bytes.skip(OIntegerSerializer.INT_SIZE + 1);
      continue;
    }
    final int valuePos=readInteger(bytes);
    final OType type=readOType(bytes);
    if (valuePos != 0) {
      int headerCursor=bytes.offset;
      bytes.offset=valuePos;
      final Object value=readSingleValue(bytes,type,document);
      if (bytes.offset > last)       last=bytes.offset;
      bytes.offset=headerCursor;
      if (document.fieldType(field) != null || OType.LINK == type)       document.field(field,value);
 else       document.field(field,value,type);
    }
 else     document.field(field,(Object)null);
  }
  if (last > bytes.offset)   bytes.offset=last;
}
