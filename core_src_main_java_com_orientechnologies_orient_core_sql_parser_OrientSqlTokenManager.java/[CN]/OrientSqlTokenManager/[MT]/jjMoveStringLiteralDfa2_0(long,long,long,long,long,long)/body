{
  if (((active0&=old0) | (active1&=old1) | (active2&=old2)) == 0L)   return jjStartNfa_0(0,old0,old1,old2);
  try {
    curChar=input_stream.readChar();
  }
 catch (  java.io.IOException e) {
    jjStopStringLiteralDfa_0(1,active0,active1,active2);
    return 2;
  }
switch (curChar) {
case 46:
    if ((active2 & 0x4L) != 0L)     return jjStopAtPos(2,130);
  break;
case 61:
if ((active1 & 0x8000000000000000L) != 0L) return jjStopAtPos(2,127);
 else if ((active2 & 0x1L) != 0L) return jjStopAtPos(2,128);
break;
case 62:
return jjMoveStringLiteralDfa3_0(active0,0L,active1,0L,active2,0x2L);
case 104:
return jjMoveStringLiteralDfa3_0(active0,0x2000000000000000L,active1,0L,active2,0L);
case 108:
return jjMoveStringLiteralDfa3_0(active0,0L,active1,0x40000L,active2,0L);
case 115:
return jjMoveStringLiteralDfa3_0(active0,0L,active1,0L,active2,0x10000L);
case 117:
return jjMoveStringLiteralDfa3_0(active0,0L,active1,0x20000L,active2,0x20000L);
default :
break;
}
return jjStartNfa_0(1,active0,active1,active2);
}
