{
  final String[] urlParts=checkSyntax(iRequest.url,3,"Syntax error: index/<database>/<index-name>/<key>");
  iRequest.data.commandInfo="Index get";
  ODatabaseDocument db=null;
  try {
    db=getProfiledDatabaseInstance(iRequest);
    final OIndex<?> index=db.getMetadata().getIndexManager().getIndex(urlParts[2]);
    if (index == null)     throw new IllegalArgumentException("Index name '" + urlParts[2] + "' not found");
    final Object content=index.get(urlParts[3]);
    if (content == null)     iResponse.send(OHttpUtils.STATUS_NOTFOUND_CODE,OHttpUtils.STATUS_NOTFOUND_DESCRIPTION,OHttpUtils.CONTENT_TEXT_PLAIN,null,null);
 else {
      final StringBuilder buffer=new StringBuilder(128);
      buffer.append('[');
      if (content instanceof Collection<?>) {
        Collection<OIdentifiable> collection=(Collection<OIdentifiable>)content;
        int count=0;
        for (        OIdentifiable item : collection) {
          if (count > 0) {
            buffer.append(", ");
          }
          buffer.append(item.getRecord().toJSON());
          count++;
        }
      }
 else       buffer.append(((OIdentifiable)content).getRecord().toJSON());
      buffer.append(']');
      if (isJsonResponse(iResponse)) {
        iResponse.send(OHttpUtils.STATUS_OK_CODE,"OK",OHttpUtils.CONTENT_JSON,buffer.toString(),null);
      }
 else {
        iResponse.send(OHttpUtils.STATUS_OK_CODE,"OK",OHttpUtils.CONTENT_TEXT_PLAIN,buffer.toString(),null);
      }
    }
  }
  finally {
    if (db != null)     db.close();
  }
  return false;
}
