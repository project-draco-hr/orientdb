{
  record.reset();
  record.setClassName("Animal");
  record.field("name","Cat");
  Collection<ODocument> races=new HashSet<ODocument>();
  races.add(((ODocument)database.newInstance("AnimalRace")).field("name","European"));
  races.add(((ODocument)database.newInstance("AnimalRace")).field("name","Siamese"));
  record.field("age",10);
  record.field("races",races);
  record.save();
  List<ODocument> result=executeQuery("select * from cluster:animal where races contains (name in ['European','Asiatic'])",database);
  boolean found=false;
  for (int i=0; i < result.size() && !found; ++i) {
    record=result.get(i);
    Assert.assertTrue(record.getClassName().equalsIgnoreCase("animal"));
    Assert.assertNotNull(record.field("races"));
    races=record.field("races");
    for (    ODocument race : races) {
      if (((String)race.field("name")).equals("European") || ((String)race.field("name")).equals("Asiatic")) {
        found=true;
        break;
      }
    }
  }
  Assert.assertTrue(found);
  result=executeQuery("select * from cluster:animal where races contains (name in ['Asiatic','European'])",database);
  found=false;
  for (int i=0; i < result.size() && !found; ++i) {
    record=result.get(i);
    Assert.assertTrue(record.getClassName().equalsIgnoreCase("animal"));
    Assert.assertNotNull(record.field("races"));
    races=record.field("races");
    for (    ODocument race : races) {
      if (((String)race.field("name")).equals("European") || ((String)race.field("name")).equals("Asiatic")) {
        found=true;
        break;
      }
    }
  }
  Assert.assertTrue(found);
  result=executeQuery("select * from cluster:animal where races contains (name in ['aaa','bbb'])",database);
  Assert.assertEquals(result.size(),0);
  result=executeQuery("select * from cluster:animal where races containsall (name in ['European','Asiatic'])",database);
  Assert.assertEquals(result.size(),0);
  result=executeQuery("select * from cluster:animal where races containsall (name in ['European','Siamese'])",database);
  Assert.assertEquals(result.size(),1);
  result=executeQuery("select * from cluster:animal where races containsall (age < 100) LIMIT 1000 SKIP 0",database);
  Assert.assertEquals(result.size(),0);
  result=executeQuery("select * from cluster:animal where not ( races contains (age < 100) ) LIMIT 20 SKIP 0",database);
  Assert.assertEquals(result.size(),1);
  record.delete();
}
