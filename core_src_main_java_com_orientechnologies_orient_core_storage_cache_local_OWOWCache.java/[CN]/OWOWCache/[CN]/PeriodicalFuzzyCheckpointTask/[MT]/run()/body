{
  final OSessionStoragePerformanceStatistic statistic=performanceStatisticManager.getSessionPerformanceStatistic();
  if (statistic != null)   statistic.startFuzzyCheckpointTimer();
  try {
    OLogSequenceNumber minLsn=findMinLsn(writeAheadLog.getFlushedLsn(),writeCachePages);
    OLogManager.instance().debug(this,"Start fuzzy checkpoint flushed LSN is %s",minLsn);
    try {
      writeAheadLog.logFuzzyCheckPointStart(minLsn);
      for (      OFileClassic fileClassic : files.values()) {
        fileClassic.synch();
      }
      writeAheadLog.logFuzzyCheckPointEnd();
      writeAheadLog.flush();
      if (minLsn.compareTo(new OLogSequenceNumber(-1,-1)) > 0)       writeAheadLog.cutTill(minLsn);
    }
 catch (    IOException ioe) {
      OLogManager.instance().error(this,"Error during fuzzy checkpoint",ioe);
    }
    OLogManager.instance().debug(this,"End fuzzy checkpoint");
  }
  finally {
    if (statistic != null)     statistic.stopFuzzyCheckpointTimer();
  }
}
