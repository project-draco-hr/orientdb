{
  db.activateOnCurrentThread();
  final DataInputStream input=new DataInputStream(in);
  try {
    final long records=input.readLong();
    for (long i=0; i < records; ++i) {
      final int clusterId=input.readInt();
      final long clusterPos=input.readLong();
      final boolean deleted=input.readBoolean();
      final ORecordId rid=new ORecordId(clusterId,clusterPos);
      final ORecord loadedRecord=rid.getRecord();
      if (deleted) {
        if (loadedRecord != null)         db.delete(rid);
      }
 else {
        final int recordVersion=input.readInt();
        final int recordType=input.readByte();
        final int recordSize=input.readInt();
        final byte[] recordContent=new byte[recordSize];
        int bytesRead=0;
        while (bytesRead < recordContent.length) {
          final int ac=input.read(recordContent);
          if (ac == -1)           throw new IllegalStateException("Unexpected end of stream is reached");
          bytesRead+=ac;
        }
        ORecord newRecord=null;
        if (loadedRecord == null) {
          do {
            newRecord=Orient.instance().getRecordFactoryManager().newInstance((byte)recordType);
            ORecordInternal.fill(newRecord,new ORecordId(rid.getClusterId(),-1),recordVersion - 1,recordContent,true);
            newRecord.save();
            if (newRecord.getIdentity().getClusterPosition() < clusterPos) {
              newRecord.delete();
            }
          }
 while (newRecord.getIdentity().getClusterPosition() < clusterPos);
        }
 else {
          newRecord=Orient.instance().getRecordFactoryManager().newInstance((byte)recordType);
          ORecordInternal.fill(newRecord,rid,ORecordVersionHelper.setRollbackMode(recordVersion),recordContent,true);
          if (loadedRecord instanceof ODocument) {
            ODocument loadedDocument=(ODocument)loadedRecord;
            loadedDocument.merge((ODocument)newRecord,false,false).getVersion();
            loadedDocument.setDirty();
            newRecord=loadedDocument;
          }
          newRecord.save();
        }
      }
    }
    db.getMetadata().reload();
  }
  finally {
    input.close();
  }
}
