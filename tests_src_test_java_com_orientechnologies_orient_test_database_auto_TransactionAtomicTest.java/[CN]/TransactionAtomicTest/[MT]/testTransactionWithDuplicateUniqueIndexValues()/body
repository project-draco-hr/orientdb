{
  ODatabaseDocumentTx db=new ODatabaseDocumentTx(url);
  db.open("admin","admin");
  OClass fruitClass=db.getMetadata().getSchema().getClass("Fruit");
  if (fruitClass == null) {
    fruitClass=db.getMetadata().getSchema().createClass("Fruit");
    fruitClass.createProperty("name",OType.STRING);
    fruitClass.createProperty("color",OType.STRING);
    db.getMetadata().getSchema().getClass("Fruit").getProperty("color").createIndex(OClass.INDEX_TYPE.UNIQUE);
  }
  Assert.assertEquals(db.countClusterElements("Fruit"),0);
  try {
    db.begin();
    ODocument apple=new ODocument("Fruit").field("name","Apple").field("color","Red");
    ODocument orange=new ODocument("Fruit").field("name","Orange").field("color","Orange");
    ODocument banana=new ODocument("Fruit").field("name","Banana").field("color","Yellow");
    ODocument kumquat=new ODocument("Fruit").field("name","Kumquat").field("color","Orange");
    apple.save();
    Assert.assertEquals(apple.getIdentity().getClusterId(),fruitClass.getDefaultClusterId());
    orange.save();
    Assert.assertEquals(orange.getIdentity().getClusterId(),fruitClass.getDefaultClusterId());
    banana.save();
    Assert.assertEquals(banana.getIdentity().getClusterId(),fruitClass.getDefaultClusterId());
    kumquat.save();
    Assert.assertEquals(kumquat.getIdentity().getClusterId(),fruitClass.getDefaultClusterId());
    db.commit();
    Assert.assertTrue(false);
  }
 catch (  ORecordDuplicatedException e) {
    Assert.assertTrue(true);
    db.rollback();
  }
  Assert.assertEquals(db.countClusterElements("Fruit"),0);
  db.close();
}
