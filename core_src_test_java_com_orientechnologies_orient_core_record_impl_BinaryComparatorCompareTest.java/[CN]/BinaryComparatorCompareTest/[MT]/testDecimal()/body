{
  Assert.assertEquals(comparator.compare(field(OType.DECIMAL,new BigDecimal(10)),field(OType.DECIMAL,new BigDecimal(10))),0);
  Assert.assertEquals(comparator.compare(field(OType.DECIMAL,new BigDecimal(10)),field(OType.DECIMAL,new BigDecimal(11))),-1);
  Assert.assertEquals(comparator.compare(field(OType.DECIMAL,new BigDecimal(10)),field(OType.DECIMAL,new BigDecimal(9))),1);
  Assert.assertEquals(comparator.compare(field(OType.DECIMAL,new BigDecimal(10)),field(OType.SHORT,new Short((short)10))),0);
  Assert.assertEquals(comparator.compare(field(OType.DECIMAL,new BigDecimal(10)),field(OType.SHORT,new Short((short)11))),-1);
  Assert.assertEquals(comparator.compare(field(OType.DECIMAL,new BigDecimal(10)),field(OType.SHORT,new Short((short)9))),1);
  Assert.assertEquals(comparator.compare(field(OType.DECIMAL,new BigDecimal(10)),field(OType.INTEGER,new Integer(10))),0);
  Assert.assertEquals(comparator.compare(field(OType.DECIMAL,new BigDecimal(10)),field(OType.INTEGER,new Integer(11))),-1);
  Assert.assertEquals(comparator.compare(field(OType.DECIMAL,new BigDecimal(10)),field(OType.INTEGER,new Integer(9))),1);
  Assert.assertEquals(comparator.compare(field(OType.DECIMAL,new BigDecimal(10)),field(OType.LONG,new Long(10))),0);
  Assert.assertEquals(comparator.compare(field(OType.DECIMAL,new BigDecimal(10)),field(OType.LONG,new Long(11))),-1);
  Assert.assertEquals(comparator.compare(field(OType.DECIMAL,new BigDecimal(10)),field(OType.LONG,new Long(9))),1);
  Assert.assertEquals(comparator.compare(field(OType.DECIMAL,new BigDecimal(10)),field(OType.FLOAT,new Float(10))),0);
  Assert.assertEquals(comparator.compare(field(OType.DECIMAL,new BigDecimal(10)),field(OType.FLOAT,new Float(11))),-1);
  Assert.assertEquals(comparator.compare(field(OType.DECIMAL,new BigDecimal(10)),field(OType.FLOAT,new Float(9))),1);
  Assert.assertEquals(comparator.compare(field(OType.DECIMAL,new BigDecimal(10)),field(OType.DOUBLE,new Double(10))),0);
  Assert.assertEquals(comparator.compare(field(OType.DECIMAL,new BigDecimal(10)),field(OType.DOUBLE,new Double(11))),-1);
  Assert.assertEquals(comparator.compare(field(OType.DECIMAL,new BigDecimal(10)),field(OType.DOUBLE,new Double(9))),1);
  Assert.assertEquals(comparator.compare(field(OType.DECIMAL,new BigDecimal(10)),field(OType.BYTE,new Byte((byte)10))),0);
  Assert.assertEquals(comparator.compare(field(OType.DECIMAL,new BigDecimal(10)),field(OType.BYTE,new Byte((byte)11))),-1);
  Assert.assertEquals(comparator.compare(field(OType.DECIMAL,new BigDecimal(10)),field(OType.BYTE,new Byte((byte)9))),1);
  Assert.assertEquals(comparator.compare(field(OType.DECIMAL,new BigDecimal(10)),field(OType.STRING,"10")),0);
  Assert.assertTrue(comparator.compare(field(OType.DECIMAL,new BigDecimal(10)),field(OType.STRING,"11")) < 0);
  Assert.assertTrue(comparator.compare(field(OType.DECIMAL,new BigDecimal(10)),field(OType.STRING,"9")) < 0);
  Assert.assertTrue(comparator.compare(field(OType.DECIMAL,new BigDecimal(20)),field(OType.STRING,"11")) > 0);
}
