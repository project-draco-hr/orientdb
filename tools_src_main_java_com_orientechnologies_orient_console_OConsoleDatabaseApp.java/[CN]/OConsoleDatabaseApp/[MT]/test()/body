{
  OObjectDatabaseTx db=new OObjectDatabaseTx("local:/home/molino/Scrivania/test/linkedTest").create();
  try {
    db.close();
    db.open("admin","admin");
    db.query(new OSQLSynchQuery<ORole>("select from ORole where name = 'admin'"));
    db.getEntityManager().registerEntityClass(LinkedElement.class);
    db.getEntityManager().registerEntityClass(LinkedElementMap.class);
    LinkedElement<String> root=db.newInstance(LinkedElement.class,"root",null,-1);
    root.setData(new Date());
    root.setDecimale(-1d);
    db.save(root);
    int limit=500;
    addElements(db,root,limit);
    verifyElements(root,limit);
    System.out.println("close & reopen");
    db.close();
    db.open("admin","admin");
    db.getEntityManager().registerEntityClass(LinkedElement.class);
    db.getEntityManager().registerEntityClass(LinkedElementMap.class);
    System.out.println("load");
    root=(LinkedElement<String>)db.reload(root,"*:0",false);
    verifyElements(root,limit);
    ORID rid=db.getIdentity(root);
    System.out.println("close & reopen");
    db.close();
    db.open("admin","admin");
    db.getEntityManager().registerEntityClass(LinkedElement.class);
    db.getEntityManager().registerEntityClass(LinkedElementMap.class);
    System.out.println("load");
    root=(LinkedElement<String>)db.load(rid);
    verifyElements(root,limit);
    editElements(db,root,limit);
    verifyModifiedElements(root,limit);
    System.out.println("close & reopen");
    db.close();
    db.open("admin","admin");
    db.getEntityManager().registerEntityClass(LinkedElement.class);
    db.getEntityManager().registerEntityClass(LinkedElementMap.class);
    System.out.println("load");
    root=(LinkedElement<String>)db.load(rid);
    verifyModifiedElements(root,limit);
  }
  finally {
    db.drop();
  }
}
