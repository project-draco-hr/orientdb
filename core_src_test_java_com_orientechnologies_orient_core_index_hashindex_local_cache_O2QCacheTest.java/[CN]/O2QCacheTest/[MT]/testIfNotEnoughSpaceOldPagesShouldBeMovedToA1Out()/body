{
  long fileId=buffer.openFile(fileConfiguration,".tst");
  long[] pointers;
  pointers=new long[6];
  for (int i=0; i < 6; i++) {
    pointers[i]=buffer.load(fileId,i);
    buffer.markDirty(fileId,i);
    directMemory.set(pointers[i],new byte[]{(byte)i,1,2,seed,4,5,6,7},8);
    buffer.release(fileId,i);
  }
  LRUList am=buffer.getAm();
  LRUList a1in=buffer.getA1in();
  LRUList a1out=buffer.getA1out();
  Assert.assertEquals(am.size(),0);
  for (int i=0; i < 2; i++) {
    LRUEntry entry=generateEntry(fileId,i,ODirectMemory.NULL_POINTER,false);
    Assert.assertEquals(a1out.get(entry.fileId,entry.pageIndex),entry);
  }
  for (int i=2; i < 6; i++) {
    LRUEntry entry=generateEntry(fileId,i,pointers[i]);
    Assert.assertEquals(a1in.get(entry.fileId,entry.pageIndex),entry);
  }
  Assert.assertEquals(buffer.getFilledUpTo(fileId),6);
  buffer.flushBuffer();
  for (int i=0; i < 6; i++) {
    assertFile(i,new byte[]{(byte)i,1,2,seed,4,5,6,7});
  }
}
