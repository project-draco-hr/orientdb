{
  Random random=new Random();
  byte[][] pageData=new byte[200][];
  long fileId=wowCache.addFile(fileName);
  for (int i=0; i < pageData.length; i++) {
    byte[] data=new byte[8];
    random.nextBytes(data);
    pageData[i]=data;
    final OCachePointer cachePointer=wowCache.load(fileId,i,1,true,new OModifiableBoolean())[0];
    cachePointer.acquireExclusiveLock();
    cachePointer.getDataPointer().set(systemOffset + OWOWCache.PAGE_PADDING,data,0,data.length);
    cachePointer.releaseExclusiveLock();
    wowCache.store(fileId,i,cachePointer);
    cachePointer.decrementReferrer();
  }
  for (int i=0; i < pageData.length; i++) {
    byte[] dataOne=pageData[i];
    OCachePointer cachePointer=wowCache.load(fileId,i,1,false,new OModifiableBoolean())[0];
    byte[] dataTwo=cachePointer.getDataPointer().get(systemOffset + OWOWCache.PAGE_PADDING,8);
    cachePointer.decrementReferrer();
    Assert.assertEquals(dataTwo,dataOne);
  }
  wowCache.flush();
  for (int i=0; i < pageData.length; i++) {
    byte[] dataContent=pageData[i];
    assertFile(i,dataContent,new OLogSequenceNumber(0,0));
  }
}
