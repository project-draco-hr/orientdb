{
  makeActive();
  try {
    if (!getDatabase().isClosed() && commitTx) {
      final OStorage storage=getDatabase().getStorage().getUnderlying();
      if (storage instanceof OAbstractPaginatedStorage) {
        if (((OAbstractPaginatedStorage)storage).getWALInstance() != null)         getDatabase().commit();
      }
    }
  }
 catch (  RuntimeException e) {
    OLogManager.instance().error(this,"Error during context close for db " + url,e);
    throw e;
  }
catch (  Exception e) {
    OLogManager.instance().error(this,"Error during context close for db " + url,e);
    throw OException.wrapException(new ODatabaseException("Error during context close for db " + url),e);
  }
 finally {
    try {
      if (closeDb) {
        getDatabase().close();
        if (getDatabase().isPooled()) {
          database=null;
        }
      }
    }
 catch (    Exception e) {
      OLogManager.instance().error(this,"Error during context close for db " + url,e);
    }
  }
  url=null;
  username=null;
  password=null;
  pollGraphFromStack(closeDb);
  if (!closeDb)   getDatabase().activateOnCurrentThread();
}
