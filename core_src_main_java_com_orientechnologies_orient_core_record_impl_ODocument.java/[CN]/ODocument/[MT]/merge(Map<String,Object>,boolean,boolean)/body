{
  checkForLoading();
  checkForFields();
  _source=null;
  for (  String f : iOther.keySet()) {
    if (containsField(f) && iMergeSingleItemsOfMultiValueFields) {
      Object field=field(f);
      if (field instanceof Map<?,?>) {
        final Map<String,Object> map=(Map<String,Object>)field;
        final Map<String,Object> otherMap=(Map<String,Object>)iOther.get(f);
        for (        Entry<String,Object> entry : otherMap.entrySet()) {
          map.put(entry.getKey(),entry.getValue());
        }
        continue;
      }
 else       if (field instanceof Collection<?>) {
        final Collection<Object> coll=(Collection<Object>)field;
        final Collection<Object> otherColl=(Collection<Object>)iOther.get(f);
        for (        Object item : otherColl) {
          if (coll.contains(item))           coll.remove(item);
          coll.add(item);
        }
        continue;
      }
    }
    setFieldType(f,null);
    final Object value=field(f);
    final Object otherValue=iOther.get(f);
    if (value == null || !value.equals(otherValue))     field(f,otherValue);
  }
  if (!iUpdateOnlyMode) {
    for (    String f : fieldNames())     if (!iOther.containsKey(f))     removeField(f);
  }
  return this;
}
