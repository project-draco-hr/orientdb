{
  if (value == null)   return;
  if (!(value instanceof ORecord || OMultiValue.isMultiValue(value.getClass())))   return;
  if (!processedValues.add(value))   return;
  if (value instanceof ORecord) {
    ORID rid=((ORecord)value).getIdentity();
    if (!rid.isValid())     newRecords.add((ORecordInternal<?>)value);
    if (value instanceof ODocument) {
      final ODocument document=(ODocument)value;
      final OClass documentClass=document.getSchemaClass();
      for (      String fieldName : document.fieldNames()) {
        final Object fieldValue=document.field(fieldName);
        OType valueType=document.fieldType(fieldName);
        if (valueType == null && documentClass != null) {
          OProperty property=documentClass.getProperty(fieldName);
          if (property != null)           valueType=property.getType();
        }
        if (valueType == null || !(valueType.equals(OType.EMBEDDED) || valueType.equals(OType.EMBEDDEDLIST) || valueType.equals(OType.EMBEDDEDMAP)|| valueType.equals(OType.EMBEDDEDSET)))         extractAllNewNotEmbeddedRecords(fieldValue,newRecords,processedValues);
      }
    }
  }
 else   if (OMultiValue.isMultiValue(value.getClass())) {
    for (    Object collectionItem : OMultiValue.getMultiValueIterable(value))     extractAllNewNotEmbeddedRecords(collectionItem,newRecords,processedValues);
  }
}
