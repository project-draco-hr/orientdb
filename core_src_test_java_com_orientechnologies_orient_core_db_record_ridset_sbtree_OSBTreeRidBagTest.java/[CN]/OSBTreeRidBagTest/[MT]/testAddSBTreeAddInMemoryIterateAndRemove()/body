{
  List<OIdentifiable> rids=new ArrayList<OIdentifiable>();
  OSBTreeRidBag bag=new OSBTreeRidBag();
  bag.setAutoConvertToRecord(false);
  bag.add(new ORecordId("#77:2"));
  rids.add(new ORecordId("#77:2"));
  bag.add(new ORecordId("#77:2"));
  rids.add(new ORecordId("#77:2"));
  bag.add(new ORecordId("#77:3"));
  rids.add(new ORecordId("#77:3"));
  bag.add(new ORecordId("#77:4"));
  rids.add(new ORecordId("#77:4"));
  bag.add(new ORecordId("#77:4"));
  rids.add(new ORecordId("#77:4"));
  bag.add(new ORecordId("#77:7"));
  rids.add(new ORecordId("#77:7"));
  bag.add(new ORecordId("#77:8"));
  rids.add(new ORecordId("#77:8"));
  ODocument doc=new ODocument();
  doc.field("ridbag",bag);
  doc.save();
  ORID rid=doc.getIdentity();
  OStorage storage=db.getStorage();
  db.close();
  storage.close(true);
  db.open("admin","admin");
  doc=db.load(rid);
  doc.setLazyLoad(false);
  bag=doc.field("ridbag");
  bag.add(new ORecordId("#77:0"));
  rids.add(new ORecordId("#77:0"));
  bag.add(new ORecordId("#77:1"));
  rids.add(new ORecordId("#77:1"));
  bag.add(new ORecordId("#77:2"));
  rids.add(new ORecordId("#77:2"));
  bag.add(new ORecordId("#77:3"));
  rids.add(new ORecordId("#77:3"));
  bag.add(new ORecordId("#77:3"));
  rids.add(new ORecordId("#77:3"));
  bag.add(new ORecordId("#77:5"));
  rids.add(new ORecordId("#77:5"));
  bag.add(new ORecordId("#77:6"));
  rids.add(new ORecordId("#77:6"));
  Iterator<OIdentifiable> iterator=bag.iterator();
  int r2c=0;
  int r3c=0;
  int r6c=0;
  int r4c=0;
  int r7c=0;
  while (iterator.hasNext()) {
    OIdentifiable identifiable=iterator.next();
    if (identifiable.equals(new ORecordId("#77:2"))) {
      if (r2c < 2) {
        r2c++;
        iterator.remove();
        rids.remove(identifiable);
      }
    }
    if (identifiable.equals(new ORecordId("#77:3"))) {
      if (r3c < 1) {
        r3c++;
        iterator.remove();
        rids.remove(identifiable);
      }
    }
    if (identifiable.equals(new ORecordId("#77:6"))) {
      if (r6c < 1) {
        r6c++;
        iterator.remove();
        rids.remove(identifiable);
      }
    }
    if (identifiable.equals(new ORecordId("#77:4"))) {
      if (r4c < 1) {
        r4c++;
        iterator.remove();
        rids.remove(identifiable);
      }
    }
    if (identifiable.equals(new ORecordId("#77:7"))) {
      if (r7c < 1) {
        r7c++;
        iterator.remove();
        rids.remove(identifiable);
      }
    }
  }
  assertEquals(r2c,2);
  assertEquals(r3c,1);
  assertEquals(r6c,1);
  assertEquals(r4c,1);
  assertEquals(r7c,1);
  for (  OIdentifiable identifiable : bag)   assertTrue(rids.remove(identifiable));
  assertTrue(rids.isEmpty());
  for (  OIdentifiable identifiable : bag)   rids.add(identifiable);
  doc=new ODocument();
  doc.field("ridbag",bag);
  doc.save();
  rid=doc.getIdentity();
  doc=db.load(rid);
  doc.setLazyLoad(false);
  bag=doc.field("ridbag");
  for (  OIdentifiable identifiable : bag)   assertTrue(rids.remove(identifiable));
  assertTrue(rids.isEmpty());
}
