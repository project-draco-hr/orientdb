{
  if (anyFunctionAggregates) {
    Object value;
    final ODocument result=new ODocument(database).setOrdered(true);
    for (    Entry<String,Object> projection : projections.entrySet()) {
      if (projection.getValue() instanceof OSQLFilterItemField)       value=((OSQLFilterItemField)projection.getValue()).getValue(result);
 else       if (projection.getValue() instanceof OSQLFunctionRuntime) {
        final OSQLFunctionRuntime f=(OSQLFunctionRuntime)projection.getValue();
        value=f.getResult();
      }
 else       value=projection.getValue();
      result.field(projection.getKey(),value);
    }
    request.getResultListener().result(result);
  }
 else   if (tempResult != null) {
    int limitIndex=0;
    for (    OIdentifiable doc : tempResult) {
      if (orderedFields != null && limit > 0) {
        if (limitIndex < limit) {
          limitIndex++;
          processRecordAsResult(doc);
        }
 else         break;
      }
 else {
        processRecordAsResult(doc);
      }
    }
    tempResult.clear();
    tempResult=null;
  }
  if (request instanceof OSQLSynchQuery)   return ((OSQLSynchQuery<ORecordSchemaAware<?>>)request).getResult();
  return null;
}
