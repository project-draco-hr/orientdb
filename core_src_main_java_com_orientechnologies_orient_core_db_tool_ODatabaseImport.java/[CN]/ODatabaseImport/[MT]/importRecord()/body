{
  final String value=jsonReader.readString(OJSONReader.END_OBJECT,true);
  record=ORecordSerializerJSON.INSTANCE.fromString(database,value,record);
  try {
    if (schemaImported && record.getIdentity().toString().equals(database.getStorage().getConfiguration().schemaRecordId)) {
      return null;
    }
    if (includeClusters != null) {
      if (!includeClusters.contains(database.getClusterNameById(record.getIdentity().getClusterId()))) {
        jsonReader.readNext(OJSONReader.NEXT_IN_ARRAY);
        return null;
      }
    }
 else     if (excludeClusters != null) {
      if (excludeClusters.contains(database.getClusterNameById(record.getIdentity().getClusterId()))) {
        jsonReader.readNext(OJSONReader.NEXT_IN_ARRAY);
        return null;
      }
    }
    if (record.getIdentity().getClusterId() == 0 && record.getIdentity().getClusterPosition() == 1)     return null;
    final String rid=record.getIdentity().toString();
    long nextAvailablePos=database.getStorage().getClusterDataRange(record.getIdentity().getClusterId())[1] + 1;
    if (record.getIdentity().getClusterPosition() < nextAvailablePos) {
      if (record instanceof ODocument)       record.save();
 else       ((ODatabaseRecord)database.getUnderlying()).save(record);
    }
 else {
      String clusterName=database.getClusterNameById(record.getIdentity().getClusterId());
      if (record.getIdentity().getClusterPosition() > nextAvailablePos) {
        int holes=(int)(record.getIdentity().getClusterPosition() - nextAvailablePos);
        ODocument tempRecord=new ODocument(database);
        for (int i=0; i < holes; ++i) {
          tempRecord.reset();
          ((ODatabaseRecord)database.getUnderlying()).save(tempRecord,clusterName);
          recordToDelete.add(tempRecord.getIdentity().toString());
        }
      }
      record.setIdentity(-1,-1);
      if (record instanceof ODocument)       record.save(clusterName);
 else       ((ODatabaseRecord)database.getUnderlying()).save(record,clusterName);
    }
    if (!record.getIdentity().toString().equals(rid))     throw new OSchemaException("Imported record '" + record.getIdentity() + "' has rid different from the original: "+ rid);
  }
  finally {
    jsonReader.readNext(OJSONReader.NEXT_IN_ARRAY);
  }
  return record.getIdentity();
}
