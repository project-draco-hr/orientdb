{
  ORidBag ridBag=new ORidBag();
  ODocument document=new ODocument();
  document.field("ridBag",ridBag);
  assertEmbedded(ridBag.isEmbedded());
  List<OIdentifiable> itemsToAdd=new ArrayList<OIdentifiable>();
  for (int i=0; i < 10; i++) {
    ODocument docToAdd=new ODocument();
    docToAdd.save();
    for (int k=0; k < 2; k++) {
      ridBag.add(docToAdd);
      itemsToAdd.add(docToAdd);
    }
  }
  assertEmbedded(ridBag.isEmbedded());
  document.save();
  document.reload();
  ridBag=document.field("ridBag");
  for (int i=0; i < 10; i++) {
    ODocument docToAdd=new ODocument();
    docToAdd.save();
    for (int k=0; k < 2; k++) {
      ridBag.add(docToAdd);
      itemsToAdd.add(docToAdd);
    }
  }
  for (int i=0; i < 10; i++) {
    ODocument docToAdd=new ODocument();
    ridBag.add(docToAdd);
    itemsToAdd.add(docToAdd);
  }
  assertEmbedded(ridBag.isEmbedded());
  document.save();
  document.reload();
  ridBag=document.field("ridBag");
  db.begin();
  for (int i=0; i < 10; i++) {
    ODocument docToAdd=new ODocument();
    docToAdd.save();
    for (int k=0; k < 2; k++) {
      ridBag.add(docToAdd);
      itemsToAdd.add(docToAdd);
    }
  }
  for (int i=0; i < 10; i++) {
    ODocument docToAdd=new ODocument();
    ridBag.add(docToAdd);
    itemsToAdd.add(docToAdd);
  }
  assertEmbedded(ridBag.isEmbedded());
  document.save();
  db.commit();
  assertEmbedded(ridBag.isEmbedded());
  Assert.assertEquals(ridBag.size(),itemsToAdd.size());
  document.reload();
  Assert.assertEquals(ridBag.size(),itemsToAdd.size());
  for (  OIdentifiable id : ridBag)   Assert.assertTrue(itemsToAdd.remove(id));
  Assert.assertTrue(itemsToAdd.isEmpty());
}
