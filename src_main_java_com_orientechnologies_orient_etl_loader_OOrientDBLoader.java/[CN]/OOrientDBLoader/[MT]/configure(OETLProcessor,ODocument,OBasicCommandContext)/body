{
  super.configure(iProcessor,iConfiguration,iContext);
  if (iConfiguration.containsField("dbURL"))   dbURL=iConfiguration.field("dbURL");
  if (iConfiguration.containsField("dbUser"))   dbUser=iConfiguration.field("dbUser");
  if (iConfiguration.containsField("dbPassword"))   dbPassword=iConfiguration.field("dbPassword");
  if (iConfiguration.containsField("dbType"))   dbType=DB_TYPE.valueOf(iConfiguration.field("dbType").toString().toUpperCase());
  if (iConfiguration.containsField("tx"))   tx=(Boolean)iConfiguration.field("tx");
  if (iConfiguration.containsField("batchCommit"))   batchCommit=(Integer)iConfiguration.field("batchCommit");
  clusterName=iConfiguration.field("cluster");
  className=iConfiguration.field("class");
  indexes=iConfiguration.field("indexes");
switch (dbType) {
case DOCUMENT:
    documentDatabase=new ODatabaseDocumentTx(dbURL);
  if (documentDatabase.exists()) {
    documentDatabase.open(dbUser,dbPassword);
  }
 else {
    if (dbAutoCreate) {
      documentDatabase.create();
    }
 else {
      throw new IllegalArgumentException("Database '" + dbURL + "' not exists and 'dbAutoCreate' setting is false");
    }
  }
break;
case GRAPH:
graphDatabase=new OrientGraphFactory(dbURL).setTransactional(tx).get();
documentDatabase=graphDatabase.getRawGraph();
break;
}
}
