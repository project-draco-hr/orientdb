{
  if (fileEntries == null || fileEntries.size() == 0)   return -1;
  int high=fileEntries.size() - 1;
  if (high < 0)   return -1;
  int low=0;
  int mid=-1;
  OMMapBufferEntry e;
  while (low <= high) {
    mid=(low + high) >>> 1;
    e=fileEntries.get(mid);
    if (iBeginOffset >= e.beginOffset && iBeginOffset + iSize <= e.beginOffset + e.size) {
      metricReusedPages++;
      e.updateLastUsedTime();
      return mid;
    }
    if (low == high) {
      if (iBeginOffset > e.beginOffset)       low++;
      return (low + 2) * -1;
    }
    if (iBeginOffset >= e.beginOffset)     low=mid + 1;
 else     high=mid;
  }
  return mid;
}
