{
  if (((active0&=old0) | (active1&=old1) | (active2&=old2)) == 0L)   return jjStartNfa_0(0,old0,old1,old2);
  try {
    curChar=input_stream.readChar();
  }
 catch (  java.io.IOException e) {
    jjStopStringLiteralDfa_0(1,0L,active1,active2);
    return 2;
  }
switch (curChar) {
case 46:
    if ((active2 & 0x400000L) != 0L)     return jjStopAtPos(2,150);
  break;
case 61:
if ((active2 & 0x80000L) != 0L) return jjStopAtPos(2,147);
 else if ((active2 & 0x100000L) != 0L) return jjStopAtPos(2,148);
break;
case 62:
return jjMoveStringLiteralDfa3_0(active1,0L,active2,0x200000L);
case 108:
return jjMoveStringLiteralDfa3_0(active1,0x2000000000L,active2,0L);
case 117:
return jjMoveStringLiteralDfa3_0(active1,0x1000000000L,active2,0L);
default :
break;
}
return jjStartNfa_0(1,0L,active1,active2);
}
