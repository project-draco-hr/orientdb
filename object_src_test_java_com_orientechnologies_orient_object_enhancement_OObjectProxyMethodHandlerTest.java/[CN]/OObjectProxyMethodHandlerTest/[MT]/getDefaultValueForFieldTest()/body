{
  OObjectProxyMethodHandler handler=new OObjectProxyMethodHandler(null);
  Method m=null;
  try {
    m=handler.getClass().getDeclaredMethod("getDefaultValueForField",Field.class);
    m.setAccessible(true);
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail("Unexpected exception");
  }
  assertTrue(m != null);
  EntityWithDifferentFieldTypes testEntity=new EntityWithDifferentFieldTypes();
  for (  String fieldName : fieldsAndThereDefaultValue.keySet()) {
    Field field=null;
    try {
      field=testEntity.getClass().getDeclaredField(fieldName);
      field.setAccessible(true);
    }
 catch (    Exception e) {
      e.printStackTrace();
      fail("Unexpected exception");
    }
    assertTrue(field != null);
    try {
      Object defaultValue=m.invoke(handler,field);
      Object expectedValue=fieldsAndThereDefaultValue.get(fieldName);
      if (expectedValue == null)       assertTrue(defaultValue == null);
 else       assertTrue(expectedValue.equals(defaultValue));
    }
 catch (    Exception e) {
      e.printStackTrace();
      fail("Unexpected exception");
    }
  }
}
