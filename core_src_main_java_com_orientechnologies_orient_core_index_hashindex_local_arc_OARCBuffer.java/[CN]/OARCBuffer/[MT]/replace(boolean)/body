{
  if (fetchedOnce.size() > 0 && fetchedOnce.size() > p || (dataEvictedSeveralTimes && fetchedOnce.size() == p)) {
    LRUEntry lruEntry=fetchedOnce.getLRU();
    if (lruEntry == null)     return;
    lockManager.acquireLock(Thread.currentThread(),new FileLockKey(lruEntry.fileName,lruEntry.pageIndex),OLockManager.LOCK.EXCLUSIVE);
    try {
      fetchedOnce.removeLRU();
      evictFileContent(lruEntry.fileName,lruEntry.pageIndex,lruEntry.dataPointer,lruEntry.isDirty);
      fetchedOnceEvicted.putToMRU(lruEntry.fileName,lruEntry.pageIndex,lruEntry.dataPointer,false);
    }
  finally {
      lockManager.releaseLock(Thread.currentThread(),new FileLockKey(lruEntry.fileName,lruEntry.pageIndex),OLockManager.LOCK.EXCLUSIVE);
    }
  }
 else {
    LRUEntry lruEntry=fetchedSeveralTimes.getLRU();
    if (lruEntry == null)     return;
    lockManager.acquireLock(Thread.currentThread(),new FileLockKey(lruEntry.fileName,lruEntry.pageIndex),OLockManager.LOCK.EXCLUSIVE);
    try {
      fetchedSeveralTimes.removeLRU();
      evictFileContent(lruEntry.fileName,lruEntry.pageIndex,lruEntry.dataPointer,lruEntry.isDirty);
      fetchedSeveralTimesEvicted.putToMRU(lruEntry.fileName,lruEntry.pageIndex,lruEntry.dataPointer,false);
    }
  finally {
      lockManager.releaseLock(Thread.currentThread(),new FileLockKey(lruEntry.fileName,lruEntry.pageIndex),OLockManager.LOCK.EXCLUSIVE);
    }
  }
}
