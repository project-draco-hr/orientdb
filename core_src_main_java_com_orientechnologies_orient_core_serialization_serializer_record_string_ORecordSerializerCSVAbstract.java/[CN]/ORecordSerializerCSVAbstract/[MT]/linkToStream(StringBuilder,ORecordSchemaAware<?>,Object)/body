{
  if (iLinked == null)   return null;
  ORID resultRid=null;
  ORID rid;
  buffer.append(OStringSerializerHelper.LINK);
  if (iLinked instanceof ORID) {
    rid=(ORID)iLinked;
  }
 else {
    if (!(iLinked instanceof ORecordInternal<?>)) {
      final String boundDocumentField=OObjectSerializerHelper.getDocumentBoundField(iLinked.getClass());
      if (boundDocumentField != null)       iLinked=OObjectSerializerHelper.getFieldValue(iLinked,boundDocumentField);
    }
    if (!(iLinked instanceof ORecordInternal<?>))     throw new IllegalArgumentException("Invalid object received. Expected a record but received: " + iLinked);
    ORecordInternal<?> iLinkedRecord=(ORecordInternal<?>)iLinked;
    rid=iLinkedRecord.getIdentity();
    if (!rid.isValid() || iLinkedRecord.isDirty()) {
      iLinkedRecord.setDatabase(iParentRecord.getDatabase());
      ((ODatabaseRecord<ORecordInternal<?>>)iLinkedRecord.getDatabase()).save((ORecordInternal<?>)iLinkedRecord);
    }
    if (iLinkedRecord instanceof ORecordSchemaAware<?>) {
      final ORecordSchemaAware<?> schemaAwareRecord=(ORecordSchemaAware<?>)iLinkedRecord;
      if (schemaAwareRecord.getClassName() != null) {
        buffer.append(schemaAwareRecord.getClassName());
        buffer.append(OStringSerializerHelper.CLASS_SEPARATOR);
      }
    }
    if (iParentRecord.getDatabase() instanceof ODatabaseRecord<?>) {
      final ODatabaseRecord<?> db=(ODatabaseRecord<?>)iParentRecord.getDatabase();
      if (!db.isRetainRecords())       resultRid=iLinkedRecord.getIdentity();
    }
  }
  if (rid.isValid())   buffer.append(rid.toString());
  return resultRid;
}
