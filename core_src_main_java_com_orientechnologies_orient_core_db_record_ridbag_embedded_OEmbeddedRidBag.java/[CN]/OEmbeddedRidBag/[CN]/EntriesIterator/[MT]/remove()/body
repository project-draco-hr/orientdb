{
  if (currentRemoved)   throw new IllegalStateException("Current element has already been removed");
  if (currentValue == null)   throw new IllegalStateException("Next method was not called for given iterator");
  currentRemoved=true;
  if (currentValue.getIdentity().isValid()) {
    final IdentifiableContainer container=entries.get(currentValue.getIdentity());
    final OModifiableInteger counter=container.getCounter();
    counter.decrement();
    if (counter.intValue() < 1) {
      entries.remove(currentValue.getIdentity());
      if (currentValue instanceof ORecord) {
        ORecord record=(ORecord)currentValue;
        record.removeIdentityChangeListener(OEmbeddedRidBag.this);
      }
      entriesIterator=entries.tailMap(currentValue.getIdentity(),false).entrySet().iterator();
    }
  }
 else {
    final OModifiableInteger counter=newEntries.get(currentValue);
    counter.decrement();
    if (counter.intValue() < 1) {
      if (currentValue instanceof ORecord) {
        ORecord record=(ORecord)currentValue;
        record.removeIdentityChangeListener(OEmbeddedRidBag.this);
      }
    }
  }
  size--;
  contentWasChanged=true;
  fireCollectionChangedEvent(new OMultiValueChangeEvent<OIdentifiable,OIdentifiable>(OMultiValueChangeEvent.OChangeType.REMOVE,currentValue,null,currentValue));
}
