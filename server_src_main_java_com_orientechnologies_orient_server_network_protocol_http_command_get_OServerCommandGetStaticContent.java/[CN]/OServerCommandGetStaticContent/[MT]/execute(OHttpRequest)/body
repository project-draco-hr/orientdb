{
  iRequest.data.commandInfo="Get static content";
  iRequest.data.commandDetail=iRequest.url;
  if (cache == null && OGlobalConfiguration.SERVER_CACHE_STATIC_RESOURCES.getValueAsBoolean())   cache=new HashMap<String,OStaticContentCachedEntry>();
  InputStream is=null;
  long contentSize=0;
  String type=null;
  try {
    String url;
    if (OHttpUtils.URL_SEPARATOR.equals(iRequest.url))     url="/www/index.htm";
 else {
      int pos=iRequest.url.indexOf('?');
      if (pos > -1)       url=iRequest.url.substring(0,pos);
 else       url=iRequest.url;
    }
    if (url.startsWith("/www"))     url=WWW_PATH + url.substring("/www".length(),url.length());
 else     url=WWW_PATH + url;
    if (cache != null) {
synchronized (cache) {
        final OStaticContentCachedEntry cachedEntry=cache.get(url);
        if (cachedEntry != null) {
          is=new ByteArrayInputStream(cachedEntry.content);
          contentSize=cachedEntry.size;
          type=cachedEntry.type;
        }
      }
    }
    if (is == null) {
      File inputFile=new File(url);
      if (!inputFile.exists()) {
        OLogManager.instance().debug(this,"Static resource not found: %s",url);
        sendBinaryContent(iRequest,404,"File not found",null,null,0);
        return false;
      }
      if (inputFile.isDirectory()) {
        inputFile=new File(url + "/index.htm");
        if (inputFile.exists())         url=url + "/index.htm";
 else {
          inputFile=new File(url + "/index.html");
          if (inputFile.exists())           url=url + "/index.html";
        }
      }
      if (url.endsWith(".htm") || url.endsWith(".html"))       type="text/html";
 else       if (url.endsWith(".png"))       type="image/png";
 else       if (url.endsWith(".jpeg"))       type="image/jpeg";
 else       if (url.endsWith(".js"))       type="application/x-javascript";
 else       if (url.endsWith(".css"))       type="text/css";
      is=new BufferedInputStream(new FileInputStream(inputFile));
      contentSize=inputFile.length();
      if (cache != null) {
        final byte[] buffer=new byte[(int)contentSize];
        for (int i=0; i < contentSize; ++i)         buffer[i]=(byte)is.read();
        OStaticContentCachedEntry cachedEntry=new OStaticContentCachedEntry();
        cachedEntry.content=buffer;
        cachedEntry.size=contentSize;
        cachedEntry.type=type;
        cache.put(url,cachedEntry);
        is=new ByteArrayInputStream(cachedEntry.content);
      }
    }
    sendBinaryContent(iRequest,OHttpUtils.STATUS_OK_CODE,OHttpUtils.STATUS_OK_DESCRIPTION,type,is,contentSize);
  }
 catch (  IOException e) {
    e.printStackTrace();
  }
 finally {
    if (is != null)     try {
      is.close();
    }
 catch (    IOException e) {
    }
  }
  return false;
}
