{
  OFileUtils.deleteRecursively(new File("target/testCreatedDESEncryptedDatabase"));
  final ODatabase db=new ODatabaseDocumentTx("plocal:target/testCreatedDESEncryptedDatabase");
  db.setProperty(OGlobalConfiguration.STORAGE_COMPRESSION_METHOD.getKey(),"des-encrypted");
  db.setProperty(OGlobalConfiguration.STORAGE_COMPRESSION_OPTIONS.getKey(),"T1JJRU5UREJfSVNfQ09PTA==");
  db.create();
  db.command(new OCommandSQL("create class TestEncryption")).execute();
  db.command(new OCommandSQL("insert into TestEncryption set name = 'Jay'")).execute();
  List result=db.query(new OSQLSynchQuery<ODocument>("select from TestEncryption"));
  Assert.assertEquals(result.size(),1);
  db.close();
  db.open("admin","admin");
  db.close();
  Orient.instance().getStorage("testCreatedDESEncryptedDatabase").close(true,false);
  db.setProperty(OGlobalConfiguration.STORAGE_COMPRESSION_OPTIONS.getKey(),"T1JJRU5UREJfSVNfQ09PTA==");
  db.open("admin","admin");
  result=db.query(new OSQLSynchQuery<ODocument>("select from TestEncryption"));
  Assert.assertEquals(result.size(),1);
  db.close();
  Orient.instance().getStorage("testCreatedDESEncryptedDatabase").close(true,false);
  db.setProperty(OGlobalConfiguration.STORAGE_COMPRESSION_OPTIONS.getKey(),"invalidPassword");
  try {
    db.open("admin","admin");
    Assert.fail();
  }
 catch (  Exception e) {
    Assert.assertTrue(e.getCause() instanceof OSecurityException || e.getCause().getCause() instanceof OSecurityException);
  }
 finally {
    db.activateOnCurrentThread();
    db.close();
    Orient.instance().getStorage("testCreatedDESEncryptedDatabase").close(true,false);
  }
  db.setProperty(OGlobalConfiguration.STORAGE_COMPRESSION_OPTIONS.getKey(),"T1JJRU5UREJfSVNfQ09PTA=-");
  try {
    db.open("admin","admin");
    Assert.fail();
  }
 catch (  OStorageException e) {
    Assert.assertTrue(e.getCause() instanceof OSecurityException || e.getCause().getCause() instanceof OSecurityException);
  }
 finally {
    db.activateOnCurrentThread();
    db.close();
    Orient.instance().getStorage("testCreatedDESEncryptedDatabase").close(true,false);
  }
  db.setProperty(OGlobalConfiguration.STORAGE_COMPRESSION_OPTIONS.getKey(),"T1JJRU5UREJfSVNfQ09PTA==");
  db.open("admin","admin");
  result=db.query(new OSQLSynchQuery<ODocument>("select from TestEncryption"));
  Assert.assertEquals(result.size(),1);
  db.close();
}
