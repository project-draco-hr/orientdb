{
  OIdentifier jjtn000=new OIdentifier(JJTIDENTIFIER);
  boolean jjtc000=true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
  try {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case IDENTIFIER:
      jj_consume_token(IDENTIFIER);
    break;
case IN:
  jj_consume_token(IN);
break;
case SET:
jj_consume_token(SET);
break;
case PUT:
jj_consume_token(PUT);
break;
case ADD:
jj_consume_token(ADD);
break;
case REMOVE:
jj_consume_token(REMOVE);
break;
case MERGE:
jj_consume_token(MERGE);
break;
case CONTENT:
jj_consume_token(CONTENT);
break;
case ORDER:
jj_consume_token(ORDER);
break;
case KEY:
jj_consume_token(KEY);
break;
case OFFSET:
jj_consume_token(OFFSET);
break;
case GROUP:
jj_consume_token(GROUP);
break;
case VALUES:
jj_consume_token(VALUES);
break;
case RECORD:
jj_consume_token(RECORD);
break;
case TO:
jj_consume_token(TO);
break;
default :
jj_la1[0]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
}
  finally {
if (jjtc000) {
jjtree.closeNodeScope(jjtn000,true);
jjtn000.jjtSetLastToken(getToken(0));
}
}
}
