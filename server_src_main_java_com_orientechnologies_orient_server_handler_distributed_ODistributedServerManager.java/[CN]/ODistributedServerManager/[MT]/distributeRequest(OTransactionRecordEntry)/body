{
  final HashMap<ODistributedServerNodeRemote,SYNCH_TYPE> nodeList;
  lock.acquireSharedLock();
  try {
    if (nodes.isEmpty())     return;
    final ODocument servers=getServersForCluster(iTransactionEntry.getRecord().getDatabase().getName(),iTransactionEntry.clusterName);
    if (servers == null)     return;
    nodeList=new HashMap<ODistributedServerNodeRemote,ODistributedServerNodeRemote.SYNCH_TYPE>();
    if (servers.field("synch") != null)     for (    String s : (Collection<String>)servers.field("synch")) {
      nodeList.put(nodes.get(s),ODistributedServerNodeRemote.SYNCH_TYPE.SYNCHRONOUS);
    }
    if (servers.field("asynch") != null)     for (    String s : (Collection<String>)servers.field("asynch")) {
      nodeList.put(nodes.get(s),ODistributedServerNodeRemote.SYNCH_TYPE.ASYNCHRONOUS);
    }
  }
  finally {
    lock.releaseSharedLock();
  }
  for (  Entry<ODistributedServerNodeRemote,SYNCH_TYPE> entry : nodeList.entrySet()) {
    entry.getKey().sendRequest(iTransactionEntry,entry.getValue());
  }
}
