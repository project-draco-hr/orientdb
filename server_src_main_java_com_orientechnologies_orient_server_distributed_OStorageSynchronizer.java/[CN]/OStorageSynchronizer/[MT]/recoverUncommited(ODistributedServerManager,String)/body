{
  final OStorage storage=openStorage(storageName);
  for (  ORecordId rid : log.getUncommittedOperations()) {
    try {
      if (getConflictResolver().existConflictsForRecord(rid))       continue;
      OCluster cl=storage.getClusterById(rid.getClusterId());
      if (cl == null) {
        ODistributedServerLog.warn(this,iCluster.getLocalNodeId(),null,DIRECTION.NONE,"Cannot find cluster for RID %s, skip it",rid);
        continue;
      }
      final OReplicationConfig replicationData=iCluster.getReplicationData(storageName,cl.getName(),rid,cluster.getLocalNodeId(),null);
      final ORawBuffer record=(ORawBuffer)iCluster.execute(getClusterNameByRID(storage,rid),rid,new OReadRecordTask(server,cluster,storageName,rid),replicationData);
      if (record == null)       storage.deleteRecord(rid,OVersionFactory.instance().createUntrackedVersion(),0,null);
 else       storage.updateRecord(rid,record.buffer,record.version,record.recordType,0,null);
    }
 catch (    ExecutionException e) {
      ODistributedServerLog.error(this,iCluster.getLocalNodeId(),null,DIRECTION.NONE,"error on acquiring uncommitted record %s from other servers. The database could be unaligned with others!",e,rid);
    }
  }
}
