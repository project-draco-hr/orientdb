{
  if (getDatabase().getTransaction().isActive())   throw new IllegalStateException("Cannot create a new index inside a transaction");
  final Character c=OSchemaShared.checkNameIfValid(iName);
  if (c != null)   throw new IllegalArgumentException("Invalid index name '" + iName + "'. Character '"+ c+ "' is invalid");
  ODatabase database=getDatabase();
  OStorage storage=database.getStorage();
  if (algorithm == null)   if ((storage.getType().equals(OEngineLocal.NAME) || storage.getType().equals(OEngineLocalPaginated.NAME)) && useSBTree)   algorithm=ODefaultIndexFactory.SBTREE_ALGORITHM;
 else   algorithm=ODefaultIndexFactory.MVRBTREE_ALGORITHM;
  final String valueContainerAlgorithm;
  if (OClass.INDEX_TYPE.NOTUNIQUE.toString().equals(iType) || OClass.INDEX_TYPE.NOTUNIQUE_HASH_INDEX.toString().equals(iType) || OClass.INDEX_TYPE.FULLTEXT_HASH_INDEX.toString().equals(iType)|| OClass.INDEX_TYPE.FULLTEXT.toString().equals(iType)) {
    if ((storage.getType().equals(OEngineLocalPaginated.NAME) || storage.getType().equals(OEngineLocal.NAME)) && OGlobalConfiguration.INDEX_NOTUNIQUE_USE_SBTREE_CONTAINER_BY_DEFAULT.getValueAsBoolean()) {
      valueContainerAlgorithm=ODefaultIndexFactory.SBTREEBONSAI_VALUE_CONTAINER;
    }
 else {
      valueContainerAlgorithm=ODefaultIndexFactory.MVRBTREE_VALUE_CONTAINER;
    }
  }
 else {
    valueContainerAlgorithm=ODefaultIndexFactory.NONE_VALUE_CONTAINER;
  }
  final OIndexInternal<?> index;
  acquireExclusiveLock();
  try {
    if (indexes.containsKey(iName.toLowerCase()))     throw new OIndexException("Index with name " + iName.toLowerCase() + " already exists.");
    index=OIndexes.createIndex(getDatabase(),iType,algorithm,valueContainerAlgorithm);
    final String clusterName=indexDefinition != null && indexDefinition.getClassName() != null ? defaultClusterName : manualClusterName;
    if (iProgressListener == null)     iProgressListener=new OIndexRebuildOutputListener(index);
    Set<String> clustersToIndex=new HashSet<String>();
    if (clusterIdsToIndex != null) {
      for (      int clusterId : clusterIdsToIndex) {
        final String clusterNameToIndex=database.getClusterNameById(clusterId);
        if (clusterNameToIndex == null)         throw new OIndexException("Cluster with id " + clusterId + " does not exist.");
        clustersToIndex.add(clusterNameToIndex);
      }
    }
    index.create(iName,indexDefinition,clusterName,clustersToIndex,true,iProgressListener);
    addIndexInternal(index);
    if (metadata != null) {
      final ODocument config=index.getConfiguration();
      config.field("metadata",metadata,OType.EMBEDDED);
    }
    setDirty();
    save();
  }
  finally {
    releaseExclusiveLock();
  }
  if (OGlobalConfiguration.INDEX_FLUSH_AFTER_CREATE.getValueAsBoolean())   storage.synch();
  return index;
}
