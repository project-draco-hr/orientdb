{
  if (object == null)   out.writeByte(NULL);
 else   if (object instanceof OStreamable) {
    out.writeByte(STREAMABLE);
    out.writeUTF(object.getClass().getName());
    ((OStreamable)object).toStream(out);
  }
 else   if (object instanceof String) {
    out.writeByte(STRING);
    out.writeUTF((String)object);
  }
 else   if (object instanceof Integer) {
    out.writeByte(INTEGER);
    out.writeInt((Integer)object);
  }
 else   if (object instanceof Short) {
    out.writeByte(SHORT);
    out.writeShort((Short)object);
  }
 else   if (object instanceof Long) {
    out.writeByte(LONG);
    out.writeLong((Long)object);
  }
 else   if (object instanceof Boolean) {
    out.writeByte(BOOLEAN);
    out.writeBoolean((Boolean)object);
  }
 else   if (object instanceof Serializable) {
    out.writeByte(SERIALIZABLE);
    final ByteArrayOutputStream mem=new ByteArrayOutputStream();
    final ObjectOutputStream oos=new ObjectOutputStream(mem);
    try {
      oos.writeObject(object);
      oos.flush();
      final byte[] buffer=mem.toByteArray();
      out.writeInt(buffer.length);
      out.write(buffer);
    }
  finally {
      oos.close();
      mem.close();
    }
  }
 else   throw new OSerializationException("Object not supported: " + object);
}
