{
  final OSchema schema=database.getMetadata().getSchema();
  OClass clazz=schema.createClass("collateIndexTest");
  OProperty csp=clazz.createProperty("csp",OType.STRING);
  csp.setCollate(ODefaultCollate.NAME);
  OProperty cip=clazz.createProperty("cip",OType.STRING);
  cip.setCollate(OCaseInsensitiveCollate.NAME);
  clazz.createIndex("collateIndexCSP",OClass.INDEX_TYPE.NOTUNIQUE,"csp");
  clazz.createIndex("collateIndexCIP",OClass.INDEX_TYPE.NOTUNIQUE,"cip");
  for (int i=0; i < 10; i++) {
    ODocument document=new ODocument("collateIndexTest");
    if (i % 2 == 0) {
      document.field("csp","VAL");
      document.field("cip","VAL");
    }
 else {
      document.field("csp","val");
      document.field("cip","val");
    }
    document.save();
  }
  String query="select from collateIndexTest where csp = 'VAL'";
  List<ODocument> result=database.query(new OSQLSynchQuery<ODocument>(query));
  Assert.assertEquals(result.size(),5);
  for (  ODocument document : result)   Assert.assertEquals(document.field("csp"),"VAL");
  ODocument explain=database.command(new OCommandSQL("explain " + query)).execute();
  Assert.assertTrue(explain.<Set<String>>field("involvedIndexes").contains("collateIndexCSP"));
  query="select from collateIndexTest where cip = 'VaL'";
  result=database.query(new OSQLSynchQuery<ODocument>(query));
  Assert.assertEquals(result.size(),10);
  for (  ODocument document : result)   Assert.assertEquals((document.<String>field("cip")).toUpperCase(),"VAL");
  explain=database.command(new OCommandSQL("explain " + query)).execute();
  Assert.assertTrue(explain.<Set<String>>field("involvedIndexes").contains("collateIndexCIP"));
}
