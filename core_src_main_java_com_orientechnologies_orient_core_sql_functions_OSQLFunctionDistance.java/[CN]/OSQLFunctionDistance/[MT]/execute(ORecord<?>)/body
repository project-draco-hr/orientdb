{
  ODocument record=(ODocument)iRecord;
  double distance;
  for (int i=0; i < configuredFields.length; ++i) {
    if (configuredFields[i] != null) {
      if (!record.containsField(configuredFields[i]))       return false;
      recordValues[i]=((Double)OType.convert(record.field(configuredFields[i]),Double.class)).doubleValue();
      recordValues[i]=Math.toRadians(recordValues[i]);
    }
 else {
      recordValues[i]=configuredValues[i];
    }
  }
  if (algorithm == ALGORITHM.SPHERE) {
    final double deltaLat=recordValues[2] - recordValues[0];
    final double deltaLon=recordValues[3] - recordValues[1];
    final double a=Math.pow(Math.sin(deltaLat / 2),2) + Math.cos(recordValues[0]) * Math.cos(recordValues[2]) * Math.pow(Math.sin(deltaLon / 2),2);
    distance=2 * Math.atan2(Math.sqrt(a),Math.sqrt(1 - a)) * EARTH_RADIUS;
  }
 else   distance=0;
switch (unit) {
case KM:
    break;
case MILES:
  distance*=0.621371192237;
break;
case NAUTICAL_MILES:
distance*=0.539956;
break;
}
return distance;
}
