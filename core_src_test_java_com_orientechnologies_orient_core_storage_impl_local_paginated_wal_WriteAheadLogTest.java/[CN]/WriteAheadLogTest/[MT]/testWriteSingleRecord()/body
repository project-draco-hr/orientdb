{
  writeAheadLog.logRecord(new OSetPageDataRecord(new byte[]{1,2,3},10,20,"test"));
  OWALRecord walRecord=writeAheadLog.read(OLogSequenceNumber.BEGIN);
  Assert.assertTrue(walRecord instanceof OSetPageDataRecord);
  OSetPageDataRecord setPageDataRecord=(OSetPageDataRecord)walRecord;
  Assert.assertEquals(setPageDataRecord.getPageOffset(),10);
  Assert.assertEquals(setPageDataRecord.getData(),new byte[]{1,2,3});
  Assert.assertEquals(setPageDataRecord.getPageIndex(),20);
  Assert.assertEquals(setPageDataRecord.getFileName(),"test");
  Assert.assertNull(writeAheadLog.readNext(OLogSequenceNumber.BEGIN));
  writeAheadLog.close();
  writeAheadLog=createWAL();
  walRecord=writeAheadLog.read(OLogSequenceNumber.BEGIN);
  Assert.assertEquals(walRecord.getLsn(),OLogSequenceNumber.BEGIN);
  Assert.assertTrue(walRecord instanceof OSetPageDataRecord);
  setPageDataRecord=(OSetPageDataRecord)walRecord;
  Assert.assertEquals(setPageDataRecord.getPageOffset(),10);
  Assert.assertEquals(setPageDataRecord.getData(),new byte[]{1,2,3});
  Assert.assertEquals(setPageDataRecord.getPageIndex(),20);
  Assert.assertEquals(setPageDataRecord.getFileName(),"test");
  Assert.assertNull(writeAheadLog.readNext(OLogSequenceNumber.BEGIN));
}
