{
  if (getDatabase().getTransaction().isActive())   throw new IllegalStateException("Cannot create a new index inside a transaction");
  final Character c=OSchemaShared.checkFieldNameIfValid(iName);
  if (c != null)   throw new IllegalArgumentException("Invalid index name '" + iName + "'. Character '"+ c+ "' is invalid");
  ODatabaseInternal database=getDatabase();
  OStorage storage=database.getStorage();
  final Locale locale=getServerLocale();
  type=type.toUpperCase(locale);
  if (algorithm == null) {
    algorithm=OIndexes.chooseDefaultIndexAlgorithm(type);
  }
  final String valueContainerAlgorithm=chooseContainerAlgorithm(type);
  final OIndexInternal<?> index;
  acquireExclusiveLock();
  try {
    if (indexes.containsKey(iName.toLowerCase(locale)))     throw new OIndexException("Index with name " + iName.toLowerCase(locale) + " already exists.");
    if (clusterIdsToIndex == null || clusterIdsToIndex.length == 0) {
      if (metadata == null)       metadata=new ODocument().setTrackingChanges(false);
      final Object durable=metadata.field("durableInNonTxMode");
      if (!(durable instanceof Boolean))       metadata.field("durableInNonTxMode",true);
      if (metadata.field("trackMode") == null)       metadata.field("trackMode","FULL");
    }
    index=OIndexes.createIndex(getDatabase(),iName,type,algorithm,valueContainerAlgorithm,metadata,-1);
    if (progressListener == null)     progressListener=new OIndexRebuildOutputListener(index);
    final Set<String> clustersToIndex=findClustersByIds(clusterIdsToIndex,database);
    if (indexDefinition != null) {
      Object ignoreNullValues=metadata == null ? null : metadata.field("ignoreNullValues");
      if (Boolean.TRUE.equals(ignoreNullValues)) {
        indexDefinition.setNullValuesIgnored(true);
      }
 else       if (Boolean.FALSE.equals(ignoreNullValues)) {
        indexDefinition.setNullValuesIgnored(false);
      }
 else {
        indexDefinition.setNullValuesIgnored(OGlobalConfiguration.INDEX_IGNORE_NULL_VALUES_DEFAULT.getValueAsBoolean());
      }
    }
    final String clusterName=indexDefinition != null && indexDefinition.getClassName() != null ? defaultClusterName : manualClusterName;
    index.create(iName,indexDefinition,clusterName,clustersToIndex,true,progressListener);
    addIndexInternal(index);
    if (metadata != null) {
      final ODocument config=index.getConfiguration();
      config.field("metadata",metadata,OType.EMBEDDED);
    }
    setDirty();
    save();
  }
  finally {
    releaseExclusiveLock();
  }
  notifyInvolvedClasses(clusterIdsToIndex);
  if (OGlobalConfiguration.INDEX_FLUSH_AFTER_CREATE.getValueAsBoolean())   storage.synch();
  return preProcessBeforeReturn(index);
}
