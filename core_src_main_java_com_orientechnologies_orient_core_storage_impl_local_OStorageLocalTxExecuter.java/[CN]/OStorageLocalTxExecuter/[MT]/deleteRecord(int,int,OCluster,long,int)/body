{
  try {
    final OPhysicalPosition ppos=iClusterSegment.getPhysicalPosition(iPosition,new OPhysicalPosition());
    if (!storage.checkForRecordValidity(ppos))     return;
    if (iVersion > -1 && ppos.version != iVersion)     throw new OConcurrentModificationException("Can't delete the record #" + iClusterSegment.getId() + ":"+ iPosition+ " because it was modified by another user in the meanwhile of current transaction. Use pessimistic locking instead of optimistic or simply re-execute the transaction");
    txSegment.addLog(OTxSegment.OPERATION_DELETE,iRequesterId,iTxId,iClusterSegment.getId(),iPosition,ppos.dataPosition);
    iClusterSegment.removePhysicalPosition(iPosition,ppos);
    storage.getDataSegment(ppos.dataSegment).deleteRecord(ppos.dataPosition);
  }
 catch (  IOException e) {
    OLogManager.instance().error(this,"Error on deleting entry #" + iPosition + " in log segment: "+ iClusterSegment,e,OTransactionException.class);
  }
}
