{
  Object fieldValue;
  ODocument doc;
  clear();
  acquireExclusiveLock();
  try {
    int documentIndexed=0;
    int documentNum=0;
    final int[] clusterIds=owner.getOwnerClass().getClusterIds();
    final long documentTotal=map.getDatabase().countClusterElements(clusterIds);
    if (iProgressListener != null)     iProgressListener.onBegin(this,documentTotal);
    for (    int clusterId : clusterIds)     for (    Object record : map.getDatabase().browseCluster(map.getDatabase().getClusterNameById(clusterId))) {
      if (record instanceof ODocument) {
        doc=(ODocument)record;
        fieldValue=doc.field(owner.getName());
        if (fieldValue != null) {
          put(fieldValue.toString(),(ORecordId)doc.getIdentity());
          ++documentIndexed;
        }
      }
      documentNum++;
      if (iProgressListener != null)       iProgressListener.onProgress(this,documentNum,(float)documentNum * 100f / documentTotal);
    }
    lazySave();
    if (iProgressListener != null)     iProgressListener.onCompletition(this,true);
  }
 catch (  Exception e) {
    if (iProgressListener != null)     iProgressListener.onCompletition(this,false);
    clear();
    throw new OIndexException("Error on rebuilding the index for property: " + owner,e);
  }
 finally {
    releaseExclusiveLock();
  }
}
