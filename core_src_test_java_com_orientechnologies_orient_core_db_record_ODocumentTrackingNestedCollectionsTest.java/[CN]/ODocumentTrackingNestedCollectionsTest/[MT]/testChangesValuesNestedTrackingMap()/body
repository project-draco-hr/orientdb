{
  ODocument document=new ODocument();
  Map objects=new HashMap();
  document.field("objects",objects);
  Map subObjects=new HashMap();
  objects.put("first",subObjects);
  ODocument nestedDoc=new ODocument();
  subObjects.put("one",nestedDoc);
  document.save();
  objects=document.field("objects");
  subObjects=(Map)objects.values().iterator().next();
  subObjects.put("one","String");
  subObjects.put("two",new ODocument());
  OMultiValueChangeTimeLine<Object,Object> timeLine=document.getCollectionTimeLine("objects");
  assertEquals(1,timeLine.getMultiValueChangeEvents().size());
  assertTrue(timeLine.getMultiValueChangeEvents().get(0) instanceof ONestedMultiValueChangeEvent);
  ONestedMultiValueChangeEvent nesetedEvent=(ONestedMultiValueChangeEvent)timeLine.getMultiValueChangeEvents().get(0);
  assertEquals(2,nesetedEvent.getTimeLine().getMultiValueChangeEvents().size());
  List<OMultiValueChangeEvent<?,?>> multiValueChangeEvents=nesetedEvent.getTimeLine().getMultiValueChangeEvents();
  assertEquals("one",multiValueChangeEvents.get(0).getKey());
  assertEquals("String",multiValueChangeEvents.get(0).getValue());
  assertEquals("two",multiValueChangeEvents.get(1).getKey());
  assertTrue(multiValueChangeEvents.get(1).getValue() instanceof ODocument);
}
