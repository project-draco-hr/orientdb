{
  ODistributedServerLog.debug(this,iManager.getLocalNodeName(),getNodeSource(),DIRECTION.IN,"updating record %s/%s v.%d",database.getName(),rid.toString(),version);
  final ODistributedDatabase ddb=iManager.getMessageService().getDatabase(database.getName());
  if (!inTx) {
    if (lockRecord && !ddb.lockRecord(rid,nodeSource))     throw new ODistributedRecordLockedException(rid);
  }
  try {
    ORecord loadedRecord=rid.getRecord();
    if (loadedRecord == null)     throw new ORecordNotFoundException("Record " + rid + " was not found on update");
    if (loadedRecord instanceof ODocument) {
      final ODocument newDocument=(ODocument)getRecord();
      ODocument loadedDocument=(ODocument)loadedRecord;
      int loadedRecordVersion=loadedDocument.merge(newDocument,false,false).getVersion();
      if (loadedRecordVersion != version) {
        loadedDocument.setDirty();
      }
      ORecordInternal.setVersion(loadedDocument,version);
    }
 else     ORecordInternal.fill(loadedRecord,rid,version,content,true);
    loadedRecord=database.save(loadedRecord);
    ODistributedServerLog.debug(this,iManager.getLocalNodeName(),getNodeSource(),DIRECTION.IN,"+-> updated record %s/%s v.%d",database.getName(),rid.toString(),loadedRecord.getVersion());
    if (database.getTransaction().isActive()) {
      return new VersionPlaceholder(loadedRecord);
    }
 else {
      return loadedRecord.getVersion();
    }
  }
  finally {
    if (!inTx)     ddb.unlockRecord(rid);
  }
}
