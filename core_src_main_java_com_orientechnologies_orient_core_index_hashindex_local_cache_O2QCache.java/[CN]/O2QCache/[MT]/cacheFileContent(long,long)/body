{
  FileLockKey key=new FileLockKey(fileId,pageIndex);
  if (evictedPages.containsKey(key))   return new CacheResult(true,evictedPages.remove(key));
  final OFileClassic fileClassic=files.get(fileId);
  final long startPosition=pageIndex * pageSize;
  final long endPosition=startPosition + pageSize;
  byte[] content=new byte[pageSize];
  long dataPointer;
  if (fileClassic.getFilledUpTo() >= endPosition) {
    fileClassic.read(startPosition,content,content.length);
    dataPointer=directMemory.allocate(content);
  }
 else {
    fileClassic.allocateSpace((int)(endPosition - fileClassic.getFilledUpTo()));
    dataPointer=directMemory.allocate(content);
  }
  return new CacheResult(false,dataPointer);
}
