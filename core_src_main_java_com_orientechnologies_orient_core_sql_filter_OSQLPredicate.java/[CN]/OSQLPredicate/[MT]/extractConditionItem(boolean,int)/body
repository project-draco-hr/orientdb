{
  final Object[] result=new Object[iExpectedWords];
  for (int i=0; i < iExpectedWords; ++i) {
    parserNextWord(false," =><,\r\n");
    String word=parserGetLastWord();
    if (word.length() == 0)     break;
    final String uWord=word.toUpperCase();
    final int lastPosition=parserIsEnded() ? parserText.length() : parserGetCurrentPosition();
    if (word.length() > 0 && word.charAt(0) == OStringSerializerHelper.EMBEDDED_BEGIN) {
      braces++;
      parserSetCurrentPosition(lastPosition - word.length() + 1);
      final Object subCondition=extractConditions(null);
      if (!parserSkipWhiteSpaces() || parserGetCurrentChar() == ')') {
        braces--;
        parserMoveCurrentPosition(+1);
      }
      result[i]=subCondition;
    }
 else     if (word.charAt(0) == OStringSerializerHelper.COLLECTION_BEGIN) {
      parserSetCurrentPosition(lastPosition - word.length());
      final List<String> stringItems=new ArrayList<String>();
      parserSetCurrentPosition(OStringSerializerHelper.getCollection(parserText,parserGetCurrentPosition(),stringItems));
      result[i]=convertCollectionItems(stringItems);
      parserMoveCurrentPosition(+1);
    }
 else     if (uWord.startsWith(OSQLFilterItemFieldAll.NAME + OStringSerializerHelper.EMBEDDED_BEGIN)) {
      result[i]=new OSQLFilterItemFieldAll(this,word);
    }
 else     if (uWord.startsWith(OSQLFilterItemFieldAny.NAME + OStringSerializerHelper.EMBEDDED_BEGIN)) {
      result[i]=new OSQLFilterItemFieldAny(this,word);
    }
 else {
      if (uWord.equals("NOT")) {
        if (iAllowOperator)         return new OQueryOperatorNot();
 else {
          parserNextWord(false," )=><,\r\n");
          final String nextWord=parserGetLastWord();
          if (nextWord.length() > 0) {
            word+=" " + nextWord;
            if (word.endsWith(")"))             word=word.substring(0,word.length() - 1);
          }
        }
      }
      while (word.endsWith(")")) {
        final int openParenthesis=word.indexOf('(');
        if (openParenthesis == -1) {
          word=word.substring(0,word.length() - 1);
          parserMoveCurrentPosition(-1);
        }
 else         break;
      }
      result[i]=OSQLHelper.parseValue(this,this,word,context);
    }
  }
  return iExpectedWords == 1 ? result[0] : result;
}
