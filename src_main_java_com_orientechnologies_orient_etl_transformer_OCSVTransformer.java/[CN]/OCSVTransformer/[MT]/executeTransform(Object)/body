{
  if (skipTransform())   return null;
  log(OETLProcessor.LOG_LEVELS.DEBUG,"parsing=%s",input);
  final List<String> fields=OStringSerializerHelper.smartSplit(input.toString(),new char[]{separator},0,-1,false,false,false,false,unicode);
  if (!isColumnNamesCorrect(fields))   return null;
  final ODocument doc=new ODocument();
  for (int i=0; i < columnNames.size() && i < fields.size(); ++i) {
    final String fieldName=columnNames.get(i);
    Object fieldValue=null;
    try {
      final String fieldStringValue=getCellContent(fields.get(i));
      final OType fieldType=columnTypes != null ? columnTypes.get(i) : null;
      if (fieldType != null && fieldType != OType.ANY) {
        fieldValue=processKnownType(doc,i,fieldName,fieldStringValue,fieldType);
      }
 else {
        if (fieldStringValue == null)         fieldValue=null;
 else         fieldValue=determineTheType(fieldStringValue);
      }
      doc.field(fieldName,fieldValue);
    }
 catch (    Exception e) {
      processor.getStats().incrementErrors();
      log(OETLProcessor.LOG_LEVELS.ERROR,"Error on setting document field %s=%s (cause=%s)",fieldName,fieldValue,e.toString());
    }
  }
  log(OETLProcessor.LOG_LEVELS.DEBUG,"document=%s",doc);
  return doc;
}
