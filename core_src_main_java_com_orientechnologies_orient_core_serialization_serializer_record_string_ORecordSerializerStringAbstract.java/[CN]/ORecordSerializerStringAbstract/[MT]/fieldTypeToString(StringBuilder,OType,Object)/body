{
  if (iValue == null)   return;
  final long timer=PROFILER.startChrono();
  if (iType == null) {
    if (iValue instanceof ORID)     iType=OType.LINK;
 else     iType=OType.EMBEDDED;
  }
switch (iType) {
case STRING:
    simpleValueToStream(iBuffer,iType,iValue);
  PROFILER.stopChrono(PROFILER.getProcessMetric("serializer.record.string.string2string"),timer);
break;
case BOOLEAN:
simpleValueToStream(iBuffer,iType,iValue);
PROFILER.stopChrono(PROFILER.getProcessMetric("serializer.record.string.bool2string"),timer);
break;
case INTEGER:
simpleValueToStream(iBuffer,iType,iValue);
PROFILER.stopChrono(PROFILER.getProcessMetric("serializer.record.string.int2string"),timer);
break;
case FLOAT:
simpleValueToStream(iBuffer,iType,iValue);
PROFILER.stopChrono(PROFILER.getProcessMetric("serializer.record.string.float2string"),timer);
break;
case DECIMAL:
simpleValueToStream(iBuffer,iType,iValue);
PROFILER.stopChrono(PROFILER.getProcessMetric("serializer.record.string.decimal2string"),timer);
break;
case LONG:
simpleValueToStream(iBuffer,iType,iValue);
PROFILER.stopChrono(PROFILER.getProcessMetric("serializer.record.string.long2string"),timer);
break;
case DOUBLE:
simpleValueToStream(iBuffer,iType,iValue);
PROFILER.stopChrono(PROFILER.getProcessMetric("serializer.record.string.double2string"),timer);
break;
case SHORT:
simpleValueToStream(iBuffer,iType,iValue);
PROFILER.stopChrono(PROFILER.getProcessMetric("serializer.record.string.short2string"),timer);
break;
case BYTE:
simpleValueToStream(iBuffer,iType,iValue);
PROFILER.stopChrono(PROFILER.getProcessMetric("serializer.record.string.byte2string"),timer);
break;
case BINARY:
simpleValueToStream(iBuffer,iType,iValue);
PROFILER.stopChrono(PROFILER.getProcessMetric("serializer.record.string.binary2string"),timer);
break;
case DATE:
simpleValueToStream(iBuffer,iType,iValue);
PROFILER.stopChrono(PROFILER.getProcessMetric("serializer.record.string.date2string"),timer);
break;
case DATETIME:
simpleValueToStream(iBuffer,iType,iValue);
PROFILER.stopChrono(PROFILER.getProcessMetric("serializer.record.string.datetime2string"),timer);
break;
case LINK:
if (iValue instanceof ORecordId) ((ORecordId)iValue).toString(iBuffer);
 else ((ORecord<?>)iValue).getIdentity().toString(iBuffer);
PROFILER.stopChrono(PROFILER.getProcessMetric("serializer.record.string.link2string"),timer);
break;
case EMBEDDEDSET:
ORecordSerializerSchemaAware2CSV.INSTANCE.embeddedCollectionToStream(ODatabaseRecordThreadLocal.INSTANCE.getIfDefined(),null,iBuffer,null,null,iValue,null,true);
PROFILER.stopChrono(PROFILER.getProcessMetric("serializer.record.string.embedSet2string"),timer);
break;
case EMBEDDEDLIST:
ORecordSerializerSchemaAware2CSV.INSTANCE.embeddedCollectionToStream(ODatabaseRecordThreadLocal.INSTANCE.getIfDefined(),null,iBuffer,null,null,iValue,null,true);
PROFILER.stopChrono(PROFILER.getProcessMetric("serializer.record.string.embedList2string"),timer);
break;
case EMBEDDEDMAP:
ORecordSerializerSchemaAware2CSV.INSTANCE.embeddedMapToStream(ODatabaseRecordThreadLocal.INSTANCE.getIfDefined(),null,iBuffer,null,null,iValue,null,true);
PROFILER.stopChrono(PROFILER.getProcessMetric("serializer.record.string.embedMap2string"),timer);
break;
case EMBEDDED:
OStringSerializerEmbedded.INSTANCE.toStream(iBuffer,iValue);
PROFILER.stopChrono(PROFILER.getProcessMetric("serializer.record.string.embed2string"),timer);
break;
case CUSTOM:
OStringSerializerAnyStreamable.INSTANCE.toStream(iBuffer,iValue);
PROFILER.stopChrono(PROFILER.getProcessMetric("serializer.record.string.custom2string"),timer);
break;
default :
throw new IllegalArgumentException("Type " + iType + " not supported to convert value: "+ iValue);
}
}
