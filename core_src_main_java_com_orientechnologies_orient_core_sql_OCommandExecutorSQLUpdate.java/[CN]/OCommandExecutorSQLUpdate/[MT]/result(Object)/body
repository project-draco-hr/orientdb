{
  ODocument record=(ODocument)iRecord;
  Object v;
  for (  Map.Entry<String,Object> entry : setEntries.entrySet()) {
    v=entry.getValue();
    if (v instanceof OSQLFilterItem)     v=((OSQLFilterItem)v).getValue(record);
    record.field(entry.getKey(),v);
  }
  Collection<Object> coll;
  Object fieldValue;
  for (  Map.Entry<String,Object> entry : addEntries.entrySet()) {
    if (!record.containsField(entry.getKey())) {
      coll=new ArrayList<Object>();
      record.field(entry.getKey(),coll);
    }
 else {
      fieldValue=record.field(entry.getKey());
      if (fieldValue instanceof Collection<?>)       coll=(Collection<Object>)fieldValue;
 else       continue;
    }
    v=entry.getValue();
    if (v instanceof OSQLFilterItem)     v=((OSQLFilterItem)v).getValue(record);
 else     if (v instanceof OSQLFunctionRuntime)     v=((OSQLFunctionRuntime)v).execute(record);
    coll.add(v);
    record.setDirty();
  }
  Map<String,Object> map;
  OPair<String,Object> pair;
  for (  Entry<String,OPair<String,Object>> entry : putEntries.entrySet()) {
    fieldValue=record.field(entry.getKey());
    if (fieldValue instanceof Map<?,?>) {
      map=(Map<String,Object>)fieldValue;
      pair=entry.getValue();
      if (pair.getValue() instanceof OSQLFilterItem)       pair.setValue(((OSQLFilterItem)pair.getValue()).getValue(record));
 else       if (pair.getValue() instanceof OSQLFunctionRuntime)       v=((OSQLFunctionRuntime)pair.getValue()).execute(record);
      map.put(pair.getKey(),pair.getValue());
      record.setDirty();
    }
  }
  for (  Map.Entry<String,Object> entry : removeEntries.entrySet()) {
    v=entry.getValue();
    if (v == EMPTY_VALUE)     record.removeField(entry.getKey());
 else {
      fieldValue=record.field(entry.getKey());
      if (fieldValue instanceof Collection<?>) {
        coll=(Collection<Object>)fieldValue;
        coll.remove(v);
        record.setDirty();
      }
    }
  }
  record.save();
  recordCount++;
  return true;
}
