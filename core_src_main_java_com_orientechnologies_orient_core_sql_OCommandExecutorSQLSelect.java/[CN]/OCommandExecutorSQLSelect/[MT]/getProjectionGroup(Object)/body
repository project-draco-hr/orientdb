{
  ORuntimeResult group=null;
  if (groupedResult == null)   groupedResult=new LinkedHashMap<Object,ORuntimeResult>();
 else {
    if (fieldValue != null && fieldValue.getClass().isArray()) {
      final Object[] array=(Object[])fieldValue;
      group=groupedResult.get(OArrays.hash(array));
      if (group != null) {
        final Object[] v=(Object[])group.getFieldValue();
        if (v.length == array.length) {
          for (int i=0; i < array.length; ++i) {
            if (!array[i].equals(v[i])) {
              group=null;
              break;
            }
          }
        }
      }
    }
 else     group=groupedResult.get(fieldValue);
  }
  if (group == null) {
    group=new ORuntimeResult(fieldValue,createProjectionFromDefinition(),resultCount,context);
    if (fieldValue != null && fieldValue.getClass().isArray())     groupedResult.put(OArrays.hash((Object[])fieldValue),group);
 else     groupedResult.put(fieldValue,group);
  }
  return group;
}
