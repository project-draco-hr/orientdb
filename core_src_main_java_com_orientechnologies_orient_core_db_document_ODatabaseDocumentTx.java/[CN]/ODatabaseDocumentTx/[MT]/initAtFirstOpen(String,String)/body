{
  if (initialized)   return;
  ORecordSerializerFactory serializerFactory=ORecordSerializerFactory.instance();
  String serializeName=getStorage().getConfiguration().getRecordSerializer();
  if (serializeName == null)   serializeName=ORecordSerializerSchemaAware2CSV.NAME;
  serializer=serializerFactory.getFormat(serializeName);
  if (serializer == null)   throw new ODatabaseException("RecordSerializer with name '" + serializeName + "' not found ");
  if (getStorage().getConfiguration().getRecordSerializerVersion() > serializer.getMinSupportedVersion())   throw new ODatabaseException("Persistent record serializer version is not support by the current implementation");
  componentsFactory=getStorage().getComponentsFactory();
  sbTreeCollectionManager=getStorage().getSBtreeCollectionManager();
  localCache.startup();
  user=null;
  metadata=new OMetadataDefault(this);
  metadata.load();
  recordFormat=DEF_RECORD_FORMAT;
  if (!(getStorage() instanceof OStorageProxy)) {
    if (metadata.getIndexManager().autoRecreateIndexesAfterCrash()) {
      metadata.getIndexManager().recreateIndexes();
      activateOnCurrentThread();
      user=null;
    }
    installHooks();
    registerHook(new OCommandCacheHook(this),ORecordHook.HOOK_POSITION.REGULAR);
    registerHook(new OSecurityTrackerHook(metadata.getSecurity(),this),ORecordHook.HOOK_POSITION.LAST);
    user=null;
  }
 else   if (iUserName != null && iUserPassword != null)   user=new OImmutableUser(-1,new OUser(iUserName,OUser.encryptPassword(iUserPassword)).addRole(new ORole("passthrough",null,ORole.ALLOW_MODES.ALLOW_ALL_BUT)));
  if (OGlobalConfiguration.DB_MAKE_FULL_CHECKPOINT_ON_SCHEMA_CHANGE.getValueAsBoolean())   metadata.getSchema().setFullCheckpointOnChange(true);
  if (OGlobalConfiguration.DB_MAKE_FULL_CHECKPOINT_ON_INDEX_CHANGE.getValueAsBoolean())   metadata.getIndexManager().setFullCheckpointOnChange(true);
  initialized=true;
}
