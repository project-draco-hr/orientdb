{
  String name=Integer.toString(threadId);
  for (int i=0; i < count; i++) {
    final ODatabaseDocumentTx database=poolFactory.get(databaseUrl,"admin","admin").acquire();
    try {
      final int id=baseCount + i;
      int retry=0;
      for (retry=0; retry < maxRetries; retry++) {
        try {
          final ODocument person=createRecord(database,id);
          updateRecord(database,id);
          checkRecord(database,id);
          checkIndex(database,(String)person.field("name"),person.getIdentity());
          if ((i + 1) % 100 == 0)           System.out.println("\nWriter " + database.getURL() + " managed "+ (i + 1)+ "/"+ count+ " records so far");
          Thread.sleep(delayWriter);
          break;
        }
 catch (        InterruptedException e) {
          System.out.println("Writer received interrupt (db=" + database.getURL());
          Thread.currentThread().interrupt();
          break;
        }
catch (        ONeedRetryException e) {
          System.out.println("Writer received exception (db=" + database.getURL());
          if (retry >= maxRetries)           e.printStackTrace();
          break;
        }
catch (        Throwable e) {
          System.out.println("Writer received exception (db=" + database.getURL());
          e.printStackTrace();
          return null;
        }
      }
    }
  finally {
      runningWriters.countDown();
      database.close();
    }
  }
  System.out.println("\nWriter " + name + " END");
  return null;
}
