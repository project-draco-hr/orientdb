{
  if (bucketPath.parent == null)   return null;
  final int nodeLocalDepth=bucketPath.nodeLocalDepth;
  final int pointersSize=1 << (maxLevelDepth - nodeLocalDepth);
  final BucketPath parent=bucketPath.parent;
  if (parent.itemIndex > maxLevelSize / 2) {
    final int prevParentIndex=((parent.itemIndex - maxLevelSize / 2) / pointersSize) * pointersSize + maxLevelSize / 2 - 1;
    return new BucketPath(parent.parent,0,prevParentIndex,parent.nodeIndex,parent.nodeLocalDepth,parent.nodeGlobalDepth);
  }
  final int prevParentIndex=(parent.itemIndex / pointersSize) * pointersSize - 1;
  if (prevParentIndex >= 0)   return new BucketPath(parent.parent,0,prevParentIndex,parent.nodeIndex,parent.nodeLocalDepth,parent.nodeGlobalDepth);
  return prevLevelUp(new BucketPath(parent.parent,0,0,parent.nodeIndex,parent.nodeLocalDepth,-1));
}
