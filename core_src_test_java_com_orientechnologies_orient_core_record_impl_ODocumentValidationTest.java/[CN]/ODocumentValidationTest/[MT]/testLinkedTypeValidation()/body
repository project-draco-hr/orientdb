{
  ODatabaseDocument db=new ODatabaseDocumentTx("memory:" + ODocumentValidationTest.class.getSimpleName());
  db.create();
  try {
    OClass clazz=db.getMetadata().getSchema().createClass("Validation");
    clazz.createProperty("embeddedList",OType.EMBEDDEDLIST).setLinkedType(OType.INTEGER);
    clazz.createProperty("embeddedSet",OType.EMBEDDEDSET).setLinkedType(OType.INTEGER);
    clazz.createProperty("embeddedMap",OType.EMBEDDEDMAP).setLinkedType(OType.INTEGER);
    ODocument d=new ODocument(clazz);
    List<Integer> list=Arrays.asList(1,2);
    d.field("embeddedList",list);
    Set<Integer> set=new HashSet<Integer>(list);
    d.field("embeddedSet",set);
    Map<String,Integer> map=new HashMap<String,Integer>();
    map.put("a",1);
    map.put("b",2);
    d.field("embeddedMap",map);
    d.validate();
    checkField(d,"embeddedList",Arrays.asList("a","b"));
    checkField(d,"embeddedSet",new HashSet<String>(Arrays.asList("a","b")));
    Map<String,String> map1=new HashMap<String,String>();
    map1.put("a","a1");
    map1.put("b","a2");
    checkField(d,"embeddedMap",map1);
  }
  finally {
    db.drop();
  }
}
