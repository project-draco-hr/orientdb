{
  if (iPojo == null)   return null;
  final Class<?> pojoClass=iPojo.getClass();
  final String vFieldName=fieldVersions.get(pojoClass);
  if (vFieldName != null) {
    final List<Field> properties=getClassFields(pojoClass);
    if (properties != null)     for (    Field p : properties) {
      if (p.getName().equals(vFieldName)) {
        Class<?> fieldType=p.getType();
        if (Number.class.isAssignableFrom(fieldType))         setFieldValue(iPojo,vFieldName,iVersion);
 else         if (fieldType.equals(String.class))         setFieldValue(iPojo,vFieldName,String.valueOf(iVersion));
 else         if (fieldType.equals(Object.class))         setFieldValue(iPojo,vFieldName,iVersion);
 else         OLogManager.instance().warn(OObjectSerializerHelper.class,"@Version field has been declared as %s while the supported are: Number, String, Object",fieldType);
        break;
      }
    }
  }
  return vFieldName;
}
