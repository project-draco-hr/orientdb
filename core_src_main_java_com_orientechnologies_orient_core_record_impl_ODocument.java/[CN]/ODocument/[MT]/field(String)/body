{
  RET value=this.<RET>rawField(iFieldName);
  final OType t=fieldType(iFieldName);
  if (_lazyLoad && value instanceof ORID && t != OType.LINK && ODatabaseRecordThreadLocal.INSTANCE.isDefined()) {
    value=(RET)getDatabase().load((ORID)value);
    removeCollectionChangeListener(iFieldName);
    removeCollectionTimeLine(iFieldName);
    _fieldValues.put(iFieldName,value);
    addCollectionChangeListener(iFieldName,value);
  }
  if (t != null) {
    Object newValue=null;
    if (t == OType.BINARY && value instanceof String)     newValue=OStringSerializerHelper.getBinaryContent(value);
 else     if ((t == OType.DATE || t == OType.DATE) && value instanceof Long)     newValue=(RET)new Date(((Long)value).longValue());
 else     if ((t == OType.EMBEDDEDSET || t == OType.LINKSET) && value instanceof List)     newValue=(RET)ODocumentHelper.convertField(this,iFieldName,Set.class,value);
 else     if ((t == OType.EMBEDDEDLIST || t == OType.LINKLIST) && value instanceof Set)     newValue=(RET)ODocumentHelper.convertField(this,iFieldName,List.class,value);
    if (newValue != null) {
      removeCollectionChangeListener(iFieldName);
      removeCollectionTimeLine(iFieldName);
      _fieldValues.put(iFieldName,newValue);
      addCollectionChangeListener(iFieldName,newValue);
      value=(RET)newValue;
    }
  }
  return value;
}
