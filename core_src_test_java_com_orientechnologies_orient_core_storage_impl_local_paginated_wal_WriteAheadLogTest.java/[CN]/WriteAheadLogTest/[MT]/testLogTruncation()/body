{
  writeAheadLog.close();
  OLocalPaginatedStorage paginatedStorage=mock(OLocalPaginatedStorage.class);
  when(paginatedStorage.getName()).thenReturn("WriteAheadLogTest");
  when(paginatedStorage.getStoragePath()).thenReturn(testDir.getAbsolutePath());
  writeAheadLog=new OWriteAheadLog(1024,-1,2048,10105,paginatedStorage);
  List<OSetPageDataRecord> writtenRecords=new ArrayList<OSetPageDataRecord>();
  Random rnd=new Random();
  final int recordsToWrite=220;
  for (int i=0; i < recordsToWrite; i++) {
    byte[] data=new byte[10];
    rnd.nextBytes(data);
    int pageOffset=rnd.nextInt(65536);
    long pageIndex=rnd.nextLong();
    OSetPageDataRecord setPageDataRecord=new OSetPageDataRecord(data,pageOffset,pageIndex,"test");
    writtenRecords.add(setPageDataRecord);
    writeAheadLog.logRecord(setPageDataRecord);
  }
  assertLogContent(writeAheadLog,writtenRecords.subList(43,writtenRecords.size()));
  Assert.assertNull(writeAheadLog.read(writtenRecords.get(42).getLsn()));
  verify(paginatedStorage).scheduleCheckpoint();
}
