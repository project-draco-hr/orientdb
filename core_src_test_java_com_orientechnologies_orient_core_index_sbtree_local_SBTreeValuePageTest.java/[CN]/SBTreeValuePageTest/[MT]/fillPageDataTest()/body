{
  long pointerOne=directMemory.allocate(ODurablePage.MAX_PAGE_SIZE_BYTES);
  OSBTreeValuePage valuePageOne=new OSBTreeValuePage(pointerOne,ODurablePage.TrackMode.NONE,true);
  byte[] data=new byte[ODurablePage.MAX_PAGE_SIZE_BYTES + 100];
  Random random=new Random();
  random.nextBytes(data);
  int offset=valuePageOne.fillBinaryContent(data,0);
  Assert.assertEquals(offset,OSBTreeValuePage.MAX_BINARY_VALUE_SIZE);
  long pointerTwo=directMemory.allocate(ODurablePage.MAX_PAGE_SIZE_BYTES);
  OSBTreeValuePage valuePageTwo=new OSBTreeValuePage(pointerTwo,ODurablePage.TrackMode.NONE,true);
  offset=valuePageTwo.fillBinaryContent(data,offset);
  Assert.assertEquals(offset,data.length);
  valuePageOne.setNextPage(100);
  Assert.assertEquals(valuePageOne.getNextPage(),100);
  byte[] readData=new byte[data.length];
  offset=valuePageOne.readBinaryContent(readData,0);
  Assert.assertEquals(offset,OSBTreeValuePage.MAX_BINARY_VALUE_SIZE);
  offset=valuePageTwo.readBinaryContent(readData,offset);
  Assert.assertEquals(offset,data.length);
  Assert.assertEquals(data,readData);
  directMemory.free(pointerOne);
  directMemory.free(pointerTwo);
}
