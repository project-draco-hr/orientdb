{
  final long timer=OProfiler.getInstance().startChrono();
  addUser();
  cache.addUser();
  final boolean locked=acquireExclusiveLock();
  try {
    if (open)     return;
    open=true;
    int pos;
    pos=registerDataSegment(new OStorageDataConfiguration(configuration,OStorage.DEFAULT_SEGMENT));
    dataSegments[pos].open();
    pos=registerClusterSegment(new OStoragePhysicalClusterConfiguration(configuration,OMetadata.CLUSTER_METADATA_NAME));
    physicalClusters[pos].open();
    pos=registerClusterSegment(new OStoragePhysicalClusterConfiguration(configuration,"index"));
    physicalClusters[pos].open();
    defaultCluster=registerClusterSegment(new OStoragePhysicalClusterConfiguration(configuration,OStorage.DEFAULT_SEGMENT));
    physicalClusters[defaultCluster].open();
    configuration.load();
    if (configuration.isEmpty())     throw new OStorageException("Can't open storage because it not exists. Storage path: " + fileURL);
    for (    OStorageDataConfiguration data : configuration.dataSegments) {
      pos=registerDataSegment(data);
      if (pos > -1)       dataSegments[pos].open();
    }
    for (    OStoragePhysicalClusterConfiguration cluster : configuration.physicalClusters) {
      pos=registerClusterSegment(cluster);
      if (pos > -1) {
        if (cluster.name.equals(OStorage.DEFAULT_SEGMENT))         defaultCluster=pos;
        physicalClusters[pos].open();
      }
    }
    txManager.open();
  }
 catch (  IOException e) {
    open=false;
    dataSegments=null;
    physicalClusters=null;
    clusterSegmentMap.clear();
    logicalClusters.clear();
    throw new OStorageException("Can't open local storage: " + fileURL + ", with mode="+ mode,e);
  }
 finally {
    releaseExclusiveLock(locked);
    OProfiler.getInstance().stopChrono("OStorageLocal.open",timer);
  }
}
