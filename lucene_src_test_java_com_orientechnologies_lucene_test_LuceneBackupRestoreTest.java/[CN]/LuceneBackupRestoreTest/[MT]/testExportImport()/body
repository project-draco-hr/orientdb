{
  String property="java.io.tmpdir";
  String file=System.getProperty(property) + "backupRestore.gz";
  String buildDirectory=System.getProperty("buildDirectory",".");
  String url=OEngineLocalPaginated.NAME + ":" + buildDirectory+ "/databases/restoreTest";
  ODatabaseDocumentTx databaseDocumentTx=new ODatabaseDocumentTx(url);
  try {
    if (databaseDocumentTx.exists()) {
      databaseDocumentTx.open("admin","admin");
      databaseDocumentTx.drop();
    }
    databaseDocumentTx.create();
    OSchema schema=databaseDocumentTx.getMetadata().getSchema();
    OClass oClass=schema.createClass("City");
    oClass.createProperty("name",OType.STRING);
    databaseDocumentTx.command(new OCommandSQL("create index City.name on City (name) FULLTEXT ENGINE LUCENE")).execute();
    ODocument doc=new ODocument("City");
    doc.field("name","Rome");
    databaseDocumentTx.save(doc);
    List<?> query=databaseDocumentTx.query(new OSQLSynchQuery<Object>("select from City where name lucene 'Rome'"));
    Assert.assertEquals(query.size(),1);
    databaseDocumentTx.backup(new FileOutputStream(new File(file)),null,null,null,9,1048576);
    databaseDocumentTx.drop();
    databaseDocumentTx.create();
    FileInputStream stream=new FileInputStream(file);
    databaseDocumentTx.restore(stream,null,null,null);
    databaseDocumentTx.close();
    databaseDocumentTx.open("admin","admin");
    long city=databaseDocumentTx.countClass("City");
    Assert.assertEquals(city,1);
    OIndex<?> index=databaseDocumentTx.getMetadata().getIndexManager().getIndex("City.name");
    Assert.assertNotNull(index);
    Assert.assertEquals(index.getType(),"FULLTEXT");
    query=databaseDocumentTx.query(new OSQLSynchQuery<Object>("select from City where name lucene 'Rome'"));
    Assert.assertEquals(query.size(),1);
  }
 catch (  FileNotFoundException e) {
    e.printStackTrace();
  }
catch (  IOException e) {
    e.printStackTrace();
  }
 finally {
    databaseDocumentTx.drop();
    File f=new File(file);
    f.delete();
  }
}
