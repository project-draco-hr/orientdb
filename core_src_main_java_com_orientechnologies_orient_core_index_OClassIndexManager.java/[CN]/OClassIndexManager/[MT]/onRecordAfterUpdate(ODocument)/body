{
  iRecord=checkForLoading(iRecord);
  final OClass cls=iRecord.getSchemaClass();
  if (cls == null)   return false;
  final Collection<OIndex<?>> indexes=cls.getIndexes();
  if (!indexes.isEmpty()) {
    final Set<String> dirtyFields=new HashSet<String>(Arrays.asList(iRecord.getDirtyFields()));
    if (dirtyFields.size() > 0) {
      for (      final OIndex<?> index : indexes) {
        final OIndexDefinition indexDefinition=index.getDefinition();
        final List<String> indexFields=indexDefinition.getFields();
        for (        final String indexField : indexFields) {
          if (dirtyFields.contains(indexField)) {
            final List<Object> origValues=new ArrayList<Object>(indexFields.size());
            for (            final String field : indexFields) {
              if (dirtyFields.contains(field))               origValues.add(iRecord.getOriginalValue(field));
 else               origValues.add(iRecord.<Object>field(field));
            }
            final Object origValue=indexDefinition.createValue(origValues);
            final Object newValue=indexDefinition.getDocumentValueToIndex(iRecord);
            if ((origValue instanceof Collection) && (newValue instanceof Collection)) {
              final Set<Object> valuesToRemove=new HashSet<Object>((Collection)origValue);
              final Set<Object> valuesToAdd=new HashSet<Object>((Collection)newValue);
              valuesToRemove.removeAll((Collection)newValue);
              valuesToAdd.removeAll((Collection)origValue);
              for (              final Object valueToRemove : valuesToRemove)               if (valueToRemove != null)               index.remove(valueToRemove,iRecord);
              for (              final Object valueToAdd : valuesToAdd)               if (valueToAdd != null)               index.put(valueToAdd,iRecord);
            }
 else {
              if (origValue instanceof Collection) {
                for (                final Object origValueItem : (Collection)origValue)                 if (origValueItem != null)                 index.remove(origValueItem,iRecord);
              }
 else               if (origValue != null)               index.remove(origValue,iRecord);
              if (newValue instanceof Collection) {
                for (                final Object newValueItem : (Collection)newValue)                 index.put(newValueItem,iRecord.placeholder());
              }
 else               if (newValue != null)               index.put(newValue,iRecord.placeholder());
            }
            break;
          }
        }
      }
    }
  }
  if (iRecord.isTrackingChanges()) {
    iRecord.setTrackingChanges(false);
    iRecord.setTrackingChanges(true);
  }
  return false;
}
