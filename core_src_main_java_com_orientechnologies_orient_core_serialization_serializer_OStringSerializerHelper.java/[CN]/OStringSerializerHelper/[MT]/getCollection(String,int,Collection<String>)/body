{
  final StringBuilder buffer=new StringBuilder();
  int openPos=iText.indexOf(COLLECTION_BEGIN,iStartPosition);
  if (openPos == -1)   return -1;
  int currentPos, deep;
  for (currentPos=openPos + 1, deep=1; deep > 0; currentPos++) {
    if (currentPos >= iText.length()) {
      return -1;
    }
    char c=iText.charAt(currentPos);
    if (buffer.length() == 0 && c == ' ') {
      continue;
    }
switch (c) {
case COLLECTION_BEGIN:
      buffer.append(c);
    deep++;
  break;
case COLLECTION_END:
if (deep > 1) buffer.append(c);
deep--;
break;
case COLLECTION_SEPARATOR:
if (deep > 1) {
buffer.append(c);
}
 else {
iCollection.add(buffer.toString().trim());
buffer.setLength(0);
}
break;
default :
buffer.append(c);
}
}
iCollection.add(buffer.toString().trim());
return --currentPos;
}
