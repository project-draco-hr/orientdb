{
  if (((active0&=old0) | (active1&=old1)) == 0L)   return jjStartNfa_0(1,old0,old1);
  try {
    curChar=input_stream.readChar();
  }
 catch (  java.io.IOException e) {
    jjStopStringLiteralDfa_0(2,active0,active1);
    return 3;
  }
switch (curChar) {
case 61:
    if ((active1 & 0x80000000L) != 0L)     return jjStopAtPos(3,95);
  break;
case 105:
return jjMoveStringLiteralDfa4_0(active0,0x80000000L,active1,0L);
case 116:
return jjMoveStringLiteralDfa4_0(active0,0L,active1,0x400000000000L);
default :
break;
}
return jjStartNfa_0(2,active0,active1);
}
