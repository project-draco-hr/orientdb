{
  final List<OBaseWorkLoadContext> contexts=executeOperation(databaseIdentifier,resultVertices,settings.concurrencyLevel,settings.operationsPerTransaction,new OCallable<Void,OBaseWorkLoadContext>(){
    @Override public Void call(    final OBaseWorkLoadContext context){
      final OWorkLoadContext graphContext=((OWorkLoadContext)context);
      final OrientBaseGraph graph=graphContext.graph;
      final OrientVertex v=graph.addVertex(null,"_id",resultVertices.current.get());
      if (graphContext.lastVertexToConnect != null) {
        v.addEdge("E",graphContext.lastVertexToConnect);
        resultEdges.current.incrementAndGet();
        graphContext.lastVertexEdges++;
        if (graphContext.lastVertexEdges > factor) {
          graphContext.lastVertexEdges=0;
          graphContext.lastVertexToConnect=v;
        }
      }
 else       graphContext.lastVertexToConnect=v;
      resultVertices.current.incrementAndGet();
      if (settings.operationsPerTransaction > 0 && context.currentIdx % settings.operationsPerTransaction == 0) {
        graph.commit();
        graph.begin();
      }
      return null;
    }
  }
);
  final OrientBaseGraph graph=settings.operationsPerTransaction > 0 ? getGraph(databaseIdentifier) : getGraphNoTx(databaseIdentifier);
  try {
    OrientVertex lastVertex=null;
    for (    OBaseWorkLoadContext context : contexts) {
      if (lastVertex != null)       lastVertex.addEdge("E",((OWorkLoadContext)context).lastVertexToConnect);
      lastVertex=((OWorkLoadContext)context).lastVertexToConnect;
    }
  }
  finally {
    graph.shutdown();
  }
}
