{
  final byte[] content=iConfig.toStream();
  acquireSharedLock();
  try {
    Set<String> pushed=new HashSet<String>();
    for (    OClientConnection c : connections.values()) {
      if (pushed.contains(c.getRemoteAddress()))       continue;
      if (!(c.protocol instanceof ONetworkProtocolBinary))       continue;
      final ONetworkProtocolBinary p=(ONetworkProtocolBinary)c.protocol;
      final OChannelBinary channel=(OChannelBinary)p.getChannel();
      try {
        channel.acquireExclusiveLock();
        try {
          channel.writeByte(OChannelBinaryProtocol.PUSH_DATA);
          channel.writeInt(Integer.MIN_VALUE);
          channel.writeByte(OChannelBinaryProtocol.REQUEST_PUSH_DISTRIB_CONFIG);
          channel.writeBytes(content);
          channel.flush();
          pushed.add(c.getRemoteAddress());
          OLogManager.instance().info(this,"Sent updated cluster configuration to the remote client %s",c.getRemoteAddress());
        }
  finally {
          channel.releaseExclusiveLock();
        }
      }
 catch (      IOException e) {
        OLogManager.instance().warn(this,"Cannot push cluster configuration to the client %s",c.getRemoteAddress());
      }
    }
  }
  finally {
    releaseSharedLock();
  }
}
