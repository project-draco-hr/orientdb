{
  if (className == null && clusterName == null)   throw new OCommandExecutionException("Cannot execute the command because it has not been parsed yet");
  OModifiableBoolean shutdownGraph=new OModifiableBoolean();
  final OrientGraphNoTx graph=OGraphCommandExecutorSQLFactory.getGraphNoTx(shutdownGraph);
  try {
    final Set<OIdentifiable> sourceRIDs=OSQLEngine.getInstance().parseRIDTarget(graph.getRawGraph(),source,context,iArgs);
    final List<ODocument> result=new ArrayList<ODocument>(sourceRIDs.size());
    for (    OIdentifiable from : sourceRIDs) {
      final OrientVertex fromVertex=graph.getVertex(from);
      if (fromVertex == null)       continue;
      final ORID oldVertex=fromVertex.getIdentity().copy();
      final ORID newVertex=fromVertex.moveTo(className,clusterName);
      final ODocument newVertexDoc=newVertex.getRecord();
      if (fields != null) {
        for (        Entry<String,Object> f : fields.entrySet()) {
          if (f.getValue() instanceof OSQLFunctionRuntime)           fields.put(f.getKey(),((OSQLFunctionRuntime)f.getValue()).getValue(newVertex.getRecord(),null,context));
        }
        OSQLHelper.bindParameters(newVertexDoc,fields,new OCommandParameters(iArgs),context);
      }
      if (merge != null)       newVertexDoc.merge(merge,true,false);
      newVertexDoc.save();
      result.add(new ODocument().field("old",oldVertex,OType.LINK).field("new",newVertex,OType.LINK));
    }
    return result;
  }
  finally {
    if (shutdownGraph.getValue())     graph.shutdown(false);
  }
}
