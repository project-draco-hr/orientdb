{
  final ODistributedRequest req=message.getMessageObject();
  final IQueue<ODistributedResponse> queue=getNodeQueue(req.getSenderNodeName());
  final Object requestPayload=req.getPayload();
  final Serializable responsePayload;
  if (requestPayload instanceof Callable<?>)   try {
    responsePayload=(Serializable)((Callable<?>)requestPayload).call();
  }
 catch (  Exception e1) {
    throw new ODistributedException("Error on executing payload " + requestPayload + " in request: "+ req.getSenderNodeName()+ ":"+ req.getSenderThreadId(),e1);
  }
 else   throw new ODistributedException("Invalid payload in request " + req);
  final OHazelcastDistributedResponse response=new OHazelcastDistributedResponse(req.getSenderNodeName(),req.getSenderThreadId(),responsePayload);
  try {
    queue.offer(response,MAX_PUSH_TIMEOUT,TimeUnit.MILLISECONDS);
    throw new ODistributedException("Timeout on dispatching response to the thread queue " + req.getSenderNodeName() + ":"+ req.getSenderThreadId());
  }
 catch (  Exception e) {
    throw new ODistributedException("Cannot dispatch response to the thread queue " + req.getSenderNodeName() + ":"+ req.getSenderThreadId(),e);
  }
}
